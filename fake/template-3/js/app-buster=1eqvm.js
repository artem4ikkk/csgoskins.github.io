/**
 * The good, the bad and the ugly.
 * @link http://society.gg
 */
function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min
}

function detectIE() {
  var ua = window.navigator.userAgent, msie = ua.indexOf("MSIE ");
  if (msie > 0) return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10);
  if (ua.indexOf("Trident/") > 0) {
    var rv = ua.indexOf("rv:");
    return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10)
  }
  var edge = ua.indexOf("Edge/");
  return edge > 0 && parseInt(ua.substring(edge + 5, ua.indexOf(".", edge)), 10)
}

function setCookie(c_name, value, exdays) {
  var exdate = new Date;
  exdate.setDate(exdate.getDate() + exdays);
  var c_value     = escape(value) + (null == exdays ? "" : "; expires=" + exdate.toUTCString());
  document.cookie = c_name + "=" + c_value
}

function getCookie(c_name) {
  var i, x, y, ARRcookies = document.cookie.split(";");
  for (i = 0; i < ARRcookies.length; i++) if (x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("=")), y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1), (x = x.replace(/^\s+|\s+$/g, "")) == c_name) return unescape(y)
}

function generateUUID() {
  var d = (new Date).getTime();
  return window.performance && "function" == typeof window.performance.now && (d += performance.now()), "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
    var r = (d + 16 * Math.random()) % 16 | 0;
    return d = Math.floor(d / 16), ("x" == c ? r : 3 & r | 8).toString(16)
  })
}

function prettifySteamColor(color) {
  return "#D2D2D2" == color ? "gray" : color
}

function capitalize(input) {
  if (input && "string" == typeof input) {
    input = input.toLowerCase();
    for (var word, words = input.split(" "), i = words.length - 1; i >= 0; i--) word = words[i], words[i] = word.substring(0, 1).toUpperCase() + word.substring(1);
    return words.join(" ")
  }
}

function createJQDRangeslider(rangeMin, rangeMax, containerSelector) {
  "use strict";

  function updateUIFromRange() {
    var conW                                                        = parseFloat($container.css("width")), rangeW = sliderRange.end - sliderRange.begin,
        slope = (conW - minWidth) / (rangeMax - rangeMin), uirangeW = minWidth + rangeW * slope,
        ratio                                                       = sliderRange.begin / (rangeMax - rangeMin - rangeW);
    isNaN(ratio) && (ratio = 0);
    var uirangeL = ratio * (conW - uirangeW);
    $drag.css("left", uirangeL + "px"), $drag.css("width", uirangeW + "px")
  }

  function updateRangeFromUI() {
    var uirangeL = parseFloat($drag.css("left")), uirangeW = parseFloat($drag.css("width")),
        conW                                               = parseFloat($container.css("width")), slope = (conW - minWidth) / (rangeMax - rangeMin),
        rangeW                                             = (uirangeW - minWidth) / slope, uislope = (rangeMax - rangeMin - rangeW) / (conW - uirangeW),
        rangeL                                             = rangeMin + uislope * uirangeL, oldRangeW = sliderRange.end - sliderRange.begin;
    sliderRange.begin = Math.round(rangeL), sliderRange.end = dragging ? sliderRange.begin + oldRangeW : rangeL + rangeW, rangeL + rangeW == rangeMax && (sliderRange.end = rangeMax, sliderRange.begin = rangeMax - oldRangeW);
    var excess = sliderRange.end - rangeMax;
    excess > 0 && (sliderRange.begin -= excess, sliderRange.end -= excess), changeListeners.forEach(function (callback) {
      callback({begin: sliderRange.begin, end: sliderRange.end})
    })
  }

  function onChange(callback) {
    return changeListeners.push(callback), this
  }

  function setRange(b, e) {
    sliderRange.begin = b, sliderRange.end = e, updateUIFromRange(), changeListeners.forEach(function (callback) {
      callback({begin: sliderRange.begin, end: sliderRange.end})
    })
  }

  function range(b, e) {
    var rLower, rUpper;
    if ("number" == typeof b && "number" == typeof e) rLower = Math.min(b, e), rUpper = Math.max(b, e), (rLower < rangeMin || rUpper > rangeMax) && (rLower = Math.max(rLower, rangeMin), rUpper = Math.min(rUpper, rangeMax)), setRange(rLower, rUpper); else if ("number" == typeof b) {
      rLower  = b;
      var dif = sliderRange.end - sliderRange.begin;
      rUpper = rLower + dif, rLower < rangeMin && (rLower = rangeMin), rUpper > rangeMax && (rLower = rangeMax - dif, rUpper = rangeMax), setRange(rLower, rUpper)
    }
    return {begin: sliderRange.begin, end: sliderRange.end}
  }

  var $container, $drag, minWidth = 10, sliderRange = {begin: rangeMin, end: rangeMin}, changeListeners = [],
      dragging                                                                                          = !1, $drg                                                                               = $(document.createElement("div"));
  $drg.attr("class", "drag"), $drg.append($(document.createElement("div")).attr("class", "handle WW")), $drg.append($(document.createElement("div")).attr("class", "handle EE"));
  var $con = $(containerSelector);
  $container = $con, $con.append($drg);
  parseFloat($con.css("width"));
  return $drag = $(".drag").drag("start", function (ev, dd) {
    dd.attr = $(ev.target).prop("className"), dd.width = $(this).width(), dd.height = $(this).height(), dd.limit = $con.offset(), dd.limit.right = $con.outerWidth() - $(this).outerWidth(), dragging = dd.attr.indexOf("drag") > -1
  }).drag("end", function (ev, dd) {
    dragging = !1
  }).drag(function (ev, dd) {
    var props = {};
    dd.attr.indexOf("EE") > -1 && (props.width = Math.min(Math.max(minWidth, dd.width + dd.deltaX), $con.innerWidth() - dd.originalX + $con.offset().left)), dd.attr.indexOf("WW") > -1 && (props.width = Math.max(minWidth, dd.width - dd.deltaX), props.left = dd.originalX + dd.width - props.width - $con.offset().left, props.left < 0 && (props.width += props.left, props.left = 0)), dd.attr.indexOf("drag") > -1 && (props.left = Math.min(dd.limit.right, Math.max(dd.offsetX - $con.offset().left, 0))), props.left = props.left, props.width = props.width, $(this).css(props), updateRangeFromUI()
  }), $(window).resize(function (ev) {
    updateUIFromRange()
  }), $con.mousedown(function (ev) {
    var x = ev.offsetX, props = {}, dragWidth = parseFloat($(".drag").css("width")),
        conWidth                              = parseFloat($con.css("width"));
    props.left = Math.min(conWidth - dragWidth, Math.max(x - dragWidth / 2, 0)), props.left = props.left, props.width = props.width, $(".drag").css(props), updateRangeFromUI()
  }), setRange(sliderRange.begin, sliderRange.end), {range: range, onChange: onChange}
}

function hexToRgb(hex) {
  var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  hex                = hex.replace(shorthandRegex, function (m, r, g, b) {
    return r + r + g + g + b + b
  });
  var result         = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {r: parseInt(result[1], 16), g: parseInt(result[2], 16), b: parseInt(result[3], 16)} : null
}

function clamp(number, min, max) {
  return Math.min(Math.max(number, min), max)
}

function isInArray(value, array) {
  return array.indexOf(value) > -1
}

if (function (global, factory) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = global.document ? factory(global, !0) : function (w) {
      if (!w.document) throw new Error("jQuery requires a window with a document");
      return factory(w)
    } : factory(global)
  }("undefined" != typeof window ? window : this, function (window, noGlobal) {
    function isArraylike(obj) {
      var length = obj.length, type = jQuery.type(obj);
      return "function" !== type && !jQuery.isWindow(obj) && (!(1 !== obj.nodeType || !length) || ("array" === type || 0 === length || "number" == typeof length && length > 0 && length - 1 in obj))
    }

    function winnow(elements, qualifier, not) {
      if (jQuery.isFunction(qualifier)) return jQuery.grep(elements, function (elem, i) {
        return !!qualifier.call(elem, i, elem) !== not
      });
      if (qualifier.nodeType) return jQuery.grep(elements, function (elem) {
        return elem === qualifier !== not
      });
      if ("string" == typeof qualifier) {
        if (risSimple.test(qualifier)) return jQuery.filter(qualifier, elements, not);
        qualifier = jQuery.filter(qualifier, elements)
      }
      return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) >= 0 !== not
      })
    }

    function sibling(cur, dir) {
      for (; (cur = cur[dir]) && 1 !== cur.nodeType;) ;
      return cur
    }

    function createOptions(options) {
      var object = optionsCache[options] = {};
      return jQuery.each(options.match(rnotwhite) || [], function (_, flag) {
        object[flag] = !0
      }), object
    }

    function completed() {
      document.removeEventListener("DOMContentLoaded", completed, !1), window.removeEventListener("load", completed, !1), jQuery.ready()
    }

    function Data() {
      Object.defineProperty(this.cache = {}, 0, {
        get: function () {
          return {}
        }
      }), this.expando = jQuery.expando + Math.random()
    }

    function dataAttr(elem, key, data) {
      var name;
      if (void 0 === data && 1 === elem.nodeType) if (name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase(), "string" == typeof(data = elem.getAttribute(name))) {
        try {
          data = "true" === data || "false" !== data && ("null" === data ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data)
        } catch (e) {
        }
        data_user.set(elem, key, data)
      } else data = void 0;
      return data
    }

    function returnTrue() {
      return !0
    }

    function returnFalse() {
      return !1
    }

    function safeActiveElement() {
      try {
        return document.activeElement
      } catch (err) {
      }
    }

    function manipulationTarget(elem, content) {
      return jQuery.nodeName(elem, "table") && jQuery.nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem
    }

    function disableScript(elem) {
      return elem.type = (null !== elem.getAttribute("type")) + "/" + elem.type, elem
    }

    function restoreScript(elem) {
      var match = rscriptTypeMasked.exec(elem.type);
      return match ? elem.type = match[1] : elem.removeAttribute("type"), elem
    }

    function setGlobalEval(elems, refElements) {
      for (var i = 0, l = elems.length; i < l; i++) data_priv.set(elems[i], "globalEval", !refElements || data_priv.get(refElements[i], "globalEval"))
    }

    function cloneCopyEvent(src, dest) {
      var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
      if (1 === dest.nodeType) {
        if (data_priv.hasData(src) && (pdataOld = data_priv.access(src), pdataCur = data_priv.set(dest, pdataOld), events = pdataOld.events)) {
          delete pdataCur.handle, pdataCur.events = {};
          for (type in events) for (i = 0, l = events[type].length; i < l; i++) jQuery.event.add(dest, type, events[type][i])
        }
        data_user.hasData(src) && (udataOld = data_user.access(src), udataCur = jQuery.extend({}, udataOld), data_user.set(dest, udataCur))
      }
    }

    function getAll(context, tag) {
      var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : context.querySelectorAll ? context.querySelectorAll(tag || "*") : [];
      return void 0 === tag || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret
    }

    function fixInput(src, dest) {
      var nodeName = dest.nodeName.toLowerCase();
      "input" === nodeName && rcheckableType.test(src.type) ? dest.checked = src.checked : "input" !== nodeName && "textarea" !== nodeName || (dest.defaultValue = src.defaultValue)
    }

    function actualDisplay(name, doc) {
      var style, elem = jQuery(doc.createElement(name)).appendTo(doc.body),
          display     = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], "display");
      return elem.detach(), display
    }

    function defaultDisplay(nodeName) {
      var doc = document, display = elemdisplay[nodeName];
      return display || (display = actualDisplay(nodeName, doc), "none" !== display && display || (iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement), doc = iframe[0].contentDocument, doc.write(), doc.close(), display = actualDisplay(nodeName, doc), iframe.detach()), elemdisplay[nodeName] = display), display
    }

    function curCSS(elem, name, computed) {
      var width, minWidth, maxWidth, ret, style = elem.style;
      return computed = computed || getStyles(elem), computed && (ret = computed.getPropertyValue(name) || computed[name]), computed && ("" !== ret || jQuery.contains(elem.ownerDocument, elem) || (ret = jQuery.style(elem, name)), rnumnonpx.test(ret) && rmargin.test(name) && (width = style.width, minWidth = style.minWidth, maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, ret = computed.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), void 0 !== ret ? ret + "" : ret
    }

    function addGetHookIf(conditionFn, hookFn) {
      return {
        get: function () {
          return conditionFn() ? void delete this.get : (this.get = hookFn).apply(this, arguments)
        }
      }
    }

    function vendorPropName(style, name) {
      if (name in style) return name;
      for (var capName = name[0].toUpperCase() + name.slice(1), origName = name, i = cssPrefixes.length; i--;) if ((name = cssPrefixes[i] + capName) in style) return name;
      return origName
    }

    function setPositiveNumber(elem, value, subtract) {
      var matches = rnumsplit.exec(value);
      return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value
    }

    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
      for (var i = extra === (isBorderBox ? "border" : "content") ? 4 : "width" === name ? 1 : 0, val = 0; i < 4; i += 2) "margin" === extra && (val += jQuery.css(elem, extra + cssExpand[i], !0, styles)), isBorderBox ? ("content" === extra && (val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), "margin" !== extra && (val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), "padding" !== extra && (val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)));
      return val
    }

    function getWidthOrHeight(elem, name, extra) {
      var valueIsBorderBox                      = !0, val = "width" === name ? elem.offsetWidth : elem.offsetHeight,
          styles = getStyles(elem), isBorderBox = "border-box" === jQuery.css(elem, "boxSizing", !1, styles);
      if (val <= 0 || null == val) {
        if (val = curCSS(elem, name, styles), (val < 0 || null == val) && (val = elem.style[name]), rnumnonpx.test(val)) return val;
        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]), val = parseFloat(val) || 0
      }
      return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px"
    }

    function showHide(elements, show) {
      for (var display, elem, hidden, values = [], index = 0, length = elements.length; index < length; index++) elem = elements[index], elem.style && (values[index] = data_priv.get(elem, "olddisplay"), display = elem.style.display, show ? (values[index] || "none" !== display || (elem.style.display = ""), "" === elem.style.display && isHidden(elem) && (values[index] = data_priv.access(elem, "olddisplay", defaultDisplay(elem.nodeName)))) : (hidden = isHidden(elem), "none" === display && hidden || data_priv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))));
      for (index = 0; index < length; index++) elem = elements[index], elem.style && (show && "none" !== elem.style.display && "" !== elem.style.display || (elem.style.display = show ? values[index] || "" : "none"));
      return elements
    }

    function Tween(elem, options, prop, end, easing) {
      return new Tween.prototype.init(elem, options, prop, end, easing)
    }

    function createFxNow() {
      return setTimeout(function () {
        fxNow = void 0
      }), fxNow = jQuery.now()
    }

    function genFx(type, includeWidth) {
      var which, i = 0, attrs = {height: type};
      for (includeWidth = includeWidth ? 1 : 0; i < 4; i += 2 - includeWidth) which = cssExpand[i], attrs["margin" + which] = attrs["padding" + which] = type;
      return includeWidth && (attrs.opacity = attrs.width = type), attrs
    }

    function createTween(value, prop, animation) {
      for (var tween, collection = (tweeners[prop] || []).concat(tweeners["*"]), index = 0, length = collection.length; index < length; index++) if (tween = collection[index].call(animation, prop, value)) return tween
    }

    function defaultPrefilter(elem, props, opts) {
      var prop, value, toggle, tween, hooks, oldfire, display, anim = this, orig = {}, style = elem.style,
          hidden                                                                             = elem.nodeType && isHidden(elem),
          dataShow                                                                           = data_priv.get(elem, "fxshow");
      opts.queue || (hooks = jQuery._queueHooks(elem, "fx"), null == hooks.unqueued && (hooks.unqueued = 0, oldfire = hooks.empty.fire, hooks.empty.fire = function () {
        hooks.unqueued || oldfire()
      }), hooks.unqueued++, anim.always(function () {
        anim.always(function () {
          hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire()
        })
      })), 1 === elem.nodeType && ("height" in props || "width" in props) && (opts.overflow = [style.overflow, style.overflowX, style.overflowY], display = jQuery.css(elem, "display"), "inline" === ("none" === display ? data_priv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display) && "none" === jQuery.css(elem, "float") && (style.display = "inline-block")), opts.overflow && (style.overflow = "hidden", anim.always(function () {
        style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], style.overflowY = opts.overflow[2]
      }));
      for (prop in props) if (value = props[prop], rfxtypes.exec(value)) {
        if (delete props[prop], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) {
          if ("show" !== value || !dataShow || void 0 === dataShow[prop]) continue;
          hidden = !0
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop)
      } else display = void 0;
      if (jQuery.isEmptyObject(orig)) "inline" === ("none" === display ? defaultDisplay(elem.nodeName) : display) && (style.display = display); else {
        dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : dataShow = data_priv.access(elem, "fxshow", {}), toggle && (dataShow.hidden = !hidden), hidden ? jQuery(elem).show() : anim.done(function () {
          jQuery(elem).hide()
        }), anim.done(function () {
          var prop;
          data_priv.remove(elem, "fxshow");
          for (prop in orig) jQuery.style(elem, prop, orig[prop])
        });
        for (prop in orig) tween = createTween(hidden ? dataShow[prop] : 0, prop, anim), prop in dataShow || (dataShow[prop] = tween.start, hidden && (tween.end = tween.start, tween.start = "width" === prop || "height" === prop ? 1 : 0))
      }
    }

    function propFilter(props, specialEasing) {
      var index, name, easing, value, hooks;
      for (index in props) if (name = jQuery.camelCase(index), easing = specialEasing[name], value = props[index], jQuery.isArray(value) && (easing = value[1], value = props[index] = value[0]), index !== name && (props[name] = value, delete props[index]), (hooks = jQuery.cssHooks[name]) && "expand" in hooks) {
        value = hooks.expand(value), delete props[name];
        for (index in value) index in props || (props[index] = value[index], specialEasing[index] = easing)
      } else specialEasing[name] = easing
    }

    function Animation(elem, properties, options) {
      var result, stopped, index = 0, length = animationPrefilters.length,
          deferred                           = jQuery.Deferred().always(function () {
            delete tick.elem
          }), tick                           = function () {
            if (stopped) return !1;
            for (var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length; index < length; index++) animation.tweens[index].run(percent);
            return deferred.notifyWith(elem, [animation, percent, remaining]), percent < 1 && length ? remaining : (deferred.resolveWith(elem, [animation]), !1)
          }, animation                       = deferred.promise({
            elem:               elem,
            props:              jQuery.extend({}, properties),
            opts:               jQuery.extend(!0, {specialEasing: {}}, options),
            originalProperties: properties,
            originalOptions:    options,
            startTime:          fxNow || createFxNow(),
            duration:           options.duration,
            tweens:             [],
            createTween:        function (prop, end) {
              var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
              return animation.tweens.push(tween), tween
            },
            stop:               function (gotoEnd) {
              var index = 0, length = gotoEnd ? animation.tweens.length : 0;
              if (stopped) return this;
              for (stopped = !0; index < length; index++) animation.tweens[index].run(1);
              return gotoEnd ? deferred.resolveWith(elem, [animation, gotoEnd]) : deferred.rejectWith(elem, [animation, gotoEnd]), this
            }
          }), props                          = animation.props;
      for (propFilter(props, animation.opts.specialEasing); index < length; index++) if (result = animationPrefilters[index].call(animation, elem, props, animation.opts)) return result;
      return jQuery.map(props, createTween, animation), jQuery.isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), jQuery.fx.timer(jQuery.extend(tick, {
        elem:  elem,
        anim:  animation,
        queue: animation.opts.queue
      })), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)
    }

    function addToPrefiltersOrTransports(structure) {
      return function (dataTypeExpression, func) {
        "string" != typeof dataTypeExpression && (func = dataTypeExpression, dataTypeExpression = "*");
        var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
        if (jQuery.isFunction(func)) for (; dataType = dataTypes[i++];) "+" === dataType[0] ? (dataType = dataType.slice(1) || "*", (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func)
      }
    }

    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
      function inspect(dataType) {
        var selected;
        return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
          var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
          return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport] ? seekingTransport ? !(selected = dataTypeOrTransport) : void 0 : (options.dataTypes.unshift(dataTypeOrTransport), inspect(dataTypeOrTransport), !1)
        }), selected
      }

      var inspected = {}, seekingTransport = structure === transports;
      return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*")
    }

    function ajaxExtend(target, src) {
      var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
      for (key in src) void 0 !== src[key] && ((flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]);
      return deep && jQuery.extend(!0, target, deep), target
    }

    function ajaxHandleResponses(s, jqXHR, responses) {
      for (var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes; "*" === dataTypes[0];) dataTypes.shift(), void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
      if (ct) for (type in contents) if (contents[type] && contents[type].test(ct)) {
        dataTypes.unshift(type);
        break
      }
      if (dataTypes[0] in responses) finalDataType = dataTypes[0]; else {
        for (type in responses) {
          if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
            finalDataType = type;
            break
          }
          firstDataType || (firstDataType = type)
        }
        finalDataType = finalDataType || firstDataType
      }
      if (finalDataType) return finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), responses[finalDataType]
    }

    function ajaxConvert(s, response, jqXHR, isSuccess) {
      var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
      if (dataTypes[1]) for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
      for (current = dataTypes.shift(); current;) if (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response), !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)), prev = current, current = dataTypes.shift()) if ("*" === current) current = prev; else if ("*" !== prev && prev !== current) {
        if (!(conv = converters[prev + " " + current] || converters["* " + current])) for (conv2 in converters) if (tmp = conv2.split(" "), tmp[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
          !0 === conv ? conv = converters[conv2] : !0 !== converters[conv2] && (current = tmp[0], dataTypes.unshift(tmp[1]));
          break
        }
        if (!0 !== conv) if (conv && s.throws) response = conv(response); else try {
          response = conv(response)
        } catch (e) {
          return {state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current}
        }
      }
      return {state: "success", data: response}
    }

    function buildParams(prefix, obj, traditional, add) {
      var name;
      if (jQuery.isArray(obj)) jQuery.each(obj, function (i, v) {
        traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v ? i : "") + "]", v, traditional, add)
      }); else if (traditional || "object" !== jQuery.type(obj)) add(prefix, obj); else for (name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
    }

    function getWindow(elem) {
      return jQuery.isWindow(elem) ? elem : 9 === elem.nodeType && elem.defaultView
    }

    var arr                                                                                          = [], slice = arr.slice, concat = arr.concat, push = arr.push, indexOf = arr.indexOf,
        class2type = {}, toString = class2type.toString, hasOwn = class2type.hasOwnProperty, support = {},
        document                                                                                     = window.document, jQuery = function (selector, context) {
          return new jQuery.fn.init(selector, context)
        }, rtrim                                                                                     = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, rmsPrefix = /^-ms-/, rdashAlpha = /-([\da-z])/gi,
        fcamelCase                                                                                   = function (all, letter) {
          return letter.toUpperCase()
        };
    jQuery.fn = jQuery.prototype = {
      jquery:      "2.1.1",
      constructor: jQuery,
      selector:    "",
      length:      0,
      toArray:     function () {
        return slice.call(this)
      },
      get:         function (num) {
        return null != num ? num < 0 ? this[num + this.length] : this[num] : slice.call(this)
      },
      pushStack:   function (elems) {
        var ret = jQuery.merge(this.constructor(), elems);
        return ret.prevObject = this, ret.context = this.context, ret
      },
      each:        function (callback, args) {
        return jQuery.each(this, callback, args)
      },
      map:         function (callback) {
        return this.pushStack(jQuery.map(this, function (elem, i) {
          return callback.call(elem, i, elem)
        }))
      },
      slice:       function () {
        return this.pushStack(slice.apply(this, arguments))
      },
      first:       function () {
        return this.eq(0)
      },
      last:        function () {
        return this.eq(-1)
      },
      eq:          function (i) {
        var len = this.length, j = +i + (i < 0 ? len : 0);
        return this.pushStack(j >= 0 && j < len ? [this[j]] : [])
      },
      end:         function () {
        return this.prevObject || this.constructor(null)
      },
      push:        push,
      sort:        arr.sort,
      splice:      arr.splice
    }, jQuery.extend = jQuery.fn.extend = function () {
      var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length,
          deep                                                                                     = !1;
      for ("boolean" == typeof target && (deep = target, target = arguments[i] || {}, i++), "object" == typeof target || jQuery.isFunction(target) || (target = {}), i === length && (target = this, i--); i < length; i++) if (null != (options = arguments[i])) for (name in options) src = target[name], copy = options[name], target !== copy && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy))) ? (copyIsArray ? (copyIsArray = !1, clone = src && jQuery.isArray(src) ? src : []) : clone = src && jQuery.isPlainObject(src) ? src : {}, target[name] = jQuery.extend(deep, clone, copy)) : void 0 !== copy && (target[name] = copy));
      return target
    }, jQuery.extend({
      expando:       "jQuery" + ("2.1.1" + Math.random()).replace(/\D/g, ""),
      isReady:       !0,
      error:         function (msg) {
        throw new Error(msg)
      },
      noop:          function () {
      },
      isFunction:    function (obj) {
        return "function" === jQuery.type(obj)
      },
      isArray:       Array.isArray,
      isWindow:      function (obj) {
        return null != obj && obj === obj.window
      },
      isNumeric:     function (obj) {
        return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0
      },
      isPlainObject: function (obj) {
        return "object" === jQuery.type(obj) && !obj.nodeType && !jQuery.isWindow(obj) && !(obj.constructor && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf"))
      },
      isEmptyObject: function (obj) {
        var name;
        for (name in obj) return !1;
        return !0
      },
      type:          function (obj) {
        return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj
      },
      globalEval:    function (code) {
        var script, indirect = eval;
        (code = jQuery.trim(code)) && (1 === code.indexOf("use strict") ? (script = document.createElement("script"), script.text = code, document.head.appendChild(script).parentNode.removeChild(script)) : indirect(code))
      },
      camelCase:     function (string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
      },
      nodeName:      function (elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
      },
      each:          function (obj, callback, args) {
        var i = 0, length = obj.length, isArray = isArraylike(obj);
        if (args) {
          if (isArray) for (; i < length && !1 !== callback.apply(obj[i], args); i++) ; else for (i in obj) if (!1 === callback.apply(obj[i], args)) break
        } else if (isArray) for (; i < length && !1 !== callback.call(obj[i], i, obj[i]); i++) ; else for (i in obj) if (!1 === callback.call(obj[i], i, obj[i])) break;
        return obj
      },
      trim:          function (text) {
        return null == text ? "" : (text + "").replace(rtrim, "")
      },
      makeArray:     function (arr, results) {
        var ret = results || [];
        return null != arr && (isArraylike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [arr] : arr) : push.call(ret, arr)), ret
      },
      inArray:       function (elem, arr, i) {
        return null == arr ? -1 : indexOf.call(arr, elem, i)
      },
      merge:         function (first, second) {
        for (var len = +second.length, j = 0, i = first.length; j < len; j++) first[i++] = second[j];
        return first.length = i, first
      },
      grep:          function (elems, callback, invert) {
        for (var matches = [], i = 0, length = elems.length, callbackExpect = !invert; i < length; i++) !callback(elems[i], i) !== callbackExpect && matches.push(elems[i]);
        return matches
      },
      map:           function (elems, callback, arg) {
        var value, i = 0, length = elems.length, isArray = isArraylike(elems), ret = [];
        if (isArray) for (; i < length; i++) null != (value = callback(elems[i], i, arg)) && ret.push(value); else for (i in elems) null != (value = callback(elems[i], i, arg)) && ret.push(value);
        return concat.apply([], ret)
      },
      guid:          1,
      proxy:         function (fn, context) {
        var tmp, args, proxy;
        if ("string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), jQuery.isFunction(fn)) return args = slice.call(arguments, 2), proxy = function () {
          return fn.apply(context || this, args.concat(slice.call(arguments)))
        }, proxy.guid = fn.guid = fn.guid || jQuery.guid++, proxy
      },
      now:           Date.now,
      support:       support
    }), jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (i, name) {
      class2type["[object " + name + "]"] = name.toLowerCase()
    });
    var Sizzle = function (window) {
      function Sizzle(selector, context, results, seed) {
        var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;
        if ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), context = context || document, results = results || [], !selector || "string" != typeof selector) return results;
        if (1 !== (nodeType = context.nodeType) && 9 !== nodeType) return [];
        if (documentIsHTML && !seed) {
          if (match = rquickExpr.exec(selector)) if (m = match[1]) {
            if (9 === nodeType) {
              if (!(elem = context.getElementById(m)) || !elem.parentNode) return results;
              if (elem.id === m) return results.push(elem), results
            } else if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), results
          } else {
            if (match[2]) return push.apply(results, context.getElementsByTagName(selector)), results;
            if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) return push.apply(results, context.getElementsByClassName(m)), results
          }
          if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            if (nid = old = expando, newContext = context, newSelector = 9 === nodeType && selector, 1 === nodeType && "object" !== context.nodeName.toLowerCase()) {
              for (groups = tokenize(selector), (old = context.getAttribute("id")) ? nid = old.replace(rescape, "\\$&") : context.setAttribute("id", nid), nid = "[id='" + nid + "'] ", i = groups.length; i--;) groups[i] = nid + toSelector(groups[i]);
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context, newSelector = groups.join(",")
            }
            if (newSelector) try {
              return push.apply(results, newContext.querySelectorAll(newSelector)), results
            } catch (qsaError) {
            } finally {
              old || context.removeAttribute("id")
            }
          }
        }
        return select(selector.replace(rtrim, "$1"), context, results, seed)
      }

      function createCache() {
        function cache(key, value) {
          return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], cache[key + " "] = value
        }

        var keys = [];
        return cache
      }

      function markFunction(fn) {
        return fn[expando] = !0, fn
      }

      function assert(fn) {
        var div = document.createElement("div");
        try {
          return !!fn(div)
        } catch (e) {
          return !1
        } finally {
          div.parentNode && div.parentNode.removeChild(div), div = null
        }
      }

      function addHandle(attrs, handler) {
        for (var arr = attrs.split("|"), i = attrs.length; i--;) Expr.attrHandle[arr[i]] = handler
      }

      function siblingCheck(a, b) {
        var cur  = b && a,
            diff = cur && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
        if (diff) return diff;
        if (cur) for (; cur = cur.nextSibling;) if (cur === b) return -1;
        return a ? 1 : -1
      }

      function createPositionalPseudo(fn) {
        return markFunction(function (argument) {
          return argument = +argument, markFunction(function (seed, matches) {
            for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--;) seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]))
          })
        })
      }

      function testContext(context) {
        return context && typeof context.getElementsByTagName !== strundefined && context
      }

      function setFilters() {
      }

      function toSelector(tokens) {
        for (var i = 0, len = tokens.length, selector = ""; i < len; i++) selector += tokens[i].value;
        return selector
      }

      function addCombinator(matcher, combinator, base) {
        var dir = combinator.dir, checkNonElements = base && "parentNode" === dir, doneName = done++;
        return combinator.first ? function (elem, context, xml) {
          for (; elem = elem[dir];) if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml)
        } : function (elem, context, xml) {
          var oldCache, outerCache, newCache = [dirruns, doneName];
          if (xml) {
            for (; elem = elem[dir];) if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0
          } else for (; elem = elem[dir];) if (1 === elem.nodeType || checkNonElements) {
            if (outerCache = elem[expando] || (elem[expando] = {}), (oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) return newCache[2] = oldCache[2];
            if (outerCache[dir] = newCache, newCache[2] = matcher(elem, context, xml)) return !0
          }
        }
      }

      function elementMatcher(matchers) {
        return matchers.length > 1 ? function (elem, context, xml) {
          for (var i = matchers.length; i--;) if (!matchers[i](elem, context, xml)) return !1;
          return !0
        } : matchers[0]
      }

      function multipleContexts(selector, contexts, results) {
        for (var i = 0, len = contexts.length; i < len; i++) Sizzle(selector, contexts[i], results);
        return results
      }

      function condense(unmatched, map, filter, context, xml) {
        for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; i < len; i++) (elem = unmatched[i]) && (filter && !filter(elem, context, xml) || (newUnmatched.push(elem), mapped && map.push(i)));
        return newUnmatched
      }

      function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
        return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), markFunction(function (seed, results, context, xml) {
          var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,
              elems                                                 = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
              matcherIn                                             = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml),
              matcherOut                                            = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
          if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter) for (temp = condense(matcherOut, postMap), postFilter(temp, [], context, xml), i = temp.length; i--;) (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
          if (seed) {
            if (postFinder || preFilter) {
              if (postFinder) {
                for (temp = [], i = matcherOut.length; i--;) (elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                postFinder(null, matcherOut = [], temp, xml)
              }
              for (i = matcherOut.length; i--;) (elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1 && (seed[temp] = !(results[temp] = elem))
            }
          } else matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut)
        })
      }

      function matcherFromTokens(tokens) {
        for (var checkContext, matcher, j, len    = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function (elem) {
          return elem === checkContext
        }, implicitRelative, !0), matchAnyContext = addCombinator(function (elem) {
          return indexOf.call(checkContext, elem) > -1
        }, implicitRelative, !0), matchers        = [function (elem, context, xml) {
          return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml))
        }]; i < len; i++) if (matcher = Expr.relative[tokens[i].type]) matchers = [addCombinator(elementMatcher(matchers), matcher)]; else {
          if (matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches), matcher[expando]) {
            for (j = ++i; j < len && !Expr.relative[tokens[j].type]; j++) ;
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: " " === tokens[i - 2].type ? "*" : ""})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens))
          }
          matchers.push(matcher)
        }
        return elementMatcher(matchers)
      }

      function matcherFromGroupMatchers(elementMatchers, setMatchers) {
        var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0,
            superMatcher                              = function (seed, context, xml, results, outermost) {
              var elem, j, matcher, matchedCount = 0, i = "0", unmatched = seed && [], setMatched = [],
                  contextBackup                                                                   = outermostContext,
                  elems                                                                           = seed || byElement && Expr.find.TAG("*", outermost),
                  dirrunsUnique                                                                   = dirruns += null == contextBackup ? 1 : Math.random() || .1,
                  len = elems.length;
              for (outermost && (outermostContext = context !== document && context); i !== len && null != (elem = elems[i]); i++) {
                if (byElement && elem) {
                  for (j = 0; matcher = elementMatchers[j++];) if (matcher(elem, context, xml)) {
                    results.push(elem);
                    break
                  }
                  outermost && (dirruns = dirrunsUnique)
                }
                bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem))
              }
              if (matchedCount += i, bySet && i !== matchedCount) {
                for (j = 0; matcher = setMatchers[j++];) matcher(unmatched, setMatched, context, xml);
                if (seed) {
                  if (matchedCount > 0) for (; i--;) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                  setMatched = condense(setMatched)
                }
                push.apply(results, setMatched), outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1 && Sizzle.uniqueSort(results)
              }
              return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), unmatched
            };
        return bySet ? markFunction(superMatcher) : superMatcher
      }

      var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate,
          setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,
          expando                                                                                          = "sizzle" + -new Date, preferredDoc = window.document, dirruns = 0, done = 0,
          classCache                                                                                       = createCache(), tokenCache                                                           = createCache(), compilerCache = createCache(),
          sortOrder                                                                                        = function (a, b) {
            return a === b && (hasDuplicate = !0), 0
          }, strundefined = "undefined", MAX_NEGATIVE = 1 << 31, hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop,
          push_native                                                                                      = arr.push, push                                                                     = arr.push, slice                                                   = arr.slice, indexOf = arr.indexOf || function (elem) {
            for (var i = 0, len = this.length; i < len; i++) if (this[i] === elem) return i;
            return -1
          },
          booleans                                                                                         = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
          whitespace                                                                                       = "[\\x20\\t\\r\\n\\f]", characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
          identifier                                                                                       = characterEncoding.replace("w", "w#"),
          attributes                                                                                       = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
          pseudos                                                                                          = ":(" + characterEncoding + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|.*)\\)|)",
          rtrim                                                                                            = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
          rcomma                                                                                           = new RegExp("^" + whitespace + "*," + whitespace + "*"),
          rcombinators                                                                                     = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
          rattributeQuotes                                                                                 = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
          rpseudo                                                                                          = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr       = {
            ID:           new RegExp("^#(" + characterEncoding + ")"),
            CLASS:        new RegExp("^\\.(" + characterEncoding + ")"),
            TAG:          new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
            ATTR:         new RegExp("^" + attributes),
            PSEUDO:       new RegExp("^" + pseudos),
            CHILD:        new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
            bool:         new RegExp("^(?:" + booleans + ")$", "i"),
            needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
          }, rinputs                                                                                       = /^(?:input|select|textarea|button)$/i, rheader                                      = /^h\d$/i,
          rnative                                                                                          = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
          rsibling                                                                                         = /[+~]/, rescape                                                                       = /'|\\/g,
          runescape                                                                                        = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
          funescape                                                                                        = function (_, escaped, escapedWhitespace) {
            var high = "0x" + escaped - 65536;
            return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320)
          };
      try {
        push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes), arr[preferredDoc.childNodes.length].nodeType
      } catch (e) {
        push = {
          apply: arr.length ? function (target, els) {
            push_native.apply(target, slice.call(els))
          } : function (target, els) {
            for (var j = target.length, i = 0; target[j++] = els[i++];) ;
            target.length = j - 1
          }
        }
      }
      support = Sizzle.support = {}, isXML = Sizzle.isXML = function (elem) {
        var documentElement = elem && (elem.ownerDocument || elem).documentElement;
        return !!documentElement && "HTML" !== documentElement.nodeName
      }, setDocument = Sizzle.setDocument = function (node) {
        var hasCompare, doc = node ? node.ownerDocument || node : preferredDoc, parent = doc.defaultView;
        return doc !== document && 9 === doc.nodeType && doc.documentElement ? (document = doc, docElem = doc.documentElement, documentIsHTML = !isXML(doc), parent && parent !== parent.top && (parent.addEventListener ? parent.addEventListener("unload", function () {
          setDocument()
        }, !1) : parent.attachEvent && parent.attachEvent("onunload", function () {
          setDocument()
        })), support.attributes = assert(function (div) {
          return div.className = "i", !div.getAttribute("className")
        }), support.getElementsByTagName = assert(function (div) {
          return div.appendChild(doc.createComment("")), !div.getElementsByTagName("*").length
        }), support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function (div) {
          return div.innerHTML = "<div class='a'></div><div class='a i'></div>", div.firstChild.className = "i", 2 === div.getElementsByClassName("i").length
        }), support.getById = assert(function (div) {
          return docElem.appendChild(div).id = expando, !doc.getElementsByName || !doc.getElementsByName(expando).length
        }), support.getById ? (Expr.find.ID = function (id, context) {
          if (typeof context.getElementById !== strundefined && documentIsHTML) {
            var m = context.getElementById(id);
            return m && m.parentNode ? [m] : []
          }
        }, Expr.filter.ID = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            return elem.getAttribute("id") === attrId
          }
        }) : (delete Expr.find.ID, Expr.filter.ID = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
            return node && node.value === attrId
          }
        }), Expr.find.TAG = support.getElementsByTagName ? function (tag, context) {
          if (typeof context.getElementsByTagName !== strundefined) return context.getElementsByTagName(tag)
        } : function (tag, context) {
          var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
          if ("*" === tag) {
            for (; elem = results[i++];) 1 === elem.nodeType && tmp.push(elem);
            return tmp
          }
          return results
        }, Expr.find.CLASS = support.getElementsByClassName && function (className, context) {
          if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) return context.getElementsByClassName(className)
        }, rbuggyMatches = [], rbuggyQSA = [], (support.qsa = rnative.test(doc.querySelectorAll)) && (assert(function (div) {
          div.innerHTML = "<select msallowclip=''><option selected=''></option></select>", div.querySelectorAll("[msallowclip^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"), div.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"), div.querySelectorAll(":checked").length || rbuggyQSA.push(":checked")
        }), assert(function (div) {
          var input = doc.createElement("input");
          input.setAttribute("type", "hidden"), div.appendChild(input).setAttribute("name", "D"), div.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="), div.querySelectorAll(":enabled").length || rbuggyQSA.push(":enabled", ":disabled"), div.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:")
        })), (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function (div) {
          support.disconnectedMatch = matches.call(div, "div"), matches.call(div, "[s!='']:x"), rbuggyMatches.push("!=", pseudos)
        }), rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")), rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")), hasCompare = rnative.test(docElem.compareDocumentPosition), contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
          var adown = 9 === a.nodeType ? a.documentElement : a, bup = b && b.parentNode;
          return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)))
        } : function (a, b) {
          if (b) for (; b = b.parentNode;) if (b === a) return !0;
          return !1
        }, sortOrder = hasCompare ? function (a, b) {
          if (a === b) return hasDuplicate = !0, 0;
          var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
          return compare || (compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & compare || !support.sortDetached && b.compareDocumentPosition(a) === compare ? a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ? -1 : b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0 : 4 & compare ? -1 : 1)
        } : function (a, b) {
          if (a === b) return hasDuplicate = !0, 0;
          var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
          if (!aup || !bup) return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
          if (aup === bup) return siblingCheck(a, b);
          for (cur = a; cur = cur.parentNode;) ap.unshift(cur);
          for (cur = b; cur = cur.parentNode;) bp.unshift(cur);
          for (; ap[i] === bp[i];) i++;
          return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0
        }, doc) : document
      }, Sizzle.matches = function (expr, elements) {
        return Sizzle(expr, null, null, elements)
      }, Sizzle.matchesSelector = function (elem, expr) {
        if ((elem.ownerDocument || elem) !== document && setDocument(elem), expr = expr.replace(rattributeQuotes, "='$1']"), support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) try {
          var ret = matches.call(elem, expr);
          if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType) return ret
        } catch (e) {
        }
        return Sizzle(expr, document, null, [elem]).length > 0
      }, Sizzle.contains = function (context, elem) {
        return (context.ownerDocument || context) !== document && setDocument(context), contains(context, elem)
      }, Sizzle.attr = function (elem, name) {
        (elem.ownerDocument || elem) !== document && setDocument(elem);
        var fn  = Expr.attrHandle[name.toLowerCase()],
            val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
        return void 0 !== val ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
      }, Sizzle.error = function (msg) {
        throw new Error("Syntax error, unrecognized expression: " + msg)
      }, Sizzle.uniqueSort = function (results) {
        var elem, duplicates = [], j = 0, i = 0;
        if (hasDuplicate = !support.detectDuplicates, sortInput = !support.sortStable && results.slice(0), results.sort(sortOrder), hasDuplicate) {
          for (; elem = results[i++];) elem === results[i] && (j = duplicates.push(i));
          for (; j--;) results.splice(duplicates[j], 1)
        }
        return sortInput = null, results
      }, getText = Sizzle.getText = function (elem) {
        var node, ret = "", i = 0, nodeType = elem.nodeType;
        if (nodeType) {
          if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
            if ("string" == typeof elem.textContent) return elem.textContent;
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem)
          } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue
        } else for (; node = elem[i++];) ret += getText(node);
        return ret
      }, Expr = Sizzle.selectors = {
        cacheLength:  50,
        createPseudo: markFunction,
        match:        matchExpr,
        attrHandle:   {},
        find:         {},
        relative:     {
          ">": {dir: "parentNode", first: !0},
          " ": {dir: "parentNode"},
          "+": {dir: "previousSibling", first: !0},
          "~": {dir: "previousSibling"}
        },
        preFilter:    {
          ATTR:      function (match) {
            return match[1] = match[1].replace(runescape, funescape), match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape), "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4)
          }, CHILD:  function (match) {
            return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), match
          }, PSEUDO: function (match) {
            var excess, unquoted = !match[6] && match[2];
            return matchExpr.CHILD.test(match[0]) ? null : (match[3] ? match[2] = match[4] || match[5] || "" : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), match[2] = unquoted.slice(0, excess)), match.slice(0, 3))
          }
        },
        filter:       {
          TAG:       function (nodeNameSelector) {
            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
            return "*" === nodeNameSelector ? function () {
              return !0
            } : function (elem) {
              return elem.nodeName && elem.nodeName.toLowerCase() === nodeName
            }
          }, CLASS:  function (className) {
            var pattern = classCache[className + " "];
            return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
              return pattern.test("string" == typeof elem.className && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "")
            })
          }, ATTR:   function (name, operator, check) {
            return function (elem) {
              var result = Sizzle.attr(elem, name);
              return null == result ? "!=" === operator : !operator || (result += "", "=" === operator ? result === check : "!=" === operator ? result !== check : "^=" === operator ? check && 0 === result.indexOf(check) : "*=" === operator ? check && result.indexOf(check) > -1 : "$=" === operator ? check && result.slice(-check.length) === check : "~=" === operator ? (" " + result + " ").indexOf(check) > -1 : "|=" === operator && (result === check || result.slice(0, check.length + 1) === check + "-"))
            }
          }, CHILD:  function (type, what, argument, first, last) {
            var simple = "nth" !== type.slice(0, 3), forward = "last" !== type.slice(-4), ofType = "of-type" === what;
            return 1 === first && 0 === last ? function (elem) {
              return !!elem.parentNode
            } : function (elem, context, xml) {
              var cache, outerCache, node, diff, nodeIndex, start,
                  dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode,
                  name                                                                 = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType;
              if (parent) {
                if (simple) {
                  for (; dir;) {
                    for (node = elem; node = node[dir];) if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                    start = dir = "only" === type && !start && "nextSibling"
                  }
                  return !0
                }
                if (start = [forward ? parent.firstChild : parent.lastChild], forward && useCache) {
                  for (outerCache = parent[expando] || (parent[expando] = {}), cache = outerCache[type] || [], nodeIndex = cache[0] === dirruns && cache[1], diff = cache[0] === dirruns && cache[2], node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop();) if (1 === node.nodeType && ++diff && node === elem) {
                    outerCache[type] = [dirruns, nodeIndex, diff];
                    break
                  }
                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) diff = cache[1]; else for (; (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((node[expando] || (node[expando] = {}))[type] = [dirruns, diff]), node !== elem));) ;
                return (diff -= last) === first || diff % first == 0 && diff / first >= 0
              }
            }
          }, PSEUDO: function (pseudo, argument) {
            var args,
                fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
            return fn[expando] ? fn(argument) : fn.length > 1 ? (args = [pseudo, pseudo, "", argument], Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
              for (var idx, matched = fn(seed, argument), i = matched.length; i--;) idx = indexOf.call(seed, matched[i]), seed[idx] = !(matches[idx] = matched[i])
            }) : function (elem) {
              return fn(elem, 0, args)
            }) : fn
          }
        },
        pseudos:      {
          not:      markFunction(function (selector) {
            var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
            return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
              for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--;) (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem))
            }) : function (elem, context, xml) {
              return input[0] = elem, matcher(input, null, xml, results), !results.pop()
            }
          }),
          has:      markFunction(function (selector) {
            return function (elem) {
              return Sizzle(selector, elem).length > 0
            }
          }),
          contains: markFunction(function (text) {
            return function (elem) {
              return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1
            }
          }),
          lang:     markFunction(function (lang) {
            return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), lang = lang.replace(runescape, funescape).toLowerCase(), function (elem) {
              var elemLang;
              do {
                if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) return (elemLang = elemLang.toLowerCase()) === lang || 0 === elemLang.indexOf(lang + "-")
              } while ((elem = elem.parentNode) && 1 === elem.nodeType);
              return !1
            }
          }),
          target:   function (elem) {
            var hash = window.location && window.location.hash;
            return hash && hash.slice(1) === elem.id
          },
          root:     function (elem) {
            return elem === docElem
          },
          focus:    function (elem) {
            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex)
          },
          enabled:  function (elem) {
            return !1 === elem.disabled
          },
          disabled: function (elem) {
            return !0 === elem.disabled
          },
          checked:  function (elem) {
            var nodeName = elem.nodeName.toLowerCase();
            return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected
          },
          selected: function (elem) {
            return elem.parentNode && elem.parentNode.selectedIndex, !0 === elem.selected
          },
          empty:    function (elem) {
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) if (elem.nodeType < 6) return !1;
            return !0
          },
          parent:   function (elem) {
            return !Expr.pseudos.empty(elem)
          },
          header:   function (elem) {
            return rheader.test(elem.nodeName)
          },
          input:    function (elem) {
            return rinputs.test(elem.nodeName)
          },
          button:   function (elem) {
            var name = elem.nodeName.toLowerCase();
            return "input" === name && "button" === elem.type || "button" === name
          },
          text:     function (elem) {
            var attr;
            return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || "text" === attr.toLowerCase())
          },
          first:    createPositionalPseudo(function () {
            return [0]
          }),
          last:     createPositionalPseudo(function (matchIndexes, length) {
            return [length - 1]
          }),
          eq:       createPositionalPseudo(function (matchIndexes, length, argument) {
            return [argument < 0 ? argument + length : argument]
          }),
          even:     createPositionalPseudo(function (matchIndexes, length) {
            for (var i = 0; i < length; i += 2) matchIndexes.push(i);
            return matchIndexes
          }),
          odd:      createPositionalPseudo(function (matchIndexes, length) {
            for (var i = 1; i < length; i += 2) matchIndexes.push(i);
            return matchIndexes
          }),
          lt:       createPositionalPseudo(function (matchIndexes, length, argument) {
            for (var i = argument < 0 ? argument + length : argument; --i >= 0;) matchIndexes.push(i);
            return matchIndexes
          }),
          gt:       createPositionalPseudo(function (matchIndexes, length, argument) {
            for (var i = argument < 0 ? argument + length : argument; ++i < length;) matchIndexes.push(i);
            return matchIndexes
          })
        }
      }, Expr.pseudos.nth = Expr.pseudos.eq;
      for (i in{radio: !0, checkbox: !0, file: !0, password: !0, image: !0}) Expr.pseudos[i] = function (type) {
        return function (elem) {
          return "input" === elem.nodeName.toLowerCase() && elem.type === type
        }
      }(i);
      for (i in{submit: !0, reset: !0}) Expr.pseudos[i] = function (type) {
        return function (elem) {
          var name = elem.nodeName.toLowerCase();
          return ("input" === name || "button" === name) && elem.type === type
        }
      }(i);
      return setFilters.prototype = Expr.filters = Expr.pseudos, Expr.setFilters = new setFilters, tokenize = Sizzle.tokenize = function (selector, parseOnly) {
        var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
        if (cached) return parseOnly ? 0 : cached.slice(0);
        for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar;) {
          matched && !(match = rcomma.exec(soFar)) || (match && (soFar = soFar.slice(match[0].length) || soFar), groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), tokens.push({
            value: matched,
            type:  match[0].replace(rtrim, " ")
          }), soFar = soFar.slice(matched.length));
          for (type in Expr.filter) !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), tokens.push({
            value:   matched,
            type:    type,
            matches: match
          }), soFar = soFar.slice(matched.length));
          if (!matched) break
        }
        return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0)
      }, compile = Sizzle.compile = function (selector, match) {
        var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
        if (!cached) {
          for (match || (match = tokenize(selector)), i = match.length; i--;) cached = matcherFromTokens(match[i]), cached[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
          cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)), cached.selector = selector
        }
        return cached
      }, select = Sizzle.select = function (selector, context, results, seed) {
        var i, tokens, token, type, find, compiled = "function" == typeof selector && selector,
            match                                  = !seed && tokenize(selector = compiled.selector || selector);
        if (results = results || [], 1 === match.length) {
          if (tokens = match[0] = match[0].slice(0), tokens.length > 2 && "ID" === (token = tokens[0]).type && support.getById && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
            if (!(context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0])) return results;
            compiled && (context = context.parentNode), selector = selector.slice(tokens.shift().value.length)
          }
          for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], !Expr.relative[type = token.type]);) if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
            if (tokens.splice(i, 1), !(selector = seed.length && toSelector(tokens))) return push.apply(results, seed), results;
            break
          }
        }
        return (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context), results
      }, support.sortStable = expando.split("").sort(sortOrder).join("") === expando, support.detectDuplicates = !!hasDuplicate, setDocument(), support.sortDetached = assert(function (div1) {
        return 1 & div1.compareDocumentPosition(document.createElement("div"))
      }), assert(function (div) {
        return div.innerHTML = "<a href='#'></a>", "#" === div.firstChild.getAttribute("href")
      }) || addHandle("type|href|height|width", function (elem, name, isXML) {
        if (!isXML) return elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2)
      }), support.attributes && assert(function (div) {
        return div.innerHTML = "<input/>", div.firstChild.setAttribute("value", ""), "" === div.firstChild.getAttribute("value")
      }) || addHandle("value", function (elem, name, isXML) {
        if (!isXML && "input" === elem.nodeName.toLowerCase()) return elem.defaultValue
      }), assert(function (div) {
        return null == div.getAttribute("disabled")
      }) || addHandle(booleans, function (elem, name, isXML) {
        var val;
        if (!isXML) return !0 === elem[name] ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
      }), Sizzle
    }(window);
    jQuery.find = Sizzle, jQuery.expr = Sizzle.selectors, jQuery.expr[":"] = jQuery.expr.pseudos, jQuery.unique = Sizzle.uniqueSort, jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, jQuery.contains = Sizzle.contains;
    var rneedsContext = jQuery.expr.match.needsContext, rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        risSimple                                                  = /^.[^:#\[\.,]*$/;
    jQuery.filter = function (expr, elems, not) {
      var elem = elems[0];
      return not && (expr = ":not(" + expr + ")"), 1 === elems.length && 1 === elem.nodeType ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
        return 1 === elem.nodeType
      }))
    }, jQuery.fn.extend({
      find:      function (selector) {
        var i, len = this.length, ret = [], self = this;
        if ("string" != typeof selector) return this.pushStack(jQuery(selector).filter(function () {
          for (i = 0; i < len; i++) if (jQuery.contains(self[i], this)) return !0
        }));
        for (i = 0; i < len; i++) jQuery.find(selector, self[i], ret);
        return ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret), ret.selector = this.selector ? this.selector + " " + selector : selector, ret
      }, filter: function (selector) {
        return this.pushStack(winnow(this, selector || [], !1))
      }, not:    function (selector) {
        return this.pushStack(winnow(this, selector || [], !0))
      }, is:     function (selector) {
        return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length
      }
    });
    var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
    (jQuery.fn.init = function (selector, context) {
      var match, elem;
      if (!selector) return this;
      if ("string" == typeof selector) {
        if (!(match = "<" === selector[0] && ">" === selector[selector.length - 1] && selector.length >= 3 ? [null, selector, null] : rquickExpr.exec(selector)) || !match[1] && context) return !context || context.jquery ? (context || rootjQuery).find(selector) : this.constructor(context).find(selector);
        if (match[1]) {
          if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) for (match in context) jQuery.isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
          return this
        }
        return elem = document.getElementById(match[2]), elem && elem.parentNode && (this.length = 1, this[0] = elem), this.context = document, this.selector = selector, this
      }
      return selector.nodeType ? (this.context = this[0] = selector, this.length = 1, this) : jQuery.isFunction(selector) ? void 0 !== rootjQuery.ready ? rootjQuery.ready(selector) : selector(jQuery) : (void 0 !== selector.selector && (this.selector = selector.selector, this.context = selector.context), jQuery.makeArray(selector, this))
    }).prototype = jQuery.fn, rootjQuery = jQuery(document);
    var rparentsprev     = /^(?:parents|prev(?:Until|All))/,
        guaranteedUnique = {children: !0, contents: !0, next: !0, prev: !0};
    jQuery.extend({
      dir:        function (elem, dir, until) {
        for (var matched = [], truncate = void 0 !== until; (elem = elem[dir]) && 9 !== elem.nodeType;) if (1 === elem.nodeType) {
          if (truncate && jQuery(elem).is(until)) break;
          matched.push(elem)
        }
        return matched
      }, sibling: function (n, elem) {
        for (var matched = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && matched.push(n);
        return matched
      }
    }), jQuery.fn.extend({
      has:        function (target) {
        var targets = jQuery(target, this), l = targets.length;
        return this.filter(function () {
          for (var i = 0; i < l; i++) if (jQuery.contains(this, targets[i])) return !0
        })
      }, closest: function (selectors, context) {
        for (var cur, i = 0, l = this.length, matched = [], pos = rneedsContext.test(selectors) || "string" != typeof selectors ? jQuery(selectors, context || this.context) : 0; i < l; i++) for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
          matched.push(cur);
          break
        }
        return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched)
      }, index:   function (elem) {
        return elem ? "string" == typeof elem ? indexOf.call(jQuery(elem), this[0]) : indexOf.call(this, elem.jquery ? elem[0] : elem) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
      }, add:     function (selector, context) {
        return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))))
      }, addBack: function (selector) {
        return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector))
      }
    }), jQuery.each({
      parent:          function (elem) {
        var parent = elem.parentNode;
        return parent && 11 !== parent.nodeType ? parent : null
      }, parents:      function (elem) {
        return jQuery.dir(elem, "parentNode")
      }, parentsUntil: function (elem, i, until) {
        return jQuery.dir(elem, "parentNode", until)
      }, next:         function (elem) {
        return sibling(elem, "nextSibling")
      }, prev:         function (elem) {
        return sibling(elem, "previousSibling")
      }, nextAll:      function (elem) {
        return jQuery.dir(elem, "nextSibling")
      }, prevAll:      function (elem) {
        return jQuery.dir(elem, "previousSibling")
      }, nextUntil:    function (elem, i, until) {
        return jQuery.dir(elem, "nextSibling", until)
      }, prevUntil:    function (elem, i, until) {
        return jQuery.dir(elem, "previousSibling", until)
      }, siblings:     function (elem) {
        return jQuery.sibling((elem.parentNode || {}).firstChild, elem)
      }, children:     function (elem) {
        return jQuery.sibling(elem.firstChild)
      }, contents:     function (elem) {
        return elem.contentDocument || jQuery.merge([], elem.childNodes)
      }
    }, function (name, fn) {
      jQuery.fn[name] = function (until, selector) {
        var matched = jQuery.map(this, fn, until);
        return "Until" !== name.slice(-5) && (selector = until), selector && "string" == typeof selector && (matched = jQuery.filter(selector, matched)), this.length > 1 && (guaranteedUnique[name] || jQuery.unique(matched), rparentsprev.test(name) && matched.reverse()), this.pushStack(matched)
      }
    });
    var rnotwhite = /\S+/g, optionsCache = {};
    jQuery.Callbacks = function (options) {
      options                                                                             = "string" == typeof options ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);
      var memory, fired, firing, firingStart, firingLength, firingIndex, list = [], stack = !options.once && [],
          fire                                                                            = function (data) {
            for (memory = options.memory && data, fired = !0, firingIndex = firingStart || 0, firingStart = 0, firingLength = list.length, firing = !0; list && firingIndex < firingLength; firingIndex++) if (!1 === list[firingIndex].apply(data[0], data[1]) && options.stopOnFalse) {
              memory = !1;
              break
            }
            firing = !1, list && (stack ? stack.length && fire(stack.shift()) : memory ? list = [] : self.disable())
          }, self                                                                         = {
            add:         function () {
              if (list) {
                var start = list.length;
                !function add(args) {
                  jQuery.each(args, function (_, arg) {
                    var type = jQuery.type(arg);
                    "function" === type ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== type && add(arg)
                  })
                }(arguments), firing ? firingLength = list.length : memory && (firingStart = start, fire(memory))
              }
              return this
            }, remove:   function () {
              return list && jQuery.each(arguments, function (_, arg) {
                for (var index; (index = jQuery.inArray(arg, list, index)) > -1;) list.splice(index, 1), firing && (index <= firingLength && firingLength--, index <= firingIndex && firingIndex--)
              }), this
            }, has:      function (fn) {
              return fn ? jQuery.inArray(fn, list) > -1 : !(!list || !list.length)
            }, empty:    function () {
              return list = [], firingLength = 0, this
            }, disable:  function () {
              return list = stack = memory = void 0, this
            }, disabled: function () {
              return !list
            }, lock:     function () {
              return stack = void 0, memory || self.disable(), this
            }, locked:   function () {
              return !stack
            }, fireWith: function (context, args) {
              return !list || fired && !stack || (args = args || [], args = [context, args.slice ? args.slice() : args], firing ? stack.push(args) : fire(args)), this
            }, fire:     function () {
              return self.fireWith(this, arguments), this
            }, fired:    function () {
              return !!fired
            }
          };
      return self
    }, jQuery.extend({
      Deferred: function (func) {
        var tuples                     = [["resolve", "done", jQuery.Callbacks("once memory"), "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"], ["notify", "progress", jQuery.Callbacks("memory")]],
            state = "pending", promise = {
              state:      function () {
                return state
              }, always:  function () {
                return deferred.done(arguments).fail(arguments), this
              }, then:    function () {
                var fns = arguments;
                return jQuery.Deferred(function (newDefer) {
                  jQuery.each(tuples, function (i, tuple) {
                    var fn = jQuery.isFunction(fns[i]) && fns[i];
                    deferred[tuple[1]](function () {
                      var returned = fn && fn.apply(this, arguments);
                      returned && jQuery.isFunction(returned.promise) ? returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify) : newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments)
                    })
                  }), fns = null
                }).promise()
              }, promise: function (obj) {
                return null != obj ? jQuery.extend(obj, promise) : promise
              }
            }, deferred                = {};
        return promise.pipe = promise.then, jQuery.each(tuples, function (i, tuple) {
          var list = tuple[2], stateString = tuple[3];
          promise[tuple[1]] = list.add, stateString && list.add(function () {
            state = stateString
          }, tuples[1 ^ i][2].disable, tuples[2][2].lock), deferred[tuple[0]] = function () {
            return deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments), this
          }, deferred[tuple[0] + "With"] = list.fireWith
        }), promise.promise(deferred), func && func.call(deferred, deferred), deferred
      }, when:  function (subordinate) {
        var progressValues, progressContexts, resolveContexts, i = 0, resolveValues = slice.call(arguments),
            length                                                                  = resolveValues.length,
            remaining                                                               = 1 !== length || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,
            deferred                                                                = 1 === remaining ? subordinate : jQuery.Deferred(),
            updateFunc                                                              = function (i, contexts, values) {
              return function (value) {
                contexts[i] = this, values[i] = arguments.length > 1 ? slice.call(arguments) : value, values === progressValues ? deferred.notifyWith(contexts, values) : --remaining || deferred.resolveWith(contexts, values)
              }
            };
        if (length > 1) for (progressValues = new Array(length), progressContexts = new Array(length), resolveContexts = new Array(length); i < length; i++) resolveValues[i] && jQuery.isFunction(resolveValues[i].promise) ? resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues)) : --remaining;
        return remaining || deferred.resolveWith(resolveContexts, resolveValues), deferred.promise()
      }
    });
    var readyList;
    jQuery.fn.ready = function (fn) {
      return jQuery.ready.promise().done(fn), this
    }, jQuery.extend({
      isReady:  !1, readyWait: 1, holdReady: function (hold) {
        hold ? jQuery.readyWait++ : jQuery.ready(!0)
      }, ready: function (wait) {
        (!0 === wait ? --jQuery.readyWait : jQuery.isReady) || (jQuery.isReady = !0, !0 !== wait && --jQuery.readyWait > 0 || (readyList.resolveWith(document, [jQuery]), jQuery.fn.triggerHandler && (jQuery(document).triggerHandler("ready"), jQuery(document).off("ready"))))
      }
    }), jQuery.ready.promise = function (obj) {
      return readyList || (readyList = jQuery.Deferred(), "complete" === document.readyState ? setTimeout(jQuery.ready) : (document.addEventListener("DOMContentLoaded", completed, !1), window.addEventListener("load", completed, !1))), readyList.promise(obj)
    }, jQuery.ready.promise();
    var access = jQuery.access = function (elems, fn, key, value, chainable, emptyGet, raw) {
      var i = 0, len = elems.length, bulk = null == key;
      if ("object" === jQuery.type(key)) {
        chainable = !0;
        for (i in key) jQuery.access(elems, fn, i, key[i], !0, emptyGet, raw)
      } else if (void 0 !== value && (chainable = !0, jQuery.isFunction(value) || (raw = !0), bulk && (raw ? (fn.call(elems, value), fn = null) : (bulk = fn, fn = function (elem, key, value) {
          return bulk.call(jQuery(elem), value)
        })), fn)) for (; i < len; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
      return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet
    };
    jQuery.acceptData = function (owner) {
      return 1 === owner.nodeType || 9 === owner.nodeType || !+owner.nodeType
    }, Data.uid = 1, Data.accepts = jQuery.acceptData, Data.prototype = {
      key:        function (owner) {
        if (!Data.accepts(owner)) return 0;
        var descriptor = {}, unlock = owner[this.expando];
        if (!unlock) {
          unlock = Data.uid++;
          try {
            descriptor[this.expando] = {value: unlock}, Object.defineProperties(owner, descriptor)
          } catch (e) {
            descriptor[this.expando] = unlock, jQuery.extend(owner, descriptor)
          }
        }
        return this.cache[unlock] || (this.cache[unlock] = {}), unlock
      }, set:     function (owner, data, value) {
        var prop, unlock = this.key(owner), cache = this.cache[unlock];
        if ("string" == typeof data) cache[data] = value; else if (jQuery.isEmptyObject(cache)) jQuery.extend(this.cache[unlock], data); else for (prop in data) cache[prop] = data[prop];
        return cache
      }, get:     function (owner, key) {
        var cache = this.cache[this.key(owner)];
        return void 0 === key ? cache : cache[key]
      }, access:  function (owner, key, value) {
        var stored;
        return void 0 === key || key && "string" == typeof key && void 0 === value ? (stored = this.get(owner, key), void 0 !== stored ? stored : this.get(owner, jQuery.camelCase(key))) : (this.set(owner, key, value), void 0 !== value ? value : key)
      }, remove:  function (owner, key) {
        var i, name, camel, unlock = this.key(owner), cache = this.cache[unlock];
        if (void 0 === key) this.cache[unlock] = {}; else {
          jQuery.isArray(key) ? name = key.concat(key.map(jQuery.camelCase)) : (camel = jQuery.camelCase(key), key in cache ? name = [key, camel] : (name = camel, name = name in cache ? [name] : name.match(rnotwhite) || [])), i = name.length;
          for (; i--;) delete cache[name[i]]
        }
      }, hasData: function (owner) {
        return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {})
      }, discard: function (owner) {
        owner[this.expando] && delete this.cache[owner[this.expando]]
      }
    };
    var data_priv = new Data, data_user = new Data, rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /([A-Z])/g;
    jQuery.extend({
      hasData:        function (elem) {
        return data_user.hasData(elem) || data_priv.hasData(elem)
      }, data:        function (elem, name, data) {
        return data_user.access(elem, name, data)
      }, removeData:  function (elem, name) {
        data_user.remove(elem, name)
      }, _data:       function (elem, name, data) {
        return data_priv.access(elem, name, data)
      }, _removeData: function (elem, name) {
        data_priv.remove(elem, name)
      }
    }), jQuery.fn.extend({
      data:          function (key, value) {
        var i, name, data, elem = this[0], attrs = elem && elem.attributes;
        if (void 0 === key) {
          if (this.length && (data = data_user.get(elem), 1 === elem.nodeType && !data_priv.get(elem, "hasDataAttrs"))) {
            for (i = attrs.length; i--;) attrs[i] && (name = attrs[i].name, 0 === name.indexOf("data-") && (name = jQuery.camelCase(name.slice(5)), dataAttr(elem, name, data[name])));
            data_priv.set(elem, "hasDataAttrs", !0)
          }
          return data
        }
        return "object" == typeof key ? this.each(function () {
          data_user.set(this, key)
        }) : access(this, function (value) {
          var data, camelKey = jQuery.camelCase(key);
          if (elem && void 0 === value) {
            if (void 0 !== (data = data_user.get(elem, key))) return data;
            if (void 0 !== (data = data_user.get(elem, camelKey))) return data;
            if (void 0 !== (data = dataAttr(elem, camelKey, void 0))) return data
          } else this.each(function () {
            var data = data_user.get(this, camelKey);
            data_user.set(this, camelKey, value), -1 !== key.indexOf("-") && void 0 !== data && data_user.set(this, key, value)
          })
        }, null, value, arguments.length > 1, null, !0)
      }, removeData: function (key) {
        return this.each(function () {
          data_user.remove(this, key)
        })
      }
    }), jQuery.extend({
      queue:          function (elem, type, data) {
        var queue;
        if (elem) return type = (type || "fx") + "queue", queue = data_priv.get(elem, type), data && (!queue || jQuery.isArray(data) ? queue = data_priv.access(elem, type, jQuery.makeArray(data)) : queue.push(data)), queue || []
      }, dequeue:     function (elem, type) {
        type                                                                 = type || "fx";
        var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(),
            hooks                                                            = jQuery._queueHooks(elem, type), next = function () {
              jQuery.dequeue(elem, type)
            };
        "inprogress" === fn && (fn = queue.shift(), startLength--), fn && ("fx" === type && queue.unshift("inprogress"), delete hooks.stop, fn.call(elem, next, hooks)), !startLength && hooks && hooks.empty.fire()
      }, _queueHooks: function (elem, type) {
        var key = type + "queueHooks";
        return data_priv.get(elem, key) || data_priv.access(elem, key, {
          empty: jQuery.Callbacks("once memory").add(function () {
            data_priv.remove(elem, [type + "queue", key])
          })
        })
      }
    }), jQuery.fn.extend({
      queue:         function (type, data) {
        var setter = 2;
        return "string" != typeof type && (data = type, type = "fx", setter--), arguments.length < setter ? jQuery.queue(this[0], type) : void 0 === data ? this : this.each(function () {
          var queue = jQuery.queue(this, type, data);
          jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type)
        })
      }, dequeue:    function (type) {
        return this.each(function () {
          jQuery.dequeue(this, type)
        })
      }, clearQueue: function (type) {
        return this.queue(type || "fx", [])
      }, promise:    function (type, obj) {
        var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {
          --count || defer.resolveWith(elements, [elements])
        };
        for ("string" != typeof type && (obj = type, type = void 0), type = type || "fx"; i--;) (tmp = data_priv.get(elements[i], type + "queueHooks")) && tmp.empty && (count++, tmp.empty.add(resolve));
        return resolve(), defer.promise(obj)
      }
    });
    var pnum                                                     = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        cssExpand = ["Top", "Right", "Bottom", "Left"], isHidden = function (elem, el) {
          return elem = el || elem, "none" === jQuery.css(elem, "display") || !jQuery.contains(elem.ownerDocument, elem)
        }, rcheckableType                                        = /^(?:checkbox|radio)$/i;
    !function () {
      var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement("div")),
          input                                             = document.createElement("input");
      input.setAttribute("type", "radio"), input.setAttribute("checked", "checked"), input.setAttribute("name", "t"), div.appendChild(input), support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked, div.innerHTML = "<textarea>x</textarea>", support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue
    }();
    support.focusinBubbles                                              = "onfocusin" in window;
    var rkeyEvent                                                       = /^key/, rmouseEvent                                 = /^(?:mouse|pointer|contextmenu)|click/,
        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
    jQuery.event = {
      global:     {},
      add:        function (elem, types, handler, data, selector) {
        var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType,
            elemData = data_priv.get(elem);
        if (elemData) for (handler.handler && (handleObjIn = handler, handler = handleObjIn.handler, selector = handleObjIn.selector), handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = {}), (eventHandle = elemData.handle) || (eventHandle = elemData.handle = function (e) {
          return void 0 !== jQuery && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : void 0
        }), types = (types || "").match(rnotwhite) || [""], t = types.length; t--;) tmp = rtypenamespace.exec(types[t]) || [], type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type && (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, special = jQuery.event.special[type] || {}, handleObj = jQuery.extend({
          type:         type,
          origType:     origType,
          data:         data,
          handler:      handler,
          guid:         handler.guid,
          selector:     selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace:    namespaces.join(".")
        }, handleObjIn), (handlers = events[type]) || (handlers = events[type] = [], handlers.delegateCount = 0, special.setup && !1 !== special.setup.call(elem, data, namespaces, eventHandle) || elem.addEventListener && elem.addEventListener(type, eventHandle, !1)), special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)), selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj), jQuery.event.global[type] = !0)
      },
      remove:     function (elem, types, handler, selector, mappedTypes) {
        var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType,
            elemData = data_priv.hasData(elem) && data_priv.get(elem);
        if (elemData && (events = elemData.events)) {
          for (types = (types || "").match(rnotwhite) || [""], t = types.length; t--;) if (tmp = rtypenamespace.exec(types[t]) || [], type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type) {
            for (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, handlers = events[type] || [], tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), origCount = j = handlers.length; j--;) handleObj = handlers[j], !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
            origCount && !handlers.length && (special.teardown && !1 !== special.teardown.call(elem, namespaces, elemData.handle) || jQuery.removeEvent(elem, type, elemData.handle), delete events[type])
          } else for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
          jQuery.isEmptyObject(events) && (delete elemData.handle, data_priv.remove(elem, "events"))
        }
      },
      trigger:    function (event, data, elem, onlyHandlers) {
        var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document],
            type                                                        = hasOwn.call(event, "type") ? event.type : event,
            namespaces                                                  = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
        if (cur = tmp = elem = elem || document, 3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (type.indexOf(".") >= 0 && (namespaces = type.split("."), type = namespaces.shift(), namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event), event.isTrigger = onlyHandlers ? 2 : 3, event.namespace = namespaces.join("."), event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, event.result = void 0, event.target || (event.target = elem), data = null == data ? [event] : jQuery.makeArray(data, [event]), special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || !1 !== special.trigger.apply(elem, data))) {
          if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
            for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), tmp = cur;
            tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window)
          }
          for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped();) event.type = i > 1 ? bubbleType : special.bindType || type, handle = (data_priv.get(cur, "events") || {})[event.type] && data_priv.get(cur, "handle"), handle && handle.apply(cur, data), (handle = ontype && cur[ontype]) && handle.apply && jQuery.acceptData(cur) && (event.result = handle.apply(cur, data), !1 === event.result && event.preventDefault());
          return event.type = type, onlyHandlers || event.isDefaultPrevented() || special._default && !1 !== special._default.apply(eventPath.pop(), data) || !jQuery.acceptData(elem) || ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem) && (tmp = elem[ontype], tmp && (elem[ontype] = null), jQuery.event.triggered = type, elem[type](), jQuery.event.triggered = void 0, tmp && (elem[ontype] = tmp)), event.result
        }
      },
      dispatch:   function (event) {
        event                                                      = jQuery.event.fix(event);
        var i, j, ret, matched, handleObj, handlerQueue = [], args = slice.call(arguments),
            handlers                                               = (data_priv.get(this, "events") || {})[event.type] || [],
            special                                                = jQuery.event.special[event.type] || {};
        if (args[0] = event, event.delegateTarget = this, !special.preDispatch || !1 !== special.preDispatch.call(this, event)) {
          for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped();) for (event.currentTarget = matched.elem, j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped();) event.namespace_re && !event.namespace_re.test(handleObj.namespace) || (event.handleObj = handleObj, event.data = handleObj.data, void 0 !== (ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args)) && !1 === (event.result = ret) && (event.preventDefault(), event.stopPropagation()));
          return special.postDispatch && special.postDispatch.call(this, event), event.result
        }
      },
      handlers:   function (event, handlers) {
        var i, matches, sel, handleObj, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
        if (delegateCount && cur.nodeType && (!event.button || "click" !== event.type)) for (; cur !== this; cur = cur.parentNode || this) if (!0 !== cur.disabled || "click" !== event.type) {
          for (matches = [], i = 0; i < delegateCount; i++) handleObj = handlers[i], sel = handleObj.selector + " ", void 0 === matches[sel] && (matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length), matches[sel] && matches.push(handleObj);
          matches.length && handlerQueue.push({elem: cur, handlers: matches})
        }
        return delegateCount < handlers.length && handlerQueue.push({
          elem:     this,
          handlers: handlers.slice(delegateCount)
        }), handlerQueue
      },
      props:      "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
      fixHooks:   {},
      keyHooks:   {
        props: "char charCode key keyCode".split(" "), filter: function (event, original) {
          return null == event.which && (event.which = null != original.charCode ? original.charCode : original.keyCode), event
        }
      },
      mouseHooks: {
        props:  "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
        filter: function (event, original) {
          var eventDoc, doc, body, button = original.button;
          return null == event.pageX && null != original.clientX && (eventDoc = event.target.ownerDocument || document, doc = eventDoc.documentElement, body = eventDoc.body, event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0), event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)), event.which || void 0 === button || (event.which = 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0), event
        }
      },
      fix:        function (event) {
        if (event[jQuery.expando]) return event;
        var i, prop, copy, type = event.type, originalEvent = event, fixHook = this.fixHooks[type];
        for (fixHook || (this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}), copy = fixHook.props ? this.props.concat(fixHook.props) : this.props, event = new jQuery.Event(originalEvent), i = copy.length; i--;) prop = copy[i], event[prop] = originalEvent[prop];
        return event.target || (event.target = document), 3 === event.target.nodeType && (event.target = event.target.parentNode), fixHook.filter ? fixHook.filter(event, originalEvent) : event
      },
      special:    {
        load:            {noBubble: !0}, focus: {
          trigger:         function () {
            if (this !== safeActiveElement() && this.focus) return this.focus(), !1
          }, delegateType: "focusin"
        }, blur:         {
          trigger:         function () {
            if (this === safeActiveElement() && this.blur) return this.blur(), !1
          }, delegateType: "focusout"
        }, click:        {
          trigger:     function () {
            if ("checkbox" === this.type && this.click && jQuery.nodeName(this, "input")) return this.click(), !1
          }, _default: function (event) {
            return jQuery.nodeName(event.target, "a")
          }
        }, beforeunload: {
          postDispatch: function (event) {
            void 0 !== event.result && event.originalEvent && (event.originalEvent.returnValue = event.result)
          }
        }
      },
      simulate:   function (type, elem, event, bubble) {
        var e = jQuery.extend(new jQuery.Event, event, {type: type, isSimulated: !0, originalEvent: {}});
        bubble ? jQuery.event.trigger(e, null, elem) : jQuery.event.dispatch.call(elem, e), e.isDefaultPrevented() && event.preventDefault()
      }
    }, jQuery.removeEvent = function (elem, type, handle) {
      elem.removeEventListener && elem.removeEventListener(type, handle, !1)
    }, jQuery.Event = function (src, props) {
      if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
      src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || void 0 === src.defaultPrevented && !1 === src.returnValue ? returnTrue : returnFalse) : this.type = src, props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || jQuery.now(), this[jQuery.expando] = !0
    }, jQuery.Event.prototype = {
      isDefaultPrevented:            returnFalse,
      isPropagationStopped:          returnFalse,
      isImmediatePropagationStopped: returnFalse,
      preventDefault:                function () {
        var e = this.originalEvent;
        this.isDefaultPrevented = returnTrue, e && e.preventDefault && e.preventDefault()
      },
      stopPropagation:               function () {
        var e = this.originalEvent;
        this.isPropagationStopped = returnTrue, e && e.stopPropagation && e.stopPropagation()
      },
      stopImmediatePropagation:      function () {
        var e = this.originalEvent;
        this.isImmediatePropagationStopped = returnTrue, e && e.stopImmediatePropagation && e.stopImmediatePropagation(), this.stopPropagation()
      }
    }, jQuery.each({
      mouseenter:   "mouseover",
      mouseleave:   "mouseout",
      pointerenter: "pointerover",
      pointerleave: "pointerout"
    }, function (orig, fix) {
      jQuery.event.special[orig] = {
        delegateType: fix, bindType: fix, handle: function (event) {
          var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
          return related && (related === target || jQuery.contains(target, related)) || (event.type = handleObj.origType, ret = handleObj.handler.apply(this, arguments), event.type = fix), ret
        }
      }
    }), support.focusinBubbles || jQuery.each({focus: "focusin", blur: "focusout"}, function (orig, fix) {
      var handler               = function (event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), !0)
      };
      jQuery.event.special[fix] = {
        setup:       function () {
          var doc = this.ownerDocument || this, attaches = data_priv.access(doc, fix);
          attaches || doc.addEventListener(orig, handler, !0), data_priv.access(doc, fix, (attaches || 0) + 1)
        }, teardown: function () {
          var doc = this.ownerDocument || this, attaches = data_priv.access(doc, fix) - 1;
          attaches ? data_priv.access(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), data_priv.remove(doc, fix))
        }
      }
    }), jQuery.fn.extend({
      on:                function (types, selector, data, fn, one) {
        var origFn, type;
        if ("object" == typeof types) {
          "string" != typeof selector && (data = data || selector, selector = void 0);
          for (type in types) this.on(type, selector, data, types[type], one);
          return this
        }
        if (null == data && null == fn ? (fn = selector, data = selector = void 0) : null == fn && ("string" == typeof selector ? (fn = data, data = void 0) : (fn = data, data = selector, selector = void 0)), !1 === fn) fn = returnFalse; else if (!fn) return this;
        return 1 === one && (origFn = fn, fn = function (event) {
          return jQuery().off(event), origFn.apply(this, arguments)
        }, fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)), this.each(function () {
          jQuery.event.add(this, types, fn, data, selector)
        })
      }, one:            function (types, selector, data, fn) {
        return this.on(types, selector, data, fn, 1)
      }, off:            function (types, selector, fn) {
        var handleObj, type;
        if (types && types.preventDefault && types.handleObj) return handleObj = types.handleObj, jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), this;
        if ("object" == typeof types) {
          for (type in types) this.off(type, selector, types[type]);
          return this
        }
        return !1 !== selector && "function" != typeof selector || (fn = selector, selector = void 0), !1 === fn && (fn = returnFalse), this.each(function () {
          jQuery.event.remove(this, types, fn, selector)
        })
      }, trigger:        function (type, data) {
        return this.each(function () {
          jQuery.event.trigger(type, data, this)
        })
      }, triggerHandler: function (type, data) {
        var elem = this[0];
        if (elem) return jQuery.event.trigger(type, data, elem, !0)
      }
    });
    var rxhtmlTag                                                                                             = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        rtagName                                                                                              = /<([\w:]+)/, rhtml                                                                         = /<|&#?\w+;/, rnoInnerhtml = /<(?:script|style|link)/i,
        rchecked                                                                                              = /checked\s*(?:[^=]|=\s*.checked.)/i, rscriptType                                           = /^$|\/(?:java|ecma)script/i,
        rscriptTypeMasked = /^true\/(.*)/, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, wrapMap = {
          option:   [1, "<select multiple='multiple'>", "</select>"],
          thead:    [1, "<table>", "</table>"],
          col:      [2, "<table><colgroup>", "</colgroup></table>"],
          tr:       [2, "<table><tbody>", "</tbody></table>"],
          td:       [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""]
        };
    wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, wrapMap.th = wrapMap.td, jQuery.extend({
      clone:         function (elem, dataAndEvents, deepDataAndEvents) {
        var i, l, srcElements, destElements, clone = elem.cloneNode(!0),
            inPage                                 = jQuery.contains(elem.ownerDocument, elem);
        if (!(support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem))) for (destElements = getAll(clone), srcElements = getAll(elem), i = 0, l = srcElements.length; i < l; i++) fixInput(srcElements[i], destElements[i]);
        if (dataAndEvents) if (deepDataAndEvents) for (srcElements = srcElements || getAll(elem), destElements = destElements || getAll(clone), i = 0, l = srcElements.length; i < l; i++) cloneCopyEvent(srcElements[i], destElements[i]); else cloneCopyEvent(elem, clone);
        return destElements = getAll(clone, "script"), destElements.length > 0 && setGlobalEval(destElements, !inPage && getAll(elem, "script")), clone
      },
      buildFragment: function (elems, context, scripts, selection) {
        for (var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length; i < l; i++) if ((elem = elems[i]) || 0 === elem) if ("object" === jQuery.type(elem)) jQuery.merge(nodes, elem.nodeType ? [elem] : elem); else if (rhtml.test(elem)) {
          for (tmp = tmp || fragment.appendChild(context.createElement("div")), tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase(), wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2], j = wrap[0]; j--;) tmp = tmp.lastChild;
          jQuery.merge(nodes, tmp.childNodes), tmp = fragment.firstChild, tmp.textContent = ""
        } else nodes.push(context.createTextNode(elem));
        for (fragment.textContent = "", i = 0; elem = nodes[i++];) if ((!selection || -1 === jQuery.inArray(elem, selection)) && (contains = jQuery.contains(elem.ownerDocument, elem), tmp = getAll(fragment.appendChild(elem), "script"), contains && setGlobalEval(tmp), scripts)) for (j = 0; elem = tmp[j++];) rscriptType.test(elem.type || "") && scripts.push(elem);
        return fragment
      },
      cleanData:     function (elems) {
        for (var data, elem, type, key, special = jQuery.event.special, i = 0; void 0 !== (elem = elems[i]); i++) {
          if (jQuery.acceptData(elem) && (key = elem[data_priv.expando]) && (data = data_priv.cache[key])) {
            if (data.events) for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
            data_priv.cache[key] && delete data_priv.cache[key]
          }
          delete data_user.cache[elem[data_user.expando]]
        }
      }
    }), jQuery.fn.extend({
      text:           function (value) {
        return access(this, function (value) {
          return void 0 === value ? jQuery.text(this) : this.empty().each(function () {
            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = value)
          })
        }, null, value, arguments.length)
      }, append:      function () {
        return this.domManip(arguments, function (elem) {
          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
            manipulationTarget(this, elem).appendChild(elem)
          }
        })
      }, prepend:     function () {
        return this.domManip(arguments, function (elem) {
          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
            var target = manipulationTarget(this, elem);
            target.insertBefore(elem, target.firstChild)
          }
        })
      }, before:      function () {
        return this.domManip(arguments, function (elem) {
          this.parentNode && this.parentNode.insertBefore(elem, this)
        })
      }, after:       function () {
        return this.domManip(arguments, function (elem) {
          this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling)
        })
      }, remove:      function (selector, keepData) {
        for (var elem, elems = selector ? jQuery.filter(selector, this) : this, i = 0; null != (elem = elems[i]); i++) keepData || 1 !== elem.nodeType || jQuery.cleanData(getAll(elem)), elem.parentNode && (keepData && jQuery.contains(elem.ownerDocument, elem) && setGlobalEval(getAll(elem, "script")), elem.parentNode.removeChild(elem));
        return this
      }, empty:       function () {
        for (var elem, i = 0; null != (elem = this[i]); i++) 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), elem.textContent = "");
        return this
      }, clone:       function (dataAndEvents, deepDataAndEvents) {
        return dataAndEvents = null != dataAndEvents && dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, this.map(function () {
          return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
        })
      }, html:        function (value) {
        return access(this, function (value) {
          var elem = this[0] || {}, i = 0, l = this.length;
          if (void 0 === value && 1 === elem.nodeType) return elem.innerHTML;
          if ("string" == typeof value && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
            value = value.replace(rxhtmlTag, "<$1></$2>");
            try {
              for (; i < l; i++) elem = this[i] || {}, 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), elem.innerHTML = value);
              elem = 0
            } catch (e) {
            }
          }
          elem && this.empty().append(value)
        }, null, value, arguments.length)
      }, replaceWith: function () {
        var arg = arguments[0];
        return this.domManip(arguments, function (elem) {
          arg = this.parentNode, jQuery.cleanData(getAll(this)), arg && arg.replaceChild(elem, this)
        }), arg && (arg.length || arg.nodeType) ? this : this.remove()
      }, detach:      function (selector) {
        return this.remove(selector, !0)
      }, domManip:    function (args, callback) {
        args                                                                                              = concat.apply([], args);
        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = this.length, set = this, iNoClone = l - 1,
            value                                                                                         = args[0], isFunction = jQuery.isFunction(value);
        if (isFunction || l > 1 && "string" == typeof value && !support.checkClone && rchecked.test(value)) return this.each(function (index) {
          var self = set.eq(index);
          isFunction && (args[0] = value.call(this, index, self.html())), self.domManip(args, callback)
        });
        if (l && (fragment = jQuery.buildFragment(args, this[0].ownerDocument, !1, this), first = fragment.firstChild, 1 === fragment.childNodes.length && (fragment = first), first)) {
          for (scripts = jQuery.map(getAll(fragment, "script"), disableScript), hasScripts = scripts.length; i < l; i++) node = fragment, i !== iNoClone && (node = jQuery.clone(node, !0, !0), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), callback.call(this[i], node, i);
          if (hasScripts) for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), i = 0; i < hasScripts; i++) node = scripts[i], rscriptType.test(node.type || "") && !data_priv.access(node, "globalEval") && jQuery.contains(doc, node) && (node.src ? jQuery._evalUrl && jQuery._evalUrl(node.src) : jQuery.globalEval(node.textContent.replace(rcleanScript, "")))
        }
        return this
      }
    }), jQuery.each({
      appendTo:     "append",
      prependTo:    "prepend",
      insertBefore: "before",
      insertAfter:  "after",
      replaceAll:   "replaceWith"
    }, function (name, original) {
      jQuery.fn[name] = function (selector) {
        for (var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0; i <= last; i++) elems = i === last ? this : this.clone(!0), jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
        return this.pushStack(ret)
      }
    });
    var iframe, elemdisplay = {}, rmargin = /^margin/, rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i"),
        getStyles                                                = function (elem) {
          return elem.ownerDocument.defaultView.getComputedStyle(elem, null)
        };
    !function () {
      function computePixelPositionAndBoxSizingReliable() {
        div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", div.innerHTML = "", docElem.appendChild(container);
        var divStyle = window.getComputedStyle(div, null);
        pixelPositionVal = "1%" !== divStyle.top, boxSizingReliableVal = "4px" === divStyle.width, docElem.removeChild(container)
      }

      var pixelPositionVal, boxSizingReliableVal, docElem = document.documentElement,
          container                                       = document.createElement("div"),
          div                                             = document.createElement("div");
      div.style && (div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", support.clearCloneStyle = "content-box" === div.style.backgroundClip, container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", container.appendChild(div), window.getComputedStyle && jQuery.extend(support, {
        pixelPosition:       function () {
          return computePixelPositionAndBoxSizingReliable(), pixelPositionVal
        },
        boxSizingReliable:   function () {
          return null == boxSizingReliableVal && computePixelPositionAndBoxSizingReliable(), boxSizingReliableVal
        },
        reliableMarginRight: function () {
          var ret, marginDiv = div.appendChild(document.createElement("div"));
          return marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", marginDiv.style.marginRight = marginDiv.style.width = "0", div.style.width = "1px", docElem.appendChild(container), ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight), docElem.removeChild(container), ret
        }
      }))
    }(), jQuery.swap = function (elem, options, callback, args) {
      var ret, name, old = {};
      for (name in options) old[name] = elem.style[name], elem.style[name] = options[name];
      ret = callback.apply(elem, args || []);
      for (name in options) elem.style[name] = old[name];
      return ret
    };
    var rdisplayswap                                                              = /^(none|table(?!-c[ea]).+)/, rnumsplit                     = new RegExp("^(" + pnum + ")(.*)$", "i"),
        rrelNum                                                                   = new RegExp("^([+-])=(" + pnum + ")", "i"),
        cssShow                                                                   = {position: "absolute", visibility: "hidden", display: "block"},
        cssNormalTransform = {letterSpacing: "0", fontWeight: "400"}, cssPrefixes = ["Webkit", "O", "Moz", "ms"];
    jQuery.extend({
      cssHooks:  {
        opacity: {
          get: function (elem, computed) {
            if (computed) {
              var ret = curCSS(elem, "opacity");
              return "" === ret ? "1" : ret
            }
          }
        }
      },
      cssNumber: {
        columnCount: !0,
        fillOpacity: !0,
        flexGrow:    !0,
        flexShrink:  !0,
        fontWeight:  !0,
        lineHeight:  !0,
        opacity:     !0,
        order:       !0,
        orphans:     !0,
        widows:      !0,
        zIndex:      !0,
        zoom:        !0
      },
      cssProps:  {float: "cssFloat"},
      style:     function (elem, name, value, extra) {
        if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
          var ret, type, hooks, origName = jQuery.camelCase(name), style = elem.style;
          if (name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], void 0 === value) return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
          type = typeof value, "string" === type && (ret = rrelNum.exec(value)) && (value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name)), type = "number"), null != value && value === value && ("number" !== type || jQuery.cssNumber[origName] || (value += "px"), support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra)) || (style[name] = value))
        }
      },
      css:       function (elem, name, extra, styles) {
        var val, num, hooks, origName = jQuery.camelCase(name);
        return name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName],
        hooks && "get" in hooks && (val = hooks.get(elem, !0, extra)), void 0 === val && (val = curCSS(elem, name, styles)), "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]), "" === extra || extra ? (num = parseFloat(val), !0 === extra || jQuery.isNumeric(num) ? num || 0 : val) : val
      }
    }), jQuery.each(["height", "width"], function (i, name) {
      jQuery.cssHooks[name] = {
        get:    function (elem, computed, extra) {
          if (computed) return rdisplayswap.test(jQuery.css(elem, "display")) && 0 === elem.offsetWidth ? jQuery.swap(elem, cssShow, function () {
            return getWidthOrHeight(elem, name, extra)
          }) : getWidthOrHeight(elem, name, extra)
        }, set: function (elem, value, extra) {
          var styles = extra && getStyles(elem);
          return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, "border-box" === jQuery.css(elem, "boxSizing", !1, styles), styles) : 0)
        }
      }
    }), jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function (elem, computed) {
      if (computed) return jQuery.swap(elem, {display: "inline-block"}, curCSS, [elem, "marginRight"])
    }), jQuery.each({margin: "", padding: "", border: "Width"}, function (prefix, suffix) {
      jQuery.cssHooks[prefix + suffix] = {
        expand: function (value) {
          for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [value]; i < 4; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
          return expanded
        }
      }, rmargin.test(prefix) || (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber)
    }), jQuery.fn.extend({
      css:       function (name, value) {
        return access(this, function (elem, name, value) {
          var styles, len, map = {}, i = 0;
          if (jQuery.isArray(name)) {
            for (styles = getStyles(elem), len = name.length; i < len; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
            return map
          }
          return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
        }, name, value, arguments.length > 1)
      }, show:   function () {
        return showHide(this, !0)
      }, hide:   function () {
        return showHide(this)
      }, toggle: function (state) {
        return "boolean" == typeof state ? state ? this.show() : this.hide() : this.each(function () {
          isHidden(this) ? jQuery(this).show() : jQuery(this).hide()
        })
      }
    }), jQuery.Tween = Tween, Tween.prototype = {
      constructor: Tween,
      init:        function (elem, options, prop, end, easing, unit) {
        this.elem = elem, this.prop = prop, this.easing = easing || "swing", this.options = options, this.start = this.now = this.cur(), this.end = end, this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px")
      },
      cur:         function () {
        var hooks = Tween.propHooks[this.prop];
        return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)
      },
      run:         function (percent) {
        var eased, hooks = Tween.propHooks[this.prop];
        return this.options.duration ? this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : this.pos = eased = percent, this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this), this
      }
    }, Tween.prototype.init.prototype = Tween.prototype, Tween.propHooks = {
      _default: {
        get:    function (tween) {
          var result;
          return null == tween.elem[tween.prop] || tween.elem.style && null != tween.elem.style[tween.prop] ? (result = jQuery.css(tween.elem, tween.prop, ""), result && "auto" !== result ? result : 0) : tween.elem[tween.prop]
        }, set: function (tween) {
          jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : tween.elem.style && (null != tween.elem.style[jQuery.cssProps[tween.prop]] || jQuery.cssHooks[tween.prop]) ? jQuery.style(tween.elem, tween.prop, tween.now + tween.unit) : tween.elem[tween.prop] = tween.now
        }
      }
    }, Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
      set: function (tween) {
        tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now)
      }
    }, jQuery.easing = {
      linear:   function (p) {
        return p
      }, swing: function (p) {
        return .5 - Math.cos(p * Math.PI) / 2
      }
    }, jQuery.fx = Tween.prototype.init, jQuery.fx.step = {};
    var fxNow, timerId, rfxtypes                                                = /^(?:toggle|show|hide)$/,
        rfxnum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"), rrun = /queueHooks$/,
        animationPrefilters                                                     = [defaultPrefilter], tweeners = {
          "*": [function (prop, value) {
            var tween = this.createTween(prop, value), target = tween.cur(), parts = rfxnum.exec(value),
                unit                                                               = parts && parts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
                start                                                              = (jQuery.cssNumber[prop] || "px" !== unit && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),
                scale                                                              = 1, maxIterations = 20;
            if (start && start[3] !== unit) {
              unit = unit || start[3], parts = parts || [], start = +target || 1;
              do {
                scale = scale || ".5", start /= scale, jQuery.style(tween.elem, prop, start + unit)
              } while (scale !== (scale = tween.cur() / target) && 1 !== scale && --maxIterations)
            }
            return parts && (start = tween.start = +start || +target || 0, tween.unit = unit, tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2]), tween
          }]
        };
    jQuery.Animation = jQuery.extend(Animation, {
      tweener:      function (props, callback) {
        jQuery.isFunction(props) ? (callback = props, props = ["*"]) : props = props.split(" ");
        for (var prop, index = 0, length = props.length; index < length; index++) prop = props[index], tweeners[prop] = tweeners[prop] || [], tweeners[prop].unshift(callback)
      }, prefilter: function (callback, prepend) {
        prepend ? animationPrefilters.unshift(callback) : animationPrefilters.push(callback)
      }
    }), jQuery.speed = function (speed, easing, fn) {
      var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
        duration: speed,
        easing:   fn && easing || easing && !jQuery.isFunction(easing) && easing
      };
      return opt.duration = jQuery.fx.off ? 0 : "number" == typeof opt.duration ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default, null != opt.queue && !0 !== opt.queue || (opt.queue = "fx"), opt.old = opt.complete, opt.complete = function () {
        jQuery.isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue)
      }, opt
    }, jQuery.fn.extend({
      fadeTo:     function (speed, to, easing, callback) {
        return this.filter(isHidden).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback)
      }, animate: function (prop, speed, easing, callback) {
        var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback),
            doAnimation                                = function () {
              var anim = Animation(this, jQuery.extend({}, prop), optall);
              (empty || data_priv.get(this, "finish")) && anim.stop(!0)
            };
        return doAnimation.finish = doAnimation, empty || !1 === optall.queue ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
      }, stop:    function (type, clearQueue, gotoEnd) {
        var stopQueue = function (hooks) {
          var stop = hooks.stop;
          delete hooks.stop, stop(gotoEnd)
        };
        return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, type = void 0), clearQueue && !1 !== type && this.queue(type || "fx", []), this.each(function () {
          var dequeue = !0, index = null != type && type + "queueHooks", timers = jQuery.timers,
              data                                                              = data_priv.get(this);
          if (index) data[index] && data[index].stop && stopQueue(data[index]); else for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
          for (index = timers.length; index--;) timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), dequeue = !1, timers.splice(index, 1));
          !dequeue && gotoEnd || jQuery.dequeue(this, type)
        })
      }, finish:  function (type) {
        return !1 !== type && (type = type || "fx"), this.each(function () {
          var index, data = data_priv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"],
              timers                                                                 = jQuery.timers, length = queue ? queue.length : 0;
          for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), index = timers.length; index--;) timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), timers.splice(index, 1));
          for (index = 0; index < length; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
          delete data.finish
        })
      }
    }), jQuery.each(["toggle", "show", "hide"], function (i, name) {
      var cssFn       = jQuery.fn[name];
      jQuery.fn[name] = function (speed, easing, callback) {
        return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback)
      }
    }), jQuery.each({
      slideDown:   genFx("show"),
      slideUp:     genFx("hide"),
      slideToggle: genFx("toggle"),
      fadeIn:      {opacity: "show"},
      fadeOut:     {opacity: "hide"},
      fadeToggle:  {opacity: "toggle"}
    }, function (name, props) {
      jQuery.fn[name] = function (speed, easing, callback) {
        return this.animate(props, speed, easing, callback)
      }
    }), jQuery.timers = [], jQuery.fx.tick = function () {
      var timer, i = 0, timers = jQuery.timers;
      for (fxNow = jQuery.now(); i < timers.length; i++) (timer = timers[i])() || timers[i] !== timer || timers.splice(i--, 1);
      timers.length || jQuery.fx.stop(), fxNow = void 0
    }, jQuery.fx.timer = function (timer) {
      jQuery.timers.push(timer), timer() ? jQuery.fx.start() : jQuery.timers.pop()
    }, jQuery.fx.interval = 13, jQuery.fx.start = function () {
      timerId || (timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval))
    }, jQuery.fx.stop = function () {
      clearInterval(timerId), timerId = null
    }, jQuery.fx.speeds = {slow: 600, fast: 200, _default: 400}, jQuery.fn.delay = function (time, type) {
      return time = jQuery.fx ? jQuery.fx.speeds[time] || time : time, type = type || "fx", this.queue(type, function (next, hooks) {
        var timeout = setTimeout(next, time);
        hooks.stop  = function () {
          clearTimeout(timeout)
        }
      })
    }, function () {
      var input = document.createElement("input"), select = document.createElement("select"),
          opt                                             = select.appendChild(document.createElement("option"));
      input.type = "checkbox", support.checkOn = "" !== input.value, support.optSelected = opt.selected, select.disabled = !0, support.optDisabled = !opt.disabled, input = document.createElement("input"), input.value = "t", input.type = "radio", support.radioValue = "t" === input.value
    }();
    var boolHook, attrHandle = jQuery.expr.attrHandle;
    jQuery.fn.extend({
      attr:          function (name, value) {
        return access(this, jQuery.attr, name, value, arguments.length > 1)
      }, removeAttr: function (name) {
        return this.each(function () {
          jQuery.removeAttr(this, name)
        })
      }
    }), jQuery.extend({
      attr:          function (elem, name, value) {
        var hooks, ret, nType = elem.nodeType;
        if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return void 0 === elem.getAttribute ? jQuery.prop(elem, name, value) : (1 === nType && jQuery.isXMLDoc(elem) || (name = name.toLowerCase(), hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : void 0)), void 0 === value ? hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : (ret = jQuery.find.attr(elem, name), null == ret ? void 0 : ret) : null !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem.setAttribute(name, value + ""), value) : void jQuery.removeAttr(elem, name))
      }, removeAttr: function (elem, value) {
        var name, propName, i = 0, attrNames = value && value.match(rnotwhite);
        if (attrNames && 1 === elem.nodeType) for (; name = attrNames[i++];) propName = jQuery.propFix[name] || name, jQuery.expr.match.bool.test(name) && (elem[propName] = !1), elem.removeAttribute(name)
      }, attrHooks:  {
        type: {
          set: function (elem, value) {
            if (!support.radioValue && "radio" === value && jQuery.nodeName(elem, "input")) {
              var val = elem.value;
              return elem.setAttribute("type", value), val && (elem.value = val), value
            }
          }
        }
      }
    }), boolHook = {
      set: function (elem, value, name) {
        return !1 === value ? jQuery.removeAttr(elem, name) : elem.setAttribute(name, name), name
      }
    }, jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
      var getter       = attrHandle[name] || jQuery.find.attr;
      attrHandle[name] = function (elem, name, isXML) {
        var ret, handle;
        return isXML || (handle = attrHandle[name], attrHandle[name] = ret, ret = null != getter(elem, name, isXML) ? name.toLowerCase() : null, attrHandle[name] = handle), ret
      }
    });
    var rfocusable = /^(?:input|select|textarea|button)$/i;
    jQuery.fn.extend({
      prop:          function (name, value) {
        return access(this, jQuery.prop, name, value, arguments.length > 1)
      }, removeProp: function (name) {
        return this.each(function () {
          delete this[jQuery.propFix[name] || name]
        })
      }
    }), jQuery.extend({
      propFix:      {for: "htmlFor", class: "className"}, prop: function (elem, name, value) {
        var ret, hooks, notxml, nType = elem.nodeType;
        if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return notxml = 1 !== nType || !jQuery.isXMLDoc(elem), notxml && (name = jQuery.propFix[name] || name, hooks = jQuery.propHooks[name]), void 0 !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name]
      }, propHooks: {
        tabIndex: {
          get: function (elem) {
            return elem.hasAttribute("tabindex") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1
          }
        }
      }
    }), support.optSelected || (jQuery.propHooks.selected = {
      get: function (elem) {
        var parent = elem.parentNode;
        return parent && parent.parentNode && parent.parentNode.selectedIndex, null
      }
    }), jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
      jQuery.propFix[this.toLowerCase()] = this
    });
    var rclass = /[\t\r\n\f]/g;
    jQuery.fn.extend({
      addClass:       function (value) {
        var classes, elem, cur, clazz, j, finalValue, proceed = "string" == typeof value && value, i = 0,
            len                                                                                      = this.length;
        if (jQuery.isFunction(value)) return this.each(function (j) {
          jQuery(this).addClass(value.call(this, j, this.className))
        });
        if (proceed) for (classes = (value || "").match(rnotwhite) || []; i < len; i++) if (elem = this[i], cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : " ")) {
          for (j = 0; clazz = classes[j++];) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
          finalValue = jQuery.trim(cur), elem.className !== finalValue && (elem.className = finalValue)
        }
        return this
      }, removeClass: function (value) {
        var classes, elem, cur, clazz, j, finalValue,
            proceed = 0 === arguments.length || "string" == typeof value && value, i = 0, len = this.length;
        if (jQuery.isFunction(value)) return this.each(function (j) {
          jQuery(this).removeClass(value.call(this, j, this.className))
        });
        if (proceed) for (classes = (value || "").match(rnotwhite) || []; i < len; i++) if (elem = this[i], cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : "")) {
          for (j = 0; clazz = classes[j++];) for (; cur.indexOf(" " + clazz + " ") >= 0;) cur = cur.replace(" " + clazz + " ", " ");
          finalValue = value ? jQuery.trim(cur) : "", elem.className !== finalValue && (elem.className = finalValue)
        }
        return this
      }, toggleClass: function (value, stateVal) {
        var type = typeof value;
        return "boolean" == typeof stateVal && "string" === type ? stateVal ? this.addClass(value) : this.removeClass(value) : jQuery.isFunction(value) ? this.each(function (i) {
          jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal)
        }) : this.each(function () {
          if ("string" === type) for (var className, i = 0, self = jQuery(this), classNames = value.match(rnotwhite) || []; className = classNames[i++];) self.hasClass(className) ? self.removeClass(className) : self.addClass(className); else "undefined" !== type && "boolean" !== type || (this.className && data_priv.set(this, "__className__", this.className), this.className = this.className || !1 === value ? "" : data_priv.get(this, "__className__") || "")
        })
      }, hasClass:    function (selector) {
        for (var className = " " + selector + " ", i = 0, l = this.length; i < l; i++) if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) return !0;
        return !1
      }
    });
    var rreturn = /\r/g;
    jQuery.fn.extend({
      val: function (value) {
        var hooks, ret, isFunction, elem = this[0];
        {
          if (arguments.length) return isFunction = jQuery.isFunction(value), this.each(function (i) {
            var val;
            1 === this.nodeType && (val = isFunction ? value.call(this, i, jQuery(this).val()) : value, null == val ? val = "" : "number" == typeof val ? val += "" : jQuery.isArray(val) && (val = jQuery.map(val, function (value) {
              return null == value ? "" : value + ""
            })), (hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]) && "set" in hooks && void 0 !== hooks.set(this, val, "value") || (this.value = val))
          });
          if (elem) return (hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]) && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value")) ? ret : (ret = elem.value, "string" == typeof ret ? ret.replace(rreturn, "") : null == ret ? "" : ret)
        }
      }
    }), jQuery.extend({
      valHooks: {
        option:    {
          get: function (elem) {
            var val = jQuery.find.attr(elem, "value");
            return null != val ? val : jQuery.trim(jQuery.text(elem))
          }
        }, select: {
          get:    function (elem) {
            for (var value, option, options = elem.options, index = elem.selectedIndex, one = "select-one" === elem.type || index < 0, values = one ? null : [], max = one ? index + 1 : options.length, i = index < 0 ? max : one ? index : 0; i < max; i++) if (option = options[i], (option.selected || i === index) && (support.optDisabled ? !option.disabled : null === option.getAttribute("disabled")) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
              if (value = jQuery(option).val(), one) return value;
              values.push(value)
            }
            return values
          }, set: function (elem, value) {
            for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--;) option = options[i], (option.selected = jQuery.inArray(option.value, values) >= 0) && (optionSet = !0);
            return optionSet || (elem.selectedIndex = -1), values
          }
        }
      }
    }), jQuery.each(["radio", "checkbox"], function () {
      jQuery.valHooks[this] = {
        set: function (elem, value) {
          if (jQuery.isArray(value)) return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0
        }
      }, support.checkOn || (jQuery.valHooks[this].get = function (elem) {
        return null === elem.getAttribute("value") ? "on" : elem.value
      })
    }), jQuery.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (i, name) {
      jQuery.fn[name] = function (data, fn) {
        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)
      }
    }), jQuery.fn.extend({
      hover:         function (fnOver, fnOut) {
        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
      }, bind:       function (types, data, fn) {
        return this.on(types, null, data, fn)
      }, unbind:     function (types, fn) {
        return this.off(types, null, fn)
      }, delegate:   function (selector, types, data, fn) {
        return this.on(types, selector, data, fn)
      }, undelegate: function (selector, types, fn) {
        return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn)
      }
    });
    var nonce = jQuery.now(), rquery = /\?/;
    jQuery.parseJSON = function (data) {
      return JSON.parse(data + "")
    }, jQuery.parseXML = function (data) {
      var xml, tmp;
      if (!data || "string" != typeof data) return null;
      try {
        tmp = new DOMParser, xml = tmp.parseFromString(data, "text/xml")
      } catch (e) {
        xml = void 0
      }
      return xml && !xml.getElementsByTagName("parsererror").length || jQuery.error("Invalid XML: " + data), xml
    };
    var ajaxLocParts, ajaxLocation, rhash = /#.*$/, rts = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        rlocalProtocol                                                              = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        rnoContent                                                                  = /^(?:GET|HEAD)$/, rprotocol                                    = /^\/\//,
        rurl                                                                        = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        prefilters                                                                  = {}, transports                                                 = {}, allTypes = "*/".concat("*");
    try {
      ajaxLocation = location.href
    } catch (e) {
      ajaxLocation = document.createElement("a"), ajaxLocation.href = "", ajaxLocation = ajaxLocation.href
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [], jQuery.extend({
      active:        0,
      lastModified:  {},
      etag:          {},
      ajaxSettings:  {
        url:            ajaxLocation,
        type:           "GET",
        isLocal:        rlocalProtocol.test(ajaxLocParts[1]),
        global:         !0,
        processData:    !0,
        async:          !0,
        contentType:    "application/x-www-form-urlencoded; charset=UTF-8",
        accepts:        {
          "*":  allTypes,
          text: "text/plain",
          html: "text/html",
          xml:  "application/xml, text/xml",
          json: "application/json, text/javascript"
        },
        contents:       {xml: /xml/, html: /html/, json: /json/},
        responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"},
        converters:     {"* text": String, "text html": !0, "text json": jQuery.parseJSON, "text xml": jQuery.parseXML},
        flatOptions:    {url: !0, context: !0}
      },
      ajaxSetup:     function (target, settings) {
        return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target)
      },
      ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
      ajaxTransport: addToPrefiltersOrTransports(transports),
      ajax:          function (url, options) {
        function done(status, nativeStatusText, responses, headers) {
          var isSuccess, success, error, response, modified, statusText = nativeStatusText;
          2 !== state && (state = 2, timeoutTimer && clearTimeout(timeoutTimer), transport = void 0, responseHeadersString = headers || "", jqXHR.readyState = status > 0 ? 4 : 0, isSuccess = status >= 200 && status < 300 || 304 === status, responses && (response = ajaxHandleResponses(s, jqXHR, responses)), response = ajaxConvert(s, response, jqXHR, isSuccess), isSuccess ? (s.ifModified && (modified = jqXHR.getResponseHeader("Last-Modified"), modified && (jQuery.lastModified[cacheURL] = modified), (modified = jqXHR.getResponseHeader("etag")) && (jQuery.etag[cacheURL] = modified)), 204 === status || "HEAD" === s.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, success = response.data, error = response.error, isSuccess = !error)) : (error = statusText, !status && statusText || (statusText = "error", status < 0 && (status = 0))), jqXHR.status = status, jqXHR.statusText = (nativeStatusText || statusText) + "", isSuccess ? deferred.resolveWith(callbackContext, [success, statusText, jqXHR]) : deferred.rejectWith(callbackContext, [jqXHR, statusText, error]), jqXHR.statusCode(statusCode), statusCode = void 0, fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]), completeDeferred.fireWith(callbackContext, [jqXHR, statusText]), fireGlobals && (globalEventContext.trigger("ajaxComplete", [jqXHR, s]), --jQuery.active || jQuery.event.trigger("ajaxStop")))
        }

        "object" == typeof url && (options = url, url = void 0), options = options || {};
        var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, parts, fireGlobals, i,
            s                                                                                     = jQuery.ajaxSetup({}, options), callbackContext                                    = s.context || s,
            globalEventContext                                                                    = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
            deferred                                                                              = jQuery.Deferred(), completeDeferred                                        = jQuery.Callbacks("once memory"),
            statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, state = 0,
            strAbort                                                                              = "canceled", jqXHR                                                          = {
              readyState:               0, getResponseHeader: function (key) {
                var match;
                if (2 === state) {
                  if (!responseHeaders) for (responseHeaders = {}; match = rheaders.exec(responseHeadersString);) responseHeaders[match[1].toLowerCase()] = match[2];
                  match = responseHeaders[key.toLowerCase()]
                }
                return null == match ? null : match
              }, getAllResponseHeaders: function () {
                return 2 === state ? responseHeadersString : null
              }, setRequestHeader:      function (name, value) {
                var lname = name.toLowerCase();
                return state || (name = requestHeadersNames[lname] = requestHeadersNames[lname] || name, requestHeaders[name] = value), this
              }, overrideMimeType:      function (type) {
                return state || (s.mimeType = type), this
              }, statusCode:            function (map) {
                var code;
                if (map) if (state < 2) for (code in map) statusCode[code] = [statusCode[code], map[code]]; else jqXHR.always(map[jqXHR.status]);
                return this
              }, abort:                 function (statusText) {
                var finalText = statusText || strAbort;
                return transport && transport.abort(finalText), done(0, finalText), this
              }
            };
        if (deferred.promise(jqXHR).complete = completeDeferred.add, jqXHR.success = jqXHR.done, jqXHR.error = jqXHR.fail, s.url = ((url || s.url || ajaxLocation) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//"), s.type = options.method || options.type || s.method || s.type, s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""], null == s.crossDomain && (parts = rurl.exec(s.url.toLowerCase()), s.crossDomain = !(!parts || parts[1] === ajaxLocParts[1] && parts[2] === ajaxLocParts[2] && (parts[3] || ("http:" === parts[1] ? "80" : "443")) === (ajaxLocParts[3] || ("http:" === ajaxLocParts[1] ? "80" : "443")))), s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), 2 === state) return jqXHR;
        fireGlobals = s.global, fireGlobals && 0 == jQuery.active++ && jQuery.event.trigger("ajaxStart"), s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), cacheURL = s.url, s.hasContent || (s.data && (cacheURL = s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data, delete s.data), !1 === s.cache && (s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++)), s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), (s.data && s.hasContent && !1 !== s.contentType || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
        for (i in s.headers) jqXHR.setRequestHeader(i, s.headers[i]);
        if (s.beforeSend && (!1 === s.beforeSend.call(callbackContext, jqXHR, s) || 2 === state)) return jqXHR.abort();
        strAbort = "abort";
        for (i in{success: 1, error: 1, complete: 1}) jqXHR[i](s[i]);
        if (transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
          jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [jqXHR, s]), s.async && s.timeout > 0 && (timeoutTimer = setTimeout(function () {
            jqXHR.abort("timeout")
          }, s.timeout));
          try {
            state = 1, transport.send(requestHeaders, done)
          } catch (e) {
            if (!(state < 2)) throw e;
            done(-1, e)
          }
        } else done(-1, "No Transport");
        return jqXHR
      },
      getJSON:       function (url, data, callback) {
        return jQuery.get(url, data, callback, "json")
      },
      getScript:     function (url, callback) {
        return jQuery.get(url, void 0, callback, "script")
      }
    }), jQuery.each(["get", "post"], function (i, method) {
      jQuery[method] = function (url, data, callback, type) {
        return jQuery.isFunction(data) && (type = type || callback, callback = data, data = void 0), jQuery.ajax({
          url:      url,
          type:     method,
          dataType: type,
          data:     data,
          success:  callback
        })
      }
    }), jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (i, type) {
      jQuery.fn[type] = function (fn) {
        return this.on(type, fn)
      }
    }), jQuery._evalUrl = function (url) {
      return jQuery.ajax({url: url, type: "GET", dataType: "script", async: !1, global: !1, throws: !0})
    }, jQuery.fn.extend({
      wrapAll:      function (html) {
        var wrap;
        return jQuery.isFunction(html) ? this.each(function (i) {
          jQuery(this).wrapAll(html.call(this, i))
        }) : (this[0] && (wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function () {
          for (var elem = this; elem.firstElementChild;) elem = elem.firstElementChild;
          return elem
        }).append(this)), this)
      }, wrapInner: function (html) {
        return jQuery.isFunction(html) ? this.each(function (i) {
          jQuery(this).wrapInner(html.call(this, i))
        }) : this.each(function () {
          var self = jQuery(this), contents = self.contents();
          contents.length ? contents.wrapAll(html) : self.append(html)
        })
      }, wrap:      function (html) {
        var isFunction = jQuery.isFunction(html);
        return this.each(function (i) {
          jQuery(this).wrapAll(isFunction ? html.call(this, i) : html)
        })
      }, unwrap:    function () {
        return this.parent().each(function () {
          jQuery.nodeName(this, "body") || jQuery(this).replaceWith(this.childNodes)
        }).end()
      }
    }), jQuery.expr.filters.hidden = function (elem) {
      return elem.offsetWidth <= 0 && elem.offsetHeight <= 0
    }, jQuery.expr.filters.visible = function (elem) {
      return !jQuery.expr.filters.hidden(elem)
    };
    var r20                                                                     = /%20/g, rbracket = /\[\]$/, rCRLF = /\r?\n/g,
        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    jQuery.param = function (a, traditional) {
      var prefix, s = [], add = function (key, value) {
        value = jQuery.isFunction(value) ? value() : null == value ? "" : value, s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
      };
      if (void 0 === traditional && (traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional), jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) jQuery.each(a, function () {
        add(this.name, this.value)
      }); else for (prefix in a) buildParams(prefix, a[prefix], traditional, add);
      return s.join("&").replace(r20, "+")
    }, jQuery.fn.extend({
      serialize:         function () {
        return jQuery.param(this.serializeArray())
      }, serializeArray: function () {
        return this.map(function () {
          var elements = jQuery.prop(this, "elements");
          return elements ? jQuery.makeArray(elements) : this
        }).filter(function () {
          var type = this.type;
          return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type))
        }).map(function (i, elem) {
          var val = jQuery(this).val();
          return null == val ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {
            return {name: elem.name, value: val.replace(rCRLF, "\r\n")}
          }) : {name: elem.name, value: val.replace(rCRLF, "\r\n")}
        }).get()
      }
    }), jQuery.ajaxSettings.xhr = function () {
      try {
        return new XMLHttpRequest
      } catch (e) {
      }
    };
    var xhrId = 0, xhrCallbacks = {}, xhrSuccessStatus = {0: 200, 1223: 204}, xhrSupported = jQuery.ajaxSettings.xhr();
    window.ActiveXObject && jQuery(window).on("unload", function () {
      for (var key in xhrCallbacks) xhrCallbacks[key]()
    }), support.cors = !!xhrSupported && "withCredentials" in xhrSupported, support.ajax = xhrSupported = !!xhrSupported, jQuery.ajaxTransport(function (options) {
      var callback;
      if (support.cors || xhrSupported && !options.crossDomain) return {
        send:     function (headers, complete) {
          var i, xhr = options.xhr(), id = ++xhrId;
          if (xhr.open(options.type, options.url, options.async, options.username, options.password), options.xhrFields) for (i in options.xhrFields) xhr[i] = options.xhrFields[i];
          options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest");
          for (i in headers) xhr.setRequestHeader(i, headers[i]);
          callback = function (type) {
            return function () {
              callback && (delete xhrCallbacks[id], callback = xhr.onload = xhr.onerror = null, "abort" === type ? xhr.abort() : "error" === type ? complete(xhr.status, xhr.statusText) : complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, "string" == typeof xhr.responseText ? {text: xhr.responseText} : void 0, xhr.getAllResponseHeaders()))
            }
          }, xhr.onload = callback(), xhr.onerror = callback("error"), callback = xhrCallbacks[id] = callback("abort");
          try {
            xhr.send(options.hasContent && options.data || null)
          } catch (e) {
            if (callback) throw e
          }
        }, abort: function () {
          callback && callback()
        }
      }
    }), jQuery.ajaxSetup({
      accepts:    {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
      contents:   {script: /(?:java|ecma)script/},
      converters: {
        "text script": function (text) {
          return jQuery.globalEval(text), text
        }
      }
    }), jQuery.ajaxPrefilter("script", function (s) {
      void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET")
    }), jQuery.ajaxTransport("script", function (s) {
      if (s.crossDomain) {
        var script, callback;
        return {
          send:     function (_, complete) {
            script = jQuery("<script>").prop({
              async:   !0,
              charset: s.scriptCharset,
              src:     s.url
            }).on("load error", callback = function (evt) {
              script.remove(), callback = null, evt && complete("error" === evt.type ? 404 : 200, evt.type)
            }), document.head.appendChild(script[0])
          }, abort: function () {
            callback && callback()
          }
        }
      }
    });
    var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
    jQuery.ajaxSetup({
      jsonp: "callback", jsonpCallback: function () {
        var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
        return this[callback] = !0, callback
      }
    }), jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
      var callbackName, overwritten, responseContainer,
          jsonProp = !1 !== s.jsonp && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
      if (jsonProp || "jsonp" === s.dataTypes[0]) return callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : !1 !== s.jsonp && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), s.converters["script json"] = function () {
        return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0]
      }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function () {
        responseContainer = arguments
      }, jqXHR.always(function () {
        window[callbackName] = overwritten, s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, oldCallbacks.push(callbackName)), responseContainer && jQuery.isFunction(overwritten) && overwritten(responseContainer[0]), responseContainer = overwritten = void 0
      }), "script"
    }), jQuery.parseHTML = function (data, context, keepScripts) {
      if (!data || "string" != typeof data) return null;
      "boolean" == typeof context && (keepScripts = context, context = !1), context = context || document;
      var parsed = rsingleTag.exec(data), scripts = !keepScripts && [];
      return parsed ? [context.createElement(parsed[1])] : (parsed = jQuery.buildFragment([data], context, scripts), scripts && scripts.length && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes))
    };
    var _load = jQuery.fn.load;
    jQuery.fn.load = function (url, params, callback) {
      if ("string" != typeof url && _load) return _load.apply(this, arguments);
      var selector, type, response, self = this, off = url.indexOf(" ");
      return off >= 0 && (selector = jQuery.trim(url.slice(off)), url = url.slice(0, off)), jQuery.isFunction(params) ? (callback = params, params = void 0) : params && "object" == typeof params && (type = "POST"), self.length > 0 && jQuery.ajax({
        url:      url,
        type:     type,
        dataType: "html",
        data:     params
      }).done(function (responseText) {
        response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText)
      }).complete(callback && function (jqXHR, status) {
        self.each(callback, response || [jqXHR.responseText, status, jqXHR])
      }), this
    }, jQuery.expr.filters.animated = function (elem) {
      return jQuery.grep(jQuery.timers, function (fn) {
        return elem === fn.elem
      }).length
    };
    var docElem = window.document.documentElement
    ;jQuery.offset = {
      setOffset: function (elem, options, i) {
        var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
            position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {};
        "static" === position && (elem.style.position = "relative"), curOffset = curElem.offset(), curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), calculatePosition = ("absolute" === position || "fixed" === position) && (curCSSTop + curCSSLeft).indexOf("auto") > -1, calculatePosition ? (curPosition = curElem.position(), curTop = curPosition.top, curLeft = curPosition.left) : (curTop = parseFloat(curCSSTop) || 0, curLeft = parseFloat(curCSSLeft) || 0), jQuery.isFunction(options) && (options = options.call(elem, i, curOffset)), null != options.top && (props.top = options.top - curOffset.top + curTop), null != options.left && (props.left = options.left - curOffset.left + curLeft), "using" in options ? options.using.call(elem, props) : curElem.css(props)
      }
    }, jQuery.fn.extend({
      offset:          function (options) {
        if (arguments.length) return void 0 === options ? this : this.each(function (i) {
          jQuery.offset.setOffset(this, options, i)
        });
        var docElem, win, elem = this[0], box = {top: 0, left: 0}, doc = elem && elem.ownerDocument;
        if (doc) return docElem = doc.documentElement, jQuery.contains(docElem, elem) ? (void 0 !== elem.getBoundingClientRect && (box = elem.getBoundingClientRect()), win = getWindow(doc), {
          top:  box.top + win.pageYOffset - docElem.clientTop,
          left: box.left + win.pageXOffset - docElem.clientLeft
        }) : box
      }, position:     function () {
        if (this[0]) {
          var offsetParent, offset, elem = this[0], parentOffset = {top: 0, left: 0};
          return "fixed" === jQuery.css(elem, "position") ? offset = elem.getBoundingClientRect() : (offsetParent = this.offsetParent(), offset = this.offset(), jQuery.nodeName(offsetParent[0], "html") || (parentOffset = offsetParent.offset()), parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0), parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)), {
            top:  offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
            left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
          }
        }
      }, offsetParent: function () {
        return this.map(function () {
          for (var offsetParent = this.offsetParent || docElem; offsetParent && !jQuery.nodeName(offsetParent, "html") && "static" === jQuery.css(offsetParent, "position");) offsetParent = offsetParent.offsetParent;
          return offsetParent || docElem
        })
      }
    }), jQuery.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (method, prop) {
      var top           = "pageYOffset" === prop;
      jQuery.fn[method] = function (val) {
        return access(this, function (elem, method, val) {
          var win = getWindow(elem);
          if (void 0 === val) return win ? win[prop] : elem[method];
          win ? win.scrollTo(top ? window.pageXOffset : val, top ? val : window.pageYOffset) : elem[method] = val
        }, method, val, arguments.length, null)
      }
    }), jQuery.each(["top", "left"], function (i, prop) {
      jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
        if (computed) return computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed
      })
    }), jQuery.each({Height: "height", Width: "width"}, function (name, type) {
      jQuery.each({padding: "inner" + name, content: type, "": "outer" + name}, function (defaultExtra, funcName) {
        jQuery.fn[funcName] = function (margin, value) {
          var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin),
              extra     = defaultExtra || (!0 === margin || !0 === value ? "margin" : "border");
          return access(this, function (elem, type, value) {
            var doc;
            return jQuery.isWindow(elem) ? elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : void 0 === value ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra)
          }, type, chainable ? margin : void 0, chainable, null)
        }
      })
    }), jQuery.fn.size = function () {
      return this.length
    }, jQuery.fn.andSelf = jQuery.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function () {
      return jQuery
    });
    var _jQuery = window.jQuery, _$ = window.$;
    return jQuery.noConflict = function (deep) {
      return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), jQuery
    }, void 0 === noGlobal && (window.jQuery = window.$ = jQuery), jQuery
  }), function (window) {
    "use strict";

    function minErr(module, ErrorConstructor) {
      return ErrorConstructor = ErrorConstructor || Error, function () {
        var paramPrefix, i, templateArgs                                         = arguments, code = templateArgs[0],
            message = "[" + (module ? module + ":" : "") + code + "] ", template = templateArgs[1];
        for (message += template.replace(/\{\d+\}/g, function (match) {
          var index = +match.slice(1, -1), shiftedIndex = index + 2;
          return shiftedIndex < templateArgs.length ? toDebugString(templateArgs[shiftedIndex]) : match
        }), message += "\nhttp://errors.angularjs.org/1.5.5/" + (module ? module + "/" : "") + code, i = 2, paramPrefix = "?"; i < templateArgs.length; i++, paramPrefix = "&") message += paramPrefix + "p" + (i - 2) + "=" + encodeURIComponent(toDebugString(templateArgs[i]));
        return new ErrorConstructor(message)
      }
    }

    function isArrayLike(obj) {
      if (null == obj || isWindow(obj)) return !1;
      if (isArray(obj) || isString(obj) || jqLite && obj instanceof jqLite) return !0;
      var length = "length" in Object(obj) && obj.length;
      return isNumber(length) && (length >= 0 && (length - 1 in obj || obj instanceof Array) || "function" == typeof obj.item)
    }

    function forEach(obj, iterator, context) {
      var key, length;
      if (obj) if (isFunction(obj)) for (key in obj) "prototype" == key || "length" == key || "name" == key || obj.hasOwnProperty && !obj.hasOwnProperty(key) || iterator.call(context, obj[key], key, obj); else if (isArray(obj) || isArrayLike(obj)) {
        var isPrimitive = "object" != typeof obj;
        for (key = 0, length = obj.length; key < length; key++) (isPrimitive || key in obj) && iterator.call(context, obj[key], key, obj)
      } else if (obj.forEach && obj.forEach !== forEach) obj.forEach(iterator, context, obj); else if (isBlankObject(obj)) for (key in obj) iterator.call(context, obj[key], key, obj); else if ("function" == typeof obj.hasOwnProperty) for (key in obj) obj.hasOwnProperty(key) && iterator.call(context, obj[key], key, obj); else for (key in obj) hasOwnProperty.call(obj, key) && iterator.call(context, obj[key], key, obj);
      return obj
    }

    function forEachSorted(obj, iterator, context) {
      for (var keys = Object.keys(obj).sort(), i = 0; i < keys.length; i++) iterator.call(context, obj[keys[i]], keys[i]);
      return keys
    }

    function reverseParams(iteratorFn) {
      return function (value, key) {
        iteratorFn(key, value)
      }
    }

    function nextUid() {
      return ++uid
    }

    function setHashKey(obj, h) {
      h ? obj.$$hashKey = h : delete obj.$$hashKey
    }

    function baseExtend(dst, objs, deep) {
      for (var h = dst.$$hashKey, i = 0, ii = objs.length; i < ii; ++i) {
        var obj = objs[i];
        if (isObject(obj) || isFunction(obj)) for (var keys = Object.keys(obj), j = 0, jj = keys.length; j < jj; j++) {
          var key = keys[j], src = obj[key];
          deep && isObject(src) ? isDate(src) ? dst[key] = new Date(src.valueOf()) : isRegExp(src) ? dst[key] = new RegExp(src) : src.nodeName ? dst[key] = src.cloneNode(!0) : isElement(src) ? dst[key] = src.clone() : (isObject(dst[key]) || (dst[key] = isArray(src) ? [] : {}), baseExtend(dst[key], [src], !0)) : dst[key] = src
        }
      }
      return setHashKey(dst, h), dst
    }

    function extend(dst) {
      return baseExtend(dst, slice.call(arguments, 1), !1)
    }

    function merge(dst) {
      return baseExtend(dst, slice.call(arguments, 1), !0)
    }

    function toInt(str) {
      return parseInt(str, 10)
    }

    function inherit(parent, extra) {
      return extend(Object.create(parent), extra)
    }

    function noop() {
    }

    function identity($) {
      return $
    }

    function valueFn(value) {
      return function () {
        return value
      }
    }

    function hasCustomToString(obj) {
      return isFunction(obj.toString) && obj.toString !== toString
    }

    function isUndefined(value) {
      return void 0 === value
    }

    function isDefined(value) {
      return void 0 !== value
    }

    function isObject(value) {
      return null !== value && "object" == typeof value
    }

    function isBlankObject(value) {
      return null !== value && "object" == typeof value && !getPrototypeOf(value)
    }

    function isString(value) {
      return "string" == typeof value
    }

    function isNumber(value) {
      return "number" == typeof value
    }

    function isDate(value) {
      return "[object Date]" === toString.call(value)
    }

    function isFunction(value) {
      return "function" == typeof value
    }

    function isRegExp(value) {
      return "[object RegExp]" === toString.call(value)
    }

    function isWindow(obj) {
      return obj && obj.window === obj
    }

    function isScope(obj) {
      return obj && obj.$evalAsync && obj.$watch
    }

    function isFile(obj) {
      return "[object File]" === toString.call(obj)
    }

    function isFormData(obj) {
      return "[object FormData]" === toString.call(obj)
    }

    function isBlob(obj) {
      return "[object Blob]" === toString.call(obj)
    }

    function isBoolean(value) {
      return "boolean" == typeof value
    }

    function isPromiseLike(obj) {
      return obj && isFunction(obj.then)
    }

    function isTypedArray(value) {
      return value && isNumber(value.length) && TYPED_ARRAY_REGEXP.test(toString.call(value))
    }

    function isArrayBuffer(obj) {
      return "[object ArrayBuffer]" === toString.call(obj)
    }

    function isElement(node) {
      return !(!node || !(node.nodeName || node.prop && node.attr && node.find))
    }

    function makeMap(str) {
      var i, obj = {}, items = str.split(",");
      for (i = 0; i < items.length; i++) obj[items[i]] = !0;
      return obj
    }

    function nodeName_(element) {
      return lowercase(element.nodeName || element[0] && element[0].nodeName)
    }

    function arrayRemove(array, value) {
      var index = array.indexOf(value);
      return index >= 0 && array.splice(index, 1), index
    }

    function copy(source, destination) {
      function copyRecurse(source, destination) {
        var key, h = destination.$$hashKey;
        if (isArray(source)) for (var i = 0, ii = source.length; i < ii; i++) destination.push(copyElement(source[i])); else if (isBlankObject(source)) for (key in source) destination[key] = copyElement(source[key]); else if (source && "function" == typeof source.hasOwnProperty) for (key in source) source.hasOwnProperty(key) && (destination[key] = copyElement(source[key])); else for (key in source) hasOwnProperty.call(source, key) && (destination[key] = copyElement(source[key]));
        return setHashKey(destination, h), destination
      }

      function copyElement(source) {
        if (!isObject(source)) return source;
        var index = stackSource.indexOf(source);
        if (-1 !== index) return stackDest[index];
        if (isWindow(source) || isScope(source)) throw ngMinErr("cpws", "Can't copy! Making copies of Window or Scope instances is not supported.");
        var needsRecurse = !1, destination = copyType(source);
        return void 0 === destination && (destination = isArray(source) ? [] : Object.create(getPrototypeOf(source)), needsRecurse = !0), stackSource.push(source), stackDest.push(destination), needsRecurse ? copyRecurse(source, destination) : destination
      }

      function copyType(source) {
        switch (toString.call(source)) {
          case"[object Int8Array]":
          case"[object Int16Array]":
          case"[object Int32Array]":
          case"[object Float32Array]":
          case"[object Float64Array]":
          case"[object Uint8Array]":
          case"[object Uint8ClampedArray]":
          case"[object Uint16Array]":
          case"[object Uint32Array]":
            return new source.constructor(copyElement(source.buffer));
          case"[object ArrayBuffer]":
            if (!source.slice) {
              var copied = new ArrayBuffer(source.byteLength);
              return new Uint8Array(copied).set(new Uint8Array(source)), copied
            }
            return source.slice(0);
          case"[object Boolean]":
          case"[object Number]":
          case"[object String]":
          case"[object Date]":
            return new source.constructor(source.valueOf());
          case"[object RegExp]":
            var re = new RegExp(source.source, source.toString().match(/[^\/]*$/)[0]);
            return re.lastIndex = source.lastIndex, re;
          case"[object Blob]":
            return new source.constructor([source], {type: source.type})
        }
        if (isFunction(source.cloneNode)) return source.cloneNode(!0)
      }

      var stackSource = [], stackDest = [];
      if (destination) {
        if (isTypedArray(destination) || isArrayBuffer(destination)) throw ngMinErr("cpta", "Can't copy! TypedArray destination cannot be mutated.");
        if (source === destination) throw ngMinErr("cpi", "Can't copy! Source and destination are identical.");
        return isArray(destination) ? destination.length = 0 : forEach(destination, function (value, key) {
          "$$hashKey" !== key && delete destination[key]
        }), stackSource.push(source), stackDest.push(destination), copyRecurse(source, destination)
      }
      return copyElement(source)
    }

    function shallowCopy(src, dst) {
      if (isArray(src)) {
        dst = dst || [];
        for (var i = 0, ii = src.length; i < ii; i++) dst[i] = src[i]
      } else if (isObject(src)) {
        dst = dst || {};
        for (var key in src) "$" === key.charAt(0) && "$" === key.charAt(1) || (dst[key] = src[key])
      }
      return dst || src
    }

    function equals(o1, o2) {
      if (o1 === o2) return !0;
      if (null === o1 || null === o2) return !1;
      if (o1 !== o1 && o2 !== o2) return !0;
      var length, key, keySet, t1 = typeof o1, t2 = typeof o2;
      if (t1 == t2 && "object" == t1) {
        if (!isArray(o1)) {
          if (isDate(o1)) return !!isDate(o2) && equals(o1.getTime(), o2.getTime());
          if (isRegExp(o1)) return !!isRegExp(o2) && o1.toString() == o2.toString();
          if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2) || isDate(o2) || isRegExp(o2)) return !1;
          keySet = createMap();
          for (key in o1) if ("$" !== key.charAt(0) && !isFunction(o1[key])) {
            if (!equals(o1[key], o2[key])) return !1;
            keySet[key] = !0
          }
          for (key in o2) if (!(key in keySet) && "$" !== key.charAt(0) && isDefined(o2[key]) && !isFunction(o2[key])) return !1;
          return !0
        }
        if (!isArray(o2)) return !1;
        if ((length = o1.length) == o2.length) {
          for (key = 0; key < length; key++) if (!equals(o1[key], o2[key])) return !1;
          return !0
        }
      }
      return !1
    }

    function concat(array1, array2, index) {
      return array1.concat(slice.call(array2, index))
    }

    function sliceArgs(args, startIndex) {
      return slice.call(args, startIndex || 0)
    }

    function bind(self, fn) {
      var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];
      return !isFunction(fn) || fn instanceof RegExp ? fn : curryArgs.length ? function () {
        return arguments.length ? fn.apply(self, concat(curryArgs, arguments, 0)) : fn.apply(self, curryArgs)
      } : function () {
        return arguments.length ? fn.apply(self, arguments) : fn.call(self)
      }
    }

    function toJsonReplacer(key, value) {
      var val = value;
      return "string" == typeof key && "$" === key.charAt(0) && "$" === key.charAt(1) ? val = void 0 : isWindow(value) ? val = "$WINDOW" : value && window.document === value ? val = "$DOCUMENT" : isScope(value) && (val = "$SCOPE"), val
    }

    function toJson(obj, pretty) {
      if (!isUndefined(obj)) return isNumber(pretty) || (pretty = pretty ? 2 : null), JSON.stringify(obj, toJsonReplacer, pretty)
    }

    function fromJson(json) {
      return isString(json) ? JSON.parse(json) : json
    }

    function timezoneToOffset(timezone, fallback) {
      timezone                    = timezone.replace(ALL_COLONS, "");
      var requestedTimezoneOffset = Date.parse("Jan 01, 1970 00:00:00 " + timezone) / 6e4;
      return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset
    }

    function addDateMinutes(date, minutes) {
      return date = new Date(date.getTime()), date.setMinutes(date.getMinutes() + minutes), date
    }

    function convertTimezoneToLocal(date, timezone, reverse) {
      reverse                = reverse ? -1 : 1;
      var dateTimezoneOffset = date.getTimezoneOffset();
      return addDateMinutes(date, reverse * (timezoneToOffset(timezone, dateTimezoneOffset) - dateTimezoneOffset))
    }

    function startingTag(element) {
      element = jqLite(element).clone();
      try {
        element.empty()
      } catch (e) {
      }
      var elemHtml = jqLite("<div>").append(element).html();
      try {
        return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) : elemHtml.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function (match, nodeName) {
          return "<" + lowercase(nodeName)
        })
      } catch (e) {
        return lowercase(elemHtml)
      }
    }

    function tryDecodeURIComponent(value) {
      try {
        return decodeURIComponent(value)
      } catch (e) {
      }
    }

    function parseKeyValue(keyValue) {
      var obj = {};
      return forEach((keyValue || "").split("&"), function (keyValue) {
        var splitPoint, key, val;
        keyValue && (key = keyValue = keyValue.replace(/\+/g, "%20"), splitPoint = keyValue.indexOf("="), -1 !== splitPoint && (key = keyValue.substring(0, splitPoint), val = keyValue.substring(splitPoint + 1)), key = tryDecodeURIComponent(key), isDefined(key) && (val = !isDefined(val) || tryDecodeURIComponent(val), hasOwnProperty.call(obj, key) ? isArray(obj[key]) ? obj[key].push(val) : obj[key] = [obj[key], val] : obj[key] = val))
      }), obj
    }

    function toKeyValue(obj) {
      var parts = [];
      return forEach(obj, function (value, key) {
        isArray(value) ? forEach(value, function (arrayValue) {
          parts.push(encodeUriQuery(key, !0) + (!0 === arrayValue ? "" : "=" + encodeUriQuery(arrayValue, !0)))
        }) : parts.push(encodeUriQuery(key, !0) + (!0 === value ? "" : "=" + encodeUriQuery(value, !0)))
      }), parts.length ? parts.join("&") : ""
    }

    function encodeUriSegment(val) {
      return encodeUriQuery(val, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
    }

    function encodeUriQuery(val, pctEncodeSpaces) {
      return encodeURIComponent(val).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, pctEncodeSpaces ? "%20" : "+")
    }

    function getNgAttribute(element, ngAttr) {
      var attr, i, ii = ngAttrPrefixes.length;
      for (i = 0; i < ii; ++i) if (attr = ngAttrPrefixes[i] + ngAttr, isString(attr = element.getAttribute(attr))) return attr;
      return null
    }

    function angularInit(element, bootstrap) {
      var appElement, module, config = {};
      forEach(ngAttrPrefixes, function (prefix) {
        var name = prefix + "app";
        !appElement && element.hasAttribute && element.hasAttribute(name) && (appElement = element, module = element.getAttribute(name))
      }), forEach(ngAttrPrefixes, function (prefix) {
        var candidate, name = prefix + "app";
        !appElement && (candidate = element.querySelector("[" + name.replace(":", "\\:") + "]")) && (appElement = candidate, module = candidate.getAttribute(name))
      }), appElement && (config.strictDi = null !== getNgAttribute(appElement, "strict-di"), bootstrap(appElement, module ? [module] : [], config))
    }

    function bootstrap(element, modules, config) {
      isObject(config) || (config = {}), config = extend({strictDi: !1}, config);
      var doBootstrap         = function () {
        if (element = jqLite(element), element.injector()) {
          var tag = element[0] === window.document ? "document" : startingTag(element);
          throw ngMinErr("btstrpd", "App already bootstrapped with this element '{0}'", tag.replace(/</, "&lt;").replace(/>/, "&gt;"))
        }
        modules = modules || [], modules.unshift(["$provide", function ($provide) {
          $provide.value("$rootElement", element)
        }]), config.debugInfoEnabled && modules.push(["$compileProvider", function ($compileProvider) {
          $compileProvider.debugInfoEnabled(!0)
        }]), modules.unshift("ng");
        var injector = createInjector(modules, config.strictDi);
        return injector.invoke(["$rootScope", "$rootElement", "$compile", "$injector", function (scope, element, compile, injector) {
          scope.$apply(function () {
            element.data("$injector", injector), compile(element)(scope)
          })
        }]), injector
      }, NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/, NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;
      if (window && NG_ENABLE_DEBUG_INFO.test(window.name) && (config.debugInfoEnabled = !0, window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, "")), window && !NG_DEFER_BOOTSTRAP.test(window.name)) return doBootstrap();
      window.name = window.name.replace(NG_DEFER_BOOTSTRAP, ""), angular.resumeBootstrap = function (extraModules) {
        return forEach(extraModules, function (module) {
          modules.push(module)
        }), doBootstrap()
      }, isFunction(angular.resumeDeferredBootstrap) && angular.resumeDeferredBootstrap()
    }

    function reloadWithDebugInfo() {
      window.name = "NG_ENABLE_DEBUG_INFO!" + window.name, window.location.reload()
    }

    function getTestability(rootElement) {
      var injector = angular.element(rootElement).injector();
      if (!injector) throw ngMinErr("test", "no injector found for element argument to getTestability");
      return injector.get("$$testability")
    }

    function snake_case(name, separator) {
      return separator = separator || "_", name.replace(SNAKE_CASE_REGEXP, function (letter, pos) {
        return (pos ? separator : "") + letter.toLowerCase()
      })
    }

    function assertArg(arg, name, reason) {
      if (!arg) throw ngMinErr("areq", "Argument '{0}' is {1}", name || "?", reason || "required");
      return arg
    }

    function assertArgFn(arg, name, acceptArrayAnnotation) {
      return acceptArrayAnnotation && isArray(arg) && (arg = arg[arg.length - 1]), assertArg(isFunction(arg), name, "not a function, got " + (arg && "object" == typeof arg ? arg.constructor.name || "Object" : typeof arg)), arg
    }

    function assertNotHasOwnProperty(name, context) {
      if ("hasOwnProperty" === name) throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
    }

    function getter(obj, path, bindFnToScope) {
      if (!path) return obj;
      for (var key, keys = path.split("."), lastInstance = obj, len = keys.length, i = 0; i < len; i++) key = keys[i], obj && (obj = (lastInstance = obj)[key]);
      return !bindFnToScope && isFunction(obj) ? bind(lastInstance, obj) : obj
    }

    function getBlockNodes(nodes) {
      for (var blockNodes, node = nodes[0], endNode = nodes[nodes.length - 1], i = 1; node !== endNode && (node = node.nextSibling); i++) (blockNodes || nodes[i] !== node) && (blockNodes || (blockNodes = jqLite(slice.call(nodes, 0, i))), blockNodes.push(node));
      return blockNodes || nodes
    }

    function createMap() {
      return Object.create(null)
    }

    function setupModuleLoader(window) {
      function ensure(obj, name, factory) {
        return obj[name] || (obj[name] = factory())
      }

      var $injectorMinErr = minErr("$injector"), ngMinErr = minErr("ng"), angular = ensure(window, "angular", Object);
      return angular.$$minErr = angular.$$minErr || minErr, ensure(angular, "module", function () {
        var modules = {};
        return function (name, requires, configFn) {
          return function (name, context) {
            if ("hasOwnProperty" === name) throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
          }(name, "module"), requires && modules.hasOwnProperty(name) && (modules[name] = null), ensure(modules, name, function () {
            function invokeLater(provider, method, insertMethod, queue) {
              return queue || (queue = invokeQueue), function () {
                return queue[insertMethod || "push"]([provider, method, arguments]), moduleInstance
              }
            }

            function invokeLaterAndSetModuleName(provider, method) {
              return function (recipeName, factoryFunction) {
                return factoryFunction && isFunction(factoryFunction) && (factoryFunction.$$moduleName = name), invokeQueue.push([provider, method, arguments]), moduleInstance
              }
            }

            if (!requires) throw $injectorMinErr("nomod", "Module '{0}' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.", name);
            var invokeQueue                                                                       = [], configBlocks                                                    = [], runBlocks = [],
                config = invokeLater("$injector", "invoke", "push", configBlocks), moduleInstance = {
                  _invokeQueue:  invokeQueue,
                  _configBlocks: configBlocks,
                  _runBlocks:    runBlocks,
                  requires:      requires,
                  name:          name,
                  provider:      invokeLaterAndSetModuleName("$provide", "provider"),
                  factory:       invokeLaterAndSetModuleName("$provide", "factory"),
                  service:       invokeLaterAndSetModuleName("$provide", "service"),
                  value:         invokeLater("$provide", "value"),
                  constant:      invokeLater("$provide", "constant", "unshift"),
                  decorator:     invokeLaterAndSetModuleName("$provide", "decorator"),
                  animation:     invokeLaterAndSetModuleName("$animateProvider", "register"),
                  filter:        invokeLaterAndSetModuleName("$filterProvider", "register"),
                  controller:    invokeLaterAndSetModuleName("$controllerProvider", "register"),
                  directive:     invokeLaterAndSetModuleName("$compileProvider", "directive"),
                  component:     invokeLaterAndSetModuleName("$compileProvider", "component"),
                  config:        config,
                  run:           function (block) {
                    return runBlocks.push(block), this
                  }
                };
            return configFn && config(configFn), moduleInstance
          })
        }
      })
    }

    function serializeObject(obj) {
      var seen = [];
      return JSON.stringify(obj, function (key, val) {
        if (val = toJsonReplacer(key, val), isObject(val)) {
          if (seen.indexOf(val) >= 0) return "...";
          seen.push(val)
        }
        return val
      })
    }

    function toDebugString(obj) {
      return "function" == typeof obj ? obj.toString().replace(/ \{[\s\S]*$/, "") : isUndefined(obj) ? "undefined" : "string" != typeof obj ? serializeObject(obj) : obj
    }

    function jqNextId() {
      return ++jqId
    }

    function camelCase(name) {
      return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
        return offset ? letter.toUpperCase() : letter
      }).replace(MOZ_HACK_REGEXP, "Moz$1")
    }

    function jqLiteIsTextNode(html) {
      return !HTML_REGEXP.test(html)
    }

    function jqLiteAcceptsData(node) {
      var nodeType = node.nodeType;
      return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT
    }

    function jqLiteHasData(node) {
      for (var key in jqCache[node.ng339]) return !0;
      return !1
    }

    function jqLiteCleanData(nodes) {
      for (var i = 0, ii = nodes.length; i < ii; i++) jqLiteRemoveData(nodes[i])
    }

    function jqLiteBuildFragment(html, context) {
      var tmp, tag, wrap, i, fragment = context.createDocumentFragment(), nodes = [];
      if (jqLiteIsTextNode(html)) nodes.push(context.createTextNode(html)); else {
        for (tmp = tmp || fragment.appendChild(context.createElement("div")), tag = (TAG_NAME_REGEXP.exec(html) || ["", ""])[1].toLowerCase(), wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + html.replace(XHTML_TAG_REGEXP, "<$1></$2>") + wrap[2], i = wrap[0]; i--;) tmp = tmp.lastChild;
        nodes = concat(nodes, tmp.childNodes), tmp = fragment.firstChild, tmp.textContent = ""
      }
      return fragment.textContent = "", fragment.innerHTML = "", forEach(nodes, function (node) {
        fragment.appendChild(node)
      }), fragment
    }

    function jqLiteParseHTML(html, context) {
      context = context || window.document;
      var parsed;
      return (parsed = SINGLE_TAG_REGEXP.exec(html)) ? [context.createElement(parsed[1])] : (parsed = jqLiteBuildFragment(html, context)) ? parsed.childNodes : []
    }

    function jqLiteWrapNode(node, wrapper) {
      var parent = node.parentNode;
      parent && parent.replaceChild(wrapper, node), wrapper.appendChild(node)
    }

    function JQLite(element) {
      if (element instanceof JQLite) return element;
      var argIsString;
      if (isString(element) && (element = trim(element), argIsString = !0), !(this instanceof JQLite)) {
        if (argIsString && "<" != element.charAt(0)) throw jqLiteMinErr("nosel", "Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api2/angular.element");
        return new JQLite(element)
      }
      argIsString ? jqLiteAddNodes(this, jqLiteParseHTML(element)) : jqLiteAddNodes(this, element)
    }

    function jqLiteClone(element) {
      return element.cloneNode(!0)
    }

    function jqLiteDealoc(element, onlyDescendants) {
      if (onlyDescendants || jqLiteRemoveData(element), element.querySelectorAll) for (var descendants = element.querySelectorAll("*"), i = 0, l = descendants.length; i < l; i++) jqLiteRemoveData(descendants[i])
    }

    function jqLiteOff(element, type, fn, unsupported) {
      if (isDefined(unsupported)) throw jqLiteMinErr("offargs", "jqLite#off() does not support the `selector` argument");
      var expandoStore = jqLiteExpandoStore(element), events = expandoStore && expandoStore.events,
          handle                                             = expandoStore && expandoStore.handle;
      if (handle) if (type) {
        var removeHandler = function (type) {
          var listenerFns = events[type];
          isDefined(fn) && arrayRemove(listenerFns || [], fn), isDefined(fn) && listenerFns && listenerFns.length > 0 || (removeEventListenerFn(element, type, handle), delete events[type])
        };
        forEach(type.split(" "), function (type) {
          removeHandler(type), MOUSE_EVENT_MAP[type] && removeHandler(MOUSE_EVENT_MAP[type])
        })
      } else for (type in events) "$destroy" !== type && removeEventListenerFn(element, type, handle), delete events[type]
    }

    function jqLiteRemoveData(element, name) {
      var expandoId = element.ng339, expandoStore = expandoId && jqCache[expandoId];
      if (expandoStore) {
        if (name) return void delete expandoStore.data[name];
        expandoStore.handle && (expandoStore.events.$destroy && expandoStore.handle({}, "$destroy"), jqLiteOff(element)), delete jqCache[expandoId], element.ng339 = void 0
      }
    }

    function jqLiteExpandoStore(element, createIfNecessary) {
      var expandoId = element.ng339, expandoStore = expandoId && jqCache[expandoId];
      return createIfNecessary && !expandoStore && (element.ng339 = expandoId = jqNextId(), expandoStore = jqCache[expandoId] = {
        events: {},
        data:   {},
        handle: void 0
      }), expandoStore
    }

    function jqLiteData(element, key, value) {
      if (jqLiteAcceptsData(element)) {
        var isSimpleSetter = isDefined(value), isSimpleGetter = !isSimpleSetter && key && !isObject(key),
            massGetter                                        = !key, expandoStore                   = jqLiteExpandoStore(element, !isSimpleGetter),
            data                                              = expandoStore && expandoStore.data;
        if (isSimpleSetter) data[key] = value; else {
          if (massGetter) return data;
          if (isSimpleGetter) return data && data[key];
          extend(data, key)
        }
      }
    }

    function jqLiteHasClass(element, selector) {
      return !!element.getAttribute && (" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + selector + " ") > -1
    }

    function jqLiteRemoveClass(element, cssClasses) {
      cssClasses && element.setAttribute && forEach(cssClasses.split(" "), function (cssClass) {
        element.setAttribute("class", trim((" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + trim(cssClass) + " ", " ")))
      })
    }

    function jqLiteAddClass(element, cssClasses) {
      if (cssClasses && element.setAttribute) {
        var existingClasses = (" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
        forEach(cssClasses.split(" "), function (cssClass) {
          cssClass = trim(cssClass), -1 === existingClasses.indexOf(" " + cssClass + " ") && (existingClasses += cssClass + " ")
        }), element.setAttribute("class", trim(existingClasses))
      }
    }

    function jqLiteAddNodes(root, elements) {
      if (elements) if (elements.nodeType) root[root.length++] = elements; else {
        var length = elements.length;
        if ("number" == typeof length && elements.window !== elements) {
          if (length) for (var i = 0; i < length; i++) root[root.length++] = elements[i]
        } else root[root.length++] = elements
      }
    }

    function jqLiteController(element, name) {
      return jqLiteInheritedData(element, "$" + (name || "ngController") + "Controller")
    }

    function jqLiteInheritedData(element, name, value) {
      element.nodeType == NODE_TYPE_DOCUMENT && (element = element.documentElement);
      for (var names = isArray(name) ? name : [name]; element;) {
        for (var i = 0, ii = names.length; i < ii; i++) if (isDefined(value = jqLite.data(element, names[i]))) return value;
        element = element.parentNode || element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host
      }
    }

    function jqLiteEmpty(element) {
      for (jqLiteDealoc(element, !0); element.firstChild;) element.removeChild(element.firstChild)
    }

    function jqLiteRemove(element, keepData) {
      keepData || jqLiteDealoc(element);
      var parent = element.parentNode;
      parent && parent.removeChild(element)
    }

    function jqLiteDocumentLoaded(action, win) {
      win = win || window, "complete" === win.document.readyState ? win.setTimeout(action) : jqLite(win).on("load", action)
    }

    function getBooleanAttrName(element, name) {
      var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];
      return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr
    }

    function getAliasedAttrName(name) {
      return ALIASED_ATTR[name]
    }

    function createEventHandler(element, events) {
      var eventHandler = function (event, type) {
        event.isDefaultPrevented = function () {
          return event.defaultPrevented
        };
        var eventFns             = events[type || event.type], eventFnsLength = eventFns ? eventFns.length : 0;
        if (eventFnsLength) {
          if (isUndefined(event.immediatePropagationStopped)) {
            var originalStopImmediatePropagation = event.stopImmediatePropagation;
            event.stopImmediatePropagation       = function () {
              event.immediatePropagationStopped = !0, event.stopPropagation && event.stopPropagation(), originalStopImmediatePropagation && originalStopImmediatePropagation.call(event)
            }
          }
          event.isImmediatePropagationStopped = function () {
            return !0 === event.immediatePropagationStopped
          };
          var handlerWrapper                  = eventFns.specialHandlerWrapper || defaultHandlerWrapper;
          eventFnsLength > 1 && (eventFns = shallowCopy(eventFns));
          for (var i = 0; i < eventFnsLength; i++) event.isImmediatePropagationStopped() || handlerWrapper(element, event, eventFns[i])
        }
      };
      return eventHandler.elem = element, eventHandler
    }

    function defaultHandlerWrapper(element, event, handler) {
      handler.call(element, event)
    }

    function specialMouseHandlerWrapper(target, event, handler) {
      var related = event.relatedTarget;
      related && (related === target || jqLiteContains.call(target, related)) || handler.call(target, event)
    }

    function $$jqLiteProvider() {
      this.$get = function () {
        return extend(JQLite, {
          hasClass:       function (node, classes) {
            return node.attr && (node = node[0]), jqLiteHasClass(node, classes)
          }, addClass:    function (node, classes) {
            return node.attr && (node = node[0]), jqLiteAddClass(node, classes)
          }, removeClass: function (node, classes) {
            return node.attr && (node = node[0]), jqLiteRemoveClass(node, classes)
          }
        })
      }
    }

    function hashKey(obj, nextUidFn) {
      var key = obj && obj.$$hashKey;
      if (key) return "function" == typeof key && (key = obj.$$hashKey()), key;
      var objType = typeof obj;
      return key = "function" == objType || "object" == objType && null !== obj ? obj.$$hashKey = objType + ":" + (nextUidFn || nextUid)() : objType + ":" + obj
    }

    function HashMap(array, isolatedUid) {
      if (isolatedUid) {
        var uid      = 0;
        this.nextUid = function () {
          return ++uid
        }
      }
      forEach(array, this.put, this)
    }

    function extractArgs(fn) {
      var fnText = Function.prototype.toString.call(fn).replace(STRIP_COMMENTS, "");
      return fnText.match(ARROW_ARG) || fnText.match(FN_ARGS)
    }

    function anonFn(fn) {
      var args = extractArgs(fn);
      return args ? "function(" + (args[1] || "").replace(/[\s\r\n]+/, " ") + ")" : "fn"
    }

    function annotate(fn, strictDi, name) {
      var $inject, argDecl, last;
      if ("function" == typeof fn) {
        if (!($inject = fn.$inject)) {
          if ($inject = [], fn.length) {
            if (strictDi) throw isString(name) && name || (name = fn.name || anonFn(fn)), $injectorMinErr("strictdi", "{0} is not using explicit annotation and cannot be invoked in strict mode", name);
            argDecl = extractArgs(fn), forEach(argDecl[1].split(FN_ARG_SPLIT), function (arg) {
              arg.replace(FN_ARG, function (all, underscore, name) {
                $inject.push(name)
              })
            })
          }
          fn.$inject = $inject
        }
      } else isArray(fn) ? (last = fn.length - 1, assertArgFn(fn[last], "fn"), $inject = fn.slice(0, last)) : assertArgFn(fn, "fn", !0);
      return $inject
    }

    function createInjector(modulesToLoad, strictDi) {
      function supportObject(delegate) {
        return function (key, value) {
          if (!isObject(key)) return delegate(key, value);
          forEach(key, reverseParams(delegate))
        }
      }

      function provider(name, provider_) {
        if (assertNotHasOwnProperty(name, "service"), (isFunction(provider_) || isArray(provider_)) && (provider_ = providerInjector.instantiate(provider_)), !provider_.$get) throw $injectorMinErr("pget", "Provider '{0}' must define $get factory method.", name);
        return providerCache[name + providerSuffix] = provider_
      }

      function enforceReturnValue(name, factory) {
        return function () {
          var result = instanceInjector.invoke(factory, this)
          ;
          if (isUndefined(result)) throw $injectorMinErr("undef", "Provider '{0}' must return a value from $get factory method.", name);
          return result
        }
      }

      function factory(name, factoryFn, enforce) {
        return provider(name, {$get: !1 !== enforce ? enforceReturnValue(name, factoryFn) : factoryFn})
      }

      function service(name, constructor) {
        return factory(name, ["$injector", function ($injector) {
          return $injector.instantiate(constructor)
        }])
      }

      function value(name, val) {
        return factory(name, valueFn(val), !1)
      }

      function constant(name, value) {
        assertNotHasOwnProperty(name, "constant"), providerCache[name] = value, instanceCache[name] = value
      }

      function decorator(serviceName, decorFn) {
        var origProvider  = providerInjector.get(serviceName + providerSuffix), orig$get = origProvider.$get;
        origProvider.$get = function () {
          var origInstance = instanceInjector.invoke(orig$get, origProvider);
          return instanceInjector.invoke(decorFn, null, {$delegate: origInstance})
        }
      }

      function loadModules(modulesToLoad) {
        assertArg(isUndefined(modulesToLoad) || isArray(modulesToLoad), "modulesToLoad", "not an array");
        var moduleFn, runBlocks = [];
        return forEach(modulesToLoad, function (module) {
          function runInvokeQueue(queue) {
            var i, ii;
            for (i = 0, ii = queue.length; i < ii; i++) {
              var invokeArgs = queue[i], provider = providerInjector.get(invokeArgs[0]);
              provider[invokeArgs[1]].apply(provider, invokeArgs[2])
            }
          }

          if (!loadedModules.get(module)) {
            loadedModules.put(module, !0);
            try {
              isString(module) ? (moduleFn = angularModule(module), runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks), runInvokeQueue(moduleFn._invokeQueue), runInvokeQueue(moduleFn._configBlocks)) : isFunction(module) ? runBlocks.push(providerInjector.invoke(module)) : isArray(module) ? runBlocks.push(providerInjector.invoke(module)) : assertArgFn(module, "module")
            } catch (e) {
              throw isArray(module) && (module = module[module.length - 1]), e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack), $injectorMinErr("modulerr", "Failed to instantiate module {0} due to:\n{1}", module, e.stack || e.message || e)
            }
          }
        }), runBlocks
      }

      function createInternalInjector(cache, factory) {
        function getService(serviceName, caller) {
          if (cache.hasOwnProperty(serviceName)) {
            if (cache[serviceName] === INSTANTIATING) throw $injectorMinErr("cdep", "Circular dependency found: {0}", serviceName + " <- " + path.join(" <- "));
            return cache[serviceName]
          }
          try {
            return path.unshift(serviceName), cache[serviceName] = INSTANTIATING, cache[serviceName] = factory(serviceName, caller)
          } catch (err) {
            throw cache[serviceName] === INSTANTIATING && delete cache[serviceName], err
          } finally {
            path.shift()
          }
        }

        function injectionArgs(fn, locals, serviceName) {
          for (var args = [], $inject = createInjector.$$annotate(fn, strictDi, serviceName), i = 0, length = $inject.length; i < length; i++) {
            var key = $inject[i];
            if ("string" != typeof key) throw $injectorMinErr("itkn", "Incorrect injection token! Expected service name as string, got {0}", key);
            args.push(locals && locals.hasOwnProperty(key) ? locals[key] : getService(key, serviceName))
          }
          return args
        }

        function isClass(func) {
          return !(msie <= 11) && ("function" == typeof func && /^(?:class\s|constructor\()/.test(Function.prototype.toString.call(func)))
        }

        function invoke(fn, self, locals, serviceName) {
          "string" == typeof locals && (serviceName = locals, locals = null);
          var args = injectionArgs(fn, locals, serviceName);
          return isArray(fn) && (fn = fn[fn.length - 1]), isClass(fn) ? (args.unshift(null), new (Function.prototype.bind.apply(fn, args))) : fn.apply(self, args)
        }

        function instantiate(Type, locals, serviceName) {
          var ctor = isArray(Type) ? Type[Type.length - 1] : Type, args = injectionArgs(Type, locals, serviceName);
          return args.unshift(null), new (Function.prototype.bind.apply(ctor, args))
        }

        return {
          invoke:      invoke,
          instantiate: instantiate,
          get:         getService,
          annotate:    createInjector.$$annotate,
          has:         function (name) {
            return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name)
          }
        }
      }

      strictDi                                                                      = !0 === strictDi;
      var INSTANTIATING = {}, providerSuffix = "Provider", path = [], loadedModules = new HashMap([], !0),
          providerCache                                                             = {
            $provide: {
              provider:  supportObject(provider),
              factory:   supportObject(factory),
              service:   supportObject(service),
              value:     supportObject(value),
              constant:  supportObject(constant),
              decorator: decorator
            }
          },
          providerInjector                                                          = providerCache.$injector = createInternalInjector(providerCache, function (serviceName, caller) {
            throw angular.isString(caller) && path.push(caller), $injectorMinErr("unpr", "Unknown provider: {0}", path.join(" <- "))
          }), instanceCache                       = {},
          protoInstanceInjector                   = createInternalInjector(instanceCache, function (serviceName, caller) {
            var provider = providerInjector.get(serviceName + providerSuffix, caller);
            return instanceInjector.invoke(provider.$get, provider, void 0, serviceName)
          }), instanceInjector                    = protoInstanceInjector;
      providerCache["$injector" + providerSuffix] = {$get: valueFn(protoInstanceInjector)};
      var runBlocks                               = loadModules(modulesToLoad);
      return instanceInjector = protoInstanceInjector.get("$injector"), instanceInjector.strictDi = strictDi, forEach(runBlocks, function (fn) {
        fn && instanceInjector.invoke(fn)
      }), instanceInjector
    }

    function $AnchorScrollProvider() {
      var autoScrollingEnabled = !0;
      this.disableAutoScrolling = function () {
        autoScrollingEnabled = !1
      }, this.$get = ["$window", "$location", "$rootScope", function ($window, $location, $rootScope) {
        function getFirstAnchor(list) {
          var result = null;
          return Array.prototype.some.call(list, function (element) {
            if ("a" === nodeName_(element)) return result = element, !0
          }), result
        }

        function getYOffset() {
          var offset = scroll.yOffset;
          if (isFunction(offset)) offset = offset(); else if (isElement(offset)) {
            var elem = offset[0], style = $window.getComputedStyle(elem);
            offset   = "fixed" !== style.position ? 0 : elem.getBoundingClientRect().bottom
          } else isNumber(offset) || (offset = 0);
          return offset
        }

        function scrollTo(elem) {
          if (elem) {
            elem.scrollIntoView();
            var offset = getYOffset();
            if (offset) {
              var elemTop = elem.getBoundingClientRect().top;
              $window.scrollBy(0, elemTop - offset)
            }
          } else $window.scrollTo(0, 0)
        }

        function scroll(hash) {
          hash = isString(hash) ? hash : $location.hash();
          var elm;
          hash ? (elm = document.getElementById(hash)) ? scrollTo(elm) : (elm = getFirstAnchor(document.getElementsByName(hash))) ? scrollTo(elm) : "top" === hash && scrollTo(null) : scrollTo(null)
        }

        var document = $window.document;
        return autoScrollingEnabled && $rootScope.$watch(function () {
          return $location.hash()
        }, function (newVal, oldVal) {
          newVal === oldVal && "" === newVal || jqLiteDocumentLoaded(function () {
            $rootScope.$evalAsync(scroll)
          })
        }), scroll
      }]
    }

    function mergeClasses(a, b) {
      return a || b ? a ? b ? (isArray(a) && (a = a.join(" ")), isArray(b) && (b = b.join(" ")), a + " " + b) : a : b : ""
    }

    function extractElementNode(element) {
      for (var i = 0; i < element.length; i++) {
        var elm = element[i];
        if (elm.nodeType === ELEMENT_NODE) return elm
      }
    }

    function splitClasses(classes) {
      isString(classes) && (classes = classes.split(" "));
      var obj = createMap();
      return forEach(classes, function (klass) {
        klass.length && (obj[klass] = !0)
      }), obj
    }

    function prepareAnimateOptions(options) {
      return isObject(options) ? options : {}
    }

    function Browser(window, document, $log, $sniffer) {
      function completeOutstandingRequest(fn) {
        try {
          fn.apply(null, sliceArgs(arguments, 1))
        } finally {
          if (0 === --outstandingRequestCount) for (; outstandingRequestCallbacks.length;) try {
            outstandingRequestCallbacks.pop()()
          } catch (e) {
            $log.error(e)
          }
        }
      }

      function getHash(url) {
        var index = url.indexOf("#");
        return -1 === index ? "" : url.substr(index)
      }

      function cacheStateAndFireUrlChange() {
        pendingLocation = null, cacheState(), fireUrlChange()
      }

      function cacheState() {
        cachedState = getCurrentState(), cachedState = isUndefined(cachedState) ? null : cachedState, equals(cachedState, lastCachedState) && (cachedState = lastCachedState), lastCachedState = cachedState
      }

      function fireUrlChange() {
        lastBrowserUrl === self.url() && lastHistoryState === cachedState || (lastBrowserUrl = self.url(), lastHistoryState = cachedState, forEach(urlChangeListeners, function (listener) {
          listener(self.url(), cachedState)
        }))
      }

      var self                                                                                = this, location = window.location, history = window.history,
          setTimeout = window.setTimeout, clearTimeout = window.clearTimeout, pendingDeferIds = {};
      self.isMock                                                                             = !1;
      var outstandingRequestCount                                                             = 0, outstandingRequestCallbacks                            = [];
      self.$$completeOutstandingRequest = completeOutstandingRequest, self.$$incOutstandingRequestCount = function () {
        outstandingRequestCount++
      }, self.notifyWhenNoOutstandingRequests = function (callback) {
        0 === outstandingRequestCount ? callback() : outstandingRequestCallbacks.push(callback)
      };
      var cachedState, lastHistoryState, lastBrowserUrl = location.href, baseElement = document.find("base"),
          pendingLocation                                                            = null, getCurrentState                                    = $sniffer.history ? function () {
            try {
              return history.state
            } catch (e) {
            }
          } : noop;
      cacheState(), lastHistoryState = cachedState, self.url = function (url, replace, state) {
        if (isUndefined(state) && (state = null), location !== window.location && (location = window.location), history !== window.history && (history = window.history), url) {
          var sameState = lastHistoryState === state;
          if (lastBrowserUrl === url && (!$sniffer.history || sameState)) return self;
          var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
          return lastBrowserUrl = url, lastHistoryState = state, !$sniffer.history || sameBase && sameState ? (sameBase && !pendingLocation || (pendingLocation = url), replace ? location.replace(url) : sameBase ? location.hash = getHash(url) : location.href = url, location.href !== url && (pendingLocation = url)) : (history[replace ? "replaceState" : "pushState"](state, "", url), cacheState(), lastHistoryState = cachedState), self
        }
        return pendingLocation || location.href.replace(/%27/g, "'")
      }, self.state = function () {
        return cachedState
      };
      var urlChangeListeners = [], urlChangeInit = !1, lastCachedState = null;
      self.onUrlChange = function (callback) {
        return urlChangeInit || ($sniffer.history && jqLite(window).on("popstate", cacheStateAndFireUrlChange), jqLite(window).on("hashchange", cacheStateAndFireUrlChange), urlChangeInit = !0), urlChangeListeners.push(callback), callback
      }, self.$$applicationDestroyed = function () {
        jqLite(window).off("hashchange popstate", cacheStateAndFireUrlChange)
      }, self.$$checkUrlChange = fireUrlChange, self.baseHref = function () {
        var href = baseElement.attr("href");
        return href ? href.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
      }, self.defer = function (fn, delay) {
        var timeoutId;
        return outstandingRequestCount++, timeoutId = setTimeout(function () {
          delete pendingDeferIds[timeoutId], completeOutstandingRequest(fn)
        }, delay || 0), pendingDeferIds[timeoutId] = !0, timeoutId
      }, self.defer.cancel = function (deferId) {
        return !!pendingDeferIds[deferId] && (delete pendingDeferIds[deferId], clearTimeout(deferId), completeOutstandingRequest(noop), !0)
      }
    }

    function $BrowserProvider() {
      this.$get = ["$window", "$log", "$sniffer", "$document", function ($window, $log, $sniffer, $document) {
        return new Browser($window, $document, $log, $sniffer)
      }]
    }

    function $CacheFactoryProvider() {
      this.$get = function () {
        function cacheFactory(cacheId, options) {
          function refresh(entry) {
            entry != freshEnd && (staleEnd ? staleEnd == entry && (staleEnd = entry.n) : staleEnd = entry, link(entry.n, entry.p), link(entry, freshEnd), freshEnd = entry, freshEnd.n = null)
          }

          function link(nextEntry, prevEntry) {
            nextEntry != prevEntry && (nextEntry && (nextEntry.p = prevEntry), prevEntry && (prevEntry.n = nextEntry))
          }

          if (cacheId in caches) throw minErr("$cacheFactory")("iid", "CacheId '{0}' is already taken!", cacheId);
          var size                                                                                        = 0, stats                                                                             = extend({}, options, {id: cacheId}), data = createMap(),
              capacity = options && options.capacity || Number.MAX_VALUE, lruHash = createMap(), freshEnd = null,
              staleEnd                                                                                    = null;
          return caches[cacheId] = {
            put:          function (key, value) {
              if (!isUndefined(value)) {
                if (capacity < Number.MAX_VALUE) {
                  refresh(lruHash[key] || (lruHash[key] = {key: key}))
                }
                return key in data || size++, data[key] = value, size > capacity && this.remove(staleEnd.key), value
              }
            }, get:       function (key) {
              if (capacity < Number.MAX_VALUE) {
                var lruEntry = lruHash[key];
                if (!lruEntry) return;
                refresh(lruEntry)
              }
              return data[key]
            }, remove:    function (key) {
              if (capacity < Number.MAX_VALUE) {
                var lruEntry = lruHash[key];
                if (!lruEntry) return;
                lruEntry == freshEnd && (freshEnd = lruEntry.p), lruEntry == staleEnd && (staleEnd = lruEntry.n), link(lruEntry.n, lruEntry.p), delete lruHash[key]
              }
              key in data && (delete data[key], size--)
            }, removeAll: function () {
              data = createMap(), size = 0, lruHash = createMap(), freshEnd = staleEnd = null
            }, destroy:   function () {
              data = null, stats = null, lruHash = null, delete caches[cacheId]
            }, info:      function () {
              return extend({}, stats, {size: size})
            }
          }
        }

        var caches = {};
        return cacheFactory.info = function () {
          var info = {};
          return forEach(caches, function (cache, cacheId) {
            info[cacheId] = cache.info()
          }), info
        }, cacheFactory.get = function (cacheId) {
          return caches[cacheId]
        }, cacheFactory
      }
    }

    function $TemplateCacheProvider() {
      this.$get = ["$cacheFactory", function ($cacheFactory) {
        return $cacheFactory("templates")
      }]
    }

    function UNINITIALIZED_VALUE() {
    }

    function $CompileProvider($provide, $$sanitizeUriProvider) {
      function parseIsolateBindings(scope, directiveName, isController) {
        var LOCAL_REGEXP = /^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/, bindings = createMap();
        return forEach(scope, function (definition, scopeName) {
          if (definition in bindingCache) return void(bindings[scopeName] = bindingCache[definition]);
          var match = definition.match(LOCAL_REGEXP);
          if (!match) throw $compileMinErr("iscp", "Invalid {3} for directive '{0}'. Definition: {... {1}: '{2}' ...}", directiveName, scopeName, definition, isController ? "controller bindings definition" : "isolate scope definition");
          bindings[scopeName] = {
            mode:       match[1][0],
            collection: "*" === match[2],
            optional:   "?" === match[3],
            attrName:   match[4] || scopeName
          }, match[4] && (bindingCache[definition] = bindings[scopeName])
        }), bindings
      }

      function parseDirectiveBindings(directive, directiveName) {
        var bindings = {isolateScope: null, bindToController: null};
        if (isObject(directive.scope) && (!0 === directive.bindToController ? (bindings.bindToController = parseIsolateBindings(directive.scope, directiveName, !0), bindings.isolateScope = {}) : bindings.isolateScope = parseIsolateBindings(directive.scope, directiveName, !1)), isObject(directive.bindToController) && (bindings.bindToController = parseIsolateBindings(directive.bindToController, directiveName, !0)), isObject(bindings.bindToController)) {
          var controller = directive.controller, controllerAs = directive.controllerAs;
          if (!controller) throw $compileMinErr("noctrl", "Cannot bind to controller without directive '{0}'s controller.", directiveName);
          if (!identifierForController(controller, controllerAs)) throw $compileMinErr("noident", "Cannot bind to controller without identifier for directive '{0}'.", directiveName)
        }
        return bindings
      }

      function assertValidDirectiveName(name) {
        var letter = name.charAt(0);
        if (!letter || letter !== lowercase(letter)) throw $compileMinErr("baddir", "Directive/Component name '{0}' is invalid. The first character must be a lowercase letter", name);
        if (name !== name.trim()) throw $compileMinErr("baddir", "Directive/Component name '{0}' is invalid. The name should not contain leading or trailing whitespaces", name)
      }

      var hasDirectives                                                       = {}, Suffix = "Directive",
          COMMENT_DIRECTIVE_REGEXP                                            = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/,
          CLASS_DIRECTIVE_REGEXP                                              = /(([\w\-]+)(?:\:([^;]+))?;?)/,
          ALL_OR_NOTHING_ATTRS                                                = makeMap("ngSrc,ngSrcset,src,srcset"),
          REQUIRE_PREFIX_REGEXP                                               = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/,
          EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/, bindingCache = createMap();
      this.directive = function registerDirective(name, directiveFactory) {
        return assertNotHasOwnProperty(name, "directive"), isString(name) ? (assertValidDirectiveName(name), assertArg(directiveFactory, "directiveFactory"), hasDirectives.hasOwnProperty(name) || (hasDirectives[name] = [], $provide.factory(name + Suffix, ["$injector", "$exceptionHandler", function ($injector, $exceptionHandler) {
          var directives = [];
          return forEach(hasDirectives[name], function (directiveFactory, index) {
            try {
              var directive = $injector.invoke(directiveFactory);
              isFunction(directive) ? directive = {compile: valueFn(directive)} : !directive.compile && directive.link && (directive.compile = valueFn(directive.link)), directive.priority = directive.priority || 0, directive.index = index, directive.name = directive.name || name, directive.require = directive.require || directive.controller && directive.name, directive.restrict = directive.restrict || "EA", directive.$$moduleName = directiveFactory.$$moduleName, directives.push(directive)
            } catch (e) {
              $exceptionHandler(e)
            }
          }), directives
        }])), hasDirectives[name].push(directiveFactory)) : forEach(name, reverseParams(registerDirective)), this
      }, this.component = function (name, options) {
        function factory($injector) {
          function makeInjectable(fn) {
            return isFunction(fn) || isArray(fn) ? function (tElement, tAttrs) {
              return $injector.invoke(fn, this, {$element: tElement, $attrs: tAttrs})
            } : fn
          }

          var template = options.template || options.templateUrl ? options.template : "", ddo = {
            controller:       controller,
            controllerAs:     identifierForController(options.controller) || options.controllerAs || "$ctrl",
            template:         makeInjectable(template),
            templateUrl:      makeInjectable(options.templateUrl),
            transclude:       options.transclude,
            scope:            {},
            bindToController: options.bindings || {},
            restrict:         "E",
            require:          options.require
          };
          return forEach(options, function (val, key) {
            "$" === key.charAt(0) && (ddo[key] = val)
          }), ddo
        }

        var controller = options.controller || function () {
        };
        return forEach(options, function (val, key) {
          "$" === key.charAt(0) && (factory[key] = val, isFunction(controller) && (controller[key] = val))
        }), factory.$inject = ["$injector"], this.directive(name, factory)
      }, this.aHrefSanitizationWhitelist = function (regexp) {
        return isDefined(regexp) ? ($$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp), this) : $$sanitizeUriProvider.aHrefSanitizationWhitelist()
      }, this.imgSrcSanitizationWhitelist = function (regexp) {
        return isDefined(regexp) ? ($$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp), this) : $$sanitizeUriProvider.imgSrcSanitizationWhitelist()
      };
      var debugInfoEnabled  = !0;
      this.debugInfoEnabled = function (enabled) {
        return isDefined(enabled) ? (debugInfoEnabled = enabled, this) : debugInfoEnabled
      };
      var TTL               = 10;
      this.onChangesTtl = function (value) {
        return arguments.length ? (TTL = value, this) : TTL
      }, this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$sce", "$animate", "$$sanitizeUri", function ($injector, $interpolate, $exceptionHandler, $templateRequest, $parse, $controller, $rootScope, $sce, $animate, $$sanitizeUri) {
        function flushOnChangesQueue() {
          try {
            if (!--onChangesTtl) throw onChangesQueue = void 0, $compileMinErr("infchng", "{0} $onChanges() iterations reached. Aborting!\n", TTL);
            $rootScope.$apply(function () {
              for (var i = 0, ii = onChangesQueue.length; i < ii; ++i) onChangesQueue[i]();
              onChangesQueue = void 0
            })
          } finally {
            onChangesTtl++
          }
        }

        function Attributes(element, attributesToCopy) {
          if (attributesToCopy) {
            var i, l, key, keys = Object.keys(attributesToCopy);
            for (i = 0, l = keys.length; i < l; i++) key = keys[i], this[key] = attributesToCopy[key]
          } else this.$attr = {};
          this.$$element = element
        }

        function setSpecialAttr(element, attrName, value) {
          specialAttrHolder.innerHTML = "<span " + attrName + ">";
          var attributes              = specialAttrHolder.firstChild.attributes, attribute = attributes[0];
          attributes.removeNamedItem(attribute.name), attribute.value = value, element.attributes.setNamedItem(attribute)
        }

        function safeAddClass($element, className) {
          try {
            $element.addClass(className)
          } catch (e) {
          }
        }

        function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
          $compileNodes instanceof jqLite || ($compileNodes = jqLite($compileNodes));
          for (var NOT_EMPTY = /\S+/, i = 0, len = $compileNodes.length; i < len; i++) {
            var domNode = $compileNodes[i];
            domNode.nodeType === NODE_TYPE_TEXT && domNode.nodeValue.match(NOT_EMPTY) && jqLiteWrapNode(domNode, $compileNodes[i] = window.document.createElement("span"))
          }
          var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority, ignoreDirective, previousCompileContext);
          compile.$$addScopeClass($compileNodes);
          var namespace = null;
          return function (scope, cloneConnectFn, options) {
            assertArg(scope, "scope"), previousCompileContext && previousCompileContext.needsNewScope && (scope = scope.$parent.$new()), options = options || {};
            var parentBoundTranscludeFn = options.parentBoundTranscludeFn,
                transcludeControllers   = options.transcludeControllers,
                futureParentElement     = options.futureParentElement;
            parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude && (parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude), namespace || (namespace = detectNamespaceForChildElements(futureParentElement));
            var $linkNode;
            if ($linkNode = "html" !== namespace ? jqLite(wrapTemplate(namespace, jqLite("<div>").append($compileNodes).html())) : cloneConnectFn ? JQLitePrototype.clone.call($compileNodes) : $compileNodes, transcludeControllers) for (var controllerName in transcludeControllers) $linkNode.data("$" + controllerName + "Controller", transcludeControllers[controllerName].instance);
            return compile.$$addScopeInfo($linkNode, scope), cloneConnectFn && cloneConnectFn($linkNode, scope), compositeLinkFn && compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn), $linkNode
          }
        }

        function detectNamespaceForChildElements(parentElement) {
          var node = parentElement && parentElement[0];
          return node && "foreignobject" !== nodeName_(node) && toString.call(node).match(/SVG/) ? "svg" : "html"
        }

        function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective, previousCompileContext) {
          function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {
            var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn, stableNodeList;
            if (nodeLinkFnFound) {
              var nodeListLength = nodeList.length;
              for (stableNodeList = new Array(nodeListLength), i = 0; i < linkFns.length; i += 3) idx = linkFns[i], stableNodeList[idx] = nodeList[idx]
            } else stableNodeList = nodeList;
            for (i = 0, ii = linkFns.length; i < ii;) node = stableNodeList[linkFns[i++]], nodeLinkFn = linkFns[i++], childLinkFn = linkFns[i++], nodeLinkFn ? (nodeLinkFn.scope ? (childScope = scope.$new(), compile.$$addScopeInfo(jqLite(node), childScope)) : childScope = scope, childBoundTranscludeFn = nodeLinkFn.transcludeOnThisElement ? createBoundTranscludeFn(scope, nodeLinkFn.transclude, parentBoundTranscludeFn) : !nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn ? parentBoundTranscludeFn : !parentBoundTranscludeFn && transcludeFn ? createBoundTranscludeFn(scope, transcludeFn) : null, nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn)) : childLinkFn && childLinkFn(scope, node.childNodes, void 0, parentBoundTranscludeFn)
          }

          for (var attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound, linkFns = [], i = 0; i < nodeList.length; i++) attrs = new Attributes, directives = collectDirectives(nodeList[i], [], attrs, 0 === i ? maxPriority : void 0, ignoreDirective), nodeLinkFn = directives.length ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement, null, [], [], previousCompileContext) : null, nodeLinkFn && nodeLinkFn.scope && compile.$$addScopeClass(attrs.$$element), childLinkFn = nodeLinkFn && nodeLinkFn.terminal || !(childNodes = nodeList[i].childNodes) || !childNodes.length ? null : compileNodes(childNodes, nodeLinkFn ? (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement) && nodeLinkFn.transclude : transcludeFn), (nodeLinkFn || childLinkFn) && (linkFns.push(i, nodeLinkFn, childLinkFn), linkFnFound = !0, nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn), previousCompileContext = null;
          return linkFnFound ? compositeLinkFn : null
        }

        function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {
          function boundTranscludeFn(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {
            return transcludedScope || (transcludedScope = scope.$new(!1, containingScope), transcludedScope.$$transcluded = !0), transcludeFn(transcludedScope, cloneFn, {
              parentBoundTranscludeFn: previousBoundTranscludeFn,
              transcludeControllers:   controllers,
              futureParentElement:     futureParentElement
            })
          }

          var boundSlots = boundTranscludeFn.$$slots = createMap();
          for (var slotName in transcludeFn.$$slots) transcludeFn.$$slots[slotName] ? boundSlots[slotName] = createBoundTranscludeFn(scope, transcludeFn.$$slots[slotName], previousBoundTranscludeFn) : boundSlots[slotName] = null;
          return boundTranscludeFn
        }

        function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
          var match, className, nodeType = node.nodeType, attrsMap = attrs.$attr;
          switch (nodeType) {
            case NODE_TYPE_ELEMENT:
              addDirective(directives, directiveNormalize(nodeName_(node)), "E", maxPriority, ignoreDirective);
              for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes, j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {
                var attrStartName = !1, attrEndName = !1;
                attr = nAttrs[j], name = attr.name, value = trim(attr.value), ngAttrName = directiveNormalize(name), (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) && (name = name.replace(PREFIX_REGEXP, "").substr(8).replace(/_(.)/g, function (match, letter) {
                  return letter.toUpperCase()
                }));
                var multiElementMatch = ngAttrName.match(MULTI_ELEMENT_DIR_RE);
                multiElementMatch && directiveIsMultiElement(multiElementMatch[1]) && (attrStartName = name, attrEndName = name.substr(0, name.length - 5) + "end", name = name.substr(0, name.length - 6)), nName = directiveNormalize(name.toLowerCase()), attrsMap[nName] = name, !isNgAttr && attrs.hasOwnProperty(nName) || (attrs[nName] = value, getBooleanAttrName(node, nName) && (attrs[nName] = !0)), addAttrInterpolateDirective(node, directives, value, nName, isNgAttr), addDirective(directives, nName, "A", maxPriority, ignoreDirective, attrStartName, attrEndName)
              }
              if (className = node.className, isObject(className) && (className = className.animVal), isString(className) && "" !== className) for (; match = CLASS_DIRECTIVE_REGEXP.exec(className);) nName = directiveNormalize(match[2]), addDirective(directives, nName, "C", maxPriority, ignoreDirective) && (attrs[nName] = trim(match[3])), className = className.substr(match.index + match[0].length);
              break;
            case NODE_TYPE_TEXT:
              if (11 === msie) for (; node.parentNode && node.nextSibling && node.nextSibling.nodeType === NODE_TYPE_TEXT;) node.nodeValue = node.nodeValue + node.nextSibling.nodeValue, node.parentNode.removeChild(node.nextSibling);
              addTextInterpolateDirective(directives, node.nodeValue);
              break;
            case NODE_TYPE_COMMENT:
              try {
                match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue), match && (nName = directiveNormalize(match[1]), addDirective(directives, nName, "M", maxPriority, ignoreDirective) && (attrs[nName] = trim(match[2])))
              } catch (e) {
              }
          }
          return directives.sort(byPriority), directives
        }

        function groupScan(node, attrStart, attrEnd) {
          var nodes = [], depth = 0;
          if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) do {
            if (!node) throw $compileMinErr("uterdir", "Unterminated attribute, found '{0}' but no matching '{1}' found.", attrStart, attrEnd);
            node.nodeType == NODE_TYPE_ELEMENT && (node.hasAttribute(attrStart) && depth++, node.hasAttribute(attrEnd) && depth--), nodes.push(node), node = node.nextSibling
          } while (depth > 0); else nodes.push(node);
          return jqLite(nodes)
        }

        function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
          return function (scope, element, attrs, controllers, transcludeFn) {
            return element = groupScan(element[0], attrStart, attrEnd), linkFn(scope, element, attrs, controllers, transcludeFn)
          }
        }

        function compilationGenerator(eager, $compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
          var compiled;
          return eager ? compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) : function () {
            return compiled || (compiled = compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext), $compileNodes = transcludeFn = previousCompileContext = null), compiled.apply(this, arguments)
          }
        }

        function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection, originalReplaceDirective, preLinkFns, postLinkFns, previousCompileContext) {
          function addLinkFns(pre, post, attrStart, attrEnd) {
            pre && (attrStart && (pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd)), pre.require = directive.require, pre.directiveName = directiveName, (newIsolateScopeDirective === directive || directive.$$isolateScope) && (pre = cloneAndAnnotateFn(pre, {isolateScope: !0})), preLinkFns.push(pre)), post && (attrStart && (post = groupElementsLinkFnWrapper(post, attrStart, attrEnd)), post.require = directive.require, post.directiveName = directiveName, (newIsolateScopeDirective === directive || directive.$$isolateScope) && (post = cloneAndAnnotateFn(post, {isolateScope: !0})), postLinkFns.push(post))
          }

          function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {
            function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement, slotName) {
              var transcludeControllers;
              if (isScope(scope) || (slotName = futureParentElement, futureParentElement = cloneAttachFn, cloneAttachFn = scope, scope = void 0), hasElementTranscludeDirective && (transcludeControllers = elementControllers), futureParentElement || (futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element), !slotName) return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
              var slotTranscludeFn = boundTranscludeFn.$$slots[slotName];
              if (slotTranscludeFn) return slotTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
              if (isUndefined(slotTranscludeFn)) throw $compileMinErr("noslot", 'No parent directive that requires a transclusion with slot name "{0}". Element: {1}', slotName, startingTag($element))
            }

            var i, ii, linkFn, isolateScope, controllerScope, elementControllers, transcludeFn, $element, attrs,
                scopeBindingInfo;
            compileNode === linkNode ? (attrs = templateAttrs, $element = templateAttrs.$$element) : ($element = jqLite(linkNode), attrs = new Attributes($element, templateAttrs)), controllerScope = scope, newIsolateScopeDirective ? isolateScope = scope.$new(!0) : newScopeDirective && (controllerScope = scope.$parent), boundTranscludeFn && (transcludeFn = controllersBoundTransclude, transcludeFn.$$boundTransclude = boundTranscludeFn, transcludeFn.isSlotFilled = function (slotName) {
              return !!boundTranscludeFn.$$slots[slotName]
            }), controllerDirectives && (elementControllers = setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective)), newIsolateScopeDirective && (compile.$$addScopeInfo($element, isolateScope, !0, !(templateDirective && (templateDirective === newIsolateScopeDirective || templateDirective === newIsolateScopeDirective.$$originalDirective))), compile.$$addScopeClass($element, !0), isolateScope.$$isolateBindings = newIsolateScopeDirective.$$isolateBindings, scopeBindingInfo = initializeDirectiveBindings(scope, attrs, isolateScope, isolateScope.$$isolateBindings, newIsolateScopeDirective), scopeBindingInfo.removeWatches && isolateScope.$on("$destroy", scopeBindingInfo.removeWatches));
            for (var name in elementControllers) {
              var controllerDirective = controllerDirectives[name], controller = elementControllers[name],
                  bindings                                                     = controllerDirective.$$bindings.bindToController;
              controller.identifier && bindings ? controller.bindingInfo = initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective) : controller.bindingInfo = {};
              var controllerResult = controller();
              controllerResult !== controller.instance && (controller.instance = controllerResult, $element.data("$" + controllerDirective.name + "Controller", controllerResult), controller.bindingInfo.removeWatches && controller.bindingInfo.removeWatches(), controller.bindingInfo = initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective))
            }
            for (forEach(controllerDirectives, function (controllerDirective, name) {
              var require = controllerDirective.require;
              controllerDirective.bindToController && !isArray(require) && isObject(require) && extend(elementControllers[name].instance, getControllers(name, require, $element, elementControllers))
            }), forEach(elementControllers, function (controller) {
              var controllerInstance = controller.instance;
              isFunction(controllerInstance.$onChanges) && controllerInstance.$onChanges(controller.bindingInfo.initialChanges), isFunction(controllerInstance.$onInit) && controllerInstance.$onInit(), isFunction(controllerInstance.$onDestroy) && controllerScope.$on("$destroy", function () {
                controllerInstance.$onDestroy()
              })
            }), i = 0, ii = preLinkFns.length; i < ii; i++) linkFn = preLinkFns[i], invokeLinkFn(linkFn, linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);
            var scopeToChild = scope;
            for (newIsolateScopeDirective && (newIsolateScopeDirective.template || null === newIsolateScopeDirective.templateUrl) && (scopeToChild = isolateScope), childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, void 0, boundTranscludeFn), i = postLinkFns.length - 1; i >= 0; i--) linkFn = postLinkFns[i], invokeLinkFn(linkFn, linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);
            forEach(elementControllers, function (controller) {
              var controllerInstance = controller.instance;
              isFunction(controllerInstance.$postLink) && controllerInstance.$postLink()
            })
          }

          previousCompileContext = previousCompileContext || {}
          ;
          for (var directive, directiveName, $template, linkFn, directiveValue, terminalPriority = -Number.MAX_VALUE, newScopeDirective = previousCompileContext.newScopeDirective, controllerDirectives = previousCompileContext.controllerDirectives, newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective, templateDirective = previousCompileContext.templateDirective, nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective, hasTranscludeDirective = !1, hasTemplate = !1, hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective, $compileNode = templateAttrs.$$element = jqLite(compileNode), replaceDirective = originalReplaceDirective, childTranscludeFn = transcludeFn, didScanForMultipleTransclusion = !1, mightHaveMultipleTransclusionError = !1, i = 0, ii = directives.length; i < ii; i++) {
            directive     = directives[i];
            var attrStart = directive.$$start, attrEnd = directive.$$end;
            if (attrStart && ($compileNode = groupScan(compileNode, attrStart, attrEnd)), $template = void 0, terminalPriority > directive.priority) break;
            if ((directiveValue = directive.scope) && (directive.templateUrl || (isObject(directiveValue) ? (assertNoDuplicate("new/isolated scope", newIsolateScopeDirective || newScopeDirective, directive, $compileNode), newIsolateScopeDirective = directive) : assertNoDuplicate("new/isolated scope", newIsolateScopeDirective, directive, $compileNode)), newScopeDirective = newScopeDirective || directive), directiveName = directive.name, !didScanForMultipleTransclusion && (directive.replace && (directive.templateUrl || directive.template) || directive.transclude && !directive.$$tlb)) {
              for (var candidateDirective, scanningIndex = i + 1; candidateDirective = directives[scanningIndex++];) if (candidateDirective.transclude && !candidateDirective.$$tlb || candidateDirective.replace && (candidateDirective.templateUrl || candidateDirective.template)) {
                mightHaveMultipleTransclusionError = !0;
                break
              }
              didScanForMultipleTransclusion = !0
            }
            if (!directive.templateUrl && directive.controller && (directiveValue = directive.controller, controllerDirectives = controllerDirectives || createMap(), assertNoDuplicate("'" + directiveName + "' controller", controllerDirectives[directiveName], directive, $compileNode), controllerDirectives[directiveName] = directive), directiveValue = directive.transclude) if (hasTranscludeDirective = !0, directive.$$tlb || (assertNoDuplicate("transclusion", nonTlbTranscludeDirective, directive, $compileNode), nonTlbTranscludeDirective = directive), "element" == directiveValue) hasElementTranscludeDirective = !0, terminalPriority = directive.priority, $template = $compileNode, $compileNode = templateAttrs.$$element = jqLite(compile.$$createComment(directiveName, templateAttrs[directiveName])), compileNode = $compileNode[0], replaceWith(jqCollection, sliceArgs($template), compileNode), $template[0].$$parentNode = $template[0].parentNode, childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, terminalPriority, replaceDirective && replaceDirective.name, {nonTlbTranscludeDirective: nonTlbTranscludeDirective}); else {
              var slots = createMap();
              if ($template = jqLite(jqLiteClone(compileNode)).contents(), isObject(directiveValue)) {
                $template   = [];
                var slotMap = createMap(), filledSlots = createMap();
                forEach(directiveValue, function (elementSelector, slotName) {
                  var optional = "?" === elementSelector.charAt(0);
                  elementSelector = optional ? elementSelector.substring(1) : elementSelector, slotMap[elementSelector] = slotName, slots[slotName] = null, filledSlots[slotName] = optional
                }), forEach($compileNode.contents(), function (node) {
                  var slotName = slotMap[directiveNormalize(nodeName_(node))];
                  slotName ? (filledSlots[slotName] = !0, slots[slotName] = slots[slotName] || [], slots[slotName].push(node)) : $template.push(node)
                }), forEach(filledSlots, function (filled, slotName) {
                  if (!filled) throw $compileMinErr("reqslot", "Required transclusion slot `{0}` was not filled.", slotName)
                });
                for (var slotName in slots) slots[slotName] && (slots[slotName] = compilationGenerator(mightHaveMultipleTransclusionError, slots[slotName], transcludeFn))
              }
              $compileNode.empty(), childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, void 0, void 0, {needsNewScope: directive.$$isolateScope || directive.$$newScope}), childTranscludeFn.$$slots = slots
            }
            if (directive.template) if (hasTemplate = !0, assertNoDuplicate("template", templateDirective, directive, $compileNode), templateDirective = directive, directiveValue = isFunction(directive.template) ? directive.template($compileNode, templateAttrs) : directive.template, directiveValue = denormalizeTemplate(directiveValue), directive.replace) {
              if (replaceDirective = directive, $template = jqLiteIsTextNode(directiveValue) ? [] : removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue))), compileNode = $template[0], 1 != $template.length || compileNode.nodeType !== NODE_TYPE_ELEMENT) throw $compileMinErr("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", directiveName, "");
              replaceWith(jqCollection, $compileNode, compileNode);
              var newTemplateAttrs      = {$attr: {}},
                  templateDirectives    = collectDirectives(compileNode, [], newTemplateAttrs),
                  unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));
              (newIsolateScopeDirective || newScopeDirective) && markDirectiveScope(templateDirectives, newIsolateScopeDirective, newScopeDirective), directives = directives.concat(templateDirectives).concat(unprocessedDirectives), mergeTemplateAttributes(templateAttrs, newTemplateAttrs), ii = directives.length
            } else $compileNode.html(directiveValue);
            if (directive.templateUrl) hasTemplate = !0, assertNoDuplicate("template", templateDirective, directive, $compileNode), templateDirective = directive, directive.replace && (replaceDirective = directive), nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode, templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {
              controllerDirectives:      controllerDirectives,
              newScopeDirective:         newScopeDirective !== directive && newScopeDirective,
              newIsolateScopeDirective:  newIsolateScopeDirective,
              templateDirective:         templateDirective,
              nonTlbTranscludeDirective: nonTlbTranscludeDirective
            }), ii = directives.length; else if (directive.compile) try {
              linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn), isFunction(linkFn) ? addLinkFns(null, linkFn, attrStart, attrEnd) : linkFn && addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd)
            } catch (e) {
              $exceptionHandler(e, startingTag($compileNode))
            }
            directive.terminal && (nodeLinkFn.terminal = !0, terminalPriority = Math.max(terminalPriority, directive.priority))
          }
          return nodeLinkFn.scope = newScopeDirective && !0 === newScopeDirective.scope, nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective, nodeLinkFn.templateOnThisElement = hasTemplate, nodeLinkFn.transclude = childTranscludeFn, previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective, nodeLinkFn
        }

        function getControllers(directiveName, require, $element, elementControllers) {
          var value;
          if (isString(require)) {
            var match = require.match(REQUIRE_PREFIX_REGEXP), name = require.substring(match[0].length),
                inheritType                                        = match[1] || match[3], optional = "?" === match[2];
            if ("^^" === inheritType ? $element = $element.parent() : (value = elementControllers && elementControllers[name], value = value && value.instance), !value) {
              var dataName = "$" + name + "Controller";
              value        = inheritType ? $element.inheritedData(dataName) : $element.data(dataName)
            }
            if (!value && !optional) throw $compileMinErr("ctreq", "Controller '{0}', required by directive '{1}', can't be found!", name, directiveName)
          } else if (isArray(require)) {
            value = [];
            for (var i = 0, ii = require.length; i < ii; i++) value[i] = getControllers(directiveName, require[i], $element, elementControllers)
          } else isObject(require) && (value = {}, forEach(require, function (controller, property) {
            value[property] = getControllers(directiveName, controller, $element, elementControllers)
          }));
          return value || null
        }

        function setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective) {
          var elementControllers = createMap();
          for (var controllerKey in controllerDirectives) {
            var directive = controllerDirectives[controllerKey], locals = {
              $scope:      directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,
              $element:    $element,
              $attrs:      attrs,
              $transclude: transcludeFn
            }, controller = directive.controller;
            "@" == controller && (controller = attrs[directive.name]);
            var controllerInstance = $controller(controller, locals, !0, directive.controllerAs);
            elementControllers[directive.name] = controllerInstance, $element.data("$" + directive.name + "Controller", controllerInstance.instance)
          }
          return elementControllers
        }

        function markDirectiveScope(directives, isolateScope, newScope) {
          for (var j = 0, jj = directives.length; j < jj; j++) directives[j] = inherit(directives[j], {
            $$isolateScope: isolateScope,
            $$newScope:     newScope
          })
        }

        function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName, endAttrName) {
          if (name === ignoreDirective) return null;
          var match = null;
          if (hasDirectives.hasOwnProperty(name)) for (var directive, directives = $injector.get(name + Suffix), i = 0, ii = directives.length; i < ii; i++) try {
            if (directive = directives[i], (isUndefined(maxPriority) || maxPriority > directive.priority) && -1 != directive.restrict.indexOf(location)) {
              if (startAttrName && (directive = inherit(directive, {
                  $$start: startAttrName,
                  $$end:   endAttrName
                })), !directive.$$bindings) {
                var bindings = directive.$$bindings = parseDirectiveBindings(directive, directive.name);
                isObject(bindings.isolateScope) && (directive.$$isolateBindings = bindings.isolateScope)
              }
              tDirectives.push(directive), match = directive
            }
          } catch (e) {
            $exceptionHandler(e)
          }
          return match
        }

        function directiveIsMultiElement(name) {
          if (hasDirectives.hasOwnProperty(name)) for (var directive, directives = $injector.get(name + Suffix), i = 0, ii = directives.length; i < ii; i++) if (directive = directives[i], directive.multiElement) return !0;
          return !1
        }

        function mergeTemplateAttributes(dst, src) {
          var srcAttr = src.$attr, dstAttr = dst.$attr, $element = dst.$$element;
          forEach(dst, function (value, key) {
            "$" != key.charAt(0) && (src[key] && src[key] !== value && (value += ("style" === key ? ";" : " ") + src[key]), dst.$set(key, value, !0, srcAttr[key]))
          }), forEach(src, function (value, key) {
            "class" == key ? (safeAddClass($element, value), dst.class = (dst.class ? dst.class + " " : "") + value) : "style" == key ? ($element.attr("style", $element.attr("style") + ";" + value), dst.style = (dst.style ? dst.style + ";" : "") + value) : "$" == key.charAt(0) || dst.hasOwnProperty(key) || (dst[key] = value, dstAttr[key] = srcAttr[key])
          })
        }

        function compileTemplateUrl(directives, $compileNode, tAttrs, $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {
          var afterTemplateNodeLinkFn, afterTemplateChildLinkFn, linkQueue = [],
              beforeTemplateCompileNode                                    = $compileNode[0],
              origAsyncDirective                                           = directives.shift(),
              derivedSyncDirective                                         = inherit(origAsyncDirective, {
                templateUrl:         null,
                transclude:          null,
                replace:             null,
                $$originalDirective: origAsyncDirective
              }),
              templateUrl                                                  = isFunction(origAsyncDirective.templateUrl) ? origAsyncDirective.templateUrl($compileNode, tAttrs) : origAsyncDirective.templateUrl,
              templateNamespace                                            = origAsyncDirective.templateNamespace;
          return $compileNode.empty(), $templateRequest(templateUrl).then(function (content) {
            var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;
            if (content = denormalizeTemplate(content), origAsyncDirective.replace) {
              if ($template = jqLiteIsTextNode(content) ? [] : removeComments(wrapTemplate(templateNamespace, trim(content))), compileNode = $template[0], 1 != $template.length || compileNode.nodeType !== NODE_TYPE_ELEMENT) throw $compileMinErr("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", origAsyncDirective.name, templateUrl);
              tempTemplateAttrs = {$attr: {}}, replaceWith($rootElement, $compileNode, compileNode);
              var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);
              isObject(origAsyncDirective.scope) && markDirectiveScope(templateDirectives, !0), directives = templateDirectives.concat(directives), mergeTemplateAttributes(tAttrs, tempTemplateAttrs)
            } else compileNode = beforeTemplateCompileNode, $compileNode.html(content);
            for (directives.unshift(derivedSyncDirective), afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns, previousCompileContext), forEach($rootElement, function (node, i) {
              node == compileNode && ($rootElement[i] = $compileNode[0])
            }), afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn); linkQueue.length;) {
              var scope                                                  = linkQueue.shift(), beforeTemplateLinkNode = linkQueue.shift(),
                  linkRootElement = linkQueue.shift(), boundTranscludeFn = linkQueue.shift(),
                  linkNode                                               = $compileNode[0];
              if (!scope.$$destroyed) {
                if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
                  var oldClasses = beforeTemplateLinkNode.className;
                  previousCompileContext.hasElementTranscludeDirective && origAsyncDirective.replace || (linkNode = jqLiteClone(compileNode)), replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode), safeAddClass(jqLite(linkNode), oldClasses)
                }
                childBoundTranscludeFn = afterTemplateNodeLinkFn.transcludeOnThisElement ? createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn) : boundTranscludeFn, afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, childBoundTranscludeFn)
              }
            }
            linkQueue = null
          }), function (ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {
            var childBoundTranscludeFn = boundTranscludeFn;
            scope.$$destroyed || (linkQueue ? linkQueue.push(scope, node, rootElement, childBoundTranscludeFn) : (afterTemplateNodeLinkFn.transcludeOnThisElement && (childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn)), afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn)))
          }
        }

        function byPriority(a, b) {
          var diff = b.priority - a.priority;
          return 0 !== diff ? diff : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index
        }

        function assertNoDuplicate(what, previousDirective, directive, element) {
          function wrapModuleNameIfDefined(moduleName) {
            return moduleName ? " (module: " + moduleName + ")" : ""
          }

          if (previousDirective) throw $compileMinErr("multidir", "Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}", previousDirective.name, wrapModuleNameIfDefined(previousDirective.$$moduleName), directive.name, wrapModuleNameIfDefined(directive.$$moduleName), what, startingTag(element))
        }

        function addTextInterpolateDirective(directives, text) {
          var interpolateFn = $interpolate(text, !0);
          interpolateFn && directives.push({
            priority: 0, compile: function (templateNode) {
              var templateNodeParent = templateNode.parent(), hasCompileParent = !!templateNodeParent.length;
              return hasCompileParent && compile.$$addBindingClass(templateNodeParent), function (scope, node) {
                var parent = node.parent();
                hasCompileParent || compile.$$addBindingClass(parent), compile.$$addBindingInfo(parent, interpolateFn.expressions), scope.$watch(interpolateFn, function (value) {
                  node[0].nodeValue = value
                })
              }
            }
          })
        }

        function wrapTemplate(type, template) {
          switch (type = lowercase(type || "html")) {
            case"svg":
            case"math":
              var wrapper = window.document.createElement("div");
              return wrapper.innerHTML = "<" + type + ">" + template + "</" + type + ">", wrapper.childNodes[0].childNodes;
            default:
              return template
          }
        }

        function getTrustedContext(node, attrNormalizedName) {
          if ("srcdoc" == attrNormalizedName) return $sce.HTML;
          var tag = nodeName_(node);
          return "xlinkHref" == attrNormalizedName || "form" == tag && "action" == attrNormalizedName || "img" != tag && ("src" == attrNormalizedName || "ngSrc" == attrNormalizedName) ? $sce.RESOURCE_URL : void 0
        }

        function addAttrInterpolateDirective(node, directives, value, name, allOrNothing) {
          var trustedContext = getTrustedContext(node, name);
          allOrNothing       = ALL_OR_NOTHING_ATTRS[name] || allOrNothing;
          var interpolateFn  = $interpolate(value, !0, trustedContext, allOrNothing);
          if (interpolateFn) {
            if ("multiple" === name && "select" === nodeName_(node)) throw $compileMinErr("selmulti", "Binding to the 'multiple' attribute is not supported. Element: {0}", startingTag(node));
            directives.push({
              priority: 100, compile: function () {
                return {
                  pre: function (scope, element, attr) {
                    var $$observers = attr.$$observers || (attr.$$observers = createMap());
                    if (EVENT_HANDLER_ATTR_REGEXP.test(name)) throw $compileMinErr("nodomevents", "Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.");
                    var newValue = attr[name];
                    newValue !== value && (interpolateFn = newValue && $interpolate(newValue, !0, trustedContext, allOrNothing), value = newValue), interpolateFn && (attr[name] = interpolateFn(scope), ($$observers[name] || ($$observers[name] = [])).$$inter = !0, (attr.$$observers && attr.$$observers[name].$$scope || scope).$watch(interpolateFn, function (newValue, oldValue) {
                      "class" === name && newValue != oldValue ? attr.$updateClass(newValue, oldValue) : attr.$set(name, newValue)
                    }))
                  }
                }
              }
            })
          }
        }

        function replaceWith($rootElement, elementsToRemove, newNode) {
          var i, ii, firstElementToRemove = elementsToRemove[0], removeCount = elementsToRemove.length,
              parent                                                         = firstElementToRemove.parentNode;
          if ($rootElement) for (i = 0, ii = $rootElement.length; i < ii; i++) if ($rootElement[i] == firstElementToRemove) {
            $rootElement[i++] = newNode;
            for (var j = i, j2 = j + removeCount - 1, jj = $rootElement.length; j < jj; j++, j2++) j2 < jj ? $rootElement[j] = $rootElement[j2] : delete $rootElement[j];
            $rootElement.length -= removeCount - 1, $rootElement.context === firstElementToRemove && ($rootElement.context = newNode);
            break
          }
          parent && parent.replaceChild(newNode, firstElementToRemove);
          var fragment = window.document.createDocumentFragment();
          for (i = 0; i < removeCount; i++) fragment.appendChild(elementsToRemove[i]);
          for (jqLite.hasData(firstElementToRemove) && (jqLite.data(newNode, jqLite.data(firstElementToRemove)), jqLite(firstElementToRemove).off("$destroy")), jqLite.cleanData(fragment.querySelectorAll("*")), i = 1; i < removeCount; i++) delete elementsToRemove[i];
          elementsToRemove[0] = newNode, elementsToRemove.length = 1
        }

        function cloneAndAnnotateFn(fn, annotation) {
          return extend(function () {
            return fn.apply(null, arguments)
          }, fn, annotation)
        }

        function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {
          try {
            linkFn(scope, $element, attrs, controllers, transcludeFn)
          } catch (e) {
            $exceptionHandler(e, startingTag($element))
          }
        }

        function initializeDirectiveBindings(scope, attrs, destination, bindings, directive) {
          function recordChanges(key, currentValue, previousValue) {
            isFunction(destination.$onChanges) && currentValue !== previousValue && (onChangesQueue || (scope.$$postDigest(flushOnChangesQueue), onChangesQueue = []), changes || (changes = {}, onChangesQueue.push(triggerOnChangesHook)), changes[key] && (previousValue = changes[key].previousValue), changes[key] = new SimpleChange(previousValue, currentValue))
          }

          function triggerOnChangesHook() {
            destination.$onChanges(changes), changes = void 0
          }

          var changes, removeWatchCollection = [], initialChanges = {};
          return forEach(bindings, function (definition, scopeName) {
            var lastValue, parentGet, parentSet, compare, removeWatch, attrName = definition.attrName,
                optional                                                        = definition.optional,
                mode                                                            = definition.mode;
            switch (mode) {
              case"@":
                optional || hasOwnProperty.call(attrs, attrName) || (destination[scopeName] = attrs[attrName] = void 0), attrs.$observe(attrName, function (value) {
                  if (isString(value) || isBoolean(value)) {
                    var oldValue = destination[scopeName];
                    recordChanges(scopeName, value, oldValue), destination[scopeName] = value
                  }
                }), attrs.$$observers[attrName].$$scope = scope, lastValue = attrs[attrName], isString(lastValue) ? destination[scopeName] = $interpolate(lastValue)(scope) : isBoolean(lastValue) && (destination[scopeName] = lastValue), initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);
                break;
              case"=":
                if (!hasOwnProperty.call(attrs, attrName)) {
                  if (optional) break;
                  attrs[attrName] = void 0
                }
                if (optional && !attrs[attrName]) break;
                parentGet = $parse(attrs[attrName]), compare = parentGet.literal ? equals : function (a, b) {
                  return a === b || a !== a && b !== b
                }, parentSet = parentGet.assign || function () {
                  throw lastValue = destination[scopeName] = parentGet(scope), $compileMinErr("nonassign", "Expression '{0}' in attribute '{1}' used with directive '{2}' is non-assignable!", attrs[attrName], attrName, directive.name)
                }, lastValue = destination[scopeName] = parentGet(scope);
                var parentValueWatch = function (parentValue) {
                  return compare(parentValue, destination[scopeName]) || (compare(parentValue, lastValue) ? parentSet(scope, parentValue = destination[scopeName]) : destination[scopeName] = parentValue), lastValue = parentValue
                };
                parentValueWatch.$stateful = !0, removeWatch = definition.collection ? scope.$watchCollection(attrs[attrName], parentValueWatch) : scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal), removeWatchCollection.push(removeWatch);
                break;
              case"<":
                if (!hasOwnProperty.call(attrs, attrName)) {
                  if (optional) break;
                  attrs[attrName] = void 0
                }
                if (optional && !attrs[attrName]) break;
                parentGet = $parse(attrs[attrName]), destination[scopeName] = parentGet(scope), initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]), removeWatch = scope.$watch(parentGet, function (newValue, oldValue) {
                  newValue === oldValue && (oldValue = destination[scopeName]), recordChanges(scopeName, newValue, oldValue), destination[scopeName] = newValue
                }, parentGet.literal), removeWatchCollection.push(removeWatch);
                break;
              case"&":
                if ((parentGet = attrs.hasOwnProperty(attrName) ? $parse(attrs[attrName]) : noop) === noop && optional) break;
                destination[scopeName] = function (locals) {
                  return parentGet(scope, locals)
                }
            }
          }), {
            initialChanges: initialChanges, removeWatches: removeWatchCollection.length && function () {
              for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) removeWatchCollection[i]()
            }
          }
        }

        var onChangesQueue, SIMPLE_ATTR_NAME = /^\w/, specialAttrHolder = window.document.createElement("div"),
            onChangesTtl                                                = TTL;
        Attributes.prototype                                            = {
          $normalize:      directiveNormalize, $addClass: function (classVal) {
            classVal && classVal.length > 0 && $animate.addClass(this.$$element, classVal)
          }, $removeClass: function (classVal) {
            classVal && classVal.length > 0 && $animate.removeClass(this.$$element, classVal)
          }, $updateClass: function (newClasses, oldClasses) {
            var toAdd = tokenDifference(newClasses, oldClasses);
            toAdd && toAdd.length && $animate.addClass(this.$$element, toAdd);
            var toRemove = tokenDifference(oldClasses, newClasses);
            toRemove && toRemove.length && $animate.removeClass(this.$$element, toRemove)
          }, $set:         function (key, value, writeAttr, attrName) {
            var nodeName, node                                 = this.$$element[0], booleanKey = getBooleanAttrName(node, key),
                aliasedKey = getAliasedAttrName(key), observer = key;
            if (booleanKey ? (this.$$element.prop(key, value), attrName = booleanKey) : aliasedKey && (this[aliasedKey] = value, observer = aliasedKey), this[key] = value, attrName ? this.$attr[key] = attrName : (attrName = this.$attr[key]) || (this.$attr[key] = attrName = snake_case(key, "-")), "a" === (nodeName = nodeName_(this.$$element)) && ("href" === key || "xlinkHref" === key) || "img" === nodeName && "src" === key) this[key] = value = $$sanitizeUri(value, "src" === key); else if ("img" === nodeName && "srcset" === key) {
              for (var result = "", trimmedSrcset = trim(value), srcPattern = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, pattern = /\s/.test(trimmedSrcset) ? srcPattern : /(,)/, rawUris = trimmedSrcset.split(pattern), nbrUrisWith2parts = Math.floor(rawUris.length / 2), i = 0; i < nbrUrisWith2parts; i++) {
                var innerIdx = 2 * i;
                result += $$sanitizeUri(trim(rawUris[innerIdx]), !0), result += " " + trim(rawUris[innerIdx + 1])
              }
              var lastTuple = trim(rawUris[2 * i]).split(/\s/);
              result += $$sanitizeUri(trim(lastTuple[0]), !0), 2 === lastTuple.length && (result += " " + trim(lastTuple[1])), this[key] = value = result
            }
            !1 !== writeAttr && (null === value || isUndefined(value) ? this.$$element.removeAttr(attrName) : SIMPLE_ATTR_NAME.test(attrName) ? this.$$element.attr(attrName, value) : setSpecialAttr(this.$$element[0], attrName, value));
            var $$observers = this.$$observers;
            $$observers && forEach($$observers[observer], function (fn) {
              try {
                fn(value)
              } catch (e) {
                $exceptionHandler(e)
              }
            })
          }, $observe:     function (key, fn) {
            var attrs = this, $$observers = attrs.$$observers || (attrs.$$observers = createMap()),
                listeners                 = $$observers[key] || ($$observers[key] = []);
            return listeners.push(fn), $rootScope.$evalAsync(function () {
              listeners.$$inter || !attrs.hasOwnProperty(key) || isUndefined(attrs[key]) || fn(attrs[key])
            }), function () {
              arrayRemove(listeners, fn)
            }
          }
        };
        var startSymbol                                                 = $interpolate.startSymbol(), endSymbol         = $interpolate.endSymbol(),
            denormalizeTemplate                                         = "{{" == startSymbol && "}}" == endSymbol ? identity : function (template) {
              return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol)
            }, NG_ATTR_BINDING                                          = /^ngAttr[A-Z]/, MULTI_ELEMENT_DIR_RE = /^(.+)Start$/;
        return compile.$$addBindingInfo = debugInfoEnabled ? function ($element, binding) {
          var bindings = $element.data("$binding") || [];
          isArray(binding) ? bindings = bindings.concat(binding) : bindings.push(binding), $element.data("$binding", bindings)
        } : noop, compile.$$addBindingClass = debugInfoEnabled ? function ($element) {
          safeAddClass($element, "ng-binding")
        } : noop, compile.$$addScopeInfo = debugInfoEnabled ? function ($element, scope, isolated, noTemplate) {
          var dataName = isolated ? noTemplate ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope";
          $element.data(dataName, scope)
        } : noop, compile.$$addScopeClass = debugInfoEnabled ? function ($element, isolated) {
          safeAddClass($element, isolated ? "ng-isolate-scope" : "ng-scope")
        } : noop, compile.$$createComment = function (directiveName, comment) {
          var content = "";
          return debugInfoEnabled && (content = " " + (directiveName || "") + ": " + (comment || "") + " "), window.document.createComment(content)
        }, compile
      }]
    }

    function SimpleChange(previous, current) {
      this.previousValue = previous, this.currentValue = current
    }

    function directiveNormalize(name) {
      return camelCase(name.replace(PREFIX_REGEXP, ""))
    }

    function tokenDifference(str1, str2) {
      var values = "", tokens1 = str1.split(/\s+/), tokens2 = str2.split(/\s+/);
      outer:for (var i = 0; i < tokens1.length; i++) {
        for (var token = tokens1[i], j = 0; j < tokens2.length; j++) if (token == tokens2[j]) continue outer;
        values += (values.length > 0 ? " " : "") + token
      }
      return values
    }

    function removeComments(jqNodes) {
      jqNodes = jqLite(jqNodes);
      var i   = jqNodes.length;
      if (i <= 1) return jqNodes;
      for (; i--;) {
        jqNodes[i].nodeType === NODE_TYPE_COMMENT && splice.call(jqNodes, i, 1)
      }
      return jqNodes
    }

    function identifierForController(controller, ident) {
      if (ident && isString(ident)) return ident;
      if (isString(controller)) {
        var match = CNTRL_REG.exec(controller);
        if (match) return match[3]
      }
    }

    function $ControllerProvider() {
      var controllers = {}, globals = !1;
      this.has = function (name) {
        return controllers.hasOwnProperty(name)
      }, this.register = function (name, constructor) {
        assertNotHasOwnProperty(name, "controller"), isObject(name) ? extend(controllers, name) : controllers[name] = constructor
      }, this.allowGlobals = function () {
        globals = !0
      }, this.$get = ["$injector", "$window", function ($injector, $window) {
        function addIdentifier(locals, identifier, instance, name) {
          if (!locals || !isObject(locals.$scope)) throw minErr("$controller")("noscp", "Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.", name, identifier);
          locals.$scope[identifier] = instance
        }

        return function (expression, locals, later, ident) {
          var instance, match, constructor, identifier;
          if (later = !0 === later, ident && isString(ident) && (identifier = ident), isString(expression)) {
            if (!(match = expression.match(CNTRL_REG))) throw $controllerMinErr("ctrlfmt", "Badly formed controller string '{0}'. Must match `__name__ as __id__` or `__name__`.", expression);
            constructor = match[1], identifier = identifier || match[3], expression = controllers.hasOwnProperty(constructor) ? controllers[constructor] : getter(locals.$scope, constructor, !0) || (globals ? getter($window, constructor, !0) : void 0), assertArgFn(expression, constructor, !0)
          }
          if (later) {
            var controllerPrototype = (isArray(expression) ? expression[expression.length - 1] : expression).prototype;
            instance = Object.create(controllerPrototype || null), identifier && addIdentifier(locals, identifier, instance, constructor || expression.name);
            return extend(function () {
              var result = $injector.invoke(expression, instance, locals, constructor);
              return result !== instance && (isObject(result) || isFunction(result)) && (instance = result, identifier && addIdentifier(locals, identifier, instance, constructor || expression.name)), instance
            }, {instance: instance, identifier: identifier})
          }
          return instance = $injector.instantiate(expression, locals, constructor), identifier && addIdentifier(locals, identifier, instance, constructor || expression.name), instance
        }
      }]
    }

    function $DocumentProvider() {
      this.$get = ["$window", function (window) {
        return jqLite(window.document)
      }]
    }

    function $ExceptionHandlerProvider() {
      this.$get = ["$log", function ($log) {
        return function (exception, cause) {
          $log.error.apply($log, arguments)
        }
      }]
    }

    function serializeValue(v) {
      return isObject(v) ? isDate(v) ? v.toISOString() : toJson(v) : v
    }

    function $HttpParamSerializerProvider() {
      this.$get = function () {
        return function (params) {
          if (!params) return "";
          var parts = [];
          return forEachSorted(params, function (value, key) {
            null === value || isUndefined(value) || (isArray(value) ? forEach(value, function (v) {
              parts.push(encodeUriQuery(key) + "=" + encodeUriQuery(serializeValue(v)))
            }) : parts.push(encodeUriQuery(key) + "=" + encodeUriQuery(serializeValue(value))))
          }), parts.join("&")
        }
      }
    }

    function $HttpParamSerializerJQLikeProvider() {
      this.$get = function () {
        return function (params) {
          function serialize(toSerialize, prefix, topLevel) {
            null === toSerialize || isUndefined(toSerialize) || (isArray(toSerialize) ? forEach(toSerialize, function (value, index) {
              serialize(value, prefix + "[" + (isObject(value) ? index : "") + "]")
            }) : isObject(toSerialize) && !isDate(toSerialize) ? forEachSorted(toSerialize, function (value, key) {
              serialize(value, prefix + (topLevel ? "" : "[") + key + (topLevel ? "" : "]"))
            }) : parts.push(encodeUriQuery(prefix) + "=" + encodeUriQuery(serializeValue(toSerialize))))
          }

          if (!params) return "";
          var parts = [];
          return serialize(params, "", !0), parts.join("&")
        }
      }
    }

    function defaultHttpResponseTransform(data, headers) {
      if (isString(data)) {
        var tempData = data.replace(JSON_PROTECTION_PREFIX, "").trim();
        if (tempData) {
          var contentType = headers("Content-Type");
          (contentType && 0 === contentType.indexOf(APPLICATION_JSON) || isJsonLike(tempData)) && (data = fromJson(tempData))
        }
      }
      return data
    }

    function isJsonLike(str) {
      var jsonStart = str.match(JSON_START);
      return jsonStart && JSON_ENDS[jsonStart[0]].test(str)
    }

    function parseHeaders(headers) {
      function fillInParsed(key, val) {
        key && (parsed[key] = parsed[key] ? parsed[key] + ", " + val : val)
      }

      var i, parsed = createMap();
      return isString(headers) ? forEach(headers.split("\n"), function (line) {
        i = line.indexOf(":"), fillInParsed(lowercase(trim(line.substr(0, i))), trim(line.substr(i + 1)))
      }) : isObject(headers) && forEach(headers, function (headerVal, headerKey) {
        fillInParsed(lowercase(headerKey), trim(headerVal))
      }), parsed
    }

    function headersGetter(headers) {
      var headersObj;
      return function (name) {
        if (headersObj || (headersObj = parseHeaders(headers)), name) {
          var value = headersObj[lowercase(name)];
          return void 0 === value && (value = null), value
        }
        return headersObj
      }
    }

    function transformData(data, headers, status, fns) {
      return isFunction(fns) ? fns(data, headers, status) : (forEach(fns, function (fn) {
        data = fn(data, headers, status)
      }), data)
    }

    function isSuccess(status) {
      return 200 <= status && status < 300
    }

    function $HttpProvider() {
      var defaults = this.defaults = {
        transformResponse: [defaultHttpResponseTransform],
        transformRequest:  [function (d) {
          return !isObject(d) || isFile(d) || isBlob(d) || isFormData(d) ? d : toJson(d)
        }],
        headers:           {
          common: {Accept: "application/json, text/plain, */*"},
          post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
          put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
          patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
        },
        xsrfCookieName:    "XSRF-TOKEN",
        xsrfHeaderName:    "X-XSRF-TOKEN",
        paramSerializer:   "$httpParamSerializer"
      }, useApplyAsync                = !1;
      this.useApplyAsync              = function (value) {
        return isDefined(value) ? (useApplyAsync = !!value, this) : useApplyAsync
      };
      var useLegacyPromise            = !0;
      this.useLegacyPromiseExtensions = function (value) {
        return isDefined(value) ? (useLegacyPromise = !!value, this) : useLegacyPromise
      };
      var interceptorFactories        = this.interceptors = [];
      this.$get = ["$httpBackend", "$$cookieReader", "$cacheFactory", "$rootScope", "$q", "$injector", function ($httpBackend, $$cookieReader, $cacheFactory, $rootScope, $q, $injector) {
        function $http(requestConfig) {
          function transformResponse(response) {
            var resp = extend({}, response);
            return resp.data = transformData(response.data, response.headers, response.status, config.transformResponse), isSuccess(response.status) ? resp : $q.reject(resp)
          }

          function executeHeaderFns(headers, config) {
            var headerContent, processedHeaders = {};
            return forEach(headers, function (headerFn, header) {
              isFunction(headerFn) ? null != (headerContent = headerFn(config)) && (processedHeaders[header] = headerContent) : processedHeaders[header] = headerFn
            }), processedHeaders
          }

          if (!isObject(requestConfig)) throw minErr("$http")("badreq", "Http request configuration must be an object.  Received: {0}", requestConfig);
          if (!isString(requestConfig.url)) throw minErr("$http")("badreq", "Http request configuration url must be a string.  Received: {0}", requestConfig.url);
          var config = extend({
            method:            "get", transformRequest: defaults.transformRequest,
            transformResponse: defaults.transformResponse, paramSerializer: defaults.paramSerializer
          }, requestConfig);
          config.headers = function (config) {
            var defHeaderName, lowercaseDefHeaderName, reqHeaderName, defHeaders = defaults.headers,
                reqHeaders                                                       = extend({}, config.headers);
            defHeaders                                                           = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);
            defaultHeadersIteration:for (defHeaderName in defHeaders) {
              lowercaseDefHeaderName = lowercase(defHeaderName);
              for (reqHeaderName in reqHeaders) if (lowercase(reqHeaderName) === lowercaseDefHeaderName) continue defaultHeadersIteration;
              reqHeaders[defHeaderName] = defHeaders[defHeaderName]
            }
            return executeHeaderFns(reqHeaders, shallowCopy(config))
          }(requestConfig), config.method = uppercase(config.method), config.paramSerializer = isString(config.paramSerializer) ? $injector.get(config.paramSerializer) : config.paramSerializer;
          var serverRequest = function (config) {
            var headers = config.headers,
                reqData = transformData(config.data, headersGetter(headers), void 0, config.transformRequest);
            return isUndefined(reqData) && forEach(headers, function (value, header) {
              "content-type" === lowercase(header) && delete headers[header]
            }), isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials) && (config.withCredentials = defaults.withCredentials), sendReq(config, reqData).then(transformResponse, transformResponse)
          }, chain          = [serverRequest, void 0], promise = $q.when(config);
          for (forEach(reversedInterceptors, function (interceptor) {
            (interceptor.request || interceptor.requestError) && chain.unshift(interceptor.request, interceptor.requestError), (interceptor.response || interceptor.responseError) && chain.push(interceptor.response, interceptor.responseError)
          }); chain.length;) {
            var thenFn = chain.shift(), rejectFn = chain.shift();
            promise    = promise.then(thenFn, rejectFn)
          }
          return useLegacyPromise ? (promise.success = function (fn) {
            return assertArgFn(fn, "fn"), promise.then(function (response) {
              fn(response.data, response.status, response.headers, config)
            }), promise
          }, promise.error = function (fn) {
            return assertArgFn(fn, "fn"), promise.then(null, function (response) {
              fn(response.data, response.status, response.headers, config)
            }), promise
          }) : (promise.success = $httpMinErrLegacyFn("success"), promise.error = $httpMinErrLegacyFn("error")), promise
        }

        function sendReq(config, reqData) {
          function createApplyHandlers(eventHandlers) {
            if (eventHandlers) {
              var applyHandlers = {};
              return forEach(eventHandlers, function (eventHandler, key) {
                applyHandlers[key] = function (event) {
                  function callEventHandler() {
                    eventHandler(event)
                  }

                  useApplyAsync ? $rootScope.$applyAsync(callEventHandler) : $rootScope.$$phase ? callEventHandler() : $rootScope.$apply(callEventHandler)
                }
              }), applyHandlers
            }
          }

          function done(status, response, headersString, statusText) {
            function resolveHttpPromise() {
              resolvePromise(response, status, headersString, statusText)
            }

            cache && (isSuccess(status) ? cache.put(url, [status, response, parseHeaders(headersString), statusText]) : cache.remove(url)), useApplyAsync ? $rootScope.$applyAsync(resolveHttpPromise) : (resolveHttpPromise(), $rootScope.$$phase || $rootScope.$apply())
          }

          function resolvePromise(response, status, headers, statusText) {
            status = status >= -1 ? status : 0, (isSuccess(status) ? deferred.resolve : deferred.reject)({
              data:       response,
              status:     status,
              headers:    headersGetter(headers),
              config:     config,
              statusText: statusText
            })
          }

          function resolvePromiseWithResult(result) {
            resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText)
          }

          function removePendingReq() {
            var idx = $http.pendingRequests.indexOf(config);
            -1 !== idx && $http.pendingRequests.splice(idx, 1)
          }

          var cache, cachedResp, deferred = $q.defer(), promise = deferred.promise, reqHeaders = config.headers,
              url                                                                              = buildUrl(config.url, config.paramSerializer(config.params));
          if ($http.pendingRequests.push(config), promise.then(removePendingReq, removePendingReq), !config.cache && !defaults.cache || !1 === config.cache || "GET" !== config.method && "JSONP" !== config.method || (cache = isObject(config.cache) ? config.cache : isObject(defaults.cache) ? defaults.cache : defaultCache), cache && (cachedResp = cache.get(url), isDefined(cachedResp) ? isPromiseLike(cachedResp) ? cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult) : isArray(cachedResp) ? resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]) : resolvePromise(cachedResp, 200, {}, "OK") : cache.put(url, promise)), isUndefined(cachedResp)) {
            var xsrfValue = urlIsSameOrigin(config.url) ? $$cookieReader()[config.xsrfCookieName || defaults.xsrfCookieName] : void 0;
            xsrfValue && (reqHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue), $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout, config.withCredentials, config.responseType, createApplyHandlers(config.eventHandlers), createApplyHandlers(config.uploadEventHandlers))
          }
          return promise
        }

        function buildUrl(url, serializedParams) {
          return serializedParams.length > 0 && (url += (-1 == url.indexOf("?") ? "?" : "&") + serializedParams), url
        }

        var defaultCache         = $cacheFactory("$http");
        defaults.paramSerializer = isString(defaults.paramSerializer) ? $injector.get(defaults.paramSerializer) : defaults.paramSerializer;
        var reversedInterceptors = [];
        return forEach(interceptorFactories, function (interceptorFactory) {
          reversedInterceptors.unshift(isString(interceptorFactory) ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory))
        }), $http.pendingRequests = [], function (names) {
          forEach(arguments, function (name) {
            $http[name] = function (url, config) {
              return $http(extend({}, config || {}, {method: name, url: url}))
            }
          })
        }("get", "delete", "head", "jsonp"), function (name) {
          forEach(arguments, function (name) {
            $http[name] = function (url, data, config) {
              return $http(extend({}, config || {}, {method: name, url: url, data: data}))
            }
          })
        }("post", "put", "patch"), $http.defaults = defaults, $http
      }]
    }

    function $xhrFactoryProvider() {
      this.$get = function () {
        return function () {
          return new window.XMLHttpRequest
        }
      }
    }

    function $HttpBackendProvider() {
      this.$get = ["$browser", "$window", "$document", "$xhrFactory", function ($browser, $window, $document, $xhrFactory) {
        return createHttpBackend($browser, $xhrFactory, $browser.defer, $window.angular.callbacks, $document[0])
      }]
    }

    function createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {
      function jsonpReq(url, callbackId, done) {
        var script = rawDocument.createElement("script"), callback = null;
        return script.type = "text/javascript", script.src = url, script.async = !0, callback = function (event) {
          removeEventListenerFn(script, "load", callback), removeEventListenerFn(script, "error", callback), rawDocument.body.removeChild(script), script = null;
          var status = -1, text = "unknown";
          event && ("load" !== event.type || callbacks[callbackId].called || (event = {type: "error"}), text = event.type, status = "error" === event.type ? 404 : 200), done && done(status, text)
        }, addEventListenerFn(script, "load", callback), addEventListenerFn(script, "error", callback), rawDocument.body.appendChild(script), callback
      }

      return function (method, url, post, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {
        function timeoutRequest() {
          jsonpDone && jsonpDone(), xhr && xhr.abort()
        }

        function completeRequest(callback, status, response, headersString, statusText) {
          isDefined(timeoutId) && $browserDefer.cancel(timeoutId), jsonpDone = xhr = null, callback(status, response, headersString, statusText), $browser.$$completeOutstandingRequest(noop)
        }

        if ($browser.$$incOutstandingRequestCount(), url = url || $browser.url(), "jsonp" == lowercase(method)) {
          var callbackId        = "_" + (callbacks.counter++).toString(36);
          callbacks[callbackId] = function (data) {
            callbacks[callbackId].data = data, callbacks[callbackId].called = !0
          };
          var jsonpDone         = jsonpReq(url.replace("JSON_CALLBACK", "angular.callbacks." + callbackId), callbackId, function (status, text) {
            completeRequest(callback, status, callbacks[callbackId].data, "", text), callbacks[callbackId] = noop
          })
        } else {
          var xhr = createXhr(method, url);
          xhr.open(method, url, !0), forEach(headers, function (value, key) {
            isDefined(value) && xhr.setRequestHeader(key, value)
          }), xhr.onload = function () {
            var statusText = xhr.statusText || "", response = "response" in xhr ? xhr.response : xhr.responseText,
                status                                      = 1223 === xhr.status ? 204 : xhr.status;
            0 === status && (status = response ? 200 : "file" == urlResolve(url).protocol ? 404 : 0), completeRequest(callback, status, response, xhr.getAllResponseHeaders(), statusText)
          };
          var requestError = function () {
            completeRequest(callback, -1, null, null, "")
          };
          if (xhr.onerror = requestError, xhr.onabort = requestError, forEach(eventHandlers, function (value, key) {
              xhr.addEventListener(key, value)
            }), forEach(uploadEventHandlers, function (value, key) {
              xhr.upload.addEventListener(key, value)
            }), withCredentials && (xhr.withCredentials = !0), responseType) try {
            xhr.responseType = responseType
          } catch (e) {
            if ("json" !== responseType) throw e
          }
          xhr.send(isUndefined(post) ? null : post)
        }
        if (timeout > 0) var timeoutId = $browserDefer(timeoutRequest, timeout); else isPromiseLike(timeout) && timeout.then(timeoutRequest)
      }
    }

    function $InterpolateProvider() {
      var startSymbol = "{{", endSymbol = "}}";
      this.startSymbol = function (value) {
        return value ? (startSymbol = value, this) : startSymbol
      }, this.endSymbol = function (value) {
        return value ? (endSymbol = value, this) : endSymbol
      }, this.$get = ["$parse", "$exceptionHandler", "$sce", function ($parse, $exceptionHandler, $sce) {
        function escape(ch) {
          return "\\\\\\" + ch
        }

        function unescapeText(text) {
          return text.replace(escapedStartRegexp, startSymbol).replace(escapedEndRegexp, endSymbol)
        }

        function stringify(value) {
          if (null == value) return "";
          switch (typeof value) {
            case"string":
              break;
            case"number":
              value = "" + value;
              break;
            default:
              value = toJson(value)
          }
          return value
        }

        function constantWatchDelegate(scope, listener, objectEquality, constantInterp) {
          var unwatch;
          return unwatch = scope.$watch(function (scope) {
            return unwatch(), constantInterp(scope)
          }, listener, objectEquality)
        }

        function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {
          function parseStringifyInterceptor(value) {
            try {
              return value = getValue(value), allOrNothing && !isDefined(value) ? value : stringify(value)
            } catch (err) {
              $exceptionHandler($interpolateMinErr.interr(text, err))
            }
          }

          if (!text.length || -1 === text.indexOf(startSymbol)) {
            var constantInterp;
            if (!mustHaveExpression) {
              constantInterp = valueFn(unescapeText(text)), constantInterp.exp = text, constantInterp.expressions = [], constantInterp.$$watchDelegate = constantWatchDelegate
            }
            return constantInterp
          }
          allOrNothing = !!allOrNothing;
          for (var startIndex, endIndex, exp, index = 0, expressions = [], parseFns = [], textLength = text.length, concat = [], expressionPositions = []; index < textLength;) {
            if (-1 == (startIndex = text.indexOf(startSymbol, index)) || -1 == (endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength))) {
              index !== textLength && concat.push(unescapeText(text.substring(index)));
              break
            }
            index !== startIndex && concat.push(unescapeText(text.substring(index, startIndex))), exp = text.substring(startIndex + startSymbolLength, endIndex), expressions.push(exp), parseFns.push($parse(exp, parseStringifyInterceptor)), index = endIndex + endSymbolLength, expressionPositions.push(concat.length), concat.push("")
          }
          if (trustedContext && concat.length > 1 && $interpolateMinErr.throwNoconcat(text), !mustHaveExpression || expressions.length) {
            var compute = function (values) {
              for (var i = 0, ii = expressions.length; i < ii; i++) {
                if (allOrNothing && isUndefined(values[i])) return;
                concat[expressionPositions[i]] = values[i]
              }
              return concat.join("")
            }, getValue = function (value) {
              return trustedContext ? $sce.getTrusted(trustedContext, value) : $sce.valueOf(value)
            };
            return extend(function (context) {
              var i = 0, ii = expressions.length, values = new Array(ii);
              try {
                for (; i < ii; i++) values[i] = parseFns[i](context);
                return compute(values)
              } catch (err) {
                $exceptionHandler($interpolateMinErr.interr(text, err))
              }
            }, {
              exp: text, expressions: expressions, $$watchDelegate: function (scope, listener) {
                var lastValue;
                return scope.$watchGroup(parseFns, function (values, oldValues) {
                  var currValue = compute(values);
                  isFunction(listener) && listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope), lastValue = currValue
                })
              }
            })
          }
        }

        var startSymbolLength = startSymbol.length, endSymbolLength = endSymbol.length,
            escapedStartRegexp                                      = new RegExp(startSymbol.replace(/./g, escape), "g"),
            escapedEndRegexp                                        = new RegExp(endSymbol.replace(/./g, escape), "g");
        return $interpolate.startSymbol = function () {
          return startSymbol
        }, $interpolate.endSymbol = function () {
          return endSymbol
        }, $interpolate
      }]
    }

    function $IntervalProvider() {
      this.$get = ["$rootScope", "$window", "$q", "$$q", "$browser", function ($rootScope, $window, $q, $$q, $browser) {
        function interval(fn, delay, count, invokeApply) {
          function callback() {
            hasParams ? fn.apply(null, args) : fn(iteration)
          }

          var hasParams                                                                           = arguments.length > 4, args                                              = hasParams ? sliceArgs(arguments, 4) : [],
              setInterval = $window.setInterval, clearInterval = $window.clearInterval, iteration = 0,
              skipApply                                                                           = isDefined(invokeApply) && !invokeApply, deferred                        = (skipApply ? $$q : $q).defer(),
              promise                                                                             = deferred.promise;
          return count = isDefined(count) ? count : 0, promise.$$intervalId = setInterval(function () {
            skipApply ? $browser.defer(callback) : $rootScope.$evalAsync(callback), deferred.notify(iteration++), count > 0 && iteration >= count && (deferred.resolve(iteration), clearInterval(promise.$$intervalId), delete intervals[promise.$$intervalId]), skipApply || $rootScope.$apply()
          }, delay), intervals[promise.$$intervalId] = deferred, promise
        }

        var intervals = {};
        return interval.cancel = function (promise) {
          return !!(promise && promise.$$intervalId in intervals) && (intervals[promise.$$intervalId].reject("canceled"), $window.clearInterval(promise.$$intervalId), delete intervals[promise.$$intervalId], !0)
        }, interval
      }]
    }

    function encodePath(path) {
      for (var segments = path.split("/"), i = segments.length; i--;) segments[i] = encodeUriSegment(segments[i]);
      return segments.join("/")
    }

    function parseAbsoluteUrl(absoluteUrl, locationObj) {
      var parsedUrl = urlResolve(absoluteUrl);
      locationObj.$$protocol = parsedUrl.protocol, locationObj.$$host = parsedUrl.hostname, locationObj.$$port = toInt(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null
    }

    function parseAppUrl(relativeUrl, locationObj) {
      var prefixed = "/" !== relativeUrl.charAt(0);
      prefixed && (relativeUrl = "/" + relativeUrl);
      var match = urlResolve(relativeUrl);
      locationObj.$$path = decodeURIComponent(prefixed && "/" === match.pathname.charAt(0) ? match.pathname.substring(1) : match.pathname), locationObj.$$search = parseKeyValue(match.search), locationObj.$$hash = decodeURIComponent(match.hash), locationObj.$$path && "/" != locationObj.$$path.charAt(0) && (locationObj.$$path = "/" + locationObj.$$path)
    }

    function beginsWith(begin, whole) {
      if (0 === whole.indexOf(begin)) return whole.substr(begin.length)
    }

    function stripHash(url) {
      var index = url.indexOf("#");
      return -1 == index ? url : url.substr(0, index)
    }

    function trimEmptyHash(url) {
      return url.replace(/(#.+)|#$/, "$1")
    }

    function stripFile(url) {
      return url.substr(0, stripHash(url).lastIndexOf("/") + 1)
    }

    function serverBase(url) {
      return url.substring(0, url.indexOf("/", url.indexOf("//") + 2))
    }

    function LocationHtml5Url(appBase, appBaseNoFile, basePrefix) {
      this.$$html5 = !0, basePrefix = basePrefix || "", parseAbsoluteUrl(appBase, this), this.$$parse = function (url) {
        var pathUrl = beginsWith(appBaseNoFile, url);
        if (!isString(pathUrl)) throw $locationMinErr("ipthprfx", 'Invalid url "{0}", missing path prefix "{1}".', url, appBaseNoFile);
        parseAppUrl(pathUrl, this), this.$$path || (this.$$path = "/"), this.$$compose()
      }, this.$$compose = function () {
        var search = toKeyValue(this.$$search), hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
        this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBaseNoFile + this.$$url.substr(1)
      }, this.$$parseLinkUrl = function (url, relHref) {
        if (relHref && "#" === relHref[0]) return this.hash(relHref.slice(1)), !0;
        var appUrl, prevAppUrl, rewrittenUrl;
        return isDefined(appUrl = beginsWith(appBase, url)) ? (prevAppUrl = appUrl, rewrittenUrl = isDefined(appUrl = beginsWith(basePrefix, appUrl)) ? appBaseNoFile + (beginsWith("/", appUrl) || appUrl) : appBase + prevAppUrl) : isDefined(appUrl = beginsWith(appBaseNoFile, url)) ? rewrittenUrl = appBaseNoFile + appUrl : appBaseNoFile == url + "/" && (rewrittenUrl = appBaseNoFile), rewrittenUrl && this.$$parse(rewrittenUrl), !!rewrittenUrl
      }
    }

    function LocationHashbangUrl(appBase, appBaseNoFile, hashPrefix) {
      parseAbsoluteUrl(appBase, this), this.$$parse = function (url) {
        var withoutHashUrl, withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);
        isUndefined(withoutBaseUrl) || "#" !== withoutBaseUrl.charAt(0) ? this.$$html5 ? withoutHashUrl = withoutBaseUrl : (withoutHashUrl = "", isUndefined(withoutBaseUrl) && (appBase = url, this.replace())) : (withoutHashUrl = beginsWith(hashPrefix, withoutBaseUrl), isUndefined(withoutHashUrl) && (withoutHashUrl = withoutBaseUrl)), parseAppUrl(withoutHashUrl, this), this.$$path = function (path, url, base) {
          var firstPathSegmentMatch, windowsFilePathExp = /^\/[A-Z]:(\/.*)/;
          return 0 === url.indexOf(base) && (url = url.replace(base, "")), windowsFilePathExp.exec(url) ? path : (firstPathSegmentMatch = windowsFilePathExp.exec(path), firstPathSegmentMatch ? firstPathSegmentMatch[1] : path)
        }(this.$$path, withoutHashUrl, appBase), this.$$compose()
      }, this.$$compose = function () {
        var search = toKeyValue(this.$$search), hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
        this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : "")
      }, this.$$parseLinkUrl = function (url, relHref) {
        return stripHash(appBase) == stripHash(url) && (this.$$parse(url), !0)
      }
    }

    function LocationHashbangInHtml5Url(appBase, appBaseNoFile, hashPrefix) {
      this.$$html5 = !0, LocationHashbangUrl.apply(this, arguments), this.$$parseLinkUrl = function (url, relHref) {
        if (relHref && "#" === relHref[0]) return this.hash(relHref.slice(1)), !0;
        var rewrittenUrl, appUrl;
        return appBase == stripHash(url) ? rewrittenUrl = url : (appUrl = beginsWith(appBaseNoFile, url)) ? rewrittenUrl = appBase + hashPrefix + appUrl : appBaseNoFile === url + "/" && (rewrittenUrl = appBaseNoFile), rewrittenUrl && this.$$parse(rewrittenUrl), !!rewrittenUrl
      }, this.$$compose = function () {
        var search = toKeyValue(this.$$search), hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
        this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBase + hashPrefix + this.$$url
      }
    }

    function locationGetter(property) {
      return function () {
        return this[property]
      }
    }

    function locationGetterSetter(property, preprocess) {
      return function (value) {
        return isUndefined(value) ? this[property] : (this[property] = preprocess(value), this.$$compose(), this)
      }
    }

    function $LocationProvider() {
      var hashPrefix = "", html5Mode = {enabled: !1, requireBase: !0, rewriteLinks: !0};
      this.hashPrefix = function (prefix) {
        return isDefined(prefix) ? (hashPrefix = prefix, this) : hashPrefix
      }, this.html5Mode = function (mode) {
        return isBoolean(mode) ? (html5Mode.enabled = mode, this) : isObject(mode) ? (isBoolean(mode.enabled) && (html5Mode.enabled = mode.enabled), isBoolean(mode.requireBase) && (html5Mode.requireBase = mode.requireBase), isBoolean(mode.rewriteLinks) && (html5Mode.rewriteLinks = mode.rewriteLinks), this) : html5Mode
      }, this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function ($rootScope, $browser, $sniffer, $rootElement, $window) {
        function setBrowserUrlWithFallback(url, replace, state) {
          var oldUrl = $location.url(), oldState = $location.$$state;
          try {
            $browser.url(url, replace, state), $location.$$state = $browser.state()
          } catch (e) {
            throw $location.url(oldUrl), $location.$$state = oldState, e
          }
        }

        function afterLocationChange(oldUrl, oldState) {
          $rootScope.$broadcast("$locationChangeSuccess", $location.absUrl(), oldUrl, $location.$$state, oldState)
        }

        var $location, LocationMode, appBase, baseHref = $browser.baseHref(), initialUrl = $browser.url();
        if (html5Mode.enabled) {
          if (!baseHref && html5Mode.requireBase) throw $locationMinErr("nobase", "$location in HTML5 mode requires a <base> tag to be present!");
          appBase = serverBase(initialUrl) + (baseHref || "/"), LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url
        } else appBase = stripHash(initialUrl), LocationMode = LocationHashbangUrl;
        var appBaseNoFile = stripFile(appBase);
        $location = new LocationMode(appBase, appBaseNoFile, "#" + hashPrefix), $location.$$parseLinkUrl(initialUrl, initialUrl), $location.$$state = $browser.state();
        var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;
        $rootElement.on("click", function (event) {
          if (html5Mode.rewriteLinks && !event.ctrlKey && !event.metaKey && !event.shiftKey && 2 != event.which && 2 != event.button) {
            for (var elm = jqLite(event.target); "a" !== nodeName_(elm[0]);) if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;
            var absHref = elm.prop("href"), relHref = elm.attr("href") || elm.attr("xlink:href");
            isObject(absHref) && "[object SVGAnimatedString]" === absHref.toString() && (absHref = urlResolve(absHref.animVal).href), IGNORE_URI_REGEXP.test(absHref) || !absHref || elm.attr("target") || event.isDefaultPrevented() || $location.$$parseLinkUrl(absHref, relHref) && (event.preventDefault(), $location.absUrl() != $browser.url() && ($rootScope.$apply(), $window.angular["ff-684208-preventDefault"] = !0))
          }
        }), trimEmptyHash($location.absUrl()) != trimEmptyHash(initialUrl) && $browser.url($location.absUrl(), !0);
        var initializing = !0;
        return $browser.onUrlChange(function (newUrl, newState) {
          if (isUndefined(beginsWith(appBaseNoFile, newUrl))) return void($window.location.href = newUrl);
          $rootScope.$evalAsync(function () {
            var defaultPrevented, oldUrl = $location.absUrl(), oldState = $location.$$state;
            newUrl = trimEmptyHash(newUrl), $location.$$parse(newUrl), $location.$$state = newState, defaultPrevented = $rootScope.$broadcast("$locationChangeStart", newUrl, oldUrl, newState, oldState).defaultPrevented, $location.absUrl() === newUrl && (defaultPrevented ? ($location.$$parse(oldUrl), $location.$$state = oldState, setBrowserUrlWithFallback(oldUrl, !1, oldState)) : (initializing = !1, afterLocationChange(oldUrl, oldState)))
          }), $rootScope.$$phase || $rootScope.$digest()
        }), $rootScope.$watch(function () {
          var oldUrl = trimEmptyHash($browser.url()), newUrl = trimEmptyHash($location.absUrl()),
              oldState                                       = $browser.state(), currentReplace    = $location.$$replace,
              urlOrStateChanged                              = oldUrl !== newUrl || $location.$$html5 && $sniffer.history && oldState !== $location.$$state;
          (initializing || urlOrStateChanged) && (initializing = !1, $rootScope.$evalAsync(function () {
            var newUrl           = $location.absUrl(),
                defaultPrevented = $rootScope.$broadcast("$locationChangeStart", newUrl, oldUrl, $location.$$state, oldState).defaultPrevented;
            $location.absUrl() === newUrl && (defaultPrevented ? ($location.$$parse(oldUrl), $location.$$state = oldState) : (urlOrStateChanged && setBrowserUrlWithFallback(newUrl, currentReplace, oldState === $location.$$state ? null : $location.$$state), afterLocationChange(oldUrl, oldState)))
          })), $location.$$replace = !1
        }), $location
      }]
    }

    function $LogProvider() {
      var debug = !0, self = this;
      this.debugEnabled = function (flag) {
        return isDefined(flag) ? (debug = flag, this) : debug
      }, this.$get = ["$window", function ($window) {
        function formatError(arg) {
          return arg instanceof Error && (arg.stack ? arg = arg.message && -1 === arg.stack.indexOf(arg.message) ? "Error: " + arg.message + "\n" + arg.stack : arg.stack : arg.sourceURL && (arg = arg.message + "\n" + arg.sourceURL + ":" + arg.line)), arg
        }

        function consoleLog(type) {
          var console = $window.console || {}, logFn = console[type] || console.log || noop, hasApply = !1;
          try {
            hasApply = !!logFn.apply
          } catch (e) {
          }
          return hasApply ? function () {
            var args = [];
            return forEach(arguments, function (arg) {
              args.push(formatError(arg))
            }), logFn.apply(console, args)
          } : function (arg1, arg2) {
            logFn(arg1, null == arg2 ? "" : arg2)
          }
        }

        return {
          log:   consoleLog("log"),
          info:  consoleLog("info"),
          warn:  consoleLog("warn"),
          error: consoleLog("error"),
          debug: function () {
            var fn = consoleLog("debug");
            return function () {
              debug && fn.apply(self, arguments)
            }
          }()
        }
      }]
    }

    function ensureSafeMemberName(name, fullExpression) {
      if ("__defineGetter__" === name || "__defineSetter__" === name || "__lookupGetter__" === name || "__lookupSetter__" === name || "__proto__" === name) throw $parseMinErr("isecfld", "Attempting to access a disallowed field in Angular expressions! Expression: {0}", fullExpression);
      return name
    }

    function getStringValue(name) {
      return name + ""
    }

    function ensureSafeObject(obj, fullExpression) {
      if (obj) {
        if (obj.constructor === obj) throw $parseMinErr("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", fullExpression);
        if (obj.window === obj) throw $parseMinErr("isecwindow", "Referencing the Window in Angular expressions is disallowed! Expression: {0}", fullExpression);
        if (obj.children && (obj.nodeName || obj.prop && obj.attr && obj.find)) throw $parseMinErr("isecdom", "Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}", fullExpression);
        if (obj === Object) throw $parseMinErr("isecobj", "Referencing Object in Angular expressions is disallowed! Expression: {0}", fullExpression)
      }
      return obj
    }

    function ensureSafeFunction(obj, fullExpression) {
      if (obj) {
        if (obj.constructor === obj) throw $parseMinErr("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", fullExpression);
        if (obj === CALL || obj === APPLY || obj === BIND) throw $parseMinErr("isecff", "Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}", fullExpression)
      }
    }

    function ensureSafeAssignContext(obj, fullExpression) {
      if (obj && (obj === (0).constructor || obj === (!1).constructor || obj === "".constructor || obj === {}.constructor || obj === [].constructor || obj === Function.constructor)) throw $parseMinErr("isecaf", "Assigning to a constructor is disallowed! Expression: {0}", fullExpression)
    }

    function ifDefined(v, d) {
      return void 0 !== v ? v : d
    }

    function plusFn(l, r) {
      return void 0 === l ? r : void 0 === r ? l : l + r
    }

    function isStateless($filter, filterName) {
      return !$filter(filterName).$stateful
    }

    function findConstantAndWatchExpressions(ast, $filter) {
      var allConstants, argsToWatch;
      switch (ast.type) {
        case AST.Program:
          allConstants = !0, forEach(ast.body, function (expr) {
            findConstantAndWatchExpressions(expr.expression, $filter), allConstants = allConstants && expr.expression.constant
          }), ast.constant = allConstants;
          break;
        case AST.Literal:
          ast.constant = !0, ast.toWatch = [];
          break;
        case AST.UnaryExpression:
          findConstantAndWatchExpressions(ast.argument, $filter), ast.constant = ast.argument.constant, ast.toWatch = ast.argument.toWatch;
          break;
        case AST.BinaryExpression:
          findConstantAndWatchExpressions(ast.left, $filter), findConstantAndWatchExpressions(ast.right, $filter), ast.constant = ast.left.constant && ast.right.constant, ast.toWatch = ast.left.toWatch.concat(ast.right.toWatch);
          break;
        case AST.LogicalExpression:
          findConstantAndWatchExpressions(ast.left, $filter), findConstantAndWatchExpressions(ast.right, $filter), ast.constant = ast.left.constant && ast.right.constant, ast.toWatch = ast.constant ? [] : [ast];
          break;
        case AST.ConditionalExpression:
          findConstantAndWatchExpressions(ast.test, $filter), findConstantAndWatchExpressions(ast.alternate, $filter), findConstantAndWatchExpressions(ast.consequent, $filter), ast.constant = ast.test.constant && ast.alternate.constant && ast.consequent.constant, ast.toWatch = ast.constant ? [] : [ast];
          break;
        case AST.Identifier:
          ast.constant = !1, ast.toWatch = [ast];
          break;
        case AST.MemberExpression:
          findConstantAndWatchExpressions(ast.object, $filter), ast.computed && findConstantAndWatchExpressions(ast.property, $filter), ast.constant = ast.object.constant && (!ast.computed || ast.property.constant), ast.toWatch = [ast];
          break;
        case AST.CallExpression:
          allConstants = !!ast.filter && isStateless($filter, ast.callee.name), argsToWatch = [], forEach(ast.arguments, function (expr) {
            findConstantAndWatchExpressions(expr, $filter), allConstants = allConstants && expr.constant, expr.constant || argsToWatch.push.apply(argsToWatch, expr.toWatch)
          }), ast.constant = allConstants, ast.toWatch = ast.filter && isStateless($filter, ast.callee.name) ? argsToWatch : [ast];
          break;
        case AST.AssignmentExpression:
          findConstantAndWatchExpressions(ast.left, $filter), findConstantAndWatchExpressions(ast.right, $filter), ast.constant = ast.left.constant && ast.right.constant, ast.toWatch = [ast];
          break;
        case AST.ArrayExpression:
          allConstants = !0, argsToWatch = [], forEach(ast.elements, function (expr) {
            findConstantAndWatchExpressions(expr, $filter), allConstants = allConstants && expr.constant, expr.constant || argsToWatch.push.apply(argsToWatch, expr.toWatch)
          }), ast.constant = allConstants, ast.toWatch = argsToWatch;
          break;
        case AST.ObjectExpression:
          allConstants = !0, argsToWatch = [], forEach(ast.properties, function (property) {
            findConstantAndWatchExpressions(property.value, $filter), allConstants = allConstants && property.value.constant, property.value.constant || argsToWatch.push.apply(argsToWatch, property.value.toWatch)
          }), ast.constant = allConstants, ast.toWatch = argsToWatch;
          break;
        case AST.ThisExpression:
        case AST.LocalsExpression:
          ast.constant = !1, ast.toWatch = []
      }
    }

    function getInputs(body) {
      if (1 == body.length) {
        var lastExpression = body[0].expression, candidate = lastExpression.toWatch;
        return 1 !== candidate.length ? candidate : candidate[0] !== lastExpression ? candidate : void 0
      }
    }

    function isAssignable(ast) {
      return ast.type === AST.Identifier || ast.type === AST.MemberExpression
    }

    function assignableAST(ast) {
      if (1 === ast.body.length && isAssignable(ast.body[0].expression)) return {
        type:     AST.AssignmentExpression,
        left:     ast.body[0].expression,
        right:    {type: AST.NGValueParameter},
        operator: "="
      }
    }

    function isLiteral(ast) {
      return 0 === ast.body.length || 1 === ast.body.length && (ast.body[0].expression.type === AST.Literal || ast.body[0].expression.type === AST.ArrayExpression || ast.body[0].expression.type === AST.ObjectExpression)
    }

    function isConstant(ast) {
      return ast.constant
    }

    function ASTCompiler(astBuilder, $filter) {
      this.astBuilder = astBuilder, this.$filter = $filter
    }

    function ASTInterpreter(astBuilder, $filter) {
      this.astBuilder = astBuilder, this.$filter = $filter
    }

    function isPossiblyDangerousMemberName(name) {
      return "constructor" == name
    }

    function getValueOf(value) {
      return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value)
    }

    function $ParseProvider() {
      var identStart, identContinue, cacheDefault = createMap(), cacheExpensive = createMap(),
          literals                                                              = {true: !0, false: !1, null: null, undefined: void 0};
      this.addLiteral = function (literalName, literalValue) {
        literals[literalName] = literalValue
      }, this.setIdentifierFns = function (identifierStart, identifierContinue) {
        return identStart = identifierStart, identContinue = identifierContinue, this
      }, this.$get = ["$filter", function ($filter) {
        function $parse(exp, interceptorFn, expensiveChecks) {
          var parsedExpression, oneTime, cacheKey;
          switch (expensiveChecks = expensiveChecks || runningChecksEnabled, typeof exp) {
            case"string":
              exp = exp.trim(), cacheKey = exp;
              var cache = expensiveChecks ? cacheExpensive : cacheDefault;
              if (!(parsedExpression = cache[cacheKey])) {
                ":" === exp.charAt(0) && ":" === exp.charAt(1) && (oneTime = !0, exp = exp.substring(2));
                var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions,
                    lexer        = new Lexer(parseOptions);
                parsedExpression = new Parser(lexer, $filter, parseOptions).parse(exp), parsedExpression.constant ? parsedExpression.$$watchDelegate = constantWatchDelegate : oneTime ? parsedExpression.$$watchDelegate = parsedExpression.literal ? oneTimeLiteralWatchDelegate : oneTimeWatchDelegate : parsedExpression.inputs && (parsedExpression.$$watchDelegate = inputsWatchDelegate), expensiveChecks && (parsedExpression = expensiveChecksInterceptor(parsedExpression)), cache[cacheKey] = parsedExpression
              }
              return addInterceptor(parsedExpression, interceptorFn);
            case"function":
              return addInterceptor(exp, interceptorFn);
            default:
              return addInterceptor(noop, interceptorFn)
          }
        }

        function expensiveChecksInterceptor(fn) {
          function expensiveCheckFn(scope, locals, assign, inputs) {
            var expensiveCheckOldValue = runningChecksEnabled;
            runningChecksEnabled       = !0;
            try {
              return fn(scope, locals, assign, inputs)
            } finally {
              runningChecksEnabled = expensiveCheckOldValue
            }
          }

          if (!fn) return fn;
          expensiveCheckFn.$$watchDelegate = fn.$$watchDelegate, expensiveCheckFn.assign = expensiveChecksInterceptor(fn.assign), expensiveCheckFn.constant = fn.constant, expensiveCheckFn.literal = fn.literal;
          for (var i = 0; fn.inputs && i < fn.inputs.length; ++i) fn.inputs[i] = expensiveChecksInterceptor(fn.inputs[i]);
          return expensiveCheckFn.inputs = fn.inputs, expensiveCheckFn
        }

        function expressionInputDirtyCheck(newValue, oldValueOfValue) {
          return null == newValue || null == oldValueOfValue ? newValue === oldValueOfValue : ("object" != typeof newValue || "object" != typeof(newValue = getValueOf(newValue))) && (newValue === oldValueOfValue || newValue !== newValue && oldValueOfValue !== oldValueOfValue)
        }

        function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {
          var lastResult, inputExpressions = parsedExpression.inputs;
          if (1 === inputExpressions.length) {
            var oldInputValueOf = expressionInputDirtyCheck;
            return inputExpressions = inputExpressions[0], scope.$watch(function (scope) {
              var newInputValue = inputExpressions(scope);
              return expressionInputDirtyCheck(newInputValue, oldInputValueOf) || (lastResult = parsedExpression(scope, void 0, void 0, [newInputValue]), oldInputValueOf = newInputValue && getValueOf(newInputValue)), lastResult
            }, listener, objectEquality, prettyPrintExpression)
          }
          for (var oldInputValueOfValues = [], oldInputValues = [], i = 0, ii = inputExpressions.length; i < ii; i++) oldInputValueOfValues[i] = expressionInputDirtyCheck, oldInputValues[i] = null;
          return scope.$watch(function (scope) {
            for (var changed = !1, i = 0, ii = inputExpressions.length; i < ii; i++) {
              var newInputValue = inputExpressions[i](scope);
              (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i]))) && (oldInputValues[i] = newInputValue, oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue))
            }
            return changed && (lastResult = parsedExpression(scope, void 0, void 0, oldInputValues)), lastResult
          }, listener, objectEquality, prettyPrintExpression)
        }

        function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression) {
          var unwatch, lastValue;
          return unwatch = scope.$watch(function (scope) {
            return parsedExpression(scope)
          }, function (value, old, scope) {
            lastValue = value, isFunction(listener) && listener.apply(this, arguments), isDefined(value) && scope.$$postDigest(function () {
              isDefined(lastValue) && unwatch()
            })
          }, objectEquality)
        }

        function oneTimeLiteralWatchDelegate(scope, listener, objectEquality, parsedExpression) {
          function isAllDefined(value) {
            var allDefined = !0;
            return forEach(value, function (val) {
              isDefined(val) || (allDefined = !1)
            }), allDefined
          }

          var unwatch, lastValue;
          return unwatch = scope.$watch(function (scope) {
            return parsedExpression(scope)
          }, function (value, old, scope) {
            lastValue = value, isFunction(listener) && listener.call(this, value, old, scope), isAllDefined(value) && scope.$$postDigest(function () {
              isAllDefined(lastValue) && unwatch()
            })
          }, objectEquality)
        }

        function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {
          var unwatch;
          return unwatch = scope.$watch(function (scope) {
            return unwatch(), parsedExpression(scope)
          }, listener, objectEquality)
        }

        function addInterceptor(parsedExpression, interceptorFn) {
          if (!interceptorFn) return parsedExpression;
          var watchDelegate = parsedExpression.$$watchDelegate, useInputs = !1,
              regularWatch                                                = watchDelegate !== oneTimeLiteralWatchDelegate && watchDelegate !== oneTimeWatchDelegate,
              fn                                                          = regularWatch ? function (scope, locals, assign, inputs) {
                var value = useInputs && inputs ? inputs[0] : parsedExpression(scope, locals, assign, inputs);
                return interceptorFn(value, scope, locals)
              } : function (scope, locals, assign, inputs) {
                var value  = parsedExpression(scope, locals, assign, inputs),
                    result = interceptorFn(value, scope, locals);
                return isDefined(value) ? result : value
              };
          return parsedExpression.$$watchDelegate && parsedExpression.$$watchDelegate !== inputsWatchDelegate ? fn.$$watchDelegate = parsedExpression.$$watchDelegate : interceptorFn.$stateful || (fn.$$watchDelegate = inputsWatchDelegate, useInputs = !parsedExpression.inputs, fn.inputs = parsedExpression.inputs ? parsedExpression.inputs : [parsedExpression]), fn
        }

        var noUnsafeEval          = csp().noUnsafeEval, $parseOptions = {
          csp:                  noUnsafeEval,
          expensiveChecks:      !1,
          literals:             copy(literals),
          isIdentifierStart:    isFunction(identStart) && identStart,
          isIdentifierContinue: isFunction(identContinue) && identContinue
        }, $parseOptionsExpensive = {
          csp:                  noUnsafeEval,
          expensiveChecks:      !0,
          literals:             copy(literals),
          isIdentifierStart:    isFunction(identStart) && identStart,
          isIdentifierContinue: isFunction(identContinue) && identContinue
        }, runningChecksEnabled   = !1;
        return $parse.$$runningExpensiveChecks = function () {
          return runningChecksEnabled
        }, $parse
      }]
    }

    function $QProvider() {
      this.$get = ["$rootScope", "$exceptionHandler", function ($rootScope, $exceptionHandler) {
        return qFactory(function (callback) {
          $rootScope.$evalAsync(callback)
        }, $exceptionHandler)
      }]
    }

    function $$QProvider() {
      this.$get = ["$browser", "$exceptionHandler", function ($browser, $exceptionHandler) {
        return qFactory(function (callback) {
          $browser.defer(callback)
        }, $exceptionHandler)
      }]
    }

    function qFactory(nextTick, exceptionHandler) {
      function Promise() {
        this.$$state = {status: 0}
      }

      function simpleBind(context, fn) {
        return function (value) {
          fn.call(context, value)
        }
      }

      function processQueue(state) {
        var fn, deferred, pending;
        pending = state.pending, state.processScheduled = !1, state.pending = void 0;
        for (var i = 0, ii = pending.length; i < ii; ++i) {
          deferred = pending[i][0], fn = pending[i][state.status];
          try {
            isFunction(fn) ? deferred.resolve(fn(state.value)) : 1 === state.status ? deferred.resolve(state.value) : deferred.reject(state.value)
          } catch (e) {
            deferred.reject(e), exceptionHandler(e)
          }
        }
      }

      function scheduleProcessQueue(state) {
        !state.processScheduled && state.pending && (state.processScheduled = !0, nextTick(function () {
          processQueue(state)
        }))
      }

      function Deferred() {
        this.promise = new Promise
      }

      function all(promises) {
        var deferred = new Deferred, counter = 0, results = isArray(promises) ? [] : {};
        return forEach(promises, function (promise, key) {
          counter++, when(promise).then(function (value) {
            results.hasOwnProperty(key) || (results[key] = value, --counter || deferred.resolve(results))
          }, function (reason) {
            results.hasOwnProperty(key) || deferred.reject(reason)
          })
        }), 0 === counter && deferred.resolve(results), deferred.promise
      }

      var $qMinErr = minErr("$q", TypeError), defer = function () {
        var d = new Deferred;
        return d.resolve = simpleBind(d, d.resolve), d.reject = simpleBind(d, d.reject), d.notify = simpleBind(d, d.notify), d
      };
      extend(Promise.prototype, {
        then:       function (onFulfilled, onRejected, progressBack) {
          if (isUndefined(onFulfilled) && isUndefined(onRejected) && isUndefined(progressBack)) return this;
          var result = new Deferred;
          return this.$$state.pending = this.$$state.pending || [], this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]), this.$$state.status > 0 && scheduleProcessQueue(this.$$state), result.promise
        }, catch:   function (callback) {
          return this.then(null, callback)
        }, finally: function (callback, progressBack) {
          return this.then(function (value) {
            return handleCallback(value, !0, callback)
          }, function (error) {
            return handleCallback(error, !1, callback)
          }, progressBack)
        }
      }), extend(Deferred.prototype, {
        resolve:      function (val) {
          this.promise.$$state.status || (val === this.promise ? this.$$reject($qMinErr("qcycle", "Expected promise to be resolved with value other than itself '{0}'", val)) : this.$$resolve(val))
        }, $$resolve: function (val) {
          function resolvePromise(val) {
            done || (done = !0, that.$$resolve(val))
          }

          function rejectPromise(val) {
            done || (done = !0, that.$$reject(val))
          }

          var then, that = this, done = !1;
          try {
            (isObject(val) || isFunction(val)) && (then = val && val.then), isFunction(then) ? (this.promise.$$state.status = -1, then.call(val, resolvePromise, rejectPromise, simpleBind(this, this.notify))) : (this.promise.$$state.value = val, this.promise.$$state.status = 1, scheduleProcessQueue(this.promise.$$state))
          } catch (e) {
            rejectPromise(e), exceptionHandler(e)
          }
        }, reject:    function (reason) {
          this.promise.$$state.status || this.$$reject(reason)
        }, $$reject:  function (reason) {
          this.promise.$$state.value = reason, this.promise.$$state.status = 2, scheduleProcessQueue(this.promise.$$state)
        }, notify:    function (progress) {
          var callbacks = this.promise.$$state.pending;
          this.promise.$$state.status <= 0 && callbacks && callbacks.length && nextTick(function () {
            for (var callback, result, i = 0, ii = callbacks.length; i < ii; i++) {
              result = callbacks[i][0], callback = callbacks[i][3];
              try {
                result.notify(isFunction(callback) ? callback(progress) : progress)
              } catch (e) {
                exceptionHandler(e)
              }
            }
          })
        }
      });
      var reject        = function (reason) {
        var result = new Deferred;
        return result.reject(reason), result.promise
      }, makePromise    = function (value, resolved) {
        var result = new Deferred;
        return resolved ? result.resolve(value) : result.reject(value), result.promise
      }, handleCallback = function (value, isResolved, callback) {
        var callbackOutput = null;
        try {
          isFunction(callback) && (callbackOutput = callback())
        } catch (e) {
          return makePromise(e, !1)
        }
        return isPromiseLike(callbackOutput) ? callbackOutput.then(function () {
          return makePromise(value, isResolved)
        }, function (error) {
          return makePromise(error, !1)
        }) : makePromise(value, isResolved)
      }, when           = function (value, callback, errback, progressBack) {
        var result = new Deferred;
        return result.resolve(value), result.promise.then(callback, errback, progressBack)
      }, resolve        = when, $Q = function (resolver) {
        function resolveFn(value) {
          deferred.resolve(value)
        }

        function rejectFn(reason) {
          deferred.reject(reason)
        }

        if (!isFunction(resolver)) throw $qMinErr("norslvr", "Expected resolverFn, got '{0}'", resolver);
        var deferred = new Deferred;
        return resolver(resolveFn, rejectFn), deferred.promise
      };
      return $Q.prototype = Promise.prototype, $Q.defer = defer, $Q.reject = reject, $Q.when = when, $Q.resolve = resolve, $Q.all = all, $Q
    }

    function $$RAFProvider() {
      this.$get = ["$window", "$timeout", function ($window, $timeout) {
        var requestAnimationFrame                       = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame,
            cancelAnimationFrame                        = $window.cancelAnimationFrame || $window.webkitCancelAnimationFrame || $window.webkitCancelRequestAnimationFrame,
            rafSupported = !!requestAnimationFrame, raf = rafSupported ? function (fn) {
              var id = requestAnimationFrame(fn);
              return function () {
                cancelAnimationFrame(id)
              }
            } : function (fn) {
              var timer = $timeout(fn, 16.66, !1);
              return function () {
                $timeout.cancel(timer)
              }
            };
        return raf.supported = rafSupported, raf
      }]
    }

    function $RootScopeProvider() {
      function createChildScopeClass(parent) {
        function ChildScope() {
          this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null, this.$$listeners = {}, this.$$listenerCount = {}, this.$$watchersCount = 0, this.$id = nextUid(), this.$$ChildScope = null
        }

        return ChildScope.prototype = parent, ChildScope
      }

      var TTL = 10, $rootScopeMinErr = minErr("$rootScope"), lastDirtyWatch = null, applyAsyncId = null;
      this.digestTtl = function (value) {
        return arguments.length && (TTL = value), TTL
      }, this.$get = ["$exceptionHandler", "$parse", "$browser", function ($exceptionHandler, $parse, $browser) {
        function destroyChildScope($event) {
          $event.currentScope.$$destroyed = !0
        }

        function cleanUpScope($scope) {
          9 === msie && ($scope.$$childHead && cleanUpScope($scope.$$childHead), $scope.$$nextSibling && cleanUpScope($scope.$$nextSibling)), $scope.$parent = $scope.$$nextSibling = $scope.$$prevSibling = $scope.$$childHead = $scope.$$childTail = $scope.$root = $scope.$$watchers = null
        }

        function Scope() {
          this.$id = nextUid(), this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null, this.$root = this, this.$$destroyed = !1, this.$$listeners = {}, this.$$listenerCount = {}, this.$$watchersCount = 0, this.$$isolateBindings = null
        }

        function beginPhase(phase) {
          if ($rootScope.$$phase) throw $rootScopeMinErr("inprog", "{0} already in progress", $rootScope.$$phase);
          $rootScope.$$phase = phase
        }

        function clearPhase() {
          $rootScope.$$phase = null
        }

        function incrementWatchersCount(current, count) {
          do {
            current.$$watchersCount += count
          } while (current = current.$parent)
        }

        function decrementListenerCount(current, count, name) {
          do {
            current.$$listenerCount[name] -= count, 0 === current.$$listenerCount[name] && delete current.$$listenerCount[name]
          } while (current = current.$parent)
        }

        function initWatchVal() {
        }

        function flushApplyAsync() {
          for (; applyAsyncQueue.length;) try {
            applyAsyncQueue.shift()()
          } catch (e) {
            $exceptionHandler(e)
          }
          applyAsyncId = null
        }

        function scheduleApplyAsync() {
          null === applyAsyncId && (applyAsyncId = $browser.defer(function () {
            $rootScope.$apply(flushApplyAsync)
          }))
        }

        Scope.prototype = {
          constructor:         Scope, $new: function (isolate, parent) {
            var child;
            return parent = parent || this, isolate ? (child = new Scope, child.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = createChildScopeClass(this)), child = new this.$$ChildScope), child.$parent = parent, child.$$prevSibling = parent.$$childTail, parent.$$childHead ? (parent.$$childTail.$$nextSibling = child, parent.$$childTail = child) : parent.$$childHead = parent.$$childTail = child, (isolate || parent != this) && child.$on("$destroy", destroyChildScope), child
          }, $watch:           function (watchExp, listener, objectEquality, prettyPrintExpression) {
            var get = $parse(watchExp);
            if (get.$$watchDelegate) return get.$$watchDelegate(this, listener, objectEquality, get, watchExp);
            var scope = this, array = scope.$$watchers, watcher = {
              fn:   listener,
              last: initWatchVal,
              get:  get,
              exp:  prettyPrintExpression || watchExp,
              eq:   !!objectEquality
            };
            return lastDirtyWatch = null, isFunction(listener) || (watcher.fn = noop), array || (array = scope.$$watchers = []), array.unshift(watcher), incrementWatchersCount(this, 1), function () {
              arrayRemove(array, watcher) >= 0 && incrementWatchersCount(scope, -1), lastDirtyWatch = null
            }
          }, $watchGroup:      function (watchExpressions, listener) {
            function watchGroupAction() {
              changeReactionScheduled = !1, firstRun ? (firstRun = !1, listener(newValues, newValues, self)) : listener(newValues, oldValues, self)
            }

            var oldValues                                                               = new Array(watchExpressions.length), newValues               = new Array(watchExpressions.length),
                deregisterFns = [], self = this, changeReactionScheduled = !1, firstRun = !0;
            if (!watchExpressions.length) {
              var shouldCall = !0;
              return self.$evalAsync(function () {
                shouldCall && listener(newValues, newValues, self)
              }), function () {
                shouldCall = !1
              }
            }
            return 1 === watchExpressions.length ? this.$watch(watchExpressions[0], function (value, oldValue, scope) {
              newValues[0] = value, oldValues[0] = oldValue, listener(newValues, value === oldValue ? newValues : oldValues, scope)
            }) : (forEach(watchExpressions, function (expr, i) {
              var unwatchFn = self.$watch(expr, function (value, oldValue) {
                newValues[i] = value, oldValues[i] = oldValue, changeReactionScheduled || (changeReactionScheduled = !0, self.$evalAsync(watchGroupAction))
              });
              deregisterFns.push(unwatchFn)
            }), function () {
              for (; deregisterFns.length;) deregisterFns.shift()()
            })
          }, $watchCollection: function (obj, listener) {
            function $watchCollectionInterceptor(_value) {
              newValue = _value;
              var newLength, key, newItem, oldItem;
              if (!isUndefined(newValue)) {
                if (isObject(newValue)) if (isArrayLike(newValue)) {
                  oldValue !== internalArray && (oldValue = internalArray, oldLength = oldValue.length = 0, changeDetected++), newLength = newValue.length, oldLength !== newLength && (changeDetected++, oldValue.length = oldLength = newLength);
                  for (var i = 0; i < newLength; i++) oldItem = oldValue[i], newItem = newValue[i], oldItem !== oldItem && newItem !== newItem || oldItem === newItem || (changeDetected++, oldValue[i] = newItem)
                } else {
                  oldValue !== internalObject && (oldValue = internalObject = {}, oldLength = 0, changeDetected++), newLength = 0;
                  for (key in newValue) hasOwnProperty.call(newValue, key) && (newLength++, newItem = newValue[key], oldItem = oldValue[key], key in oldValue ? oldItem !== oldItem && newItem !== newItem || oldItem === newItem || (changeDetected++, oldValue[key] = newItem) : (oldLength++, oldValue[key] = newItem, changeDetected++));
                  if (oldLength > newLength) {
                    changeDetected++;
                    for (key in oldValue) hasOwnProperty.call(newValue, key) || (oldLength--, delete oldValue[key])
                  }
                } else oldValue !== newValue && (oldValue = newValue, changeDetected++);
                return changeDetected
              }
            }

            function $watchCollectionAction() {
              if (initRun ? (initRun = !1, listener(newValue, newValue, self)) : listener(newValue, veryOldValue, self), trackVeryOldValue) if (isObject(newValue)) if (isArrayLike(newValue)) {
                veryOldValue = new Array(newValue.length);
                for (var i = 0; i < newValue.length; i++) veryOldValue[i] = newValue[i]
              } else {
                veryOldValue = {};
                for (var key in newValue) hasOwnProperty.call(newValue, key) && (veryOldValue[key] = newValue[key])
              } else veryOldValue = newValue
            }

            $watchCollectionInterceptor.$stateful                                = !0;
            var newValue, oldValue, veryOldValue, self                           = this, trackVeryOldValue = listener.length > 1,
                changeDetected                                                   = 0, changeDetector                               = $parse(obj, $watchCollectionInterceptor),
                internalArray = [], internalObject = {}, initRun = !0, oldLength = 0;
            return this.$watch(changeDetector, $watchCollectionAction)
          }, $digest:          function () {
            var watch, value, last, fn, get, watchers, length, dirty, next, current, logIdx, asyncTask, ttl = TTL,
                target                                                                                      = this,
                watchLog                                                                                    = [];
            beginPhase("$digest"), $browser.$$checkUrlChange(), this === $rootScope && null !== applyAsyncId && ($browser.defer.cancel(applyAsyncId), flushApplyAsync()), lastDirtyWatch = null;
            do {
              for (dirty = !1, current = target; asyncQueue.length;) {
                try {
                  asyncTask = asyncQueue.shift(), asyncTask.scope.$eval(asyncTask.expression, asyncTask.locals)
                } catch (e) {
                  $exceptionHandler(e)
                }
                lastDirtyWatch = null
              }
              traverseScopesLoop:do {
                if (watchers = current.$$watchers) for (length = watchers.length; length--;) try {
                  if (watch = watchers[length]) if (get = watch.get, (value = get(current)) === (last = watch.last) || (watch.eq ? equals(value, last) : "number" == typeof value && "number" == typeof last && isNaN(value) && isNaN(last))) {
                    if (watch === lastDirtyWatch) {
                      dirty = !1;
                      break traverseScopesLoop
                    }
                  } else dirty = !0, lastDirtyWatch = watch, watch.last = watch.eq ? copy(value, null) : value, fn = watch.fn, fn(value, last === initWatchVal ? value : last, current), ttl < 5 && (logIdx = 4 - ttl, watchLog[logIdx] || (watchLog[logIdx] = []), watchLog[logIdx].push({
                    msg:    isFunction(watch.exp) ? "fn: " + (watch.exp.name || watch.exp.toString()) : watch.exp,
                    newVal: value,
                    oldVal: last
                  }))
                } catch (e) {
                  $exceptionHandler(e)
                }
                if (!(next = current.$$watchersCount && current.$$childHead || current !== target && current.$$nextSibling)) for (; current !== target && !(next = current.$$nextSibling);) current = current.$parent
              } while (current = next);
              if ((dirty || asyncQueue.length) && !ttl--) throw clearPhase(), $rootScopeMinErr("infdig", "{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}", TTL, watchLog)
            } while (dirty || asyncQueue.length);
            for (clearPhase(); postDigestQueue.length;) try {
              postDigestQueue.shift()()
            } catch (e) {
              $exceptionHandler(e)
            }
          }, $destroy:         function () {
            if (!this.$$destroyed) {
              var parent = this.$parent;
              this.$broadcast("$destroy"), this.$$destroyed = !0, this === $rootScope && $browser.$$applicationDestroyed(), incrementWatchersCount(this, -this.$$watchersCount);
              for (var eventName in this.$$listenerCount) decrementListenerCount(this, this.$$listenerCount[eventName], eventName);
              parent && parent.$$childHead == this && (parent.$$childHead = this.$$nextSibling), parent && parent.$$childTail == this && (parent.$$childTail = this.$$prevSibling), this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop, this.$on = this.$watch = this.$watchGroup = function () {
                return noop
              }, this.$$listeners = {}, this.$$nextSibling = null, cleanUpScope(this)
            }
          }, $eval:            function (expr, locals) {
            return $parse(expr)(this, locals)
          }, $evalAsync:       function (expr, locals) {
            $rootScope.$$phase || asyncQueue.length || $browser.defer(function () {
              asyncQueue.length && $rootScope.$digest()
            }), asyncQueue.push({scope: this, expression: $parse(expr), locals: locals})
          }, $$postDigest:     function (fn) {
            postDigestQueue.push(fn)
          }, $apply:           function (expr) {
            try {
              beginPhase("$apply");
              try {
                return this.$eval(expr)
              } finally {
                clearPhase()
              }
            } catch (e) {
              $exceptionHandler(e)
            } finally {
              try {
                $rootScope.$digest()
              } catch (e) {
                throw $exceptionHandler(e), e
              }
            }
          }, $applyAsync:      function (expr) {
            function $applyAsyncExpression() {
              scope.$eval(expr)
            }

            var scope = this;
            expr && applyAsyncQueue.push($applyAsyncExpression), expr = $parse(expr), scheduleApplyAsync()
          }, $on:              function (name, listener) {
            var namedListeners = this.$$listeners[name];
            namedListeners || (this.$$listeners[name] = namedListeners = []), namedListeners.push(listener);
            var current = this;
            do {
              current.$$listenerCount[name] || (current.$$listenerCount[name] = 0), current.$$listenerCount[name]++
            } while (current = current.$parent);
            var self = this;
            return function () {
              var indexOfListener = namedListeners.indexOf(listener);
              -1 !== indexOfListener && (namedListeners[indexOfListener] = null, decrementListenerCount(self, 1, name))
            }
          }, $emit:            function (name, args) {
            var namedListeners, i, length, empty = [], scope = this, stopPropagation = !1, event = {
              name:                name, targetScope: scope, stopPropagation: function () {
                stopPropagation = !0
              }, preventDefault:   function () {
                event.defaultPrevented = !0
              }, defaultPrevented: !1
            }, listenerArgs                      = concat([event], arguments, 1);
            do {
              for (namedListeners = scope.$$listeners[name] || empty, event.currentScope = scope, i = 0, length = namedListeners.length; i < length; i++) if (namedListeners[i]) try {
                namedListeners[i].apply(null, listenerArgs)
              } catch (e) {
                $exceptionHandler(e)
              } else namedListeners.splice(i, 1), i--, length--;
              if (stopPropagation) return event.currentScope = null, event;
              scope = scope.$parent
            } while (scope);
            return event.currentScope = null, event
          }, $broadcast:       function (name, args) {
            var target = this, current = target, next = target, event = {
              name:                name, targetScope: target, preventDefault: function () {
                event.defaultPrevented = !0
              }, defaultPrevented: !1
            };
            if (!target.$$listenerCount[name]) return event;
            for (var listeners, i, length, listenerArgs = concat([event], arguments, 1); current = next;) {
              for (event.currentScope = current, listeners = current.$$listeners[name] || [], i = 0, length = listeners.length; i < length; i++) if (listeners[i]) try {
                listeners[i].apply(null, listenerArgs)
              } catch (e) {
                $exceptionHandler(e)
              } else listeners.splice(i, 1), i--, length--;
              if (!(next = current.$$listenerCount[name] && current.$$childHead || current !== target && current.$$nextSibling)) for (; current !== target && !(next = current.$$nextSibling);) current = current.$parent
            }
            return event.currentScope = null, event
          }
        };
        var $rootScope  = new Scope, asyncQueue = $rootScope.$$asyncQueue = [],
            postDigestQueue = $rootScope.$$postDigestQueue = [], applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];
        return $rootScope
      }]
    }

    function $$SanitizeUriProvider() {
      var aHrefSanitizationWhitelist  = /^\s*(https?|ftp|mailto|tel|file):/,
          imgSrcSanitizationWhitelist = /^\s*((https?|ftp|file|blob):|data:image\/)/;
      this.aHrefSanitizationWhitelist = function (regexp) {
        return isDefined(regexp) ? (aHrefSanitizationWhitelist = regexp, this) : aHrefSanitizationWhitelist
      }, this.imgSrcSanitizationWhitelist = function (regexp) {
        return isDefined(regexp) ? (imgSrcSanitizationWhitelist = regexp, this) : imgSrcSanitizationWhitelist
      }, this.$get = function () {
        return function (uri, isImage) {
          var normalizedVal, regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;
          return normalizedVal = urlResolve(uri).href, "" === normalizedVal || normalizedVal.match(regex) ? uri : "unsafe:" + normalizedVal
        }
      }
    }

    function adjustMatcher(matcher) {
      if ("self" === matcher) return matcher;
      if (isString(matcher)) {
        if (matcher.indexOf("***") > -1) throw $sceMinErr("iwcard", "Illegal sequence *** in string matcher.  String: {0}", matcher);
        return matcher = escapeForRegexp(matcher).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*"), new RegExp("^" + matcher + "$")
      }
      if (isRegExp(matcher)) return new RegExp("^" + matcher.source + "$");
      throw $sceMinErr("imatcher", 'Matchers may only be "self", string patterns or RegExp objects')
    }

    function adjustMatchers(matchers) {
      var adjustedMatchers = [];
      return isDefined(matchers) && forEach(matchers, function (matcher) {
        adjustedMatchers.push(adjustMatcher(matcher))
      }), adjustedMatchers
    }

    function $SceDelegateProvider() {
      this.SCE_CONTEXTS        = SCE_CONTEXTS;
      var resourceUrlWhitelist = ["self"], resourceUrlBlacklist = [];
      this.resourceUrlWhitelist = function (value) {
        return arguments.length && (resourceUrlWhitelist = adjustMatchers(value)), resourceUrlWhitelist
      }, this.resourceUrlBlacklist = function (value) {
        return arguments.length && (resourceUrlBlacklist = adjustMatchers(value)), resourceUrlBlacklist
      }, this.$get = ["$injector", function ($injector) {
        function matchUrl(matcher, parsedUrl) {
          return "self" === matcher ? urlIsSameOrigin(parsedUrl) : !!matcher.exec(parsedUrl.href)
        }

        function isResourceUrlAllowedByPolicy(url) {
          var i, n, parsedUrl = urlResolve(url.toString()), allowed = !1;
          for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {
            allowed = !0;
            break
          }
          if (allowed) for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {
            allowed = !1;
            break
          }
          return allowed
        }

        function generateHolderType(Base) {
          var holderType = function (trustedValue) {
            this.$$unwrapTrustedValue = function () {
              return trustedValue
            }
          };
          return Base && (holderType.prototype = new Base), holderType.prototype.valueOf = function () {
            return this.$$unwrapTrustedValue()
          }, holderType.prototype.toString = function () {
            return this.$$unwrapTrustedValue().toString()
          }, holderType
        }

        function trustAs(type, trustedValue) {
          var Constructor = byType.hasOwnProperty(type) ? byType[type] : null;
          if (!Constructor) throw $sceMinErr("icontext", "Attempted to trust a value in invalid context. Context: {0}; Value: {1}", type, trustedValue);
          if (null === trustedValue || isUndefined(trustedValue) || "" === trustedValue) return trustedValue;
          if ("string" != typeof trustedValue) throw $sceMinErr("itype", "Attempted to trust a non-string value in a content requiring a string: Context: {0}", type);
          return new Constructor(trustedValue)
        }

        function valueOf(maybeTrusted) {
          return maybeTrusted instanceof trustedValueHolderBase ? maybeTrusted.$$unwrapTrustedValue() : maybeTrusted
        }

        function getTrusted(type, maybeTrusted) {
          if (null === maybeTrusted || isUndefined(maybeTrusted) || "" === maybeTrusted) return maybeTrusted;
          var constructor = byType.hasOwnProperty(type) ? byType[type] : null;
          if (constructor && maybeTrusted instanceof constructor) return maybeTrusted.$$unwrapTrustedValue();
          if (type === SCE_CONTEXTS.RESOURCE_URL) {
            if (isResourceUrlAllowedByPolicy(maybeTrusted)) return maybeTrusted;
            throw $sceMinErr("insecurl", "Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}", maybeTrusted.toString())
          }
          if (type === SCE_CONTEXTS.HTML) return htmlSanitizer(maybeTrusted);
          throw $sceMinErr("unsafe", "Attempting to use an unsafe value in a safe context.")
        }

        var htmlSanitizer = function (html) {
          throw $sceMinErr("unsafe", "Attempting to use an unsafe value in a safe context.")
        };
        $injector.has("$sanitize") && (htmlSanitizer = $injector.get("$sanitize"));
        var trustedValueHolderBase = generateHolderType(), byType = {};
        return byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]), {
          trustAs:    trustAs,
          getTrusted: getTrusted,
          valueOf:    valueOf
        }
      }]
    }

    function $SceProvider() {
      var enabled = !0;
      this.enabled = function (value) {
        return arguments.length && (enabled = !!value), enabled
      }, this.$get = ["$parse", "$sceDelegate", function ($parse, $sceDelegate) {
        if (enabled && msie < 8) throw $sceMinErr("iequirks", "Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api2/ng.$sce for more information.");
        var sce = shallowCopy(SCE_CONTEXTS);
        sce.isEnabled = function () {
          return enabled
        }, sce.trustAs = $sceDelegate.trustAs, sce.getTrusted = $sceDelegate.getTrusted, sce.valueOf = $sceDelegate.valueOf, enabled || (sce.trustAs = sce.getTrusted = function (type, value) {
          return value
        }, sce.valueOf = identity), sce.parseAs = function (type, expr) {
          var parsed = $parse(expr);
          return parsed.literal && parsed.constant ? parsed : $parse(expr, function (value) {
            return sce.getTrusted(type, value)
          })
        };
        var parse = sce.parseAs, getTrusted = sce.getTrusted, trustAs = sce.trustAs;
        return forEach(SCE_CONTEXTS, function (enumValue, name) {
          var lName = lowercase(name);
          sce[camelCase("parse_as_" + lName)] = function (expr) {
            return parse(enumValue, expr)
          }, sce[camelCase("get_trusted_" + lName)] = function (value) {
            return getTrusted(enumValue, value)
          }, sce[camelCase("trust_as_" + lName)] = function (value) {
            return trustAs(enumValue, value)
          }
        }), sce
      }]
    }

    function $SnifferProvider() {
      this.$get = ["$window", "$document", function ($window, $document) {
        var vendorPrefix, match, eventSupport                                              = {},
            isChromePackagedApp                                                            = $window.chrome && $window.chrome.app && $window.chrome.app.runtime,
            hasHistoryPushState                                                            = !isChromePackagedApp && $window.history && $window.history.pushState,
            android                                                                        = toInt((/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),
            boxee                                                                          = /Boxee/i.test(($window.navigator || {}).userAgent),
            document                                                                       = $document[0] || {}, vendorRegex = /^(Moz|webkit|ms)(?=[A-Z])/,
            bodyStyle = document.body && document.body.style, transitions = !1, animations = !1;
        if (bodyStyle) {
          for (var prop in bodyStyle) if (match = vendorRegex.exec(prop)) {
            vendorPrefix = match[0], vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);
            break
          }
          vendorPrefix || (vendorPrefix = "WebkitOpacity" in bodyStyle && "webkit"), transitions = !!("transition" in bodyStyle || vendorPrefix + "Transition" in bodyStyle), animations = !!("animation" in bodyStyle || vendorPrefix + "Animation" in bodyStyle), !android || transitions && animations || (transitions = isString(bodyStyle.webkitTransition), animations = isString(bodyStyle.webkitAnimation))
        }
        return {
          history:      !(!hasHistoryPushState || android < 4 || boxee),
          hasEvent:     function (event) {
            if ("input" === event && msie <= 11) return !1;
            if (isUndefined(eventSupport[event])) {
              var divElm          = document.createElement("div");
              eventSupport[event] = "on" + event in divElm
            }
            return eventSupport[event]
          },
          csp:          csp(),
          vendorPrefix: vendorPrefix,
          transitions:  transitions,
          animations:   animations,
          android:      android
        }
      }]
    }

    function $TemplateRequestProvider() {
      var httpOptions;
      this.httpOptions = function (val) {
        return val ? (httpOptions = val, this) : httpOptions
      }, this.$get = ["$templateCache", "$http", "$q", "$sce", function ($templateCache, $http, $q, $sce) {
        function handleRequestFn(tpl, ignoreRequestError) {
          function handleError(resp) {
            if (!ignoreRequestError) throw $templateRequestMinErr("tpload", "Failed to load template: {0} (HTTP status: {1} {2})", tpl, resp.status, resp.statusText);
            return $q.reject(resp)
          }

          handleRequestFn.totalPendingRequests++, isString(tpl) && $templateCache.get(tpl) || (tpl = $sce.getTrustedResourceUrl(tpl));
          var transformResponse = $http.defaults && $http.defaults.transformResponse;
          return isArray(transformResponse) ? transformResponse = transformResponse.filter(function (transformer) {
            return transformer !== defaultHttpResponseTransform
          }) : transformResponse === defaultHttpResponseTransform && (transformResponse = null), $http.get(tpl, extend({
            cache:             $templateCache,
            transformResponse: transformResponse
          }, httpOptions)).finally(function () {
            handleRequestFn.totalPendingRequests--
          }).then(function (response) {
            return $templateCache.put(tpl, response.data), response.data
          }, handleError)
        }

        return handleRequestFn.totalPendingRequests = 0, handleRequestFn
      }]
    }

    function $$TestabilityProvider() {
      this.$get = ["$rootScope", "$browser", "$location", function ($rootScope, $browser, $location) {
        var testability = {};
        return testability.findBindings = function (element, expression, opt_exactMatch) {
          var bindings = element.getElementsByClassName("ng-binding"), matches = [];
          return forEach(bindings, function (binding) {
            var dataBinding = angular.element(binding).data("$binding");
            dataBinding && forEach(dataBinding, function (bindingName) {
              if (opt_exactMatch) {
                new RegExp("(^|\\s)" + escapeForRegexp(expression) + "(\\s|\\||$)").test(bindingName) && matches.push(binding)
              } else -1 != bindingName.indexOf(expression) && matches.push(binding)
            })
          }), matches
        }, testability.findModels = function (element, expression, opt_exactMatch) {
          for (var prefixes = ["ng-", "data-ng-", "ng\\:"], p = 0; p < prefixes.length; ++p) {
            var attributeEquals = opt_exactMatch ? "=" : "*=",
                selector        = "[" + prefixes[p] + "model" + attributeEquals + '"' + expression + '"]',
                elements        = element.querySelectorAll(selector);
            if (elements.length) return elements
          }
        }, testability.getLocation = function () {
          return $location.url()
        }, testability.setLocation = function (url) {
          url !== $location.url() && ($location.url(url), $rootScope.$digest())
        }, testability.whenStable = function (callback) {
          $browser.notifyWhenNoOutstandingRequests(callback)
        }, testability
      }]
    }

    function $TimeoutProvider() {
      this.$get = ["$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function ($rootScope, $browser, $q, $$q, $exceptionHandler) {
        function timeout(fn, delay, invokeApply) {
          isFunction(fn) || (invokeApply = delay, delay = fn, fn = noop);
          var timeoutId, args = sliceArgs(arguments, 3), skipApply = isDefined(invokeApply) && !invokeApply,
              deferred                                             = (skipApply ? $$q : $q).defer(), promise = deferred.promise;
          return timeoutId = $browser.defer(function () {
            try {
              deferred.resolve(fn.apply(null, args))
            } catch (e) {
              deferred.reject(e), $exceptionHandler(e)
            } finally {
              delete deferreds[promise.$$timeoutId]
            }
            skipApply || $rootScope.$apply()
          }, delay), promise.$$timeoutId = timeoutId, deferreds[timeoutId] = deferred, promise
        }

        var deferreds = {};
        return timeout.cancel = function (promise) {
          return !!(promise && promise.$$timeoutId in deferreds) && (deferreds[promise.$$timeoutId].reject("canceled"), delete deferreds[promise.$$timeoutId], $browser.defer.cancel(promise.$$timeoutId))
        }, timeout
      }]
    }

    function urlResolve(url) {
      var href = url;
      return msie && (urlParsingNode.setAttribute("href", href), href = urlParsingNode.href), urlParsingNode.setAttribute("href", href), {
        href:     urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
        host:     urlParsingNode.host,
        search:   urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
        hash:     urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
        hostname: urlParsingNode.hostname,
        port:     urlParsingNode.port,
        pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
      }
    }

    function urlIsSameOrigin(requestUrl) {
      var parsed = isString(requestUrl) ? urlResolve(requestUrl) : requestUrl;
      return parsed.protocol === originUrl.protocol && parsed.host === originUrl.host
    }

    function $WindowProvider() {
      this.$get = valueFn(window)
    }

    function $$CookieReader($document) {
      function safeDecodeURIComponent(str) {
        try {
          return decodeURIComponent(str)
        } catch (e) {
          return str
        }
      }

      var rawDocument = $document[0] || {}, lastCookies = {}, lastCookieString = "";
      return function () {
        var cookieArray, cookie, i, index, name, currentCookieString = rawDocument.cookie || "";
        if (currentCookieString !== lastCookieString) for (lastCookieString = currentCookieString, cookieArray = lastCookieString.split("; "), lastCookies = {}, i = 0; i < cookieArray.length; i++) cookie = cookieArray[i], (index = cookie.indexOf("=")) > 0 && (name = safeDecodeURIComponent(cookie.substring(0, index)),
        isUndefined(lastCookies[name]) && (lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1))));
        return lastCookies
      }
    }

    function $$CookieReaderProvider() {
      this.$get = $$CookieReader
    }

    function $FilterProvider($provide) {
      function register(name, factory) {
        if (isObject(name)) {
          var filters = {};
          return forEach(name, function (filter, key) {
            filters[key] = register(key, filter)
          }), filters
        }
        return $provide.factory(name + suffix, factory)
      }

      var suffix = "Filter";
      this.register = register, this.$get = ["$injector", function ($injector) {
        return function (name) {
          return $injector.get(name + suffix)
        }
      }], register("currency", currencyFilter), register("date", dateFilter), register("filter", filterFilter), register("json", jsonFilter), register("limitTo", limitToFilter), register("lowercase", lowercaseFilter), register("number", numberFilter), register("orderBy", orderByFilter), register("uppercase", uppercaseFilter)
    }

    function filterFilter() {
      return function (array, expression, comparator) {
        if (!isArrayLike(array)) {
          if (null == array) return array;
          throw minErr("filter")("notarray", "Expected array but received: {0}", array)
        }
        var predicateFn, matchAgainstAnyProp, expressionType = getTypeForFilter(expression);
        switch (expressionType) {
          case"function":
            predicateFn = expression;
            break;
          case"boolean":
          case"null":
          case"number":
          case"string":
            matchAgainstAnyProp = !0;
          case"object":
            predicateFn = createPredicateFn(expression, comparator, matchAgainstAnyProp);
            break;
          default:
            return array
        }
        return Array.prototype.filter.call(array, predicateFn)
      }
    }

    function createPredicateFn(expression, comparator, matchAgainstAnyProp) {
      var shouldMatchPrimitives = isObject(expression) && "$" in expression;
      return !0 === comparator ? comparator = equals : isFunction(comparator) || (comparator = function (actual, expected) {
        return !isUndefined(actual) && (null === actual || null === expected ? actual === expected : !(isObject(expected) || isObject(actual) && !hasCustomToString(actual)) && (actual = lowercase("" + actual), expected = lowercase("" + expected), -1 !== actual.indexOf(expected)))
      }), function (item) {
        return shouldMatchPrimitives && !isObject(item) ? deepCompare(item, expression.$, comparator, !1) : deepCompare(item, expression, comparator, matchAgainstAnyProp)
      }
    }

    function deepCompare(actual, expected, comparator, matchAgainstAnyProp, dontMatchWholeObject) {
      var actualType = getTypeForFilter(actual), expectedType = getTypeForFilter(expected);
      if ("string" === expectedType && "!" === expected.charAt(0)) return !deepCompare(actual, expected.substring(1), comparator, matchAgainstAnyProp);
      if (isArray(actual)) return actual.some(function (item) {
        return deepCompare(item, expected, comparator, matchAgainstAnyProp)
      });
      switch (actualType) {
        case"object":
          var key;
          if (matchAgainstAnyProp) {
            for (key in actual) if ("$" !== key.charAt(0) && deepCompare(actual[key], expected, comparator, !0)) return !0;
            return !dontMatchWholeObject && deepCompare(actual, expected, comparator, !1)
          }
          if ("object" === expectedType) {
            for (key in expected) {
              var expectedVal = expected[key];
              if (!isFunction(expectedVal) && !isUndefined(expectedVal)) {
                var matchAnyProperty = "$" === key;
                if (!deepCompare(matchAnyProperty ? actual : actual[key], expectedVal, comparator, matchAnyProperty, matchAnyProperty)) return !1
              }
            }
            return !0
          }
          return comparator(actual, expected);
        case"function":
          return !1;
        default:
          return comparator(actual, expected)
      }
    }

    function getTypeForFilter(val) {
      return null === val ? "null" : typeof val
    }

    function currencyFilter($locale) {
      var formats = $locale.NUMBER_FORMATS;
      return function (amount, currencySymbol, fractionSize) {
        return isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM), isUndefined(fractionSize) && (fractionSize = formats.PATTERNS[1].maxFrac), null == amount ? amount : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).replace(/\u00A4/g, currencySymbol)
      }
    }

    function numberFilter($locale) {
      var formats = $locale.NUMBER_FORMATS;
      return function (number, fractionSize) {
        return null == number ? number : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize)
      }
    }

    function parse(numStr) {
      var digits, numberOfIntegerDigits, i, j, zeros, exponent = 0;
      for ((numberOfIntegerDigits = numStr.indexOf(DECIMAL_SEP)) > -1 && (numStr = numStr.replace(DECIMAL_SEP, "")), (i = numStr.search(/e/i)) > 0 ? (numberOfIntegerDigits < 0 && (numberOfIntegerDigits = i), numberOfIntegerDigits += +numStr.slice(i + 1), numStr = numStr.substring(0, i)) : numberOfIntegerDigits < 0 && (numberOfIntegerDigits = numStr.length), i = 0; numStr.charAt(i) == ZERO_CHAR; i++) ;
      if (i == (zeros = numStr.length)) digits = [0], numberOfIntegerDigits = 1; else {
        for (zeros--; numStr.charAt(zeros) == ZERO_CHAR;) zeros--;
        for (numberOfIntegerDigits -= i, digits = [], j = 0; i <= zeros; i++, j++) digits[j] = +numStr.charAt(i)
      }
      return numberOfIntegerDigits > MAX_DIGITS && (digits = digits.splice(0, MAX_DIGITS - 1), exponent = numberOfIntegerDigits - 1, numberOfIntegerDigits = 1), {
        d: digits,
        e: exponent,
        i: numberOfIntegerDigits
      }
    }

    function roundNumber(parsedNumber, fractionSize, minFrac, maxFrac) {
      var digits   = parsedNumber.d, fractionLen = digits.length - parsedNumber.i;
      fractionSize = isUndefined(fractionSize) ? Math.min(Math.max(minFrac, fractionLen), maxFrac) : +fractionSize;
      var roundAt  = fractionSize + parsedNumber.i, digit = digits[roundAt];
      if (roundAt > 0) {
        digits.splice(Math.max(parsedNumber.i, roundAt));
        for (var j = roundAt; j < digits.length; j++) digits[j] = 0
      } else {
        fractionLen = Math.max(0, fractionLen), parsedNumber.i = 1, digits.length = Math.max(1, roundAt = fractionSize + 1), digits[0] = 0;
        for (var i = 1; i < roundAt; i++) digits[i] = 0
      }
      if (digit >= 5) if (roundAt - 1 < 0) {
        for (var k = 0; k > roundAt; k--) digits.unshift(0), parsedNumber.i++;
        digits.unshift(1), parsedNumber.i++
      } else digits[roundAt - 1]++;
      for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);
      var carry = digits.reduceRight(function (carry, d, i, digits) {
        return d += carry, digits[i] = d % 10, Math.floor(d / 10)
      }, 0);
      carry && (digits.unshift(carry), parsedNumber.i++)
    }

    function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {
      if (!isString(number) && !isNumber(number) || isNaN(number)) return "";
      var parsedNumber, isInfinity = !isFinite(number), isZero = !1, numStr = Math.abs(number) + "", formattedText = "";
      if (isInfinity) formattedText = "∞"; else {
        parsedNumber = parse(numStr), roundNumber(parsedNumber, fractionSize, pattern.minFrac, pattern.maxFrac);
        var digits = parsedNumber.d, integerLen = parsedNumber.i, exponent = parsedNumber.e, decimals = [];
        for (isZero = digits.reduce(function (isZero, d) {
          return isZero && !d
        }, !0); integerLen < 0;) digits.unshift(0), integerLen++;
        integerLen > 0 ? decimals = digits.splice(integerLen) : (decimals = digits, digits = [0]);
        var groups = [];
        for (digits.length >= pattern.lgSize && groups.unshift(digits.splice(-pattern.lgSize).join("")); digits.length > pattern.gSize;) groups.unshift(digits.splice(-pattern.gSize).join(""));
        digits.length && groups.unshift(digits.join("")), formattedText = groups.join(groupSep), decimals.length && (formattedText += decimalSep + decimals.join("")), exponent && (formattedText += "e+" + exponent)
      }
      return number < 0 && !isZero ? pattern.negPre + formattedText + pattern.negSuf : pattern.posPre + formattedText + pattern.posSuf
    }

    function padNumber(num, digits, trim, negWrap) {
      var neg = "";
      for ((num < 0 || negWrap && num <= 0) && (negWrap ? num = 1 - num : (num = -num, neg = "-")), num = "" + num; num.length < digits;) num = ZERO_CHAR + num;
      return trim && (num = num.substr(num.length - digits)), neg + num
    }

    function dateGetter(name, size, offset, trim, negWrap) {
      return offset = offset || 0, function (date) {
        var value = date["get" + name]();
        return (offset > 0 || value > -offset) && (value += offset), 0 === value && -12 == offset && (value = 12), padNumber(value, size, trim, negWrap)
      }
    }

    function dateStrGetter(name, shortForm, standAlone) {
      return function (date, formats) {
        var value = date["get" + name]();
        return formats[uppercase((standAlone ? "STANDALONE" : "") + (shortForm ? "SHORT" : "") + name)][value]
      }
    }

    function timeZoneGetter(date, formats, offset) {
      var zone = -1 * offset, paddedZone = zone >= 0 ? "+" : "";
      return paddedZone += padNumber(Math[zone > 0 ? "floor" : "ceil"](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2)
    }

    function getFirstThursdayOfYear(year) {
      var dayOfWeekOnFirst = new Date(year, 0, 1).getDay();
      return new Date(year, 0, (dayOfWeekOnFirst <= 4 ? 5 : 12) - dayOfWeekOnFirst)
    }

    function getThursdayThisWeek(datetime) {
      return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (4 - datetime.getDay()))
    }

    function weekGetter(size) {
      return function (date) {
        var firstThurs = getFirstThursdayOfYear(date.getFullYear()), thisThurs = getThursdayThisWeek(date),
            diff                                                               = +thisThurs - +firstThurs;
        return padNumber(1 + Math.round(diff / 6048e5), size)
      }
    }

    function ampmGetter(date, formats) {
      return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1]
    }

    function eraGetter(date, formats) {
      return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1]
    }

    function longEraGetter(date, formats) {
      return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1]
    }

    function dateFilter($locale) {
      function jsonStringToDate(string) {
        var match;
        if (match = string.match(R_ISO8601_STR)) {
          var date = new Date(0), tzHour = 0, tzMin = 0,
              dateSetter                            = match[8] ? date.setUTCFullYear : date.setFullYear,
              timeSetter                            = match[8] ? date.setUTCHours : date.setHours;
          match[9] && (tzHour = toInt(match[9] + match[10]), tzMin = toInt(match[9] + match[11])), dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));
          var h = toInt(match[4] || 0) - tzHour, m = toInt(match[5] || 0) - tzMin, s = toInt(match[6] || 0),
              ms                                                                     = Math.round(1e3 * parseFloat("0." + (match[7] || 0)));
          return timeSetter.call(date, h, m, s, ms), date
        }
        return string
      }

      var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
      return function (date, format, timezone) {
        var fn, match, text = "", parts = [];
        if (format = format || "mediumDate", format = $locale.DATETIME_FORMATS[format] || format, isString(date) && (date = NUMBER_STRING.test(date) ? toInt(date) : jsonStringToDate(date)), isNumber(date) && (date = new Date(date)), !isDate(date) || !isFinite(date.getTime())) return date;
        for (; format;) match = DATE_FORMATS_SPLIT.exec(format), match ? (parts = concat(parts, match, 1), format = parts.pop()) : (parts.push(format), format = null);
        var dateTimezoneOffset = date.getTimezoneOffset();
        return timezone && (dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset), date = convertTimezoneToLocal(date, timezone, !0)), forEach(parts, function (value) {
          fn = DATE_FORMATS[value], text += fn ? fn(date, $locale.DATETIME_FORMATS, dateTimezoneOffset) : "''" === value ? "'" : value.replace(/(^'|'$)/g, "").replace(/''/g, "'")
        }), text
      }
    }

    function jsonFilter() {
      return function (object, spacing) {
        return isUndefined(spacing) && (spacing = 2), toJson(object, spacing)
      }
    }

    function limitToFilter() {
      return function (input, limit, begin) {
        return limit = Math.abs(Number(limit)) === 1 / 0 ? Number(limit) : toInt(limit), isNaN(limit) ? input : (isNumber(input) && (input = input.toString()), isArray(input) || isString(input) ? (begin = !begin || isNaN(begin) ? 0 : toInt(begin), begin = begin < 0 ? Math.max(0, input.length + begin) : begin, limit >= 0 ? input.slice(begin, begin + limit) : 0 === begin ? input.slice(limit, input.length) : input.slice(Math.max(0, begin + limit), begin)) : input)
      }
    }

    function orderByFilter($parse) {
      function processPredicates(sortPredicate, reverseOrder) {
        return reverseOrder = reverseOrder ? -1 : 1, sortPredicate.map(function (predicate) {
          var descending = 1, get = identity;
          if (isFunction(predicate)) get = predicate; else if (isString(predicate) && ("+" != predicate.charAt(0) && "-" != predicate.charAt(0) || (descending = "-" == predicate.charAt(0) ? -1 : 1, predicate = predicate.substring(1)), "" !== predicate && (get = $parse(predicate), get.constant))) {
            var key = get();
            get     = function (value) {
              return value[key]
            }
          }
          return {get: get, descending: descending * reverseOrder}
        })
      }

      function isPrimitive(value) {
        switch (typeof value) {
          case"number":
          case"boolean":
          case"string":
            return !0;
          default:
            return !1
        }
      }

      function objectValue(value, index) {
        return "function" == typeof value.valueOf && (value = value.valueOf(), isPrimitive(value)) ? value : hasCustomToString(value) && (value = value.toString(), isPrimitive(value)) ? value : index
      }

      function getPredicateValue(value, index) {
        var type = typeof value;
        return null === value ? (type = "string", value = "null") : "string" === type ? value = value.toLowerCase() : "object" === type && (value = objectValue(value, index)), {
          value: value,
          type:  type
        }
      }

      function compare(v1, v2) {
        var result = 0;
        return v1.type === v2.type ? v1.value !== v2.value && (result = v1.value < v2.value ? -1 : 1) : result = v1.type < v2.type ? -1 : 1, result
      }

      return function (array, sortPredicate, reverseOrder) {
        function getComparisonObject(value, index) {
          return {
            value: value, predicateValues: predicates.map(function (predicate) {
              return getPredicateValue(predicate.get(value), index)
            })
          }
        }

        function doComparison(v1, v2) {
          for (var result = 0, index = 0, length = predicates.length; index < length && !(result = compare(v1.predicateValues[index], v2.predicateValues[index]) * predicates[index].descending); ++index) ;
          return result
        }

        if (null == array) return array;
        if (!isArrayLike(array)) throw minErr("orderBy")("notarray", "Expected array but received: {0}", array);
        isArray(sortPredicate) || (sortPredicate = [sortPredicate]), 0 === sortPredicate.length && (sortPredicate = ["+"]);
        var predicates = processPredicates(sortPredicate, reverseOrder);
        predicates.push({
          get:           function () {
            return {}
          }, descending: reverseOrder ? -1 : 1
        });
        var compareValues = Array.prototype.map.call(array, getComparisonObject);
        return compareValues.sort(doComparison), array = compareValues.map(function (item) {
          return item.value
        })
      }
    }

    function ngDirective(directive) {
      return isFunction(directive) && (directive = {link: directive}), directive.restrict = directive.restrict || "AC", valueFn(directive)
    }

    function nullFormRenameControl(control, name) {
      control.$name = name
    }

    function FormController(element, attrs, $scope, $animate, $interpolate) {
      var form = this, controls = [];
      form.$error = {}, form.$$success = {}, form.$pending = void 0, form.$name = $interpolate(attrs.name || attrs.ngForm || "")($scope), form.$dirty = !1, form.$pristine = !0, form.$valid = !0, form.$invalid = !1, form.$submitted = !1, form.$$parentForm = nullFormCtrl, form.$rollbackViewValue = function () {
        forEach(controls, function (control) {
          control.$rollbackViewValue()
        })
      }, form.$commitViewValue = function () {
        forEach(controls, function (control) {
          control.$commitViewValue()
        })
      }, form.$addControl = function (control) {
        assertNotHasOwnProperty(control.$name, "input"), controls.push(control), control.$name && (form[control.$name] = control), control.$$parentForm = form
      }, form.$$renameControl = function (control, newName) {
        var oldName = control.$name;
        form[oldName] === control && delete form[oldName], form[newName] = control, control.$name = newName
      }, form.$removeControl = function (control) {
        control.$name && form[control.$name] === control && delete form[control.$name], forEach(form.$pending, function (value, name) {
          form.$setValidity(name, null, control)
        }), forEach(form.$error, function (value, name) {
          form.$setValidity(name, null, control)
        }), forEach(form.$$success, function (value, name) {
          form.$setValidity(name, null, control)
        }), arrayRemove(controls, control), control.$$parentForm = nullFormCtrl
      }, addSetValidityMethod({
        ctrl:        this, $element: element, set: function (object, property, controller) {
          var list = object[property];
          if (list) {
            -1 === list.indexOf(controller) && list.push(controller)
          } else object[property] = [controller]
        }, unset:    function (object, property, controller) {
          var list = object[property];
          list && (arrayRemove(list, controller), 0 === list.length && delete object[property])
        }, $animate: $animate
      }), form.$setDirty = function () {
        $animate.removeClass(element, PRISTINE_CLASS), $animate.addClass(element, DIRTY_CLASS), form.$dirty = !0, form.$pristine = !1, form.$$parentForm.$setDirty()
      }, form.$setPristine = function () {
        $animate.setClass(element, PRISTINE_CLASS, DIRTY_CLASS + " " + SUBMITTED_CLASS), form.$dirty = !1, form.$pristine = !0, form.$submitted = !1, forEach(controls, function (control) {
          control.$setPristine()
        })
      }, form.$setUntouched = function () {
        forEach(controls, function (control) {
          control.$setUntouched()
        })
      }, form.$setSubmitted = function () {
        $animate.addClass(element, SUBMITTED_CLASS), form.$submitted = !0, form.$$parentForm.$setSubmitted()
      }
    }

    function stringBasedInputType(ctrl) {
      ctrl.$formatters.push(function (value) {
        return ctrl.$isEmpty(value) ? value : value.toString()
      })
    }

    function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
      baseInputType(scope, element, attr, ctrl, $sniffer, $browser), stringBasedInputType(ctrl)
    }

    function baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {
      var type = lowercase(element[0].type);
      if (!$sniffer.android) {
        var composing = !1;
        element.on("compositionstart", function () {
          composing = !0
        }), element.on("compositionend", function () {
          composing = !1, listener()
        })
      }
      var timeout, listener = function (ev) {
        if (timeout && ($browser.defer.cancel(timeout), timeout = null), !composing) {
          var value = element.val(), event = ev && ev.type;
          "password" === type || attr.ngTrim && "false" === attr.ngTrim || (value = trim(value)), (ctrl.$viewValue !== value || "" === value && ctrl.$$hasNativeValidators) && ctrl.$setViewValue(value, event)
        }
      };
      if ($sniffer.hasEvent("input")) element.on("input", listener); else {
        var deferListener = function (ev, input, origValue) {
          timeout || (timeout = $browser.defer(function () {
            timeout = null, input && input.value === origValue || listener(ev)
          }))
        };
        element.on("keydown", function (event) {
          var key = event.keyCode;
          91 === key || 15 < key && key < 19 || 37 <= key && key <= 40 || deferListener(event, this, this.value)
        }), $sniffer.hasEvent("paste") && element.on("paste cut", deferListener)
      }
      element.on("change", listener), PARTIAL_VALIDATION_TYPES[type] && ctrl.$$hasNativeValidators && type === attr.type && element.on(PARTIAL_VALIDATION_EVENTS, function (ev) {
        if (!timeout) {
          var validity = this[VALIDITY_STATE_PROPERTY], origBadInput = validity.badInput,
              origTypeMismatch                                       = validity.typeMismatch;
          timeout                                                    = $browser.defer(function () {
            timeout = null, validity.badInput === origBadInput && validity.typeMismatch === origTypeMismatch || listener(ev)
          })
        }
      }), ctrl.$render = function () {
        var value = ctrl.$isEmpty(ctrl.$viewValue) ? "" : ctrl.$viewValue;
        element.val() !== value && element.val(value)
      }
    }

    function weekParser(isoWeek, existingDate) {
      if (isDate(isoWeek)) return isoWeek;
      if (isString(isoWeek)) {
        WEEK_REGEXP.lastIndex = 0;
        var parts             = WEEK_REGEXP.exec(isoWeek);
        if (parts) {
          var year = +parts[1], week = +parts[2], hours = 0, minutes = 0, seconds = 0, milliseconds = 0,
              firstThurs                                                                            = getFirstThursdayOfYear(year), addDays                                    = 7 * (week - 1);
          return existingDate && (hours = existingDate.getHours(), minutes = existingDate.getMinutes(), seconds = existingDate.getSeconds(), milliseconds = existingDate.getMilliseconds()), new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds)
        }
      }
      return NaN
    }

    function createDateParser(regexp, mapping) {
      return function (iso, date) {
        var parts, map;
        if (isDate(iso)) return iso;
        if (isString(iso)) {
          if ('"' == iso.charAt(0) && '"' == iso.charAt(iso.length - 1) && (iso = iso.substring(1, iso.length - 1)), ISO_DATE_REGEXP.test(iso)) return new Date(iso);
          if (regexp.lastIndex = 0, parts = regexp.exec(iso)) return parts.shift(), map = date ? {
            yyyy: date.getFullYear(),
            MM:   date.getMonth() + 1,
            dd:   date.getDate(),
            HH:   date.getHours(),
            mm:   date.getMinutes(),
            ss:   date.getSeconds(),
            sss:  date.getMilliseconds() / 1e3
          } : {yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0}, forEach(parts, function (part, index) {
            index < mapping.length && (map[mapping[index]] = +part)
          }), new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, 1e3 * map.sss || 0)
        }
        return NaN
      }
    }

    function createDateInputType(type, regexp, parseDate, format) {
      return function (scope, element, attr, ctrl, $sniffer, $browser, $filter) {
        function isValidDate(value) {
          return value && !(value.getTime && value.getTime() !== value.getTime())
        }

        function parseObservedDateValue(val) {
          return isDefined(val) && !isDate(val) ? parseDate(val) || void 0 : val
        }

        badInputChecker(scope, element, attr, ctrl), baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
        var previousDate, timezone = ctrl && ctrl.$options && ctrl.$options.timezone;
        if (ctrl.$$parserName = type, ctrl.$parsers.push(function (value) {
            if (ctrl.$isEmpty(value)) return null;
            if (regexp.test(value)) {
              var parsedDate = parseDate(value, previousDate);
              return timezone && (parsedDate = convertTimezoneToLocal(parsedDate, timezone)), parsedDate
            }
          }), ctrl.$formatters.push(function (value) {
            if (value && !isDate(value)) throw ngModelMinErr("datefmt", "Expected `{0}` to be a date", value);
            return isValidDate(value) ? (previousDate = value, previousDate && timezone && (previousDate = convertTimezoneToLocal(previousDate, timezone, !0)), $filter("date")(value, format, timezone)) : (previousDate = null, "")
          }), isDefined(attr.min) || attr.ngMin) {
          var minVal;
          ctrl.$validators.min = function (value) {
            return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal
          }, attr.$observe("min", function (val) {
            minVal = parseObservedDateValue(val), ctrl.$validate()
          })
        }
        if (isDefined(attr.max) || attr.ngMax) {
          var maxVal;
          ctrl.$validators.max = function (value) {
            return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal
          }, attr.$observe("max", function (val) {
            maxVal = parseObservedDateValue(val), ctrl.$validate()
          })
        }
      }
    }

    function badInputChecker(scope, element, attr, ctrl) {
      var node = element[0];
      (ctrl.$$hasNativeValidators = isObject(node.validity)) && ctrl.$parsers.push(function (value) {
        var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};
        return validity.badInput || validity.typeMismatch ? void 0 : value
      })
    }

    function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {
      if (badInputChecker(scope, element, attr, ctrl), baseInputType(scope, element, attr, ctrl, $sniffer, $browser), ctrl.$$parserName = "number", ctrl.$parsers.push(function (value) {
          return ctrl.$isEmpty(value) ? null : NUMBER_REGEXP.test(value) ? parseFloat(value) : void 0
        }), ctrl.$formatters.push(function (value) {
          if (!ctrl.$isEmpty(value)) {
            if (!isNumber(value)) throw ngModelMinErr("numfmt", "Expected `{0}` to be a number", value);
            value = value.toString()
          }
          return value
        }), isDefined(attr.min) || attr.ngMin) {
        var minVal;
        ctrl.$validators.min = function (value) {
          return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal
        }, attr.$observe("min", function (val) {
          isDefined(val) && !isNumber(val) && (val = parseFloat(val, 10)), minVal = isNumber(val) && !isNaN(val) ? val : void 0, ctrl.$validate()
        })
      }
      if (isDefined(attr.max) || attr.ngMax) {
        var maxVal;
        ctrl.$validators.max = function (value) {
          return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal
        }, attr.$observe("max", function (val) {
          isDefined(val) && !isNumber(val) && (val = parseFloat(val, 10)), maxVal = isNumber(val) && !isNaN(val) ? val : void 0, ctrl.$validate()
        })
      }
    }

    function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
      baseInputType(scope, element, attr, ctrl, $sniffer, $browser), stringBasedInputType(ctrl), ctrl.$$parserName = "url", ctrl.$validators.url = function (modelValue, viewValue) {
        var value = modelValue || viewValue;
        return ctrl.$isEmpty(value) || URL_REGEXP.test(value)
      }
    }

    function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
      baseInputType(scope, element, attr, ctrl, $sniffer, $browser), stringBasedInputType(ctrl), ctrl.$$parserName = "email", ctrl.$validators.email = function (modelValue, viewValue) {
        var value = modelValue || viewValue;
        return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value)
      }
    }

    function radioInputType(scope, element, attr, ctrl) {
      isUndefined(attr.name) && element.attr("name", nextUid());
      var listener = function (ev) {
        element[0].checked && ctrl.$setViewValue(attr.value, ev && ev.type)
      };
      element.on("click", listener), ctrl.$render = function () {
        var value          = attr.value;
        element[0].checked = value == ctrl.$viewValue
      }, attr.$observe("value", ctrl.$render)
    }

    function parseConstantExpr($parse, context, name, expression, fallback) {
      var parseFn;
      if (isDefined(expression)) {
        if (parseFn = $parse(expression), !parseFn.constant) throw ngModelMinErr("constexpr", "Expected constant expression for `{0}`, but saw `{1}`.", name, expression);
        return parseFn(context)
      }
      return fallback
    }

    function checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {
      var trueValue  = parseConstantExpr($parse, scope, "ngTrueValue", attr.ngTrueValue, !0),
          falseValue = parseConstantExpr($parse, scope, "ngFalseValue", attr.ngFalseValue, !1),
          listener   = function (ev) {
            ctrl.$setViewValue(element[0].checked, ev && ev.type)
          };
      element.on("click", listener), ctrl.$render = function () {
        element[0].checked = ctrl.$viewValue
      }, ctrl.$isEmpty = function (value) {
        return !1 === value
      }, ctrl.$formatters.push(function (value) {
        return equals(value, trueValue)
      }), ctrl.$parsers.push(function (value) {
        return value ? trueValue : falseValue
      })
    }

    function classDirective(name, selector) {
      return name = "ngClass" + name, ["$animate", function ($animate) {
        function arrayDifference(tokens1, tokens2) {
          var values = [];
          outer:for (var i = 0; i < tokens1.length; i++) {
            for (var token = tokens1[i], j = 0; j < tokens2.length; j++) if (token == tokens2[j]) continue outer;
            values.push(token)
          }
          return values
        }

        function arrayClasses(classVal) {
          var classes = [];
          return isArray(classVal) ? (forEach(classVal, function (v) {
            classes = classes.concat(arrayClasses(v))
          }), classes) : isString(classVal) ? classVal.split(" ") : isObject(classVal) ? (forEach(classVal, function (v, k) {
            v && (classes = classes.concat(k.split(" ")))
          }), classes) : classVal
        }

        return {
          restrict: "AC", link: function (scope, element, attr) {
            function addClasses(classes) {
              var newClasses = digestClassCounts(classes, 1);
              attr.$addClass(newClasses)
            }

            function removeClasses(classes) {
              var newClasses = digestClassCounts(classes, -1);
              attr.$removeClass(newClasses)
            }

            function digestClassCounts(classes, count) {
              var classCounts = element.data("$classCounts") || createMap(), classesToUpdate = [];
              return forEach(classes, function (className) {
                (count > 0 || classCounts[className]) && (classCounts[className] = (classCounts[className] || 0) + count, classCounts[className] === +(count > 0) && classesToUpdate.push(className))
              }), element.data("$classCounts", classCounts), classesToUpdate.join(" ")
            }

            function updateClasses(oldClasses, newClasses) {
              var toAdd = arrayDifference(newClasses, oldClasses), toRemove = arrayDifference(oldClasses, newClasses);
              toAdd = digestClassCounts(toAdd, 1), toRemove = digestClassCounts(toRemove, -1), toAdd && toAdd.length && $animate.addClass(element, toAdd), toRemove && toRemove.length && $animate.removeClass(element, toRemove)
            }

            function ngClassWatchAction(newVal) {
              if (!0 === selector || scope.$index % 2 === selector) {
                var newClasses = arrayClasses(newVal || []);
                if (oldVal) {
                  if (!equals(newVal, oldVal)) {
                    var oldClasses = arrayClasses(oldVal);
                    updateClasses(oldClasses, newClasses)
                  }
                } else addClasses(newClasses)
              }
              oldVal = isArray(newVal) ? newVal.map(function (v) {
                return shallowCopy(v)
              }) : shallowCopy(newVal)
            }

            var oldVal;
            scope.$watch(attr[name], ngClassWatchAction, !0), attr.$observe("class", function (value) {
              ngClassWatchAction(scope.$eval(attr[name]))
            }), "ngClass" !== name && scope.$watch("$index", function ($index, old$index) {
              var mod = 1 & $index;
              if (mod !== (1 & old$index)) {
                var classes = arrayClasses(scope.$eval(attr[name]));
                mod === selector ? addClasses(classes) : removeClasses(classes)
              }
            })
          }
        }
      }]
    }

    function addSetValidityMethod(context) {
      function setValidity(validationErrorKey, state, controller) {
        isUndefined(state) ? createAndSet("$pending", validationErrorKey, controller) : unsetAndCleanup("$pending", validationErrorKey, controller), isBoolean(state) ? state ? (unset(ctrl.$error, validationErrorKey, controller), set(ctrl.$$success, validationErrorKey, controller)) : (set(ctrl.$error, validationErrorKey, controller), unset(ctrl.$$success, validationErrorKey, controller)) : (unset(ctrl.$error, validationErrorKey, controller), unset(ctrl.$$success, validationErrorKey, controller)), ctrl.$pending ? (cachedToggleClass(PENDING_CLASS, !0), ctrl.$valid = ctrl.$invalid = void 0, toggleValidationCss("", null)) : (cachedToggleClass(PENDING_CLASS, !1), ctrl.$valid = isObjectEmpty(ctrl.$error), ctrl.$invalid = !ctrl.$valid, toggleValidationCss("", ctrl.$valid));
        var combinedState;
        combinedState = ctrl.$pending && ctrl.$pending[validationErrorKey] ? void 0 : !ctrl.$error[validationErrorKey] && (!!ctrl.$$success[validationErrorKey] || null), toggleValidationCss(validationErrorKey, combinedState), ctrl.$$parentForm.$setValidity(validationErrorKey, combinedState, ctrl)
      }

      function createAndSet(name, value, controller) {
        ctrl[name] || (ctrl[name] = {}), set(ctrl[name], value, controller)
      }

      function unsetAndCleanup(name, value, controller) {
        ctrl[name] && unset(ctrl[name], value, controller), isObjectEmpty(ctrl[name]) && (ctrl[name] = void 0)
      }

      function cachedToggleClass(className, switchValue) {
        switchValue && !classCache[className] ? ($animate.addClass($element, className), classCache[className] = !0) : !switchValue && classCache[className] && ($animate.removeClass($element, className), classCache[className] = !1)
      }

      function toggleValidationCss(validationErrorKey, isValid) {
        validationErrorKey = validationErrorKey ? "-" + snake_case(validationErrorKey, "-") : "", cachedToggleClass(VALID_CLASS + validationErrorKey, !0 === isValid), cachedToggleClass(INVALID_CLASS + validationErrorKey, !1 === isValid)
      }

      var ctrl = context.ctrl, $element = context.$element, classCache = {}, set = context.set,
          unset                                                                  = context.unset, $animate = context.$animate;
      classCache[INVALID_CLASS] = !(classCache[VALID_CLASS] = $element.hasClass(VALID_CLASS)), ctrl.$setValidity = setValidity
    }

    function isObjectEmpty(obj) {
      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop)) return !1;
      return !0
    }

    function chromeHack(optionElement) {
      optionElement[0].hasAttribute("selected") && (optionElement[0].selected = !0)
    }

    var REGEX_STRING_REGEXP = /^\/(.+)\/([a-z]*)$/, VALIDITY_STATE_PROPERTY = "validity",
        hasOwnProperty                                                      = Object.prototype.hasOwnProperty, lowercase         = function (string) {
          return isString(string) ? string.toLowerCase() : string
        }, uppercase                                                        = function (string) {
          return isString(string) ? string.toUpperCase() : string
        }, manualLowercase                                                  = function (s) {
          return isString(s) ? s.replace(/[A-Z]/g, function (ch) {
            return String.fromCharCode(32 | ch.charCodeAt(0))
          }) : s
        }, manualUppercase                                                  = function (s) {
          return isString(s) ? s.replace(/[a-z]/g, function (ch) {
            return String.fromCharCode(-33 & ch.charCodeAt(0))
          }) : s
        };
    "i" !== "I".toLowerCase() && (lowercase = manualLowercase, uppercase = manualUppercase);
    var msie, jqLite, jQuery, angularModule, slice = [].slice, splice = [].splice, push = [].push,
        toString                                                                        = Object.prototype.toString, getPrototypeOf = Object.getPrototypeOf,
        ngMinErr                                                                        = minErr("ng"), angular = window.angular || (window.angular = {}),
        uid                                                                             = 0;
    msie = window.document.documentMode, noop.$inject = [], identity.$inject = [];
    var isArray                                                                                       = Array.isArray,
        TYPED_ARRAY_REGEXP                                                                            = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,
        trim                                                                                          = function (value) {
          return isString(value) ? value.trim() : value
        }, escapeForRegexp                                                                            = function (s) {
          return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
        }, csp                                                                                        = function () {
          if (!isDefined(csp.rules)) {
            var ngCspElement = window.document.querySelector("[ng-csp]") || window.document.querySelector("[data-ng-csp]");
            if (ngCspElement) {
              var ngCspAttribute = ngCspElement.getAttribute("ng-csp") || ngCspElement.getAttribute("data-ng-csp");
              csp.rules          = {
                noUnsafeEval:  !ngCspAttribute || -1 !== ngCspAttribute.indexOf("no-unsafe-eval"),
                noInlineStyle: !ngCspAttribute || -1 !== ngCspAttribute.indexOf("no-inline-style")
              }
            } else csp.rules = {
              noUnsafeEval:       function () {
                try {
                  return new Function(""), !1
                } catch (e) {
                  return !0
                }
              }(), noInlineStyle: !1
            }
          }
          return csp.rules
        }, jq                                                                                         = function () {
          if (isDefined(jq.name_)) return jq.name_;
          var el, i, prefix, name, ii = ngAttrPrefixes.length;
          for (i = 0; i < ii; ++i) if (prefix = ngAttrPrefixes[i], el = window.document.querySelector("[" + prefix.replace(":", "\\:") + "jq]")) {
            name = el.getAttribute(prefix + "jq");
            break
          }
          return jq.name_ = name
        }, ALL_COLONS = /:/g, ngAttrPrefixes = ["ng-", "data-ng-", "ng:", "x-ng-"], SNAKE_CASE_REGEXP = /[A-Z]/g,
        bindJQueryFired                                                                               = !1, NODE_TYPE_ELEMENT = 1, NODE_TYPE_TEXT                                   = 3, NODE_TYPE_COMMENT            = 8,
        NODE_TYPE_DOCUMENT                                                                            = 9, NODE_TYPE_DOCUMENT_FRAGMENT = 11,
        version                                                                                       = {full: "1.5.5", major: 1, minor: 5, dot: 5, codeName: "material-conspiration"};
    JQLite.expando                                                                                    = "ng339";
    var jqCache                                                                                       = JQLite.cache = {}, jqId = 1, addEventListenerFn = function (element, type, fn) {
      element.addEventListener(type, fn, !1)
    }, removeEventListenerFn                                                                                                                            = function (element, type, fn) {
      element.removeEventListener(type, fn, !1)
    };
    JQLite._data                                                                                                                                        = function (node) {
      return this.cache[node[this.expando]] || {}
    };
    var SPECIAL_CHARS_REGEXP                                                                                                                            = /([\:\-\_]+(.))/g, MOZ_HACK_REGEXP                                                                                       = /^moz([A-Z])/,
        MOUSE_EVENT_MAP                                                                                                                                 = {mouseleave: "mouseout", mouseenter: "mouseover"},
        jqLiteMinErr                                                                                                                                    = minErr("jqLite"),
        SINGLE_TAG_REGEXP                                                                                                                               = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/, HTML_REGEXP = /<|&#?\w+;/,
        TAG_NAME_REGEXP                                                                                                                                 = /<([\w:-]+)/,
        XHTML_TAG_REGEXP                                                                                                                                = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
        wrapMap                                                                                                                                         = {
          option:   [1, '<select multiple="multiple">', "</select>"],
          thead:    [1, "<table>", "</table>"],
          col:      [2, "<table><colgroup>", "</colgroup></table>"],
          tr:       [2, "<table><tbody>", "</tbody></table>"],
          td:       [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""]
        };
    wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, wrapMap.th = wrapMap.td;
    var jqLiteContains = window.Node.prototype.contains || function (arg) {
      return !!(16 & this.compareDocumentPosition(arg))
    }, JQLitePrototype = JQLite.prototype = {
      ready:       function (fn) {
        function trigger() {
          fired || (fired = !0, fn())
        }

        var fired = !1;
        "complete" === window.document.readyState ? window.setTimeout(trigger) : (this.on("DOMContentLoaded", trigger), JQLite(window).on("load", trigger))
      }, toString: function () {
        var value = [];
        return forEach(this, function (e) {
          value.push("" + e)
        }), "[" + value.join(", ") + "]"
      }, eq:       function (index) {
        return jqLite(index >= 0 ? this[index] : this[this.length + index])
      }, length:   0, push: push, sort: [].sort, splice: [].splice
    }, BOOLEAN_ATTR = {};
    forEach("multiple,selected,checked,disabled,readOnly,required,open".split(","), function (value) {
      BOOLEAN_ATTR[lowercase(value)] = value
    })
    ;var BOOLEAN_ELEMENTS = {};
    forEach("input,select,option,textarea,button,form,details".split(","), function (value) {
      BOOLEAN_ELEMENTS[value] = !0
    });
    var ALIASED_ATTR = {
      ngMinlength: "minlength",
      ngMaxlength: "maxlength",
      ngMin:       "min",
      ngMax:       "max",
      ngPattern:   "pattern"
    };
    forEach({
      data:       jqLiteData,
      removeData: jqLiteRemoveData,
      hasData:    jqLiteHasData,
      cleanData:  jqLiteCleanData
    }, function (fn, name) {
      JQLite[name] = fn
    }), forEach({
      data:            jqLiteData, inheritedData: jqLiteInheritedData, scope: function (element) {
        return jqLite.data(element, "$scope") || jqLiteInheritedData(element.parentNode || element, ["$isolateScope", "$scope"])
      }, isolateScope: function (element) {
        return jqLite.data(element, "$isolateScope") || jqLite.data(element, "$isolateScopeNoTemplate")
      }, controller:   jqLiteController, injector: function (element) {
        return jqLiteInheritedData(element, "$injector")
      }, removeAttr:   function (element, name) {
        element.removeAttribute(name)
      }, hasClass:     jqLiteHasClass, css: function (element, name, value) {
        if (name = camelCase(name), !isDefined(value)) return element.style[name];
        element.style[name] = value
      }, attr:         function (element, name, value) {
        var nodeType = element.nodeType;
        if (nodeType !== NODE_TYPE_TEXT && 2 !== nodeType && nodeType !== NODE_TYPE_COMMENT) {
          var lowercasedName = lowercase(name);
          if (BOOLEAN_ATTR[lowercasedName]) {
            if (!isDefined(value)) return element[name] || (element.attributes.getNamedItem(name) || noop).specified ? lowercasedName : void 0;
            value ? (element[name] = !0, element.setAttribute(name, lowercasedName)) : (element[name] = !1, element.removeAttribute(lowercasedName))
          } else if (isDefined(value)) element.setAttribute(name, value); else if (element.getAttribute) {
            var ret = element.getAttribute(name, 2);
            return null === ret ? void 0 : ret
          }
        }
      }, prop:         function (element, name, value) {
        if (!isDefined(value)) return element[name];
        element[name] = value
      }, text:         function () {
        function getText(element, value) {
          if (isUndefined(value)) {
            var nodeType = element.nodeType;
            return nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT ? element.textContent : ""
          }
          element.textContent = value
        }

        return getText.$dv = "", getText
      }(), val:        function (element, value) {
        if (isUndefined(value)) {
          if (element.multiple && "select" === nodeName_(element)) {
            var result = [];
            return forEach(element.options, function (option) {
              option.selected && result.push(option.value || option.text)
            }), 0 === result.length ? null : result
          }
          return element.value
        }
        element.value = value
      }, html:         function (element, value) {
        if (isUndefined(value)) return element.innerHTML;
        jqLiteDealoc(element, !0), element.innerHTML = value
      }, empty:        jqLiteEmpty
    }, function (fn, name) {
      JQLite.prototype[name] = function (arg1, arg2) {
        var i, key, nodeCount = this.length;
        if (fn !== jqLiteEmpty && isUndefined(2 == fn.length && fn !== jqLiteHasClass && fn !== jqLiteController ? arg1 : arg2)) {
          if (isObject(arg1)) {
            for (i = 0; i < nodeCount; i++) if (fn === jqLiteData) fn(this[i], arg1); else for (key in arg1) fn(this[i], key, arg1[key]);
            return this
          }
          for (var value = fn.$dv, jj = isUndefined(value) ? Math.min(nodeCount, 1) : nodeCount, j = 0; j < jj; j++) {
            var nodeValue = fn(this[j], arg1, arg2);
            value         = value ? value + nodeValue : nodeValue
          }
          return value
        }
        for (i = 0; i < nodeCount; i++) fn(this[i], arg1, arg2);
        return this
      }
    }), forEach({
      removeData:     jqLiteRemoveData,
      on:             function (element, type, fn, unsupported) {
        if (isDefined(unsupported)) throw jqLiteMinErr("onargs", "jqLite#on() does not support the `selector` or `eventData` parameters");
        if (jqLiteAcceptsData(element)) {
          var expandoStore = jqLiteExpandoStore(element, !0), events = expandoStore.events,
              handle                                                 = expandoStore.handle;
          handle || (handle = expandoStore.handle = createEventHandler(element, events));
          for (var types = type.indexOf(" ") >= 0 ? type.split(" ") : [type], i = types.length, addHandler = function (type, specialHandlerWrapper, noEventListener) {
            var eventFns = events[type];
            eventFns || (eventFns = events[type] = [], eventFns.specialHandlerWrapper = specialHandlerWrapper, "$destroy" === type || noEventListener || addEventListenerFn(element, type, handle)), eventFns.push(fn)
          }; i--;) type = types[i], MOUSE_EVENT_MAP[type] ? (addHandler(MOUSE_EVENT_MAP[type], specialMouseHandlerWrapper), addHandler(type, void 0, !0)) : addHandler(type)
        }
      },
      off:            jqLiteOff,
      one:            function (element, type, fn) {
        element = jqLite(element), element.on(type, function onFn() {
          element.off(type, fn), element.off(type, onFn)
        }), element.on(type, fn)
      },
      replaceWith:    function (element, replaceNode) {
        var index, parent = element.parentNode;
        jqLiteDealoc(element), forEach(new JQLite(replaceNode), function (node) {
          index ? parent.insertBefore(node, index.nextSibling) : parent.replaceChild(node, element), index = node
        })
      },
      children:       function (element) {
        var children = [];
        return forEach(element.childNodes, function (element) {
          element.nodeType === NODE_TYPE_ELEMENT && children.push(element)
        }), children
      },
      contents:       function (element) {
        return element.contentDocument || element.childNodes || []
      },
      append:         function (element, node) {
        var nodeType = element.nodeType;
        if (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_DOCUMENT_FRAGMENT) {
          node = new JQLite(node);
          for (var i = 0, ii = node.length; i < ii; i++) {
            var child = node[i];
            element.appendChild(child)
          }
        }
      },
      prepend:        function (element, node) {
        if (element.nodeType === NODE_TYPE_ELEMENT) {
          var index = element.firstChild;
          forEach(new JQLite(node), function (child) {
            element.insertBefore(child, index)
          })
        }
      },
      wrap:           function (element, wrapNode) {
        jqLiteWrapNode(element, jqLite(wrapNode).eq(0).clone()[0])
      },
      remove:         jqLiteRemove,
      detach:         function (element) {
        jqLiteRemove(element, !0)
      },
      after:          function (element, newElement) {
        var index  = element, parent = element.parentNode;
        newElement = new JQLite(newElement);
        for (var i = 0, ii = newElement.length; i < ii; i++) {
          var node = newElement[i];
          parent.insertBefore(node, index.nextSibling), index = node
        }
      },
      addClass:       jqLiteAddClass,
      removeClass:    jqLiteRemoveClass,
      toggleClass:    function (element, selector, condition) {
        selector && forEach(selector.split(" "), function (className) {
          var classCondition = condition;
          isUndefined(classCondition) && (classCondition = !jqLiteHasClass(element, className)), (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className)
        })
      },
      parent:         function (element) {
        var parent = element.parentNode;
        return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null
      },
      next:           function (element) {
        return element.nextElementSibling
      },
      find:           function (element, selector) {
        return element.getElementsByTagName ? element.getElementsByTagName(selector) : []
      },
      clone:          jqLiteClone,
      triggerHandler: function (element, event, extraParameters) {
        var dummyEvent, eventFnsCopy, handlerArgs, eventName = event.type || event,
            expandoStore                                     = jqLiteExpandoStore(element),
            events                                           = expandoStore && expandoStore.events,
            eventFns                                         = events && events[eventName];
        eventFns && (dummyEvent = {
          preventDefault:                   function () {
            this.defaultPrevented = !0
          }, isDefaultPrevented:            function () {
            return !0 === this.defaultPrevented
          }, stopImmediatePropagation:      function () {
            this.immediatePropagationStopped = !0
          }, isImmediatePropagationStopped: function () {
            return !0 === this.immediatePropagationStopped
          }, stopPropagation:               noop, type: eventName, target: element
        }, event.type && (dummyEvent = extend(dummyEvent, event)), eventFnsCopy = shallowCopy(eventFns), handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent], forEach(eventFnsCopy, function (fn) {
          dummyEvent.isImmediatePropagationStopped() || fn.apply(element, handlerArgs)
        }))
      }
    }, function (fn, name) {
      JQLite.prototype[name] = function (arg1, arg2, arg3) {
        for (var value, i = 0, ii = this.length; i < ii; i++) isUndefined(value) ? (value = fn(this[i], arg1, arg2, arg3), isDefined(value) && (value = jqLite(value))) : jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
        return isDefined(value) ? value : this
      }, JQLite.prototype.bind = JQLite.prototype.on, JQLite.prototype.unbind = JQLite.prototype.off
    }), HashMap.prototype = {
      put:       function (key, value) {
        this[hashKey(key, this.nextUid)] = value
      }, get:    function (key) {
        return this[hashKey(key, this.nextUid)]
      }, remove: function (key) {
        var value = this[key = hashKey(key, this.nextUid)];
        return delete this[key], value
      }
    };
    var $$HashMapProvider                                                                 = [function () {
          this.$get = [function () {
            return HashMap
          }]
        }], ARROW_ARG = /^([^\(]+?)=>/, FN_ARGS = /^[^\(]*\(\s*([^\)]*)\)/m, FN_ARG_SPLIT = /,/,
        FN_ARG                                                                            = /^\s*(_?)(\S+?)\1\s*$/, STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
        $injectorMinErr                                                                   = minErr("$injector");
    createInjector.$$annotate                                                             = annotate;
    var $animateMinErr                                                                    = minErr("$animate"), ELEMENT_NODE = 1, $$CoreAnimateJsProvider = function () {
      this.$get = noop
    }, $$CoreAnimateQueueProvider                                                         = function () {
      var postDigestQueue = new HashMap, postDigestElements = [];
      this.$get           = ["$$AnimateRunner", "$rootScope", function ($$AnimateRunner, $rootScope) {
        function updateData(data, classes, value) {
          var changed = !1;
          return classes && (classes = isString(classes) ? classes.split(" ") : isArray(classes) ? classes : [], forEach(classes, function (className) {
            className && (changed = !0, data[className] = value)
          })), changed
        }

        function handleCSSClassChanges() {
          forEach(postDigestElements, function (element) {
            var data = postDigestQueue.get(element);
            if (data) {
              var existing = splitClasses(element.attr("class")), toAdd = "", toRemove = "";
              forEach(data, function (status, className) {
                status !== !!existing[className] && (status ? toAdd += (toAdd.length ? " " : "") + className : toRemove += (toRemove.length ? " " : "") + className)
              }), forEach(element, function (elm) {
                toAdd && jqLiteAddClass(elm, toAdd), toRemove && jqLiteRemoveClass(elm, toRemove)
              }), postDigestQueue.remove(element)
            }
          }), postDigestElements.length = 0
        }

        function addRemoveClassesPostDigest(element, add, remove) {
          var data = postDigestQueue.get(element) || {}, classesAdded = updateData(data, add, !0),
              classesRemoved                                          = updateData(data, remove, !1);
          (classesAdded || classesRemoved) && (postDigestQueue.put(element, data), postDigestElements.push(element), 1 === postDigestElements.length && $rootScope.$$postDigest(handleCSSClassChanges))
        }

        return {
          enabled: noop, on: noop, off: noop, pin: noop, push: function (element, event, options, domOperation) {
            domOperation && domOperation(), options = options || {}, options.from && element.css(options.from), options.to && element.css(options.to), (options.addClass || options.removeClass) && addRemoveClassesPostDigest(element, options.addClass, options.removeClass);
            var runner = new $$AnimateRunner;
            return runner.complete(), runner
          }
        }
      }]
    }, $AnimateProvider                                                                   = ["$provide", function ($provide) {
      var provider = this;
      this.$$registeredAnimations = Object.create(null), this.register = function (name, factory) {
        if (name && "." !== name.charAt(0)) throw $animateMinErr("notcsel", "Expecting class selector starting with '.' got '{0}'.", name);
        var key = name + "-animation";
        provider.$$registeredAnimations[name.substr(1)] = key, $provide.factory(key, factory)
      }, this.classNameFilter = function (expression) {
        if (1 === arguments.length && (this.$$classNameFilter = expression instanceof RegExp ? expression : null, this.$$classNameFilter)) {
          if (new RegExp("(\\s+|\\/)ng-animate(\\s+|\\/)").test(this.$$classNameFilter.toString())) throw $animateMinErr("nongcls", '$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.', "ng-animate")
        }
        return this.$$classNameFilter
      }, this.$get = ["$$animateQueue", function ($$animateQueue) {
        function domInsert(element, parentElement, afterElement) {
          if (afterElement) {
            var afterNode = extractElementNode(afterElement);
            !afterNode || afterNode.parentNode || afterNode.previousElementSibling || (afterElement = null)
          }
          afterElement ? afterElement.after(element) : parentElement.prepend(element)
        }

        return {
          on:          $$animateQueue.on,
          off:         $$animateQueue.off,
          pin:         $$animateQueue.pin,
          enabled:     $$animateQueue.enabled,
          cancel:      function (runner) {
            runner.end && runner.end()
          },
          enter:       function (element, parent, after, options) {
            return parent = parent && jqLite(parent), after = after && jqLite(after), parent = parent || after.parent(), domInsert(element, parent, after), $$animateQueue.push(element, "enter", prepareAnimateOptions(options))
          },
          move:        function (element, parent, after, options) {
            return parent = parent && jqLite(parent), after = after && jqLite(after), parent = parent || after.parent(), domInsert(element, parent, after), $$animateQueue.push(element, "move", prepareAnimateOptions(options))
          },
          leave:       function (element, options) {
            return $$animateQueue.push(element, "leave", prepareAnimateOptions(options), function () {
              element.remove()
            })
          },
          addClass:    function (element, className, options) {
            return options = prepareAnimateOptions(options), options.addClass = mergeClasses(options.addclass, className), $$animateQueue.push(element, "addClass", options)
          },
          removeClass: function (element, className, options) {
            return options = prepareAnimateOptions(options), options.removeClass = mergeClasses(options.removeClass, className), $$animateQueue.push(element, "removeClass", options)
          },
          setClass:    function (element, add, remove, options) {
            return options = prepareAnimateOptions(options), options.addClass = mergeClasses(options.addClass, add), options.removeClass = mergeClasses(options.removeClass, remove), $$animateQueue.push(element, "setClass", options)
          },
          animate:     function (element, from, to, className, options) {
            return options = prepareAnimateOptions(options), options.from = options.from ? extend(options.from, from) : from, options.to = options.to ? extend(options.to, to) : to, className = className || "ng-inline-animate", options.tempClasses = mergeClasses(options.tempClasses, className), $$animateQueue.push(element, "animate", options)
          }
        }
      }]
    }], $$AnimateAsyncRunFactoryProvider                                                  = function () {
      this.$get = ["$$rAF", function ($$rAF) {
        function waitForTick(fn) {
          waitQueue.push(fn), waitQueue.length > 1 || $$rAF(function () {
            for (var i = 0; i < waitQueue.length; i++) waitQueue[i]();
            waitQueue = []
          })
        }

        var waitQueue = [];
        return function () {
          var passed = !1;
          return waitForTick(function () {
            passed = !0
          }), function (callback) {
            passed ? callback() : waitForTick(callback)
          }
        }
      }]
    }, $$AnimateRunnerFactoryProvider                                                     = function () {
      this.$get = ["$q", "$sniffer", "$$animateAsyncRun", "$document", "$timeout", function ($q, $sniffer, $$animateAsyncRun, $document, $timeout) {
        function AnimateRunner(host) {
          this.setHost(host);
          var rafTick = $$animateAsyncRun(), timeoutTick = function (fn) {
            $timeout(fn, 0, !1)
          };
          this._doneCallbacks = [], this._tick = function (fn) {
            var doc = $document[0];
            doc && doc.hidden ? timeoutTick(fn) : rafTick(fn)
          }, this._state = 0
        }

        return AnimateRunner.chain = function (chain, callback) {
          function next() {
            if (index === chain.length) return void callback(!0);
            chain[index](function (response) {
              if (!1 === response) return void callback(!1);
              index++, next()
            })
          }

          var index = 0;
          next()
        }, AnimateRunner.all = function (runners, callback) {
          function onProgress(response) {
            status = status && response, ++count === runners.length && callback(status)
          }

          var count = 0, status = !0;
          forEach(runners, function (runner) {
            runner.done(onProgress)
          })
        }, AnimateRunner.prototype = {
          setHost:     function (host) {
            this.host = host || {}
          }, done:     function (fn) {
            2 === this._state ? fn() : this._doneCallbacks.push(fn)
          }, progress: noop, getPromise: function () {
            if (!this.promise) {
              var self     = this;
              this.promise = $q(function (resolve, reject) {
                self.done(function (status) {
                  !1 === status ? reject() : resolve()
                })
              })
            }
            return this.promise
          }, then:     function (resolveHandler, rejectHandler) {
            return this.getPromise().then(resolveHandler, rejectHandler)
          }, catch:    function (handler) {
            return this.getPromise().catch(handler)
          }, finally:  function (handler) {
            return this.getPromise().finally(handler)
          }, pause:    function () {
            this.host.pause && this.host.pause()
          }, resume:   function () {
            this.host.resume && this.host.resume()
          }, end:      function () {
            this.host.end && this.host.end(), this._resolve(!0)
          }, cancel:   function () {
            this.host.cancel && this.host.cancel(), this._resolve(!1)
          }, complete: function (response) {
            var self = this;
            0 === self._state && (self._state = 1, self._tick(function () {
              self._resolve(response)
            }))
          }, _resolve: function (response) {
            2 !== this._state && (forEach(this._doneCallbacks, function (fn) {
              fn(response)
            }), this._doneCallbacks.length = 0, this._state = 2)
          }
        }, AnimateRunner
      }]
    }, $CoreAnimateCssProvider                                                            = function () {
      this.$get = ["$$rAF", "$q", "$$AnimateRunner", function ($$rAF, $q, $$AnimateRunner) {
        return function (element, initialOptions) {
          function run() {
            return $$rAF(function () {
              applyAnimationContents(), closed || runner.complete(), closed = !0
            }), runner
          }

          function applyAnimationContents() {
            options.addClass && (element.addClass(options.addClass), options.addClass = null), options.removeClass && (element.removeClass(options.removeClass), options.removeClass = null), options.to && (element.css(options.to), options.to = null)
          }

          var options = initialOptions || {};
          options.$$prepared || (options = copy(options)), options.cleanupStyles && (options.from = options.to = null), options.from && (element.css(options.from), options.from = null);
          var closed, runner = new $$AnimateRunner;
          return {start: run, end: run}
        }
      }]
    }, $compileMinErr                                                                     = minErr("$compile"), _UNINITIALIZED_VALUE = new UNINITIALIZED_VALUE;
    $CompileProvider.$inject = ["$provide", "$$sanitizeUriProvider"], SimpleChange.prototype.isFirstChange = function () {
      return this.previousValue === _UNINITIALIZED_VALUE
    };
    var PREFIX_REGEXP                                                   = /^((?:x|data)[\:\-_])/i, $controllerMinErr = minErr("$controller"),
        CNTRL_REG = /^(\S+)(\s+as\s+([\w$]+))?$/, $$ForceReflowProvider = function () {
          this.$get = ["$document", function ($document) {
            return function (domNode) {
              return domNode ? !domNode.nodeType && domNode instanceof jqLite && (domNode = domNode[0]) : domNode = $document[0].body, domNode.offsetWidth + 1
            }
          }]
        }, APPLICATION_JSON                                             = "application/json",
        CONTENT_TYPE_APPLICATION_JSON                                   = {"Content-Type": APPLICATION_JSON + ";charset=utf-8"},
        JSON_START                                                      = /^\[|^\{(?!\{)/, JSON_ENDS                         = {"[": /]$/, "{": /}$/},
        JSON_PROTECTION_PREFIX                                          = /^\)\]\}',?\n/, $httpMinErr = minErr("$http"),
        $httpMinErrLegacyFn                                             = function (method) {
          return function () {
            throw $httpMinErr("legacy", "The method `{0}` on the promise returned from `$http` has been disabled.", method)
          }
        }, $interpolateMinErr                                           = angular.$interpolateMinErr = minErr("$interpolate");
    $interpolateMinErr.throwNoconcat = function (text) {
      throw $interpolateMinErr("noconcat", "Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api2/ng.$sce", text)
    }, $interpolateMinErr.interr = function (text, err) {
      return $interpolateMinErr("interr", "Can't interpolate: {0}\n{1}", text, err.toString())
    };
    var PATH_MATCH = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, DEFAULT_PORTS = {http: 80, https: 443, ftp: 21},
        $locationMinErr                                               = minErr("$location"), locationPrototype      = {
          $$html5:   !1,
          $$replace: !1,
          absUrl:    locationGetter("$$absUrl"),
          url:       function (url) {
            if (isUndefined(url)) return this.$$url;
            var match = PATH_MATCH.exec(url);
            return (match[1] || "" === url) && this.path(decodeURIComponent(match[1])), (match[2] || match[1] || "" === url) && this.search(match[3] || ""), this.hash(match[5] || ""), this
          },
          protocol:  locationGetter("$$protocol"),
          host:      locationGetter("$$host"),
          port:      locationGetter("$$port"),
          path:      locationGetterSetter("$$path", function (path) {
            return path = null !== path ? path.toString() : "", "/" == path.charAt(0) ? path : "/" + path
          }),
          search:    function (search, paramValue) {
            switch (arguments.length) {
              case 0:
                return this.$$search;
              case 1:
                if (isString(search) || isNumber(search)) search = search.toString(), this.$$search = parseKeyValue(search); else {
                  if (!isObject(search)) throw $locationMinErr("isrcharg", "The first argument of the `$location#search()` call must be a string or an object.");
                  search = copy(search, {}), forEach(search, function (value, key) {
                    null == value && delete search[key]
                  }), this.$$search = search
                }
                break;
              default:
                isUndefined(paramValue) || null === paramValue ? delete this.$$search[search] : this.$$search[search] = paramValue
            }
            return this.$$compose(), this
          },
          hash:      locationGetterSetter("$$hash", function (hash) {
            return null !== hash ? hash.toString() : ""
          }),
          replace:   function () {
            return this.$$replace = !0, this
          }
        };
    forEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function (Location) {
      Location.prototype = Object.create(locationPrototype), Location.prototype.state = function (state) {
        if (!arguments.length) return this.$$state;
        if (Location !== LocationHtml5Url || !this.$$html5) throw $locationMinErr("nostate", "History API state support is available only in HTML5 mode and only in browsers supporting HTML5 History API");
        return this.$$state = isUndefined(state) ? null : state, this
      }
    });
    var $parseMinErr = minErr("$parse"), CALL = Function.prototype.call, APPLY = Function.prototype.apply,
        BIND                                                                   = Function.prototype.bind, OPERATORS = createMap();
    forEach("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function (operator) {
      OPERATORS[operator] = !0
    });
    var ESCAPE      = {n: "\n", f: "\f", r: "\r", t: "\t", v: "\v", "'": "'", '"': '"'}, Lexer = function (options) {
      this.options = options
    };
    Lexer.prototype = {
      constructor:                  Lexer, lex: function (text) {
        for (this.text = text, this.index = 0, this.tokens = []; this.index < this.text.length;) {
          var ch = this.text.charAt(this.index);
          if ('"' === ch || "'" === ch) this.readString(ch); else if (this.isNumber(ch) || "." === ch && this.isNumber(this.peek())) this.readNumber(); else if (this.isIdentifierStart(this.peekMultichar())) this.readIdent(); else if (this.is(ch, "(){}[].,;:?")) this.tokens.push({
            index: this.index,
            text:  ch
          }), this.index++; else if (this.isWhitespace(ch)) this.index++; else {
            var ch2 = ch + this.peek(), ch3 = ch2 + this.peek(2), op1 = OPERATORS[ch], op2 = OPERATORS[ch2],
                op3                                                                        = OPERATORS[ch3];
            if (op1 || op2 || op3) {
              var token = op3 ? ch3 : op2 ? ch2 : ch;
              this.tokens.push({index: this.index, text: token, operator: !0}), this.index += token.length
            } else this.throwError("Unexpected next character ", this.index, this.index + 1)
          }
        }
        return this.tokens
      }, is:                        function (ch, chars) {
        return -1 !== chars.indexOf(ch)
      }, peek:                      function (i) {
        var num = i || 1;
        return this.index + num < this.text.length && this.text.charAt(this.index + num)
      }, isNumber:                  function (ch) {
        return "0" <= ch && ch <= "9" && "string" == typeof ch
      }, isWhitespace:              function (ch) {
        return " " === ch || "\r" === ch || "\t" === ch || "\n" === ch || "\v" === ch || " " === ch
      }, isIdentifierStart:         function (ch) {
        return this.options.isIdentifierStart ? this.options.isIdentifierStart(ch, this.codePointAt(ch)) : this.isValidIdentifierStart(ch)
      }, isValidIdentifierStart:    function (ch) {
        return "a" <= ch && ch <= "z" || "A" <= ch && ch <= "Z" || "_" === ch || "$" === ch
      }, isIdentifierContinue:      function (ch) {
        return this.options.isIdentifierContinue ? this.options.isIdentifierContinue(ch, this.codePointAt(ch)) : this.isValidIdentifierContinue(ch)
      }, isValidIdentifierContinue: function (ch, cp) {
        return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch)
      }, codePointAt:               function (ch) {
        return 1 === ch.length ? ch.charCodeAt(0) : (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 56613888
      }, peekMultichar:             function () {
        var ch = this.text.charAt(this.index), peek = this.peek();
        if (!peek) return ch;
        var cp1 = ch.charCodeAt(0), cp2 = peek.charCodeAt(0);
        return cp1 >= 55296 && cp1 <= 56319 && cp2 >= 56320 && cp2 <= 57343 ? ch + peek : ch
      }, isExpOperator:             function (ch) {
        return "-" === ch || "+" === ch || this.isNumber(ch)
      }, throwError:                function (error, start, end) {
        end        = end || this.index;
        var colStr = isDefined(start) ? "s " + start + "-" + this.index + " [" + this.text.substring(start, end) + "]" : " " + end;
        throw $parseMinErr("lexerr", "Lexer Error: {0} at column{1} in expression [{2}].", error, colStr, this.text)
      }, readNumber:                function () {
        for (var number = "", start = this.index; this.index < this.text.length;) {
          var ch = lowercase(this.text.charAt(this.index));
          if ("." == ch || this.isNumber(ch)) number += ch; else {
            var peekCh = this.peek();
            if ("e" == ch && this.isExpOperator(peekCh)) number += ch; else if (this.isExpOperator(ch) && peekCh && this.isNumber(peekCh) && "e" == number.charAt(number.length - 1)) number += ch; else {
              if (!this.isExpOperator(ch) || peekCh && this.isNumber(peekCh) || "e" != number.charAt(number.length - 1)) break;
              this.throwError("Invalid exponent")
            }
          }
          this.index++
        }
        this.tokens.push({index: start, text: number, constant: !0, value: Number(number)})
      }, readIdent:                 function () {
        var start = this.index;
        for (this.index += this.peekMultichar().length; this.index < this.text.length;) {
          var ch = this.peekMultichar();
          if (!this.isIdentifierContinue(ch)) break;
          this.index += ch.length
        }
        this.tokens.push({index: start, text: this.text.slice(start, this.index), identifier: !0})
      }, readString:                function (quote) {
        var start = this.index;
        this.index++;
        for (var string = "", rawString = quote, escape = !1; this.index < this.text.length;) {
          var ch = this.text.charAt(this.index);
          if (rawString += ch, escape) {
            if ("u" === ch) {
              var hex = this.text.substring(this.index + 1, this.index + 5);
              hex.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + hex + "]"), this.index += 4, string += String.fromCharCode(parseInt(hex, 16))
            } else {
              string += ESCAPE[ch] || ch
            }
            escape = !1
          } else if ("\\" === ch) escape = !0; else {
            if (ch === quote) return this.index++, void this.tokens.push({
              index:    start,
              text:     rawString,
              constant: !0,
              value:    string
            });
            string += ch
          }
          this.index++
        }
        this.throwError("Unterminated quote", start)
      }
    };
    var AST         = function (lexer, options) {
      this.lexer = lexer, this.options = options
    };
    AST.Program = "Program", AST.ExpressionStatement = "ExpressionStatement", AST.AssignmentExpression = "AssignmentExpression", AST.ConditionalExpression = "ConditionalExpression", AST.LogicalExpression = "LogicalExpression", AST.BinaryExpression = "BinaryExpression", AST.UnaryExpression = "UnaryExpression", AST.CallExpression = "CallExpression", AST.MemberExpression = "MemberExpression", AST.Identifier = "Identifier", AST.Literal = "Literal", AST.ArrayExpression = "ArrayExpression", AST.Property = "Property", AST.ObjectExpression = "ObjectExpression", AST.ThisExpression = "ThisExpression", AST.LocalsExpression = "LocalsExpression", AST.NGValueParameter = "NGValueParameter", AST.prototype = {
      ast:                 function (text) {
        this.text = text, this.tokens = this.lexer.lex(text);
        var value = this.program();
        return 0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]), value
      },
      program:             function () {
        for (var body = []; ;) if (this.tokens.length > 0 && !this.peek("}", ")", ";", "]") && body.push(this.expressionStatement()), !this.expect(";")) return {
          type: AST.Program,
          body: body
        }
      },
      expressionStatement: function () {
        return {type: AST.ExpressionStatement, expression: this.filterChain()}
      },
      filterChain:         function () {
        for (var left = this.expression(); this.expect("|");) left = this.filter(left);
        return left
      },
      expression:          function () {
        return this.assignment()
      },
      assignment:          function () {
        var result = this.ternary();
        return this.expect("=") && (result = {
          type:     AST.AssignmentExpression,
          left:     result,
          right:    this.assignment(),
          operator: "="
        }), result
      },
      ternary:             function () {
        var alternate, consequent, test = this.logicalOR();
        return this.expect("?") && (alternate = this.expression(), this.consume(":")) ? (consequent = this.expression(), {
          type:       AST.ConditionalExpression,
          test:       test,
          alternate:  alternate,
          consequent: consequent
        }) : test
      },
      logicalOR:           function () {
        for (var left = this.logicalAND(); this.expect("||");) left = {
          type:     AST.LogicalExpression,
          operator: "||",
          left:     left,
          right:    this.logicalAND()
        };
        return left
      },
      logicalAND:          function () {
        for (var left = this.equality(); this.expect("&&");) left = {
          type:     AST.LogicalExpression,
          operator: "&&",
          left:     left,
          right:    this.equality()
        };
        return left
      },
      equality:            function () {
        for (var token, left = this.relational(); token = this.expect("==", "!=", "===", "!==");) left = {
          type:     AST.BinaryExpression,
          operator: token.text,
          left:     left,
          right:    this.relational()
        };
        return left
      },
      relational:          function () {
        for (var token, left = this.additive(); token = this.expect("<", ">", "<=", ">=");) left = {
          type:     AST.BinaryExpression,
          operator: token.text,
          left:     left,
          right:    this.additive()
        };
        return left
      },
      additive:            function () {
        for (var token, left = this.multiplicative(); token = this.expect("+", "-");) left = {
          type:     AST.BinaryExpression,
          operator: token.text,
          left:     left,
          right:    this.multiplicative()
        };
        return left
      },
      multiplicative:      function () {
        for (var token, left = this.unary(); token = this.expect("*", "/", "%");) left = {
          type:     AST.BinaryExpression,
          operator: token.text,
          left:     left,
          right:    this.unary()
        };
        return left
      },
      unary:               function () {
        var token;
        return (token = this.expect("+", "-", "!")) ? {
          type:     AST.UnaryExpression,
          operator: token.text,
          prefix:   !0,
          argument: this.unary()
        } : this.primary()
      },
      primary:             function () {
        var primary;
        this.expect("(") ? (primary = this.filterChain(), this.consume(")")) : this.expect("[") ? primary = this.arrayDeclaration() : this.expect("{") ? primary = this.object() : this.selfReferential.hasOwnProperty(this.peek().text) ? primary = copy(this.selfReferential[this.consume().text]) : this.options.literals.hasOwnProperty(this.peek().text) ? primary = {
          type:  AST.Literal,
          value: this.options.literals[this.consume().text]
        } : this.peek().identifier ? primary = this.identifier() : this.peek().constant ? primary = this.constant() : this.throwError("not a primary expression", this.peek());
        for (var next; next = this.expect("(", "[", ".");) "(" === next.text ? (primary = {
          type:      AST.CallExpression,
          callee:    primary,
          arguments: this.parseArguments()
        }, this.consume(")")) : "[" === next.text ? (primary = {
          type:     AST.MemberExpression,
          object:   primary,
          property: this.expression(),
          computed: !0
        }, this.consume("]")) : "." === next.text ? primary = {
          type:     AST.MemberExpression,
          object:   primary,
          property: this.identifier(),
          computed: !1
        } : this.throwError("IMPOSSIBLE");
        return primary
      },
      filter:              function (baseExpression) {
        for (var args = [baseExpression], result = {
          type:      AST.CallExpression,
          callee:    this.identifier(),
          arguments: args,
          filter:    !0
        }; this.expect(":");) args.push(this.expression());
        return result
      },
      parseArguments:      function () {
        var args = [];
        if (")" !== this.peekToken().text) do {
          args.push(this.expression())
        } while (this.expect(","));
        return args
      },
      identifier:          function () {
        var token = this.consume();
        return token.identifier || this.throwError("is not a valid identifier", token), {
          type: AST.Identifier,
          name: token.text
        }
      },
      constant:            function () {
        return {type: AST.Literal, value: this.consume().value}
      },
      arrayDeclaration:    function () {
        var elements = [];
        if ("]" !== this.peekToken().text) do {
          if (this.peek("]")) break;
          elements.push(this.expression())
        } while (this.expect(","));
        return this.consume("]"), {type: AST.ArrayExpression, elements: elements}
      },
      object:              function () {
        var property, properties = [];
        if ("}" !== this.peekToken().text) do {
          if (this.peek("}")) break;
          property = {
            type: AST.Property,
            kind: "init"
          }, this.peek().constant ? property.key = this.constant() : this.peek().identifier ? property.key = this.identifier() : this.throwError("invalid key", this.peek()), this.consume(":"), property.value = this.expression(), properties.push(property)
        } while (this.expect(","));
        return this.consume("}"), {type: AST.ObjectExpression, properties: properties}
      },
      throwError:          function (msg, token) {
        throw $parseMinErr("syntax", "Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].", token.text, msg, token.index + 1, this.text, this.text.substring(token.index))
      },
      consume:             function (e1) {
        if (0 === this.tokens.length) throw $parseMinErr("ueoe", "Unexpected end of expression: {0}", this.text);
        var token = this.expect(e1);
        return token || this.throwError("is unexpected, expecting [" + e1 + "]", this.peek()), token
      },
      peekToken:           function () {
        if (0 === this.tokens.length) throw $parseMinErr("ueoe", "Unexpected end of expression: {0}", this.text);
        return this.tokens[0]
      },
      peek:                function (e1, e2, e3, e4) {
        return this.peekAhead(0, e1, e2, e3, e4)
      },
      peekAhead:           function (i, e1, e2, e3, e4) {
        if (this.tokens.length > i) {
          var token = this.tokens[i], t = token.text;
          if (t === e1 || t === e2 || t === e3 || t === e4 || !e1 && !e2 && !e3 && !e4) return token
        }
        return !1
      },
      expect:              function (e1, e2, e3, e4) {
        var token = this.peek(e1, e2, e3, e4);
        return !!token && (this.tokens.shift(), token)
      },
      selfReferential:     {
        this:    {type: AST.ThisExpression},
        $locals: {type: AST.LocalsExpression}
      }
    }, ASTCompiler.prototype = {
      compile:                       function (expression, expensiveChecks) {
        var self = this, ast = this.astBuilder.ast(expression);
        this.state = {
          nextId:          0,
          filters:         {},
          expensiveChecks: expensiveChecks,
          fn:              {vars: [], body: [], own: {}},
          assign:          {vars: [], body: [], own: {}},
          inputs:          []
        }, findConstantAndWatchExpressions(ast, self.$filter);
        var assignable, extra = "";
        if (this.stage = "assign", assignable = assignableAST(ast)) {
          this.state.computing = "assign";
          var result           = this.nextId();
          this.recurse(assignable, result), this.return_(result), extra = "fn.assign=" + this.generateFunction("assign", "s,v,l")
        }
        var toWatch = getInputs(ast.body);
        self.stage = "inputs", forEach(toWatch, function (watch, key) {
          var fnKey = "fn" + key;
          self.state[fnKey] = {vars: [], body: [], own: {}}, self.state.computing = fnKey;
          var intoId = self.nextId();
          self.recurse(watch, intoId), self.return_(intoId), self.state.inputs.push(fnKey), watch.watchId = key
        }), this.state.computing = "fn", this.stage = "main", this.recurse(ast);
        var fnString = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() + "var fn=" + this.generateFunction("fn", "s,l,a,i") + extra + this.watchFns() + "return fn;",
            fn       = new Function("$filter", "ensureSafeMemberName", "ensureSafeObject", "ensureSafeFunction", "getStringValue", "ensureSafeAssignContext", "ifDefined", "plus", "text", fnString)(this.$filter, ensureSafeMemberName, ensureSafeObject, ensureSafeFunction, getStringValue, ensureSafeAssignContext, ifDefined, plusFn, expression);
        return this.state = this.stage = void 0, fn.literal = isLiteral(ast), fn.constant = isConstant(ast), fn
      }, USE:                        "use", STRICT: "strict", watchFns: function () {
        var result = [], fns = this.state.inputs, self = this;
        return forEach(fns, function (name) {
          result.push("var " + name + "=" + self.generateFunction(name, "s"))
        }), fns.length && result.push("fn.inputs=[" + fns.join(",") + "];"), result.join("")
      }, generateFunction:           function (name, params) {
        return "function(" + params + "){" + this.varsPrefix(name) + this.body(name) + "};"
      }, filterPrefix:               function () {
        var parts = [], self = this;
        return forEach(this.state.filters, function (id, filter) {
          parts.push(id + "=$filter(" + self.escape(filter) + ")")
        }), parts.length ? "var " + parts.join(",") + ";" : ""
      }, varsPrefix:                 function (section) {
        return this.state[section].vars.length ? "var " + this.state[section].vars.join(",") + ";" : ""
      }, body:                       function (section) {
        return this.state[section].body.join("")
      }, recurse:                    function (ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
        var left, right, args, expression, self = this;
        if (recursionFn = recursionFn || noop, !skipWatchIdCheck && isDefined(ast.watchId)) return intoId = intoId || this.nextId(), void this.if_("i", this.lazyAssign(intoId, this.computedMember("i", ast.watchId)), this.lazyRecurse(ast, intoId, nameId, recursionFn, create, !0));
        switch (ast.type) {
          case AST.Program:
            forEach(ast.body, function (expression, pos) {
              self.recurse(expression.expression, void 0, void 0, function (expr) {
                right = expr
              }), pos !== ast.body.length - 1 ? self.current().body.push(right, ";") : self.return_(right)
            });
            break;
          case AST.Literal:
            expression = this.escape(ast.value), this.assign(intoId, expression), recursionFn(expression);
            break;
          case AST.UnaryExpression:
            this.recurse(ast.argument, void 0, void 0, function (expr) {
              right = expr
            }), expression = ast.operator + "(" + this.ifDefined(right, 0) + ")", this.assign(intoId, expression), recursionFn(expression);
            break;
          case AST.BinaryExpression:
            this.recurse(ast.left, void 0, void 0, function (expr) {
              left = expr
            }), this.recurse(ast.right, void 0, void 0, function (expr) {
              right = expr
            }), expression = "+" === ast.operator ? this.plus(left, right) : "-" === ast.operator ? this.ifDefined(left, 0) + ast.operator + this.ifDefined(right, 0) : "(" + left + ")" + ast.operator + "(" + right + ")", this.assign(intoId, expression), recursionFn(expression);
            break;
          case AST.LogicalExpression:
            intoId = intoId || this.nextId(), self.recurse(ast.left, intoId), self.if_("&&" === ast.operator ? intoId : self.not(intoId), self.lazyRecurse(ast.right, intoId)), recursionFn(intoId);
            break;
          case AST.ConditionalExpression:
            intoId = intoId || this.nextId(), self.recurse(ast.test, intoId), self.if_(intoId, self.lazyRecurse(ast.alternate, intoId), self.lazyRecurse(ast.consequent, intoId)), recursionFn(intoId);
            break;
          case AST.Identifier:
            intoId = intoId || this.nextId(), nameId && (nameId.context = "inputs" === self.stage ? "s" : this.assign(this.nextId(), this.getHasOwnProperty("l", ast.name) + "?l:s"), nameId.computed = !1, nameId.name = ast.name), ensureSafeMemberName(ast.name), self.if_("inputs" === self.stage || self.not(self.getHasOwnProperty("l", ast.name)), function () {
              self.if_("inputs" === self.stage || "s", function () {
                create && 1 !== create && self.if_(self.not(self.nonComputedMember("s", ast.name)), self.lazyAssign(self.nonComputedMember("s", ast.name), "{}")), self.assign(intoId, self.nonComputedMember("s", ast.name))
              })
            }, intoId && self.lazyAssign(intoId, self.nonComputedMember("l", ast.name))), (self.state.expensiveChecks || isPossiblyDangerousMemberName(ast.name)) && self.addEnsureSafeObject(intoId), recursionFn(intoId);
            break;
          case AST.MemberExpression:
            left = nameId && (nameId.context = this.nextId()) || this.nextId(), intoId = intoId || this.nextId(), self.recurse(ast.object, left, void 0, function () {
              self.if_(self.notNull(left), function () {
                create && 1 !== create && self.addEnsureSafeAssignContext(left), ast.computed ? (right = self.nextId(), self.recurse(ast.property, right), self.getStringValue(right), self.addEnsureSafeMemberName(right), create && 1 !== create && self.if_(self.not(self.computedMember(left, right)), self.lazyAssign(self.computedMember(left, right), "{}")), expression = self.ensureSafeObject(self.computedMember(left, right)), self.assign(intoId, expression), nameId && (nameId.computed = !0, nameId.name = right)) : (ensureSafeMemberName(ast.property.name), create && 1 !== create && self.if_(self.not(self.nonComputedMember(left, ast.property.name)), self.lazyAssign(self.nonComputedMember(left, ast.property.name), "{}")), expression = self.nonComputedMember(left, ast.property.name), (self.state.expensiveChecks || isPossiblyDangerousMemberName(ast.property.name)) && (expression = self.ensureSafeObject(expression)), self.assign(intoId, expression), nameId && (nameId.computed = !1, nameId.name = ast.property.name))
              }, function () {
                self.assign(intoId, "undefined")
              }), recursionFn(intoId)
            }, !!create);
            break;
          case AST.CallExpression:
            intoId = intoId || this.nextId(), ast.filter ? (right = self.filter(ast.callee.name), args = [], forEach(ast.arguments, function (expr) {
              var argument = self.nextId();
              self.recurse(expr, argument), args.push(argument)
            }), expression = right + "(" + args.join(",") + ")", self.assign(intoId, expression), recursionFn(intoId)) : (right = self.nextId(), left = {}, args = [], self.recurse(ast.callee, right, left, function () {
              self.if_(self.notNull(right), function () {
                self.addEnsureSafeFunction(right), forEach(ast.arguments, function (expr) {
                  self.recurse(expr, self.nextId(), void 0, function (argument) {
                    args.push(self.ensureSafeObject(argument))
                  })
                }), left.name ? (self.state.expensiveChecks || self.addEnsureSafeObject(left.context), expression = self.member(left.context, left.name, left.computed) + "(" + args.join(",") + ")") : expression = right + "(" + args.join(",") + ")", expression = self.ensureSafeObject(expression), self.assign(intoId, expression)
              }, function () {
                self.assign(intoId, "undefined")
              }), recursionFn(intoId)
            }));
            break;
          case AST.AssignmentExpression:
            if (right = this.nextId(), left = {}, !isAssignable(ast.left)) throw $parseMinErr("lval", "Trying to assign a value to a non l-value");
            this.recurse(ast.left, void 0, left, function () {
              self.if_(self.notNull(left.context), function () {
                self.recurse(ast.right, right), self.addEnsureSafeObject(self.member(left.context, left.name, left.computed)), self.addEnsureSafeAssignContext(left.context), expression = self.member(left.context, left.name, left.computed) + ast.operator + right, self.assign(intoId, expression), recursionFn(intoId || expression)
              })
            }, 1);
            break;
          case AST.ArrayExpression:
            args = [], forEach(ast.elements, function (expr) {
              self.recurse(expr, self.nextId(), void 0, function (argument) {
                args.push(argument)
              })
            }), expression = "[" + args.join(",") + "]", this.assign(intoId, expression), recursionFn(expression);
            break;
          case AST.ObjectExpression:
            args = [], forEach(ast.properties, function (property) {
              self.recurse(property.value, self.nextId(), void 0, function (expr) {
                args.push(self.escape(property.key.type === AST.Identifier ? property.key.name : "" + property.key.value) + ":" + expr)
              })
            }), expression = "{" + args.join(",") + "}", this.assign(intoId, expression), recursionFn(expression);
            break;
          case AST.ThisExpression:
            this.assign(intoId, "s"), recursionFn("s");
            break;
          case AST.LocalsExpression:
            this.assign(intoId, "l"), recursionFn("l");
            break;
          case AST.NGValueParameter:
            this.assign(intoId, "v"), recursionFn("v")
        }
      }, getHasOwnProperty:          function (element, property) {
        var key = element + "." + property, own = this.current().own;
        return own.hasOwnProperty(key) || (own[key] = this.nextId(!1, element + "&&(" + this.escape(property) + " in " + element + ")")), own[key]
      }, assign:                     function (id, value) {
        if (id) return this.current().body.push(id, "=", value, ";"), id
      }, filter:                     function (filterName) {
        return this.state.filters.hasOwnProperty(filterName) || (this.state.filters[filterName] = this.nextId(!0)), this.state.filters[filterName]
      }, ifDefined:                  function (id, defaultValue) {
        return "ifDefined(" + id + "," + this.escape(defaultValue) + ")"
      }, plus:                       function (left, right) {
        return "plus(" + left + "," + right + ")"
      }, return_:                    function (id) {
        this.current().body.push("return ", id, ";")
      }, if_:                        function (test, alternate, consequent) {
        if (!0 === test) alternate(); else {
          var body = this.current().body;
          body.push("if(", test, "){"), alternate(), body.push("}"), consequent && (body.push("else{"), consequent(), body.push("}"))
        }
      }, not:                        function (expression) {
        return "!(" + expression + ")"
      }, notNull:                    function (expression) {
        return expression + "!=null"
      }, nonComputedMember:          function (left, right) {
        var SAFE_IDENTIFIER = /[$_a-zA-Z][$_a-zA-Z0-9]*/, UNSAFE_CHARACTERS = /[^$_a-zA-Z0-9]/g;
        return SAFE_IDENTIFIER.test(right) ? left + "." + right : left + '["' + right.replace(UNSAFE_CHARACTERS, this.stringEscapeFn) + '"]'
      }, computedMember:             function (left, right) {
        return left + "[" + right + "]"
      }, member:                     function (left, right, computed) {
        return computed ? this.computedMember(left, right) : this.nonComputedMember(left, right)
      }, addEnsureSafeObject:        function (item) {
        this.current().body.push(this.ensureSafeObject(item), ";")
      }, addEnsureSafeMemberName:    function (item) {
        this.current().body.push(this.ensureSafeMemberName(item), ";")
      }, addEnsureSafeFunction:      function (item) {
        this.current().body.push(this.ensureSafeFunction(item), ";")
      }, addEnsureSafeAssignContext: function (item) {
        this.current().body.push(this.ensureSafeAssignContext(item), ";")
      }, ensureSafeObject:           function (item) {
        return "ensureSafeObject(" + item + ",text)"
      }, ensureSafeMemberName:       function (item) {
        return "ensureSafeMemberName(" + item + ",text)"
      }, ensureSafeFunction:         function (item) {
        return "ensureSafeFunction(" + item + ",text)"
      }, getStringValue:             function (item) {
        this.assign(item, "getStringValue(" + item + ")")
      }, ensureSafeAssignContext:    function (item) {
        return "ensureSafeAssignContext(" + item + ",text)"
      }, lazyRecurse:                function (ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
        var self = this;
        return function () {
          self.recurse(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck)
        }
      }, lazyAssign:                 function (id, value) {
        var self = this;
        return function () {
          self.assign(id, value)
        }
      }, stringEscapeRegex:          /[^ a-zA-Z0-9]/g, stringEscapeFn: function (c) {
        return "\\u" + ("0000" + c.charCodeAt(0).toString(16)).slice(-4)
      }, escape:                     function (value) {
        if (isString(value)) return "'" + value.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'";
        if (isNumber(value)) return value.toString();
        if (!0 === value) return "true";
        if (!1 === value) return "false";
        if (null === value) return "null";
        if (void 0 === value) return "undefined";
        throw $parseMinErr("esc", "IMPOSSIBLE")
      }, nextId:                     function (skip, init) {
        var id = "v" + this.state.nextId++;
        return skip || this.current().vars.push(id + (init ? "=" + init : "")), id
      }, current:                    function () {
        return this.state[this.state.computing]
      }
    }, ASTInterpreter.prototype = {
      compile:              function (expression, expensiveChecks) {
        var self = this, ast = this.astBuilder.ast(expression);
        this.expression = expression, this.expensiveChecks = expensiveChecks, findConstantAndWatchExpressions(ast, self.$filter);
        var assignable, assign;
        (assignable = assignableAST(ast)) && (assign = this.recurse(assignable));
        var inputs, toWatch = getInputs(ast.body);
        toWatch && (inputs = [], forEach(toWatch, function (watch, key) {
          var input = self.recurse(watch);
          watch.input = input, inputs.push(input), watch.watchId = key
        }));
        var expressions = [];
        forEach(ast.body, function (expression) {
          expressions.push(self.recurse(expression.expression))
        });
        var fn = 0 === ast.body.length ? noop : 1 === ast.body.length ? expressions[0] : function (scope, locals) {
          var lastValue;
          return forEach(expressions, function (exp) {
            lastValue = exp(scope, locals)
          }), lastValue
        };
        return assign && (fn.assign = function (scope, value, locals) {
          return assign(scope, locals, value)
        }), inputs && (fn.inputs = inputs), fn.literal = isLiteral(ast), fn.constant = isConstant(ast), fn
      }, recurse:           function (ast, context, create) {
        var left, right, args, self = this;
        if (ast.input) return this.inputs(ast.input, ast.watchId);
        switch (ast.type) {
          case AST.Literal:
            return this.value(ast.value, context);
          case AST.UnaryExpression:
            return right = this.recurse(ast.argument), this["unary" + ast.operator](right, context);
          case AST.BinaryExpression:
          case AST.LogicalExpression:
            return left = this.recurse(ast.left), right = this.recurse(ast.right), this["binary" + ast.operator](left, right, context);
          case AST.ConditionalExpression:
            return this["ternary?:"](this.recurse(ast.test), this.recurse(ast.alternate), this.recurse(ast.consequent), context);
          case AST.Identifier:
            return ensureSafeMemberName(ast.name, self.expression), self.identifier(ast.name, self.expensiveChecks || isPossiblyDangerousMemberName(ast.name), context, create, self.expression);
          case AST.MemberExpression:
            return left = this.recurse(ast.object, !1, !!create), ast.computed || (ensureSafeMemberName(ast.property.name, self.expression), right = ast.property.name), ast.computed && (right = this.recurse(ast.property)), ast.computed ? this.computedMember(left, right, context, create, self.expression) : this.nonComputedMember(left, right, self.expensiveChecks, context, create, self.expression);
          case AST.CallExpression:
            return args = [], forEach(ast.arguments, function (expr) {
              args.push(self.recurse(expr))
            }), ast.filter && (right = this.$filter(ast.callee.name)), ast.filter || (right = this.recurse(ast.callee, !0)), ast.filter ? function (scope, locals, assign, inputs) {
              for (var values = [], i = 0; i < args.length; ++i) values.push(args[i](scope, locals, assign, inputs));
              var value = right.apply(void 0, values, inputs);
              return context ? {context: void 0, name: void 0, value: value} : value
            } : function (scope, locals, assign, inputs) {
              var value, rhs = right(scope, locals, assign, inputs);
              if (null != rhs.value) {
                ensureSafeObject(rhs.context, self.expression), ensureSafeFunction(rhs.value, self.expression);
                for (var values = [], i = 0; i < args.length; ++i) values.push(ensureSafeObject(args[i](scope, locals, assign, inputs), self.expression));
                value = ensureSafeObject(rhs.value.apply(rhs.context, values), self.expression)
              }
              return context ? {value: value} : value
            };
          case AST.AssignmentExpression:
            return left = this.recurse(ast.left, !0, 1), right = this.recurse(ast.right), function (scope, locals, assign, inputs) {
              var lhs = left(scope, locals, assign, inputs), rhs = right(scope, locals, assign, inputs);
              return ensureSafeObject(lhs.value, self.expression), ensureSafeAssignContext(lhs.context), lhs.context[lhs.name] = rhs, context ? {value: rhs} : rhs
            };
          case AST.ArrayExpression:
            return args = [], forEach(ast.elements, function (expr) {
              args.push(self.recurse(expr))
            }), function (scope, locals, assign, inputs) {
              for (var value = [], i = 0; i < args.length; ++i) value.push(args[i](scope, locals, assign, inputs));
              return context ? {value: value} : value
            };
          case AST.ObjectExpression:
            return args = [], forEach(ast.properties, function (property) {
              args.push({
                key:   property.key.type === AST.Identifier ? property.key.name : "" + property.key.value,
                value: self.recurse(property.value)
              })
            }), function (scope, locals, assign, inputs) {
              for (var value = {}, i = 0; i < args.length; ++i) value[args[i].key] = args[i].value(scope, locals, assign, inputs);
              return context ? {value: value} : value
            };
          case AST.ThisExpression:
            return function (scope) {
              return context ? {value: scope} : scope
            };
          case AST.LocalsExpression:
            return function (scope, locals) {
              return context ? {value: locals} : locals
            };
          case AST.NGValueParameter:
            return function (scope, locals, assign) {
              return context ? {value: assign} : assign
            }
        }
      }, "unary+":          function (argument, context) {
        return function (scope, locals, assign, inputs) {
          var arg = argument(scope, locals, assign, inputs);
          return arg = isDefined(arg) ? +arg : 0, context ? {value: arg} : arg
        }
      }, "unary-":          function (argument, context) {
        return function (scope, locals, assign, inputs) {
          var arg = argument(scope, locals, assign, inputs);
          return arg = isDefined(arg) ? -arg : 0, context ? {value: arg} : arg
        }
      }, "unary!":          function (argument, context) {
        return function (scope, locals, assign, inputs) {
          var arg = !argument(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary+":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var lhs = left(scope, locals, assign, inputs), rhs = right(scope, locals, assign, inputs),
              arg                                            = plusFn(lhs, rhs);
          return context ? {value: arg} : arg
        }
      }, "binary-":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var lhs = left(scope, locals, assign, inputs), rhs = right(scope, locals, assign, inputs),
              arg                                            = (isDefined(lhs) ? lhs : 0) - (isDefined(rhs) ? rhs : 0);
          return context ? {value: arg} : arg
        }
      }, "binary*":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) * right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary/":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) / right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary%":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) % right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary===":       function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) === right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary!==":       function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) !== right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary==":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) == right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary!=":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) != right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary<":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) < right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary>":         function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) > right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary<=":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) <= right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary>=":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) >= right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary&&":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) && right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "binary||":        function (left, right, context) {
        return function (scope, locals, assign, inputs) {
          var arg = left(scope, locals, assign, inputs) || right(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, "ternary?:":       function (test, alternate, consequent, context) {
        return function (scope, locals, assign, inputs) {
          var arg = test(scope, locals, assign, inputs) ? alternate(scope, locals, assign, inputs) : consequent(scope, locals, assign, inputs);
          return context ? {value: arg} : arg
        }
      }, value:             function (value, context) {
        return function () {
          return context ? {context: void 0, name: void 0, value: value} : value
        }
      }, identifier:        function (name, expensiveChecks, context, create, expression) {
        return function (scope, locals, assign, inputs) {
          var base = locals && name in locals ? locals : scope;
          create && 1 !== create && base && !base[name] && (base[name] = {});
          var value = base ? base[name] : void 0;
          return expensiveChecks && ensureSafeObject(value, expression), context ? {
            context: base,
            name:    name,
            value:   value
          } : value
        }
      }, computedMember:    function (left, right, context, create, expression) {
        return function (scope, locals, assign, inputs) {
          var rhs, value, lhs = left(scope, locals, assign, inputs);
          return null != lhs && (rhs = right(scope, locals, assign, inputs), rhs = getStringValue(rhs), ensureSafeMemberName(rhs, expression), create && 1 !== create && (ensureSafeAssignContext(lhs), lhs && !lhs[rhs] && (lhs[rhs] = {})), value = lhs[rhs], ensureSafeObject(value, expression)), context ? {
            context: lhs,
            name:    rhs,
            value:   value
          } : value
        }
      }, nonComputedMember: function (left, right, expensiveChecks, context, create, expression) {
        return function (scope, locals, assign, inputs) {
          var lhs = left(scope, locals, assign, inputs);
          create && 1 !== create && (ensureSafeAssignContext(lhs), lhs && !lhs[right] && (lhs[right] = {}));
          var value = null != lhs ? lhs[right] : void 0;
          return (expensiveChecks || isPossiblyDangerousMemberName(right)) && ensureSafeObject(value, expression), context ? {
            context: lhs,
            name:    right,
            value:   value
          } : value
        }
      }, inputs:            function (input, watchId) {
        return function (scope, value, locals, inputs) {
          return inputs ? inputs[watchId] : input(scope, value, locals)
        }
      }
    };
    var Parser                                                      = function (lexer, $filter, options) {
      this.lexer = lexer, this.$filter = $filter, this.options = options, this.ast = new AST(lexer, options), this.astCompiler = options.csp ? new ASTInterpreter(this.ast, $filter) : new ASTCompiler(this.ast, $filter)
    };
    Parser.prototype                                                = {
      constructor: Parser, parse: function (text) {
        return this.astCompiler.compile(text, this.options.expensiveChecks)
      }
    };
    var objectValueOf                                               = Object.prototype.valueOf, $sceMinErr = minErr("$sce"),
        SCE_CONTEXTS                                                = {HTML: "html", CSS: "css", URL: "url", RESOURCE_URL: "resourceUrl", JS: "js"},
        $templateRequestMinErr = minErr("$compile"), urlParsingNode = window.document.createElement("a"),
        originUrl                                                   = urlResolve(window.location.href);
    $$CookieReader.$inject = ["$document"], $FilterProvider.$inject = ["$provide"];
    var MAX_DIGITS = 22, DECIMAL_SEP = ".", ZERO_CHAR = "0";
    currencyFilter.$inject = ["$locale"], numberFilter.$inject = ["$locale"];
    var DATE_FORMATS                                          = {
          yyyy: dateGetter("FullYear", 4, 0, !1, !0),
          yy:   dateGetter("FullYear", 2, 0, !0, !0),
          y:    dateGetter("FullYear", 1, 0, !1, !0),
          MMMM: dateStrGetter("Month"),
          MMM:  dateStrGetter("Month", !0),
          MM:   dateGetter("Month", 2, 1),
          M:    dateGetter("Month", 1, 1),
          LLLL: dateStrGetter("Month", !1, !0),
          dd:   dateGetter("Date", 2),
          d:    dateGetter("Date", 1),
          HH:   dateGetter("Hours", 2),
          H:    dateGetter("Hours", 1),
          hh:   dateGetter("Hours", 2, -12),
          h:    dateGetter("Hours", 1, -12),
          mm:   dateGetter("Minutes", 2),
          m:    dateGetter("Minutes", 1),
          ss:   dateGetter("Seconds", 2),
          s:    dateGetter("Seconds", 1),
          sss:  dateGetter("Milliseconds", 3),
          EEEE: dateStrGetter("Day"),
          EEE:  dateStrGetter("Day", !0),
          a:    ampmGetter,
          Z:    timeZoneGetter,
          ww:   weekGetter(2),
          w:    weekGetter(1),
          G:    eraGetter,
          GG:   eraGetter,
          GGG:  eraGetter,
          GGGG: longEraGetter
        },
        DATE_FORMATS_SPLIT                                    = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
        NUMBER_STRING                                         = /^\-?\d+$/;
    dateFilter.$inject                                        = ["$locale"];
    var lowercaseFilter = valueFn(lowercase), uppercaseFilter = valueFn(uppercase);
    orderByFilter.$inject                                     = ["$parse"];
    var htmlAnchorDirective                                   = valueFn({
      restrict: "E", compile: function (element, attr) {
        if (!attr.href && !attr.xlinkHref) return function (scope, element) {
          if ("a" === element[0].nodeName.toLowerCase()) {
            var href = "[object SVGAnimatedString]" === toString.call(element.prop("href")) ? "xlink:href" : "href";
            element.on("click", function (event) {
              element.attr(href) || event.preventDefault()
            })
          }
        }
      }
    }), ngAttributeAliasDirectives                            = {};
    forEach(BOOLEAN_ATTR, function (propName, attrName) {
      function defaultLinkFn(scope, element, attr) {
        scope.$watch(attr[normalized], function (value) {
          attr.$set(attrName, !!value)
        })
      }

      if ("multiple" != propName) {
        var normalized = directiveNormalize("ng-" + attrName), linkFn = defaultLinkFn;
        "checked" === propName && (linkFn = function (scope, element, attr) {
          attr.ngModel !== attr[normalized] && defaultLinkFn(scope, element, attr)
        }), ngAttributeAliasDirectives[normalized] = function () {
          return {restrict: "A", priority: 100, link: linkFn}
        }
      }
    }), forEach(ALIASED_ATTR, function (htmlAttr, ngAttr) {
      ngAttributeAliasDirectives[ngAttr] = function () {
        return {
          priority: 100, link: function (scope, element, attr) {
            if ("ngPattern" === ngAttr && "/" == attr.ngPattern.charAt(0)) {
              var match = attr.ngPattern.match(REGEX_STRING_REGEXP);
              if (match) return void attr.$set("ngPattern", new RegExp(match[1], match[2]))
            }
            scope.$watch(attr[ngAttr], function (value) {
              attr.$set(ngAttr, value)
            })
          }
        }
      }
    }), forEach(["src", "srcset", "href"], function (attrName) {
      var normalized                         = directiveNormalize("ng-" + attrName);
      ngAttributeAliasDirectives[normalized] = function () {
        return {
          priority: 99, link: function (scope, element, attr) {
            var propName = attrName, name = attrName;
            "href" === attrName && "[object SVGAnimatedString]" === toString.call(element.prop("href")) && (name = "xlinkHref", attr.$attr[name] = "xlink:href", propName = null), attr.$observe(normalized, function (value) {
              if (!value) return void("href" === attrName && attr.$set(name, null));
              attr.$set(name, value), msie && propName && element.prop(propName, attr[name])
            })
          }
        }
      }
    });
    var nullFormCtrl                                                                    = {
      $addControl:     noop,
      $$renameControl: nullFormRenameControl,
      $removeControl:  noop,
      $setValidity:    noop,
      $setDirty:       noop,
      $setPristine:    noop,
      $setSubmitted:   noop
    }, SUBMITTED_CLASS                                                                  = "ng-submitted";
    FormController.$inject                                                              = ["$element", "$attrs", "$scope", "$animate", "$interpolate"];
    var formDirectiveFactory                                                            = function (isNgForm) {
          return ["$timeout", "$parse", function ($timeout, $parse) {
            function getSetter(expression) {
              return "" === expression ? $parse('this[""]').assign : $parse(expression).assign || noop
            }

            return {
              name:       "form",
              restrict:   isNgForm ? "EAC" : "E",
              require:    ["form", "^^?form"],
              controller: FormController,
              compile:    function (formElement, attr) {
                formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);
                var nameAttr = attr.name ? "name" : !(!isNgForm || !attr.ngForm) && "ngForm";
                return {
                  pre: function (scope, formElement, attr, ctrls) {
                    var controller = ctrls[0];
                    if (!("action" in attr)) {
                      var handleFormSubmission = function (event) {
                        scope.$apply(function () {
                          controller.$commitViewValue(), controller.$setSubmitted()
                        }), event.preventDefault()
                      };
                      addEventListenerFn(formElement[0], "submit", handleFormSubmission), formElement.on("$destroy", function () {
                        $timeout(function () {
                          removeEventListenerFn(formElement[0], "submit", handleFormSubmission)
                        }, 0, !1)
                      })
                    }
                    (ctrls[1] || controller.$$parentForm).$addControl(controller);
                    var setter = nameAttr ? getSetter(controller.$name) : noop;
                    nameAttr && (setter(scope, controller), attr.$observe(nameAttr, function (newValue) {
                      controller.$name !== newValue && (setter(scope, void 0), controller.$$parentForm.$$renameControl(controller, newValue), (setter = getSetter(controller.$name))(scope, controller))
                    })), formElement.on("$destroy", function () {
                      controller.$$parentForm.$removeControl(controller), setter(scope, void 0), extend(controller, nullFormCtrl)
                    })
                  }
                }
              }
            }
          }]
        }, formDirective                                                                = formDirectiveFactory(), ngFormDirective                      = formDirectiveFactory(!0),
        ISO_DATE_REGEXP                                                                 = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
        URL_REGEXP                                                                      = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,
        EMAIL_REGEXP                                                                    = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
        NUMBER_REGEXP                                                                   = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,
        DATE_REGEXP                                                                     = /^(\d{4,})-(\d{2})-(\d{2})$/,
        DATETIMELOCAL_REGEXP                                                            = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        WEEK_REGEXP                                                                     = /^(\d{4,})-W(\d\d)$/, MONTH_REGEXP                                = /^(\d{4,})-(\d\d)$/,
        TIME_REGEXP                                                                     = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        PARTIAL_VALIDATION_EVENTS = "keydown wheel mousedown", PARTIAL_VALIDATION_TYPES = createMap();
    forEach("date,datetime-local,month,time,week".split(","), function (type) {
      PARTIAL_VALIDATION_TYPES[type] = !0
    });
    var inputType                                                          = {
          text:             textInputType,
          date:             createDateInputType("date", DATE_REGEXP, createDateParser(DATE_REGEXP, ["yyyy", "MM", "dd"]), "yyyy-MM-dd"),
          "datetime-local": createDateInputType("datetimelocal", DATETIMELOCAL_REGEXP, createDateParser(DATETIMELOCAL_REGEXP, ["yyyy", "MM", "dd", "HH", "mm", "ss", "sss"]), "yyyy-MM-ddTHH:mm:ss.sss"),
          time:             createDateInputType("time", TIME_REGEXP, createDateParser(TIME_REGEXP, ["HH", "mm", "ss", "sss"]), "HH:mm:ss.sss"),
          week:             createDateInputType("week", WEEK_REGEXP, weekParser, "yyyy-Www"),
          month:            createDateInputType("month", MONTH_REGEXP, createDateParser(MONTH_REGEXP, ["yyyy", "MM"]), "yyyy-MM"),
          number:           numberInputType,
          url:              urlInputType,
          email:            emailInputType,
          radio:            radioInputType,
          checkbox:         checkboxInputType,
          hidden:           noop,
          button:           noop,
          submit:           noop,
          reset:            noop,
          file:             noop
        },
        inputDirective                                                     = ["$browser", "$sniffer", "$filter", "$parse", function ($browser, $sniffer, $filter, $parse) {
          return {
            restrict: "E", require: ["?ngModel"], link: {
              pre: function (scope, element, attr, ctrls) {
                ctrls[0] && (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrls[0], $sniffer, $browser, $filter, $parse)
              }
            }
          }
        }], CONSTANT_VALUE_REGEXP                                          = /^(true|false|\d+)$/, ngValueDirective = function () {
          return {
            restrict: "A", priority: 100, compile: function (tpl, tplAttr) {
              return CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue) ? function (scope, elm, attr) {
                attr.$set("value", scope.$eval(attr.ngValue))
              } : function (scope, elm, attr) {
                scope.$watch(attr.ngValue, function (value) {
                  attr.$set("value", value)
                })
              }
            }
          }
        }, ngBindDirective                                                 = ["$compile", function ($compile) {
          return {
            restrict: "AC", compile: function (templateElement) {
              return $compile.$$addBindingClass(templateElement), function (scope, element, attr) {
                $compile.$$addBindingInfo(element, attr.ngBind), element = element[0], scope.$watch(attr.ngBind, function (value) {
                  element.textContent = isUndefined(value) ? "" : value
                })
              }
            }
          }
        }], ngBindTemplateDirective                                        = ["$interpolate", "$compile", function ($interpolate, $compile) {
          return {
            compile: function (templateElement) {
              return $compile.$$addBindingClass(templateElement), function (scope, element, attr) {
                var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
                $compile.$$addBindingInfo(element, interpolateFn.expressions), element = element[0], attr.$observe("ngBindTemplate", function (value) {
                  element.textContent = isUndefined(value) ? "" : value
                })
              }
            }
          }
        }], ngBindHtmlDirective                                            = ["$sce", "$parse", "$compile", function ($sce, $parse, $compile) {
          return {
            restrict: "A", compile: function (tElement, tAttrs) {
              var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml),
                  ngBindHtmlWatch  = $parse(tAttrs.ngBindHtml, function (value) {
                    return (value || "").toString()
                  });
              return $compile.$$addBindingClass(tElement), function (scope, element, attr) {
                $compile.$$addBindingInfo(element, attr.ngBindHtml), scope.$watch(ngBindHtmlWatch, function () {
                  element.html($sce.getTrustedHtml(ngBindHtmlGetter(scope)) || "")
                })
              }
            }
          }
        }], ngChangeDirective                                              = valueFn({
          restrict: "A",
          require:  "ngModel",
          link:     function (scope, element, attr, ctrl) {
            ctrl.$viewChangeListeners.push(function () {
              scope.$eval(attr.ngChange)
            })
          }
        }), ngClassDirective = classDirective("", !0), ngClassOddDirective = classDirective("Odd", 0),
        ngClassEvenDirective                                               = classDirective("Even", 1), ngCloakDirective = ngDirective({
          compile: function (element, attr) {
            attr.$set("ngCloak", void 0), element.removeClass("ng-cloak")
          }
        }), ngControllerDirective                                          = [function () {
          return {restrict: "A", scope: !0, controller: "@", priority: 500}
        }], ngEventDirectives                                              = {}, forceAsyncEvents                       = {blur: !0, focus: !0};
    forEach("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function (eventName) {
      var directiveName                = directiveNormalize("ng-" + eventName);
      ngEventDirectives[directiveName] = ["$parse", "$rootScope", function ($parse, $rootScope) {
        return {
          restrict: "A", compile: function ($element, attr) {
            var fn = $parse(attr[directiveName], null, !0);
            return function (scope, element) {
              element.on(eventName, function (event) {
                var callback = function () {
                  fn(scope, {$event: event})
                };
                forceAsyncEvents[eventName] && $rootScope.$$phase ? scope.$evalAsync(callback) : scope.$apply(callback)
              })
            }
          }
        }
      }]
    });
    var ngIfDirective                                                                  = ["$animate", "$compile", function ($animate, $compile) {
          return {
            multiElement: !0,
            transclude:   "element",
            priority:     600,
            terminal:     !0,
            restrict:     "A",
            $$tlb:        !0,
            link:         function ($scope, $element, $attr, ctrl, $transclude) {
              var block, childScope, previousElements;
              $scope.$watch($attr.ngIf, function (value) {
                value ? childScope || $transclude(function (clone, newScope) {
                  childScope = newScope, clone[clone.length++] = $compile.$$createComment("end ngIf", $attr.ngIf), block = {clone: clone}, $animate.enter(clone, $element.parent(), $element)
                }) : (previousElements && (previousElements.remove(), previousElements = null), childScope && (childScope.$destroy(), childScope = null), block && (previousElements = getBlockNodes(block.clone), $animate.leave(previousElements).then(function () {
                  previousElements = null
                }), block = null))
              })
            }
          }
        }],
        ngIncludeDirective                                                             = ["$templateRequest", "$anchorScroll", "$animate", function ($templateRequest, $anchorScroll, $animate) {
          return {
            restrict:   "ECA",
            priority:   400,
            terminal:   !0,
            transclude: "element",
            controller: angular.noop,
            compile:    function (element, attr) {
              var srcExp = attr.ngInclude || attr.src, onloadExp = attr.onload || "", autoScrollExp = attr.autoscroll;
              return function (scope, $element, $attr, ctrl, $transclude) {
                var currentScope, previousElement, currentElement, changeCounter = 0,
                    cleanupLastIncludeContent                                    = function () {
                      previousElement && (previousElement.remove(), previousElement = null), currentScope && (currentScope.$destroy(), currentScope = null), currentElement && ($animate.leave(currentElement).then(function () {
                        previousElement = null
                      }), previousElement = currentElement, currentElement = null)
                    };
                scope.$watch(srcExp, function (src) {
                  var afterAnimation = function () {
                    !isDefined(autoScrollExp) || autoScrollExp && !scope.$eval(autoScrollExp) || $anchorScroll()
                  }, thisChangeId    = ++changeCounter;
                  src ? ($templateRequest(src, !0).then(function (response) {
                    if (!scope.$$destroyed && thisChangeId === changeCounter) {
                      var newScope  = scope.$new();
                      ctrl.template = response;
                      var clone     = $transclude(newScope, function (clone) {
                        cleanupLastIncludeContent(), $animate.enter(clone, null, $element).then(afterAnimation)
                      });
                      currentScope = newScope, currentElement = clone, currentScope.$emit("$includeContentLoaded", src), scope.$eval(onloadExp)
                    }
                  }, function () {
                    scope.$$destroyed || thisChangeId === changeCounter && (cleanupLastIncludeContent(), scope.$emit("$includeContentError", src))
                  }), scope.$emit("$includeContentRequested", src)) : (cleanupLastIncludeContent(), ctrl.template = null)
                })
              }
            }
          }
        }], ngIncludeFillContentDirective                                              = ["$compile", function ($compile) {
          return {
            restrict: "ECA", priority: -400, require: "ngInclude", link: function (scope, $element, $attr, ctrl) {
              if (toString.call($element[0]).match(/SVG/)) return $element.empty(), void $compile(jqLiteBuildFragment(ctrl.template, window.document).childNodes)(scope, function (clone) {
                $element.append(clone)
              }, {futureParentElement: $element});
              $element.html(ctrl.template), $compile($element.contents())(scope)
            }
          }
        }], ngInitDirective                                                            = ngDirective({
          priority: 450, compile: function () {
            return {
              pre: function (scope, element, attrs) {
                scope.$eval(attrs.ngInit)
              }
            }
          }
        }), ngListDirective                                                            = function () {
          return {
            restrict: "A", priority: 100, require: "ngModel",
            link:     function (scope, element, attr, ctrl) {
              var ngList = element.attr(attr.$attr.ngList) || ", ", trimValues = "false" !== attr.ngTrim,
                  separator                                                    = trimValues ? trim(ngList) : ngList, parse = function (viewValue) {
                    if (!isUndefined(viewValue)) {
                      var list = [];
                      return viewValue && forEach(viewValue.split(separator), function (value) {
                        value && list.push(trimValues ? trim(value) : value)
                      }), list
                    }
                  };
              ctrl.$parsers.push(parse), ctrl.$formatters.push(function (value) {
                if (isArray(value)) return value.join(ngList)
              }), ctrl.$isEmpty = function (value) {
                return !value || !value.length
              }
            }
          }
        }, VALID_CLASS                                                                 = "ng-valid", INVALID_CLASS = "ng-invalid", PRISTINE_CLASS = "ng-pristine",
        DIRTY_CLASS                                                                    = "ng-dirty", PENDING_CLASS                                        = "ng-pending", ngModelMinErr = minErr("ngModel"),
        NgModelController                                                              = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$rootScope", "$q", "$interpolate", function ($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $rootScope, $q, $interpolate) {
          this.$viewValue = Number.NaN, this.$modelValue = Number.NaN, this.$$rawModelValue = void 0, this.$validators = {}, this.$asyncValidators = {}, this.$parsers = [], this.$formatters = [], this.$viewChangeListeners = [], this.$untouched = !0, this.$touched = !1, this.$pristine = !0, this.$dirty = !1, this.$valid = !0, this.$invalid = !1, this.$error = {}, this.$$success = {}, this.$pending = void 0, this.$name = $interpolate($attr.name || "", !1)($scope), this.$$parentForm = nullFormCtrl;
          var parserValid, parsedNgModel                                                    = $parse($attr.ngModel), parsedNgModelAssign = parsedNgModel.assign,
              ngModelGet = parsedNgModel, ngModelSet = parsedNgModelAssign, pendingDebounce = null,
              ctrl                                                                          = this;
          this.$$setOptions = function (options) {
            if (ctrl.$options = options, options && options.getterSetter) {
              var invokeModelGetter = $parse($attr.ngModel + "()"),
                  invokeModelSetter = $parse($attr.ngModel + "($$$p)");
              ngModelGet = function ($scope) {
                var modelValue = parsedNgModel($scope);
                return isFunction(modelValue) && (modelValue = invokeModelGetter($scope)), modelValue
              }, ngModelSet = function ($scope, newValue) {
                isFunction(parsedNgModel($scope)) ? invokeModelSetter($scope, {$$$p: newValue}) : parsedNgModelAssign($scope, newValue)
              }
            } else if (!parsedNgModel.assign) throw ngModelMinErr("nonassign", "Expression '{0}' is non-assignable. Element: {1}", $attr.ngModel, startingTag($element))
          }, this.$render = noop, this.$isEmpty = function (value) {
            return isUndefined(value) || "" === value || null === value || value !== value
          }, this.$$updateEmptyClasses = function (value) {
            ctrl.$isEmpty(value) ? ($animate.removeClass($element, "ng-not-empty"), $animate.addClass($element, "ng-empty")) : ($animate.removeClass($element, "ng-empty"), $animate.addClass($element, "ng-not-empty"))
          };
          var currentValidationRunId = 0;
          addSetValidityMethod({
            ctrl:        this, $element: $element, set: function (object, property) {
              object[property] = !0
            }, unset:    function (object, property) {
              delete object[property]
            }, $animate: $animate
          }), this.$setPristine = function () {
            ctrl.$dirty = !1, ctrl.$pristine = !0, $animate.removeClass($element, DIRTY_CLASS), $animate.addClass($element, PRISTINE_CLASS)
          }, this.$setDirty = function () {
            ctrl.$dirty = !0, ctrl.$pristine = !1, $animate.removeClass($element, PRISTINE_CLASS), $animate.addClass($element, DIRTY_CLASS), ctrl.$$parentForm.$setDirty()
          }, this.$setUntouched = function () {
            ctrl.$touched = !1, ctrl.$untouched = !0, $animate.setClass($element, "ng-untouched", "ng-touched")
          }, this.$setTouched = function () {
            ctrl.$touched = !0, ctrl.$untouched = !1, $animate.setClass($element, "ng-touched", "ng-untouched")
          }, this.$rollbackViewValue = function () {
            $timeout.cancel(pendingDebounce), ctrl.$viewValue = ctrl.$$lastCommittedViewValue, ctrl.$render()
          }, this.$validate = function () {
            if (!isNumber(ctrl.$modelValue) || !isNaN(ctrl.$modelValue)) {
              var viewValue = ctrl.$$lastCommittedViewValue, modelValue = ctrl.$$rawModelValue,
                  prevValid                                             = ctrl.$valid, prevModelValue               = ctrl.$modelValue,
                  allowInvalid                                          = ctrl.$options && ctrl.$options.allowInvalid;
              ctrl.$$runValidators(modelValue, viewValue, function (allValid) {
                allowInvalid || prevValid === allValid || (ctrl.$modelValue = allValid ? modelValue : void 0, ctrl.$modelValue !== prevModelValue && ctrl.$$writeModelToScope())
              })
            }
          }, this.$$runValidators = function (modelValue, viewValue, doneCallback) {
            function setValidity(name, isValid) {
              localValidationRunId === currentValidationRunId && ctrl.$setValidity(name, isValid)
            }

            function validationDone(allValid) {
              localValidationRunId === currentValidationRunId && doneCallback(allValid)
            }

            currentValidationRunId++;
            var localValidationRunId = currentValidationRunId;
            return function () {
              var errorKey = ctrl.$$parserName || "parse";
              return isUndefined(parserValid) ? (setValidity(errorKey, null), !0) : (parserValid || (forEach(ctrl.$validators, function (v, name) {
                setValidity(name, null)
              }), forEach(ctrl.$asyncValidators, function (v, name) {
                setValidity(name, null)
              })), setValidity(errorKey, parserValid), parserValid)
            }() && function () {
              var syncValidatorsValid = !0;
              return forEach(ctrl.$validators, function (validator, name) {
                var result = validator(modelValue, viewValue);
                syncValidatorsValid = syncValidatorsValid && result, setValidity(name, result)
              }), !!syncValidatorsValid || (forEach(ctrl.$asyncValidators, function (v, name) {
                setValidity(name, null)
              }), !1)
            }() ? void function () {
              var validatorPromises = [], allValid = !0;
              forEach(ctrl.$asyncValidators, function (validator, name) {
                var promise = validator(modelValue, viewValue);
                if (!isPromiseLike(promise)) throw ngModelMinErr("nopromise", "Expected asynchronous validator to return a promise but got '{0}' instead.", promise);
                setValidity(name, void 0), validatorPromises.push(promise.then(function () {
                  setValidity(name, !0)
                }, function () {
                  allValid = !1, setValidity(name, !1)
                }))
              }), validatorPromises.length ? $q.all(validatorPromises).then(function () {
                validationDone(allValid)
              }, noop) : validationDone(!0)
            }() : void validationDone(!1)
          }, this.$commitViewValue = function () {
            var viewValue = ctrl.$viewValue;
            $timeout.cancel(pendingDebounce), (ctrl.$$lastCommittedViewValue !== viewValue || "" === viewValue && ctrl.$$hasNativeValidators) && (ctrl.$$updateEmptyClasses(viewValue), ctrl.$$lastCommittedViewValue = viewValue, ctrl.$pristine && this.$setDirty(), this.$$parseAndValidate())
          }, this.$$parseAndValidate = function () {
            function writeToModelIfNeeded() {
              ctrl.$modelValue !== prevModelValue && ctrl.$$writeModelToScope()
            }

            var viewValue = ctrl.$$lastCommittedViewValue, modelValue = viewValue;
            if (parserValid = !isUndefined(modelValue) || void 0) for (var i = 0; i < ctrl.$parsers.length; i++) if (modelValue = ctrl.$parsers[i](modelValue), isUndefined(modelValue)) {
              parserValid = !1;
              break
            }
            isNumber(ctrl.$modelValue) && isNaN(ctrl.$modelValue) && (ctrl.$modelValue = ngModelGet($scope));
            var prevModelValue = ctrl.$modelValue, allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;
            ctrl.$$rawModelValue = modelValue, allowInvalid && (ctrl.$modelValue = modelValue, writeToModelIfNeeded()), ctrl.$$runValidators(modelValue, ctrl.$$lastCommittedViewValue, function (allValid) {
              allowInvalid || (ctrl.$modelValue = allValid ? modelValue : void 0, writeToModelIfNeeded())
            })
          }, this.$$writeModelToScope = function () {
            ngModelSet($scope, ctrl.$modelValue), forEach(ctrl.$viewChangeListeners, function (listener) {
              try {
                listener()
              } catch (e) {
                $exceptionHandler(e)
              }
            })
          }, this.$setViewValue = function (value, trigger) {
            ctrl.$viewValue = value, ctrl.$options && !ctrl.$options.updateOnDefault || ctrl.$$debounceViewValueCommit(trigger)
          }, this.$$debounceViewValueCommit = function (trigger) {
            var debounce, debounceDelay = 0, options = ctrl.$options;
            options && isDefined(options.debounce) && (debounce = options.debounce, isNumber(debounce) ? debounceDelay = debounce : isNumber(debounce[trigger]) ? debounceDelay = debounce[trigger] : isNumber(debounce.default) && (debounceDelay = debounce.default)), $timeout.cancel(pendingDebounce), debounceDelay ? pendingDebounce = $timeout(function () {
              ctrl.$commitViewValue()
            }, debounceDelay) : $rootScope.$$phase ? ctrl.$commitViewValue() : $scope.$apply(function () {
              ctrl.$commitViewValue()
            })
          }, $scope.$watch(function () {
            var modelValue = ngModelGet($scope);
            if (modelValue !== ctrl.$modelValue && (ctrl.$modelValue === ctrl.$modelValue || modelValue === modelValue)) {
              ctrl.$modelValue = ctrl.$$rawModelValue = modelValue, parserValid = void 0;
              for (var formatters = ctrl.$formatters, idx = formatters.length, viewValue = modelValue; idx--;) viewValue = formatters[idx](viewValue);
              ctrl.$viewValue !== viewValue && (ctrl.$$updateEmptyClasses(viewValue), ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue, ctrl.$render(), ctrl.$$runValidators(modelValue, viewValue, noop))
            }
            return modelValue
          })
        }], ngModelDirective                                                           = ["$rootScope", function ($rootScope) {
          return {
            restrict:   "A",
            require:    ["ngModel", "^?form", "^?ngModelOptions"],
            controller: NgModelController,
            priority:   1,
            compile:    function (element) {
              return element.addClass(PRISTINE_CLASS).addClass("ng-untouched").addClass(VALID_CLASS), {
                pre:  function (scope, element, attr, ctrls) {
                  var modelCtrl = ctrls[0], formCtrl = ctrls[1] || modelCtrl.$$parentForm;
                  modelCtrl.$$setOptions(ctrls[2] && ctrls[2].$options), formCtrl.$addControl(modelCtrl), attr.$observe("name", function (newValue) {
                    modelCtrl.$name !== newValue && modelCtrl.$$parentForm.$$renameControl(modelCtrl, newValue)
                  }), scope.$on("$destroy", function () {
                    modelCtrl.$$parentForm.$removeControl(modelCtrl)
                  })
                },
                post: function (scope, element, attr, ctrls) {
                  var modelCtrl = ctrls[0];
                  modelCtrl.$options && modelCtrl.$options.updateOn && element.on(modelCtrl.$options.updateOn, function (ev) {
                    modelCtrl.$$debounceViewValueCommit(ev && ev.type)
                  }), element.on("blur", function () {
                    modelCtrl.$touched || ($rootScope.$$phase ? scope.$evalAsync(modelCtrl.$setTouched) : scope.$apply(modelCtrl.$setTouched))
                  })
                }
              }
            }
          }
        }], DEFAULT_REGEXP                                                             = /(\s+|^)default(\s+|$)/, ngModelOptionsDirective          = function () {
          return {
            restrict: "A", controller: ["$scope", "$attrs", function ($scope, $attrs) {
              var that = this;
              this.$options = copy($scope.$eval($attrs.ngModelOptions)), isDefined(this.$options.updateOn) ? (this.$options.updateOnDefault = !1, this.$options.updateOn = trim(this.$options.updateOn.replace(DEFAULT_REGEXP, function () {
                return that.$options.updateOnDefault = !0, " "
              }))) : this.$options.updateOnDefault = !0
            }]
          }
        }, ngNonBindableDirective                                                      = ngDirective({terminal: !0, priority: 1e3}),
        ngOptionsMinErr                                                                = minErr("ngOptions"),
        NG_OPTIONS_REGEXP                                                              = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
        ngOptionsDirective                                                             = ["$compile", "$document", "$parse", function ($compile, $document, $parse) {
          function parseOptionsExpression(optionsExp, selectElement, scope) {
            function Option(selectValue, viewValue, label, group, disabled) {
              this.selectValue = selectValue, this.viewValue = viewValue, this.label = label, this.group = group, this.disabled = disabled
            }

            function getOptionValuesKeys(optionValues) {
              var optionValuesKeys;
              if (!keyName && isArrayLike(optionValues)) optionValuesKeys = optionValues; else {
                optionValuesKeys = [];
                for (var itemKey in optionValues) optionValues.hasOwnProperty(itemKey) && "$" !== itemKey.charAt(0) && optionValuesKeys.push(itemKey)
              }
              return optionValuesKeys
            }

            var match = optionsExp.match(NG_OPTIONS_REGEXP);
            if (!match) throw ngOptionsMinErr("iexp", "Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_' but got '{0}'. Element: {1}", optionsExp, startingTag(selectElement));
            var valueName                                                                   = match[5] || match[7], keyName = match[6], selectAs = / as /.test(match[0]) && match[1],
                trackBy                                                                     = match[9], valueFn = $parse(match[2] ? match[1] : valueName),
                selectAsFn                                                                  = selectAs && $parse(selectAs), viewValueFn                      = selectAsFn || valueFn,
                trackByFn                                                                   = trackBy && $parse(trackBy), getTrackByValueFn                   = trackBy ? function (value, locals) {
                  return trackByFn(scope, locals)
                } : function (value) {
                  return hashKey(value)
                }, getTrackByValue                                                          = function (value, key) {
                  return getTrackByValueFn(value, getLocals(value, key))
                }, displayFn                                                                = $parse(match[2] || match[1]), groupByFn                      = $parse(match[3] || ""),
                disableWhenFn = $parse(match[4] || ""), valuesFn = $parse(match[8]), locals = {},
                getLocals                                                                   = keyName ? function (value, key) {
                  return locals[keyName] = key, locals[valueName] = value, locals
                } : function (value) {
                  return locals[valueName] = value, locals
                };
            return {
              trackBy:         trackBy,
              getTrackByValue: getTrackByValue,
              getWatchables:   $parse(valuesFn, function (optionValues) {
                var watchedArray = [];
                optionValues     = optionValues || [];
                for (var optionValuesKeys = getOptionValuesKeys(optionValues), optionValuesLength = optionValuesKeys.length, index = 0; index < optionValuesLength; index++) {
                  var key                               = optionValues === optionValuesKeys ? index : optionValuesKeys[index],
                      value = optionValues[key], locals = getLocals(value, key),
                      selectValue                       = getTrackByValueFn(value, locals);
                  if (watchedArray.push(selectValue), match[2] || match[1]) {
                    var label = displayFn(scope, locals);
                    watchedArray.push(label)
                  }
                  if (match[4]) {
                    var disableWhen = disableWhenFn(scope, locals);
                    watchedArray.push(disableWhen)
                  }
                }
                return watchedArray
              }),
              getOptions:      function () {
                for (var optionItems = [], selectValueMap = {}, optionValues = valuesFn(scope) || [], optionValuesKeys = getOptionValuesKeys(optionValues), optionValuesLength = optionValuesKeys.length, index = 0; index < optionValuesLength; index++) {
                  var key                                                 = optionValues === optionValuesKeys ? index : optionValuesKeys[index],
                      value                                               = optionValues[key], locals = getLocals(value, key),
                      viewValue = viewValueFn(scope, locals), selectValue = getTrackByValueFn(viewValue, locals),
                      label                                               = displayFn(scope, locals), group             = groupByFn(scope, locals),
                      disabled                                            = disableWhenFn(scope, locals),
                      optionItem                                          = new Option(selectValue, viewValue, label, group, disabled);
                  optionItems.push(optionItem), selectValueMap[selectValue] = optionItem
                }
                return {
                  items:                  optionItems,
                  selectValueMap:         selectValueMap,
                  getOptionFromViewValue: function (value) {
                    return selectValueMap[getTrackByValue(value)]
                  },
                  getViewValueFromOption: function (option) {
                    return trackBy ? angular.copy(option.viewValue) : option.viewValue
                  }
                }
              }
            }
          }

          function ngOptionsPostLink(scope, selectElement, attr, ctrls) {
            function addOptionElement(option, parent) {
              var optionElement = optionTemplate.cloneNode(!1);
              parent.appendChild(optionElement), updateOptionElement(option, optionElement)
            }

            function updateOptionElement(option, element) {
              option.element = element, element.disabled = option.disabled, option.label !== element.label && (element.label = option.label, element.textContent = option.label), option.value !== element.value && (element.value = option.selectValue)
            }

            function updateOptions() {
              var previousValue = options && selectCtrl.readValue();
              if (options) for (var i = options.items.length - 1; i >= 0; i--) {
                var option = options.items[i];
                jqLiteRemove(option.group ? option.element.parentNode : option.element)
              }
              options             = ngOptions.getOptions();
              var groupElementMap = {};
              if (providedEmptyOption && selectElement.prepend(emptyOption), options.items.forEach(function (option) {
                  var groupElement;
                  isDefined(option.group) ? (groupElement = groupElementMap[option.group], groupElement || (groupElement = optGroupTemplate.cloneNode(!1), listFragment.appendChild(groupElement), groupElement.label = option.group, groupElementMap[option.group] = groupElement), addOptionElement(option, groupElement)) : addOptionElement(option, listFragment)
                }), selectElement[0].appendChild(listFragment), ngModelCtrl.$render(), !ngModelCtrl.$isEmpty(previousValue)) {
                var nextValue = selectCtrl.readValue();
                (ngOptions.trackBy || multiple ? equals(previousValue, nextValue) : previousValue === nextValue) || (ngModelCtrl.$setViewValue(nextValue), ngModelCtrl.$render())
              }
            }

            for (var emptyOption, selectCtrl = ctrls[0], ngModelCtrl = ctrls[1], multiple = attr.multiple, i = 0, children = selectElement.children(), ii = children.length; i < ii; i++) if ("" === children[i].value) {
              emptyOption = children.eq(i);
              break
            }
            var providedEmptyOption = !!emptyOption, unknownOption = jqLite(optionTemplate.cloneNode(!1));
            unknownOption.val("?");
            var options, ngOptions                                                      = parseOptionsExpression(attr.ngOptions, selectElement, scope),
                listFragment = $document[0].createDocumentFragment(), renderEmptyOption = function () {
                  providedEmptyOption || selectElement.prepend(emptyOption), selectElement.val(""), emptyOption.prop("selected", !0), emptyOption.attr("selected", !0)
                }, removeEmptyOption                                                    = function () {
                  providedEmptyOption || emptyOption.remove()
                }, renderUnknownOption                                                  = function () {
                  selectElement.prepend(unknownOption), selectElement.val("?"), unknownOption.prop("selected", !0), unknownOption.attr("selected", !0)
                }, removeUnknownOption                                                  = function () {
                  unknownOption.remove()
                };
            multiple ? (ngModelCtrl.$isEmpty = function (value) {
              return !value || 0 === value.length
            }, selectCtrl.writeValue = function (value) {
              options.items.forEach(function (option) {
                option.element.selected = !1
              }), value && value.forEach(function (item) {
                var option = options.getOptionFromViewValue(item);
                option && (option.element.selected = !0)
              })
            }, selectCtrl.readValue = function () {
              var selectedValues = selectElement.val() || [], selections = [];
              return forEach(selectedValues, function (value) {
                var option = options.selectValueMap[value];
                option && !option.disabled && selections.push(options.getViewValueFromOption(option))
              }), selections
            }, ngOptions.trackBy && scope.$watchCollection(function () {
              if (isArray(ngModelCtrl.$viewValue)) return ngModelCtrl.$viewValue.map(function (value) {
                return ngOptions.getTrackByValue(value)
              })
            }, function () {
              ngModelCtrl.$render()
            })) : (selectCtrl.writeValue = function (value) {
              var option = options.getOptionFromViewValue(value);
              option ? (selectElement[0].value !== option.selectValue && (removeUnknownOption(), removeEmptyOption(), selectElement[0].value = option.selectValue, option.element.selected = !0), option.element.setAttribute("selected", "selected")) : null === value || providedEmptyOption ? (removeUnknownOption(), renderEmptyOption()) : (removeEmptyOption(), renderUnknownOption())
            }, selectCtrl.readValue = function () {
              var selectedOption = options.selectValueMap[selectElement.val()];
              return selectedOption && !selectedOption.disabled ? (removeEmptyOption(), removeUnknownOption(), options.getViewValueFromOption(selectedOption)) : null
            }, ngOptions.trackBy && scope.$watch(function () {
              return ngOptions.getTrackByValue(ngModelCtrl.$viewValue)
            }, function () {
              ngModelCtrl.$render()
            })), providedEmptyOption ? (emptyOption.remove(), $compile(emptyOption)(scope), emptyOption.removeClass("ng-scope")) : emptyOption = jqLite(optionTemplate.cloneNode(!1)), selectElement.empty(), updateOptions(), scope.$watchCollection(ngOptions.getWatchables, updateOptions)
          }

          var optionTemplate   = window.document.createElement("option"),
              optGroupTemplate = window.document.createElement("optgroup");
          return {
            restrict: "A",
            terminal: !0,
            require:  ["select", "ngModel"],
            link:     {
              pre:     function (scope, selectElement, attr, ctrls) {
                ctrls[0].registerOption = noop
              }, post: ngOptionsPostLink
            }
          }
        }], ngPluralizeDirective                                                       = ["$locale", "$interpolate", "$log", function ($locale, $interpolate, $log) {
          var BRACE = /{}/g, IS_WHEN = /^when(Minus)?(.+)$/;
          return {
            link: function (scope, element, attr) {
              function updateElementText(newText) {
                element.text(newText || "")
              }

              var lastCount, numberExp                                                                = attr.count, whenExp = attr.$attr.when && element.attr(attr.$attr.when),
                  offset                                                                              = attr.offset || 0, whens                                                    = scope.$eval(whenExp) || {}, whensExpFns = {},
                  startSymbol                                                                         = $interpolate.startSymbol(), endSymbol = $interpolate.endSymbol(),
                  braceReplacement = startSymbol + numberExp + "-" + offset + endSymbol, watchRemover = angular.noop;
              forEach(attr, function (expression, attributeName) {
                var tmpMatch = IS_WHEN.exec(attributeName);
                if (tmpMatch) {
                  var whenKey    = (tmpMatch[1] ? "-" : "") + lowercase(tmpMatch[2]);
                  whens[whenKey] = element.attr(attr.$attr[attributeName])
                }
              }), forEach(whens, function (expression, key) {
                whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement))
              }), scope.$watch(numberExp, function (newVal) {
                var count = parseFloat(newVal), countIsNaN = isNaN(count);
                if (countIsNaN || count in whens || (count = $locale.pluralCat(count - offset)), count !== lastCount && !(countIsNaN && isNumber(lastCount) && isNaN(lastCount))) {
                  watchRemover();
                  var whenExpFn = whensExpFns[count];
                  isUndefined(whenExpFn) ? (null != newVal && $log.debug("ngPluralize: no rule defined for '" + count + "' in " + whenExp), watchRemover = noop, updateElementText()) : watchRemover = scope.$watch(whenExpFn, updateElementText), lastCount = count
                }
              })
            }
          }
        }], ngRepeatDirective                                                          = ["$parse", "$animate", "$compile", function ($parse, $animate, $compile) {
          var ngRepeatMinErr   = minErr("ngRepeat"),
              updateScope      = function (scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {
                scope[valueIdentifier] = value, keyIdentifier && (scope[keyIdentifier] = key), scope.$index = index, scope.$first = 0 === index, scope.$last = index === arrayLength - 1, scope.$middle = !(scope.$first || scope.$last), scope.$odd = !(scope.$even = 0 == (1 & index))
              }, getBlockStart = function (block) {
                return block.clone[0]
              }, getBlockEnd   = function (block) {
                return block.clone[block.clone.length - 1]
              };
          return {
            restrict:     "A",
            multiElement: !0,
            transclude:   "element",
            priority:     1e3,
            terminal:     !0,
            $$tlb:        !0,
            compile:      function ($element, $attr) {
              var expression = $attr.ngRepeat, ngRepeatEndComment = $compile.$$createComment("end ngRepeat", expression),
                  match                                           = expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
              if (!match) throw ngRepeatMinErr("iexp", "Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.", expression);
              var lhs = match[1], rhs = match[2], aliasAs = match[3], trackByExp = match[4];
              if (!(match = lhs.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/))) throw ngRepeatMinErr("iidexp", "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.", lhs);
              var valueIdentifier = match[3] || match[1], keyIdentifier = match[2];
              if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))) throw ngRepeatMinErr("badident", "alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.", aliasAs);
              var trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn, hashFnLocals = {$id: hashKey};
              return trackByExp ? trackByExpGetter = $parse(trackByExp) : (trackByIdArrayFn = function (key, value) {
                return hashKey(value)
              }, trackByIdObjFn = function (key) {
                return key
              }), function ($scope, $element, $attr, ctrl, $transclude) {
                trackByExpGetter && (trackByIdExpFn = function (key, value, index) {
                  return keyIdentifier && (hashFnLocals[keyIdentifier] = key), hashFnLocals[valueIdentifier] = value, hashFnLocals.$index = index, trackByExpGetter($scope, hashFnLocals)
                });
                var lastBlockMap = createMap();
                $scope.$watchCollection(rhs, function (collection) {
                  var index, length, nextNode, collectionLength, key, value, trackById, trackByIdFn, collectionKeys, block,
                      nextBlockOrder, elementsToRemove, previousNode = $element[0], nextBlockMap = createMap();
                  if (aliasAs && ($scope[aliasAs] = collection), isArrayLike(collection)) collectionKeys = collection, trackByIdFn = trackByIdExpFn || trackByIdArrayFn; else {
                    trackByIdFn = trackByIdExpFn || trackByIdObjFn, collectionKeys = [];
                    for (var itemKey in collection) hasOwnProperty.call(collection, itemKey) && "$" !== itemKey.charAt(0) && collectionKeys.push(itemKey)
                  }
                  for (collectionLength = collectionKeys.length, nextBlockOrder = new Array(collectionLength), index = 0; index < collectionLength; index++) if (key = collection === collectionKeys ? index : collectionKeys[index], value = collection[key], trackById = trackByIdFn(key, value, index), lastBlockMap[trackById]) block = lastBlockMap[trackById], delete lastBlockMap[trackById], nextBlockMap[trackById] = block, nextBlockOrder[index] = block; else {
                    if (nextBlockMap[trackById]) throw forEach(nextBlockOrder, function (block) {
                      block && block.scope && (lastBlockMap[block.id] = block)
                    }), ngRepeatMinErr("dupes", "Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}", expression, trackById, value);
                    nextBlockOrder[index] = {id: trackById, scope: void 0, clone: void 0}, nextBlockMap[trackById] = !0
                  }
                  for (var blockKey in lastBlockMap) {
                    if (block = lastBlockMap[blockKey], elementsToRemove = getBlockNodes(block.clone), $animate.leave(elementsToRemove), elementsToRemove[0].parentNode) for (index = 0, length = elementsToRemove.length; index < length; index++) elementsToRemove[index].$$NG_REMOVED = !0;
                    block.scope.$destroy()
                  }
                  for (index = 0; index < collectionLength; index++) if (key = collection === collectionKeys ? index : collectionKeys[index], value = collection[key], block = nextBlockOrder[index], block.scope) {
                    nextNode = previousNode;
                    do {
                      nextNode = nextNode.nextSibling
                    } while (nextNode && nextNode.$$NG_REMOVED);
                    getBlockStart(block) != nextNode && $animate.move(getBlockNodes(block.clone), null, previousNode), previousNode = getBlockEnd(block), updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength)
                  } else $transclude(function (clone, scope) {
                    block.scope = scope;
                    var endNode = ngRepeatEndComment.cloneNode(!1);
                    clone[clone.length++] = endNode, $animate.enter(clone, null, previousNode), previousNode = endNode, block.clone = clone, nextBlockMap[block.id] = block, updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength)
                  });
                  lastBlockMap = nextBlockMap
                })
              }
            }
          }
        }], ngShowDirective                                                            = ["$animate", function ($animate) {
          return {
            restrict: "A", multiElement: !0, link: function (scope, element, attr) {
              scope.$watch(attr.ngShow, function (value) {
                $animate[value ? "removeClass" : "addClass"](element, "ng-hide", {tempClasses: "ng-hide-animate"})
              })
            }
          }
        }], ngHideDirective                                                            = ["$animate", function ($animate) {
          return {
            restrict: "A", multiElement: !0, link: function (scope, element, attr) {
              scope.$watch(attr.ngHide, function (value) {
                $animate[value ? "addClass" : "removeClass"](element, "ng-hide", {tempClasses: "ng-hide-animate"})
              })
            }
          }
        }], ngStyleDirective                                                           = ngDirective(function (scope, element, attr) {
          scope.$watch(attr.ngStyle, function (newStyles, oldStyles) {
            oldStyles && newStyles !== oldStyles && forEach(oldStyles, function (val, style) {
              element.css(style, "")
            }), newStyles && element.css(newStyles)
          }, !0)
        }), ngSwitchDirective                                                          = ["$animate", "$compile", function ($animate, $compile) {
          return {
            require: "ngSwitch", controller: ["$scope", function () {
              this.cases = {}
            }], link:                        function (scope, element, attr, ngSwitchController) {
              var watchExpr = attr.ngSwitch || attr.on, selectedTranscludes = [], selectedElements = [],
                  previousLeaveAnimations                                                          = [], selectedScopes = [], spliceFactory = function (array, index) {
                    return function () {
                      array.splice(index, 1)
                    }
                  };
              scope.$watch(watchExpr, function (value) {
                var i, ii;
                for (i = 0, ii = previousLeaveAnimations.length; i < ii; ++i) $animate.cancel(previousLeaveAnimations[i]);
                for (previousLeaveAnimations.length = 0, i = 0, ii = selectedScopes.length; i < ii; ++i) {
                  var selected = getBlockNodes(selectedElements[i].clone);
                  selectedScopes[i].$destroy();
                  (previousLeaveAnimations[i] = $animate.leave(selected)).then(spliceFactory(previousLeaveAnimations, i))
                }
                selectedElements.length = 0, selectedScopes.length = 0, (selectedTranscludes = ngSwitchController.cases["!" + value] || ngSwitchController.cases["?"]) && forEach(selectedTranscludes, function (selectedTransclude) {
                  selectedTransclude.transclude(function (caseElement, selectedScope) {
                    selectedScopes.push(selectedScope);
                    var anchor                        = selectedTransclude.element;
                    caseElement[caseElement.length++] = $compile.$$createComment("end ngSwitchWhen");
                    var block                         = {clone: caseElement};
                    selectedElements.push(block), $animate.enter(caseElement, anchor.parent(), anchor)
                  })
                })
              })
            }
          }
        }], ngSwitchWhenDirective                                                      = ngDirective({
          transclude:   "element",
          priority:     1200,
          require:      "^ngSwitch",
          multiElement: !0,
          link:         function (scope, element, attrs, ctrl, $transclude) {
            ctrl.cases["!" + attrs.ngSwitchWhen] = ctrl.cases["!" + attrs.ngSwitchWhen] || [], ctrl.cases["!" + attrs.ngSwitchWhen].push({
              transclude: $transclude,
              element:    element
            })
          }
        }), ngSwitchDefaultDirective                                                   = ngDirective({
          transclude:   "element",
          priority:     1200,
          require:      "^ngSwitch",
          multiElement: !0,
          link:         function (scope, element, attr, ctrl, $transclude) {
            ctrl.cases["?"] = ctrl.cases["?"] || [], ctrl.cases["?"].push({transclude: $transclude, element: element})
          }
        }), ngTranscludeMinErr                                                         = minErr("ngTransclude"), ngTranscludeDirective = ngDirective({
          restrict: "EAC",
          link:     function ($scope, $element, $attrs, controller, $transclude) {
            function ngTranscludeCloneAttachFn(clone) {
              clone.length && ($element.empty(), $element.append(clone))
            }

            if ($attrs.ngTransclude === $attrs.$attr.ngTransclude && ($attrs.ngTransclude = ""), !$transclude) throw ngTranscludeMinErr("orphan", "Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}", startingTag($element));
            $transclude(ngTranscludeCloneAttachFn, null, $attrs.ngTransclude || $attrs.ngTranscludeSlot)
          }
        }), scriptDirective                                                            = ["$templateCache", function ($templateCache) {
          return {
            restrict: "E", terminal: !0, compile: function (element, attr) {
              if ("text/ng-template" == attr.type) {
                var templateUrl = attr.id, text = element[0].text;
                $templateCache.put(templateUrl, text)
              }
            }
          }
        }], noopNgModelController                                                      = {$setViewValue: noop, $render: noop},
        SelectController                                                               = ["$element", "$scope", function ($element, $scope) {
          var self = this, optionsMap = new HashMap;
          self.ngModelCtrl = noopNgModelController, self.unknownOption = jqLite(window.document.createElement("option")), self.renderUnknownOption = function (val) {
            var unknownVal = "? " + hashKey(val) + " ?";
            self.unknownOption.val(unknownVal), $element.prepend(self.unknownOption), $element.val(unknownVal)
          }, $scope.$on("$destroy", function () {
            self.renderUnknownOption = noop
          }), self.removeUnknownOption = function () {
            self.unknownOption.parent() && self.unknownOption.remove()
          }, self.readValue = function () {
            return self.removeUnknownOption(), $element.val()
          }, self.writeValue = function (value) {
            self.hasOption(value) ? (self.removeUnknownOption(), $element.val(value), "" === value && self.emptyOption.prop("selected", !0)) : null == value && self.emptyOption ? (self.removeUnknownOption(), $element.val("")) : self.renderUnknownOption(value)
          }, self.addOption = function (value, element) {
            if (element[0].nodeType !== NODE_TYPE_COMMENT) {
              assertNotHasOwnProperty(value, '"option value"'), "" === value && (self.emptyOption = element);
              var count = optionsMap.get(value) || 0;
              optionsMap.put(value, count + 1), self.ngModelCtrl.$render(), chromeHack(element)
            }
          }, self.removeOption = function (value) {
            var count = optionsMap.get(value);
            count && (1 === count ? (optionsMap.remove(value), "" === value && (self.emptyOption = void 0)) : optionsMap.put(value, count - 1))
          }, self.hasOption = function (value) {
            return !!optionsMap.get(value)
          }, self.registerOption = function (optionScope, optionElement, optionAttrs, interpolateValueFn, interpolateTextFn) {
            if (interpolateValueFn) {
              var oldVal;
              optionAttrs.$observe("value", function (newVal) {
                isDefined(oldVal) && self.removeOption(oldVal), oldVal = newVal, self.addOption(newVal, optionElement)
              })
            } else interpolateTextFn ? optionScope.$watch(interpolateTextFn, function (newVal, oldVal) {
              optionAttrs.$set("value", newVal), oldVal !== newVal && self.removeOption(oldVal), self.addOption(newVal, optionElement)
            }) : self.addOption(optionAttrs.value, optionElement);
            optionElement.on("$destroy", function () {
              self.removeOption(optionAttrs.value), self.ngModelCtrl.$render()
            })
          }
        }], selectDirective                                                            = function () {
          function selectPreLink(scope, element, attr, ctrls) {
            var ngModelCtrl = ctrls[1];
            if (ngModelCtrl) {
              var selectCtrl = ctrls[0];
              if (selectCtrl.ngModelCtrl = ngModelCtrl, element.on("change", function () {
                  scope.$apply(function () {
                    ngModelCtrl.$setViewValue(selectCtrl.readValue())
                  })
                }), attr.multiple) {
                selectCtrl.readValue = function () {
                  var array = [];
                  return forEach(element.find("option"), function (option) {
                    option.selected && array.push(option.value)
                  }), array
                }, selectCtrl.writeValue = function (value) {
                  var items = new HashMap(value);
                  forEach(element.find("option"), function (option) {
                    option.selected = isDefined(items.get(option.value))
                  })
                };
                var lastView, lastViewRef = NaN;
                scope.$watch(function () {
                  lastViewRef !== ngModelCtrl.$viewValue || equals(lastView, ngModelCtrl.$viewValue) || (lastView = shallowCopy(ngModelCtrl.$viewValue), ngModelCtrl.$render()), lastViewRef = ngModelCtrl.$viewValue
                }), ngModelCtrl.$isEmpty = function (value) {
                  return !value || 0 === value.length
                }
              }
            }
          }

          function selectPostLink(scope, element, attrs, ctrls) {
            var ngModelCtrl = ctrls[1];
            if (ngModelCtrl) {
              var selectCtrl      = ctrls[0];
              ngModelCtrl.$render = function () {
                selectCtrl.writeValue(ngModelCtrl.$viewValue)
              }
            }
          }

          return {
            restrict:   "E",
            require:    ["select", "?ngModel"],
            controller: SelectController,
            priority:   1,
            link:       {pre: selectPreLink, post: selectPostLink}
          }
        }, optionDirective                                                             = ["$interpolate", function ($interpolate) {
          return {
            restrict: "E", priority: 100, compile: function (element, attr) {
              if (isDefined(attr.value)) var interpolateValueFn = $interpolate(attr.value, !0); else {
                var interpolateTextFn = $interpolate(element.text(), !0);
                interpolateTextFn || attr.$set("value", element.text())
              }
              return function (scope, element, attr) {
                var parent     = element.parent(),
                    selectCtrl = parent.data("$selectController") || parent.parent().data("$selectController");
                selectCtrl && selectCtrl.registerOption(scope, element, attr, interpolateValueFn, interpolateTextFn)
              }
            }
          }
        }], styleDirective = valueFn({restrict: "E", terminal: !1}), requiredDirective = function () {
          return {
            restrict: "A", require: "?ngModel", link: function (scope, elm, attr, ctrl) {
              ctrl && (attr.required = !0, ctrl.$validators.required = function (modelValue, viewValue) {
                return !attr.required || !ctrl.$isEmpty(viewValue)
              }, attr.$observe("required", function () {
                ctrl.$validate()
              }))
            }
          }
        }, patternDirective                                                            = function () {
          return {
            restrict: "A", require: "?ngModel", link: function (scope, elm, attr, ctrl) {
              if (ctrl) {
                var regexp, patternExp = attr.ngPattern || attr.pattern;
                attr.$observe("pattern", function (regex) {
                  if (isString(regex) && regex.length > 0 && (regex = new RegExp("^" + regex + "$")),
                    regex && !regex.test) throw minErr("ngPattern")("noregexp", "Expected {0} to be a RegExp but was {1}. Element: {2}", patternExp, regex, startingTag(elm));
                  regexp = regex || void 0, ctrl.$validate()
                }), ctrl.$validators.pattern = function (modelValue, viewValue) {
                  return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(viewValue)
                }
              }
            }
          }
        }, maxlengthDirective                                                          = function () {
          return {
            restrict: "A", require: "?ngModel", link: function (scope, elm, attr, ctrl) {
              if (ctrl) {
                var maxlength = -1;
                attr.$observe("maxlength", function (value) {
                  var intVal = toInt(value);
                  maxlength = isNaN(intVal) ? -1 : intVal, ctrl.$validate()
                }), ctrl.$validators.maxlength = function (modelValue, viewValue) {
                  return maxlength < 0 || ctrl.$isEmpty(viewValue) || viewValue.length <= maxlength
                }
              }
            }
          }
        }, minlengthDirective                                                          = function () {
          return {
            restrict: "A", require: "?ngModel", link: function (scope, elm, attr, ctrl) {
              if (ctrl) {
                var minlength = 0;
                attr.$observe("minlength", function (value) {
                  minlength = toInt(value) || 0, ctrl.$validate()
                }), ctrl.$validators.minlength = function (modelValue, viewValue) {
                  return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength
                }
              }
            }
          }
        };
    if (window.angular.bootstrap) return void window.console;
    !function () {
      var originalCleanData;
      if (!bindJQueryFired) {
        var jqName = jq();
        jQuery = isUndefined(jqName) ? window.jQuery : jqName ? window[jqName] : void 0, jQuery && jQuery.fn.on ? (jqLite = jQuery, extend(jQuery.fn, {
          scope:         JQLitePrototype.scope,
          isolateScope:  JQLitePrototype.isolateScope,
          controller:    JQLitePrototype.controller,
          injector:      JQLitePrototype.injector,
          inheritedData: JQLitePrototype.inheritedData
        }), originalCleanData = jQuery.cleanData, jQuery.cleanData = function (elems) {
          for (var events, elem, i = 0; null != (elem = elems[i]); i++) (events = jQuery._data(elem, "events")) && events.$destroy && jQuery(elem).triggerHandler("$destroy");
          originalCleanData(elems)
        }) : jqLite = JQLite, angular.element = jqLite, bindJQueryFired = !0
      }
    }(), function (angular) {
      extend(angular, {
        bootstrap:           bootstrap,
        copy:                copy,
        extend:              extend,
        merge:               merge,
        equals:              equals,
        element:             jqLite,
        forEach:             forEach,
        injector:            createInjector,
        noop:                noop,
        bind:                bind,
        toJson:              toJson,
        fromJson:            fromJson,
        identity:            identity,
        isUndefined:         isUndefined,
        isDefined:           isDefined,
        isString:            isString,
        isFunction:          isFunction,
        isObject:            isObject,
        isNumber:            isNumber,
        isElement:           isElement,
        isArray:             isArray,
        version:             version,
        isDate:              isDate,
        lowercase:           lowercase,
        uppercase:           uppercase,
        callbacks:           {counter: 0},
        getTestability:      getTestability,
        $$minErr:            minErr,
        $$csp:               csp,
        reloadWithDebugInfo: reloadWithDebugInfo
      }), (angularModule = setupModuleLoader(window))("ng", ["ngLocale"], ["$provide", function ($provide) {
        $provide.provider({$$sanitizeUri: $$SanitizeUriProvider}), $provide.provider("$compile", $CompileProvider).directive({
          a:               htmlAnchorDirective,
          input:           inputDirective,
          textarea:        inputDirective,
          form:            formDirective,
          script:          scriptDirective,
          select:          selectDirective,
          style:           styleDirective,
          option:          optionDirective,
          ngBind:          ngBindDirective,
          ngBindHtml:      ngBindHtmlDirective,
          ngBindTemplate:  ngBindTemplateDirective,
          ngClass:         ngClassDirective,
          ngClassEven:     ngClassEvenDirective,
          ngClassOdd:      ngClassOddDirective,
          ngCloak:         ngCloakDirective,
          ngController:    ngControllerDirective,
          ngForm:          ngFormDirective,
          ngHide:          ngHideDirective,
          ngIf:            ngIfDirective,
          ngInclude:       ngIncludeDirective,
          ngInit:          ngInitDirective,
          ngNonBindable:   ngNonBindableDirective,
          ngPluralize:     ngPluralizeDirective,
          ngRepeat:        ngRepeatDirective,
          ngShow:          ngShowDirective,
          ngStyle:         ngStyleDirective,
          ngSwitch:        ngSwitchDirective,
          ngSwitchWhen:    ngSwitchWhenDirective,
          ngSwitchDefault: ngSwitchDefaultDirective,
          ngOptions:       ngOptionsDirective,
          ngTransclude:    ngTranscludeDirective,
          ngModel:         ngModelDirective,
          ngList:          ngListDirective,
          ngChange:        ngChangeDirective,
          pattern:         patternDirective,
          ngPattern:       patternDirective,
          required:        requiredDirective,
          ngRequired:      requiredDirective,
          minlength:       minlengthDirective,
          ngMinlength:     minlengthDirective,
          maxlength:       maxlengthDirective,
          ngMaxlength:     maxlengthDirective,
          ngValue:         ngValueDirective,
          ngModelOptions:  ngModelOptionsDirective
        }).directive({ngInclude: ngIncludeFillContentDirective}).directive(ngAttributeAliasDirectives).directive(ngEventDirectives), $provide.provider({
          $anchorScroll:              $AnchorScrollProvider,
          $animate:                   $AnimateProvider,
          $animateCss:                $CoreAnimateCssProvider,
          $$animateJs:                $$CoreAnimateJsProvider,
          $$animateQueue:             $$CoreAnimateQueueProvider,
          $$AnimateRunner:            $$AnimateRunnerFactoryProvider,
          $$animateAsyncRun:          $$AnimateAsyncRunFactoryProvider,
          $browser:                   $BrowserProvider,
          $cacheFactory:              $CacheFactoryProvider,
          $controller:                $ControllerProvider,
          $document:                  $DocumentProvider,
          $exceptionHandler:          $ExceptionHandlerProvider,
          $filter:                    $FilterProvider,
          $$forceReflow:              $$ForceReflowProvider,
          $interpolate:               $InterpolateProvider,
          $interval:                  $IntervalProvider,
          $http:                      $HttpProvider,
          $httpParamSerializer:       $HttpParamSerializerProvider,
          $httpParamSerializerJQLike: $HttpParamSerializerJQLikeProvider,
          $httpBackend:               $HttpBackendProvider,
          $xhrFactory:                $xhrFactoryProvider,
          $location:                  $LocationProvider,
          $log:                       $LogProvider,
          $parse:                     $ParseProvider,
          $rootScope:                 $RootScopeProvider,
          $q:                         $QProvider,
          $$q:                        $$QProvider,
          $sce:                       $SceProvider,
          $sceDelegate:               $SceDelegateProvider,
          $sniffer:                   $SnifferProvider,
          $templateCache:             $TemplateCacheProvider,
          $templateRequest:           $TemplateRequestProvider,
          $$testability:              $$TestabilityProvider,
          $timeout:                   $TimeoutProvider,
          $window:                    $WindowProvider,
          $$rAF:                      $$RAFProvider,
          $$jqLite:                   $$jqLiteProvider,
          $$HashMap:                  $$HashMapProvider,
          $$cookieReader:             $$CookieReaderProvider
        })
      }])
    }(angular), angular.module("ngLocale", [], ["$provide", function ($provide) {
      function getDecimals(n) {
        n += "";
        var i = n.indexOf(".");
        return -1 == i ? 0 : n.length - i - 1
      }

      function getVF(n, opt_precision) {
        var v = opt_precision;
        void 0 === v && (v = Math.min(getDecimals(n), 3));
        var base = Math.pow(10, v);
        return {v: v, f: (n * base | 0) % base}
      }

      var PLURAL_CATEGORY = {ZERO: "zero", ONE: "one", TWO: "two", FEW: "few", MANY: "many", OTHER: "other"};
      $provide.value("$locale", {
        DATETIME_FORMATS: {
          AMPMS:           ["AM", "PM"],
          DAY:             ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
          ERANAMES:        ["Before Christ", "Anno Domini"],
          ERAS:            ["BC", "AD"],
          FIRSTDAYOFWEEK:  6,
          MONTH:           ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
          SHORTDAY:        ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          SHORTMONTH:      ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
          STANDALONEMONTH: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
          WEEKENDRANGE:    [5, 6],
          fullDate:        "EEEE, MMMM d, y",
          longDate:        "MMMM d, y",
          medium:          "MMM d, y h:mm:ss a",
          mediumDate:      "MMM d, y",
          mediumTime:      "h:mm:ss a",
          short:           "M/d/yy h:mm a",
          shortDate:       "M/d/yy",
          shortTime:       "h:mm a"
        },
        NUMBER_FORMATS:   {
          CURRENCY_SYM: "$",
          DECIMAL_SEP:  ".",
          GROUP_SEP:    ",",
          PATTERNS:     [{
            gSize:   3,
            lgSize:  3,
            maxFrac: 3,
            minFrac: 0,
            minInt:  1,
            negPre:  "-",
            negSuf:  "",
            posPre:  "",
            posSuf:  ""
          }, {
            gSize:   3,
            lgSize:  3,
            maxFrac: 2,
            minFrac: 2,
            minInt:  1,
            negPre:  "-¤",
            negSuf:  "",
            posPre:  "¤",
            posSuf:  ""
          }]
        },
        id:               "en-us",
        localeID:         "en_US",
        pluralCat:        function (n, opt_precision) {
          var i = 0 | n, vf = getVF(n, opt_precision);
          return 1 == i && 0 == vf.v ? PLURAL_CATEGORY.ONE : PLURAL_CATEGORY.OTHER
        }
      })
    }]), jqLite(window.document).ready(function () {
      angularInit(window.document, bootstrap)
    })
  }(window), !window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>'), angular.module("mentio", []).directive("mentio", ["mentioUtil", "$document", "$compile", "$log", "$timeout", function (mentioUtil, $document, $compile, $log, $timeout) {
    return {
      restrict:   "A",
      scope:      {
        macros:              "=mentioMacros",
        search:              "&mentioSearch",
        select:              "&mentioSelect",
        items:               "=mentioItems",
        typedTerm:           "=mentioTypedTerm",
        altId:               "=mentioId",
        iframeElement:       "=mentioIframeElement",
        requireLeadingSpace: "=mentioRequireLeadingSpace",
        selectNotFound:      "=mentioSelectNotFound",
        trimTerm:            "=mentioTrimTerm",
        ngModel:             "="
      },
      controller: ["$scope", "$timeout", "$attrs", function ($scope, $timeout, $attrs) {
        $scope.query = function (triggerChar, triggerText) {
          var remoteScope = $scope.triggerCharMap[triggerChar];
          (void 0 === $scope.trimTerm || $scope.trimTerm) && (triggerText = triggerText.trim()), remoteScope.showMenu(), remoteScope.search({term: triggerText}), remoteScope.typedTerm = triggerText
        }, $scope.defaultSearch = function (locals) {
          var results = [];
          angular.forEach($scope.items, function (item) {
            item.label.toUpperCase().indexOf(locals.term.toUpperCase()) >= 0 && results.push(item)
          }), $scope.localItems = results
        }, $scope.bridgeSearch = function (termString) {
          ($attrs.mentioSearch ? $scope.search : $scope.defaultSearch)({term: termString})
        }, $scope.defaultSelect = function (locals) {
          return $scope.defaultTriggerChar + locals.item.label
        }, $scope.bridgeSelect = function (itemVar) {
          return ($attrs.mentioSelect ? $scope.select : $scope.defaultSelect)({item: itemVar})
        }, $scope.setTriggerText = function (text) {
          $scope.syncTriggerText && ($scope.typedTerm = void 0 === $scope.trimTerm || $scope.trimTerm ? text.trim() : text)
        }, $scope.context = function () {
          if ($scope.iframeElement) return {iframe: $scope.iframeElement}
        }, $scope.replaceText = function (text, hasTrailingSpace) {
          if ($scope.hideAll(), mentioUtil.replaceTriggerText($scope.context(), $scope.targetElement, $scope.targetElementPath, $scope.targetElementSelectedOffset, $scope.triggerCharSet, text, $scope.requireLeadingSpace, hasTrailingSpace), !hasTrailingSpace && ($scope.setTriggerText(""), angular.element($scope.targetElement).triggerHandler("change"), $scope.isContentEditable())) {
            $scope.contentEditableMenuPasted = !0;
            var timer                        = $timeout(function () {
              $scope.contentEditableMenuPasted = !1
            }, 200);
            $scope.$on("$destroy", function () {
              $timeout.cancel(timer)
            })
          }
        }, $scope.hideAll = function () {
          for (var key in $scope.triggerCharMap) $scope.triggerCharMap.hasOwnProperty(key) && $scope.triggerCharMap[key].hideMenu()
        }, $scope.getActiveMenuScope = function () {
          for (var key in $scope.triggerCharMap) if ($scope.triggerCharMap.hasOwnProperty(key) && $scope.triggerCharMap[key].visible) return $scope.triggerCharMap[key];
          return null
        }, $scope.selectActive = function () {
          for (var key in $scope.triggerCharMap) $scope.triggerCharMap.hasOwnProperty(key) && $scope.triggerCharMap[key].visible && $scope.triggerCharMap[key].selectActive()
        }, $scope.isActive = function () {
          for (var key in $scope.triggerCharMap) if ($scope.triggerCharMap.hasOwnProperty(key) && $scope.triggerCharMap[key].visible) return !0;
          return !1
        }, $scope.isContentEditable = function () {
          return "INPUT" !== $scope.targetElement.nodeName && "TEXTAREA" !== $scope.targetElement.nodeName
        }, $scope.replaceMacro = function (macro, hasTrailingSpace) {
          hasTrailingSpace ? mentioUtil.replaceMacroText($scope.context(), $scope.targetElement, $scope.targetElementPath, $scope.targetElementSelectedOffset, $scope.macros, $scope.macros[macro]) : ($scope.replacingMacro = !0, $scope.timer = $timeout(function () {
            mentioUtil.replaceMacroText($scope.context(), $scope.targetElement, $scope.targetElementPath, $scope.targetElementSelectedOffset, $scope.macros, $scope.macros[macro]), angular.element($scope.targetElement).triggerHandler("change"), $scope.replacingMacro = !1
          }, 300), $scope.$on("$destroy", function () {
            $timeout.cancel($scope.timer)
          }))
        }, $scope.addMenu = function (menuScope) {
          menuScope.parentScope && $scope.triggerCharMap.hasOwnProperty(menuScope.triggerChar) || ($scope.triggerCharMap[menuScope.triggerChar] = menuScope, void 0 === $scope.triggerCharSet && ($scope.triggerCharSet = []), $scope.triggerCharSet.push(menuScope.triggerChar), menuScope.setParent($scope))
        }, $scope.$on("menuCreated", function (event, data) {
          void 0 === $attrs.id && void 0 === $attrs.mentioId || ($attrs.id === data.targetElement || void 0 !== $attrs.mentioId && $scope.altId === data.targetElement) && $scope.addMenu(data.scope)
        }), $document.on("click", function () {
          $scope.isActive() && $scope.$apply(function () {
            $scope.hideAll()
          })
        }), $document.on("keydown keypress paste", function (event) {
          var activeMenuScope = $scope.getActiveMenuScope();
          activeMenuScope && (9 !== event.which && 13 !== event.which || (event.preventDefault(), activeMenuScope.selectActive()), 27 === event.which && (event.preventDefault(), activeMenuScope.$apply(function () {
            activeMenuScope.hideMenu()
          })), 40 === event.which && (event.preventDefault(), activeMenuScope.$apply(function () {
            activeMenuScope.activateNextItem()
          }), activeMenuScope.adjustScroll(1)), 38 === event.which && (event.preventDefault(), activeMenuScope.$apply(function () {
            activeMenuScope.activatePreviousItem()
          }), activeMenuScope.adjustScroll(-1)), 37 !== event.which && 39 !== event.which || event.preventDefault())
        })
      }],
      link:       function (scope, element, attrs) {
        function keyHandler(event) {
          function stopEvent(event) {
            event.preventDefault(), event.stopPropagation(), event.stopImmediatePropagation()
          }

          var activeMenuScope = scope.getActiveMenuScope();
          if (activeMenuScope) {
            if (9 === event.which || 13 === event.which) return stopEvent(event), activeMenuScope.selectActive(), !1;
            if (27 === event.which) return stopEvent(event), activeMenuScope.$apply(function () {
              activeMenuScope.hideMenu()
            }), !1;
            if (40 === event.which) return stopEvent(event), activeMenuScope.$apply(function () {
              activeMenuScope.activateNextItem()
            }), activeMenuScope.adjustScroll(1), !1;
            if (38 === event.which) return stopEvent(event), activeMenuScope.$apply(function () {
              activeMenuScope.activatePreviousItem()
            }), activeMenuScope.adjustScroll(-1), !1;
            if (37 === event.which || 39 === event.which) return stopEvent(event), !1
          }
        }

        if (scope.triggerCharMap = {}, scope.targetElement = element, attrs.$set("autocomplete", "off"), attrs.mentioItems) {
          scope.localItems = [], scope.parentScope = scope;
          var itemsRef             = attrs.mentioSearch ? ' mentio-items="items"' : ' mentio-items="localItems"';
          scope.defaultTriggerChar = attrs.mentioTriggerChar ? scope.$eval(attrs.mentioTriggerChar) : "@";
          var html                 = '<mentio-menu mentio-search="bridgeSearch(term)" mentio-select="bridgeSelect(item)"' + itemsRef;
          attrs.mentioTemplateUrl && (html = html + ' mentio-template-url="' + attrs.mentioTemplateUrl + '"'), html = html + " mentio-trigger-char=\"'" + scope.defaultTriggerChar + '\'" mentio-parent-scope="parentScope"/>';
          var linkFn = $compile(html), el = linkFn(scope);
          element.parent().append(el), scope.$on("$destroy", function () {
            el.remove()
          })
        }
        attrs.mentioTypedTerm && (scope.syncTriggerText = !0), scope.$watch("iframeElement", function (newValue) {
          if (newValue) {
            var iframeDocument = newValue.contentWindow.document;
            iframeDocument.addEventListener("click", function () {
              scope.isActive() && scope.$apply(function () {
                scope.hideAll()
              })
            }), iframeDocument.addEventListener("keydown", keyHandler, !0), scope.$on("$destroy", function () {
              iframeDocument.removeEventListener("keydown", keyHandler)
            })
          }
        }), scope.$watch("ngModel", function (newValue) {
          if (newValue && "" !== newValue || scope.isActive()) {
            if (void 0 === scope.triggerCharSet) return void $log.error("Error, no mentio-items attribute was provided, and no separate mentio-menus were specified.  Nothing to do.");
            if (scope.contentEditableMenuPasted) return void(scope.contentEditableMenuPasted = !1);
            scope.replacingMacro && ($timeout.cancel(scope.timer), scope.replacingMacro = !1);
            var isActive = scope.isActive(), isContentEditable = scope.isContentEditable(),
                mentionInfo                                    = mentioUtil.getTriggerInfo(scope.context(), scope.triggerCharSet, scope.requireLeadingSpace, isActive);
            if (void 0 !== mentionInfo && (!isActive || isActive && (isContentEditable && mentionInfo.mentionTriggerChar === scope.currentMentionTriggerChar || !isContentEditable && mentionInfo.mentionPosition === scope.currentMentionPosition))) mentionInfo.mentionSelectedElement && (scope.targetElement = mentionInfo.mentionSelectedElement, scope.targetElementPath = mentionInfo.mentionSelectedPath, scope.targetElementSelectedOffset = mentionInfo.mentionSelectedOffset), scope.setTriggerText(mentionInfo.mentionText), scope.currentMentionPosition = mentionInfo.mentionPosition, scope.currentMentionTriggerChar = mentionInfo.mentionTriggerChar, scope.query(mentionInfo.mentionTriggerChar, mentionInfo.mentionText); else {
              var currentTypedTerm = scope.typedTerm;
              scope.setTriggerText(""), scope.hideAll();
              var macroMatchInfo = mentioUtil.getMacroMatch(scope.context(), scope.macros);
              if (void 0 !== macroMatchInfo) scope.targetElement = macroMatchInfo.macroSelectedElement, scope.targetElementPath = macroMatchInfo.macroSelectedPath, scope.targetElementSelectedOffset = macroMatchInfo.macroSelectedOffset, scope.replaceMacro(macroMatchInfo.macroText, macroMatchInfo.macroHasTrailingSpace); else if (scope.selectNotFound && currentTypedTerm && "" !== currentTypedTerm) {
                var lastScope = scope.triggerCharMap[scope.currentMentionTriggerChar];
                if (lastScope) {
                  var text = lastScope.select({item: {label: currentTypedTerm}});
                  "function" == typeof text.then ? text.then(scope.replaceText) : scope.replaceText(text, !0)
                }
              }
            }
          }
        })
      }
    }
  }]).directive("mentioMenu", ["mentioUtil", "$rootScope", "$log", "$window", "$document", function (mentioUtil, $rootScope, $log, $window, $document) {
    return {
      restrict:    "E",
      scope:       {
        search:      "&mentioSearch",
        select:      "&mentioSelect",
        items:       "=mentioItems",
        triggerChar: "=mentioTriggerChar",
        forElem:     "=mentioFor",
        parentScope: "=mentioParentScope"
      },
      templateUrl: function (tElement, tAttrs) {
        return void 0 !== tAttrs.mentioTemplateUrl ? tAttrs.mentioTemplateUrl : "mentio-menu.tpl.html"
      },
      controller:  ["$scope", function ($scope) {
        $scope.visible = !1, this.activate = $scope.activate = function (item) {
          $scope.activeItem = item
        }, this.isActive = $scope.isActive = function (item) {
          return $scope.activeItem === item
        }, this.selectItem = $scope.selectItem = function (item) {
          var text = $scope.select({item: item});
          "function" == typeof text.then ? text.then($scope.parentMentio.replaceText) : $scope.parentMentio.replaceText(text)
        }, $scope.activateNextItem = function () {
          var index = $scope.items.indexOf($scope.activeItem);
          this.activate($scope.items[(index + 1) % $scope.items.length])
        }, $scope.activatePreviousItem = function () {
          var index = $scope.items.indexOf($scope.activeItem);
          this.activate($scope.items[0 === index ? $scope.items.length - 1 : index - 1])
        }, $scope.isFirstItemActive = function () {
          return 0 === $scope.items.indexOf($scope.activeItem)
        }, $scope.isLastItemActive = function () {
          return $scope.items.indexOf($scope.activeItem) === $scope.items.length - 1
        }, $scope.selectActive = function () {
          $scope.selectItem($scope.activeItem)
        }, $scope.isVisible = function () {
          return $scope.visible
        }, $scope.showMenu = function () {
          $scope.visible || ($scope.requestVisiblePendingSearch = !0)
        }, $scope.setParent = function (scope) {
          $scope.parentMentio = scope, $scope.targetElement = scope.targetElement
        }
      }],
      link:        function (scope, element) {
        if (element[0].parentNode.removeChild(element[0]), $document[0].body.appendChild(element[0]), scope.menuElement = element, scope.parentScope) scope.parentScope.addMenu(scope); else {
          if (!scope.forElem) return void $log.error("mentio-menu requires a target element in tbe mentio-for attribute");
          if (!scope.triggerChar) return void $log.error("mentio-menu requires a trigger char");
          $rootScope.$broadcast("menuCreated", {targetElement: scope.forElem, scope: scope})
        }
        angular.element($window).bind("resize", function () {
          if (scope.isVisible()) {
            var triggerCharSet = [];
            triggerCharSet.push(scope.triggerChar), mentioUtil.popUnderMention(scope.parentMentio.context(), triggerCharSet, element, scope.requireLeadingSpace)
          }
        }), scope.$watch("items", function (items) {
          items && items.length > 0 ? (scope.activate(items[0]), !scope.visible && scope.requestVisiblePendingSearch && (scope.visible = !0, scope.requestVisiblePendingSearch = !1)) : scope.hideMenu()
        }), scope.$watch("isVisible()", function (visible) {
          if (visible) {
            var triggerCharSet = [];
            triggerCharSet.push(scope.triggerChar), mentioUtil.popUnderMention(scope.parentMentio.context(), triggerCharSet, element, scope.requireLeadingSpace)
          }
        }), scope.parentMentio.$on("$destroy", function () {
          element.remove()
        }), scope.hideMenu = function () {
          scope.visible = !1, element.css("display", "none")
        }, scope.adjustScroll = function (direction) {
          var menuEl = element[0], menuItemsList = menuEl.querySelector("ul"),
              menuItem                           = menuEl.querySelector("[mentio-menu-item].active") || menuEl.querySelector("[data-mentio-menu-item].active");
          return scope.isFirstItemActive() ? menuItemsList.scrollTop = 0 : scope.isLastItemActive() ? menuItemsList.scrollTop = menuItemsList.scrollHeight : void(1 === direction ? menuItemsList.scrollTop += menuItem.offsetHeight : menuItemsList.scrollTop -= menuItem.offsetHeight)
        }
      }
    }
  }]).directive("mentioMenuItem", function () {
    return {
      restrict: "A",
      scope:    {item: "=mentioMenuItem"},
      require:  "^mentioMenu",
      link:     function (scope, element, attrs, controller) {
        scope.$watch(function () {
          return controller.isActive(scope.item)
        }, function (active) {
          active ? element.addClass("active") : element.removeClass("active")
        }), element.bind("mouseenter", function () {
          scope.$apply(function () {
            controller.activate(scope.item)
          })
        }), element.bind("click", function () {
          return controller.selectItem(scope.item), !1
        })
      }
    }
  }).filter("unsafe", ["$sce", function ($sce) {
    return function (val) {
      return $sce.trustAsHtml(val)
    }
  }]).filter("mentioHighlight", function () {
    function escapeRegexp(queryToEscape) {
      return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
    }

    return function (matchItem, query, hightlightClass) {
      if (query) {
        var replaceText = hightlightClass ? '<span class="' + hightlightClass + '">$&</span>' : "<strong>$&</strong>";
        return ("" + matchItem).replace(new RegExp(escapeRegexp(query), "gi"), replaceText)
      }
      return matchItem
    }
  }), angular.module("mentio").factory("mentioUtil", ["$window", "$location", "$anchorScroll", "$timeout", function ($window, $location, $anchorScroll, $timeout) {
    function popUnderMention(ctx, triggerCharSet, selectionEl, requireLeadingSpace) {
      var coordinates, mentionInfo = getTriggerInfo(ctx, triggerCharSet, requireLeadingSpace, !1);
      void 0 !== mentionInfo ? (coordinates = selectedElementIsTextAreaOrInput(ctx) ? getTextAreaOrInputUnderlinePosition(ctx, getDocument(ctx).activeElement, mentionInfo.mentionPosition) : getContentEditableCaretPosition(ctx, mentionInfo.mentionPosition), selectionEl.css({
        top:      coordinates.top + "px",
        left:     coordinates.left + "px",
        position: "absolute",
        zIndex:   1e4,
        display:  "block"
      }), $timeout(function () {
        scrollIntoView(ctx, selectionEl)
      }, 0)) : selectionEl.css({display: "none"})
    }

    function scrollIntoView(ctx, elem) {
      for (var clientRect, e = elem[0]; void 0 === clientRect || 0 === clientRect.height;) if (clientRect = e.getBoundingClientRect(), 0 === clientRect.height && (void 0 === (e = e.childNodes[0]) || !e.getBoundingClientRect)) return;
      var elemTop = clientRect.top, elemBottom = elemTop + clientRect.height;
      if (elemTop < 0) $window.scrollTo(0, $window.pageYOffset + clientRect.top - 20); else if (elemBottom > $window.innerHeight) {
        var maxY = $window.pageYOffset + clientRect.top - 20;
        maxY - $window.pageYOffset > 100 && (maxY = $window.pageYOffset + 100);
        var targetY = $window.pageYOffset - ($window.innerHeight - elemBottom);
        targetY > maxY && (targetY = maxY), $window.scrollTo(0, targetY)
      }
    }

    function selectedElementIsTextAreaOrInput(ctx) {
      var element = getDocument(ctx).activeElement;
      if (null !== element) {
        var nodeName = element.nodeName, type = element.getAttribute("type");
        return "INPUT" === nodeName && "text" === type || "TEXTAREA" === nodeName
      }
      return !1
    }

    function selectElement(ctx, targetElement, path, offset) {
      var range, elem = targetElement;
      if (path) for (var i = 0; i < path.length; i++) {
        if (void 0 === (elem = elem.childNodes[path[i]])) return;
        for (; elem.length < offset;) offset -= elem.length, elem = elem.nextSibling;
        0 !== elem.childNodes.length || elem.length || (elem = elem.previousSibling)
      }
      var sel = getWindowSelection(ctx);
      range = getDocument(ctx).createRange(), range.setStart(elem, offset), range.setEnd(elem, offset), range.collapse(!0);
      try {
        sel.removeAllRanges()
      } catch (error) {
      }
      sel.addRange(range), targetElement.focus()
    }

    function pasteHtml(ctx, html, startPos, endPos) {
      var range, sel;
      sel = getWindowSelection(ctx), range = getDocument(ctx).createRange(), range.setStart(sel.anchorNode, startPos), range.setEnd(sel.anchorNode, endPos), range.deleteContents();
      var el       = getDocument(ctx).createElement("div");
      el.innerHTML = html;
      for (var node, lastNode, frag = getDocument(ctx).createDocumentFragment(); node = el.firstChild;) lastNode = frag.appendChild(node);
      range.insertNode(frag), lastNode && (range = range.cloneRange(), range.setStartAfter(lastNode), range.collapse(!0), sel.removeAllRanges(), sel.addRange(range))
    }

    function resetSelection(ctx, targetElement, path, offset) {
      var nodeName = targetElement.nodeName;
      "INPUT" === nodeName || "TEXTAREA" === nodeName ? targetElement !== getDocument(ctx).activeElement && targetElement.focus() : selectElement(ctx, targetElement, path, offset)
    }

    function replaceMacroText(ctx, targetElement, path, offset, macros, text) {
      resetSelection(ctx, targetElement, path, offset);
      var macroMatchInfo = getMacroMatch(ctx, macros);
      if (macroMatchInfo.macroHasTrailingSpace && (macroMatchInfo.macroText = macroMatchInfo.macroText + " ", text += " "), void 0 !== macroMatchInfo) {
        var element = getDocument(ctx).activeElement;
        if (selectedElementIsTextAreaOrInput(ctx)) {
          var startPos = macroMatchInfo.macroPosition,
              endPos   = macroMatchInfo.macroPosition + macroMatchInfo.macroText.length;
          element.value = element.value.substring(0, startPos) + text + element.value.substring(endPos, element.value.length), element.selectionStart = startPos + text.length, element.selectionEnd = startPos + text.length
        } else pasteHtml(ctx, text, macroMatchInfo.macroPosition, macroMatchInfo.macroPosition + macroMatchInfo.macroText.length)
      }
    }

    function replaceTriggerText(ctx, targetElement, path, offset, triggerCharSet, text, requireLeadingSpace, hasTrailingSpace) {
      resetSelection(ctx, targetElement, path, offset);
      var mentionInfo = getTriggerInfo(ctx, triggerCharSet, requireLeadingSpace, !0, hasTrailingSpace);
      if (void 0 !== mentionInfo) if (selectedElementIsTextAreaOrInput()) {
        var myField  = getDocument(ctx).activeElement;
        text += " ";
        var startPos = mentionInfo.mentionPosition,
            endPos   = mentionInfo.mentionPosition + mentionInfo.mentionText.length + 1;
        myField.value = myField.value.substring(0, startPos) + text + myField.value.substring(endPos, myField.value.length), myField.selectionStart = startPos + text.length, myField.selectionEnd = startPos + text.length
      } else text += " ", pasteHtml(ctx, text, mentionInfo.mentionPosition, mentionInfo.mentionPosition + mentionInfo.mentionText.length + 1)
    }

    function getNodePositionInParent(ctx, elem) {
      if (null === elem.parentNode) return 0;
      for (var i = 0; i < elem.parentNode.childNodes.length; i++) {
        if (elem.parentNode.childNodes[i] === elem) return i
      }
    }

    function getMacroMatch(ctx, macros) {
      var selected, offset, path = [];
      if (selectedElementIsTextAreaOrInput(ctx)) selected = getDocument(ctx).activeElement; else {
        var selectionInfo = getContentEditableSelectedPath(ctx);
        selectionInfo && (selected = selectionInfo.selected, path = selectionInfo.path, offset = selectionInfo.offset)
      }
      var effectiveRange = getTextPrecedingCurrentSelection(ctx);
      if (void 0 !== effectiveRange && null !== effectiveRange) {
        var matchInfo, hasTrailingSpace = !1;
        if (effectiveRange.length > 0 && (" " === effectiveRange.charAt(effectiveRange.length - 1) || " " === effectiveRange.charAt(effectiveRange.length - 1)) && (hasTrailingSpace = !0, effectiveRange = effectiveRange.substring(0, effectiveRange.length - 1)), angular.forEach(macros, function (macro, c) {
            var idx = effectiveRange.toUpperCase().lastIndexOf(c.toUpperCase());
            if (idx >= 0 && c.length + idx === effectiveRange.length) {
              var prevCharPos = idx - 1;
              0 !== idx && " " !== effectiveRange.charAt(prevCharPos) && " " !== effectiveRange.charAt(prevCharPos) || (matchInfo = {
                macroPosition:         idx,
                macroText:             c,
                macroSelectedElement:  selected,
                macroSelectedPath:     path,
                macroSelectedOffset:   offset,
                macroHasTrailingSpace: hasTrailingSpace
              })
            }
          }), matchInfo) return matchInfo
      }
    }

    function getContentEditableSelectedPath(ctx) {
      var offset, sel = getWindowSelection(ctx), selected = sel.anchorNode, path = [];
      if (null != selected) {
        for (var i, ce = selected.contentEditable; null !== selected && "true" !== ce;) i = getNodePositionInParent(ctx, selected), path.push(i), null !== (selected = selected.parentNode) && (ce = selected.contentEditable);
        return path.reverse(), offset = sel.getRangeAt(0).startOffset, {selected: selected, path: path, offset: offset}
      }
    }

    function getTriggerInfo(ctx, triggerCharSet, requireLeadingSpace, menuAlreadyActive, hasTrailingSpace) {
      var selected, path, offset;
      if (selectedElementIsTextAreaOrInput(ctx)) selected = getDocument(ctx).activeElement; else {
        var selectionInfo = getContentEditableSelectedPath(ctx);
        selectionInfo && (selected = selectionInfo.selected, path = selectionInfo.path, offset = selectionInfo.offset)
      }
      var effectiveRange = getTextPrecedingCurrentSelection(ctx);
      if (void 0 !== effectiveRange && null !== effectiveRange) {
        var triggerChar, mostRecentTriggerCharPos = -1;
        if (triggerCharSet.forEach(function (c) {
            var idx = effectiveRange.lastIndexOf(c);
            idx > mostRecentTriggerCharPos && (mostRecentTriggerCharPos = idx, triggerChar = c)
          }), mostRecentTriggerCharPos >= 0 && (0 === mostRecentTriggerCharPos || !requireLeadingSpace || /[\xA0\s]/g.test(effectiveRange.substring(mostRecentTriggerCharPos - 1, mostRecentTriggerCharPos)))) {
          var currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + 1, effectiveRange.length);
          triggerChar               = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + 1);
          var firstSnippetChar      = currentTriggerSnippet.substring(0, 1),
              leadingSpace          = currentTriggerSnippet.length > 0 && (" " === firstSnippetChar || " " === firstSnippetChar);
          if (hasTrailingSpace && (currentTriggerSnippet = currentTriggerSnippet.trim()), !leadingSpace && (menuAlreadyActive || !/[\xA0\s]/g.test(currentTriggerSnippet))) return {
            mentionPosition:        mostRecentTriggerCharPos,
            mentionText:            currentTriggerSnippet,
            mentionSelectedElement: selected,
            mentionSelectedPath:    path,
            mentionSelectedOffset:  offset,
            mentionTriggerChar:     triggerChar
          }
        }
      }
    }

    function getWindowSelection(ctx) {
      return ctx ? ctx.iframe.contentWindow.getSelection() : window.getSelection()
    }

    function getDocument(ctx) {
      return ctx ? ctx.iframe.contentWindow.document : document
    }

    function getTextPrecedingCurrentSelection(ctx) {
      var text;
      if (selectedElementIsTextAreaOrInput(ctx)) {
        var textComponent = getDocument(ctx).activeElement, startPos = textComponent.selectionStart;
        text              = textComponent.value.substring(0, startPos)
      } else {
        var selectedElem = getWindowSelection(ctx).anchorNode;
        if (null != selectedElem) {
          var workingNodeContent = selectedElem.textContent,
              selectStartOffset  = getWindowSelection(ctx).getRangeAt(0).startOffset;
          selectStartOffset >= 0 && (text = workingNodeContent.substring(0, selectStartOffset))
        }
      }
      return text
    }

    function getContentEditableCaretPosition(ctx, selectedNodePosition) {
      var markerEl, range, markerId                = "sel_" + (new Date).getTime() + "_" + Math.random().toString().substr(2),
          sel = getWindowSelection(ctx), prevRange = sel.getRangeAt(0);
      range = getDocument(ctx).createRange(), range.setStart(sel.anchorNode, selectedNodePosition), range.setEnd(sel.anchorNode, selectedNodePosition), range.collapse(!1), markerEl = getDocument(ctx).createElement("span"), markerEl.id = markerId, markerEl.appendChild(getDocument(ctx).createTextNode("\ufeff")), range.insertNode(markerEl), sel.removeAllRanges(), sel.addRange(prevRange);
      var coordinates = {left: 0, top: markerEl.offsetHeight};
      return localToGlobalCoordinates(ctx, markerEl, coordinates), markerEl.parentNode.removeChild(markerEl), coordinates
    }

    function localToGlobalCoordinates(ctx, element, coordinates) {
      for (var obj = element, iframe = ctx ? ctx.iframe : null; obj;) coordinates.left += obj.offsetLeft + obj.clientLeft, coordinates.top += obj.offsetTop + obj.clientTop, !(obj = obj.offsetParent) && iframe && (obj = iframe, iframe = null);
      for (obj = element, iframe = ctx ? ctx.iframe : null; obj !== getDocument().body;) obj.scrollTop && obj.scrollTop > 0 && (coordinates.top -= obj.scrollTop), obj.scrollLeft && obj.scrollLeft > 0 && (coordinates.left -= obj.scrollLeft), !(obj = obj.parentNode) && iframe && (obj = iframe, iframe = null)
    }

    function getTextAreaOrInputUnderlinePosition(ctx, element, position) {
      var properties                                       = ["direction", "boxSizing", "width", "height", "overflowX", "overflowY", "borderTopWidth", "borderRightWidth", "borderBottomWidth", "borderLeftWidth", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "fontStyle", "fontVariant", "fontWeight", "fontStretch", "fontSize", "fontSizeAdjust", "lineHeight", "fontFamily", "textAlign", "textTransform", "textIndent", "textDecoration", "letterSpacing", "wordSpacing"],
          isFirefox = null !== window.mozInnerScreenX, div = getDocument(ctx).createElement("div");
      div.id = "input-textarea-caret-position-mirror-div", getDocument(ctx).body.appendChild(div);
      var style = div.style, computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle;
      style.whiteSpace = "pre-wrap", "INPUT" !== element.nodeName && (style.wordWrap = "break-word"), style.position = "absolute", style.visibility = "hidden", properties.forEach(function (prop) {
        style[prop] = computed[prop]
      }), isFirefox ? (style.width = parseInt(computed.width) - 2 + "px", element.scrollHeight > parseInt(computed.height) && (style.overflowY = "scroll")) : style.overflow = "hidden", div.textContent = element.value.substring(0, position), "INPUT" === element.nodeName && (div.textContent = div.textContent.replace(/\s/g, " "));
      var span = getDocument(ctx).createElement("span");
      span.textContent = element.value.substring(position) || ".", div.appendChild(span);
      var coordinates = {
        top:  span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize),
        left: span.offsetLeft + parseInt(computed.borderLeftWidth)
      };
      return localToGlobalCoordinates(ctx, element, coordinates), getDocument(ctx).body.removeChild(div), coordinates
    }

    return {
      popUnderMention:                     popUnderMention,
      replaceMacroText:                    replaceMacroText,
      replaceTriggerText:                  replaceTriggerText,
      getMacroMatch:                       getMacroMatch,
      getTriggerInfo:                      getTriggerInfo,
      selectElement:                       selectElement,
      getTextAreaOrInputUnderlinePosition: getTextAreaOrInputUnderlinePosition,
      getTextPrecedingCurrentSelection:    getTextPrecedingCurrentSelection,
      getContentEditableSelectedPath:      getContentEditableSelectedPath,
      getNodePositionInParent:             getNodePositionInParent,
      getContentEditableCaretPosition:     getContentEditableCaretPosition,
      pasteHtml:                           pasteHtml,
      resetSelection:                      resetSelection,
      scrollIntoView:                      scrollIntoView
    }
  }]), angular.module("mentio").run(["$templateCache", function ($templateCache) {
    $templateCache.put("mentio-menu.tpl.html", '<style>\n.scrollable-menu {\n    height: auto;\n    max-height: 300px;\n    overflow: auto;\n}\n\n.menu-highlighted {\n    font-weight: bold;\n}\n</style>\n<ul class="dropdown-menu scrollable-menu" style="display:block">\n    <li mentio-menu-item="item" ng-repeat="item in items track by $index">\n        <a class="text-primary" ng-bind-html="item.label | mentioHighlight:typedTerm:\'menu-highlighted\' | unsafe"></a>\n    </li>\n</ul>')
  }]), angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.collapse", "ui.bootstrap.accordion", "ui.bootstrap.alert", "ui.bootstrap.buttons", "ui.bootstrap.carousel", "ui.bootstrap.dateparser", "ui.bootstrap.isClass", "ui.bootstrap.datepicker", "ui.bootstrap.position", "ui.bootstrap.datepickerPopup", "ui.bootstrap.debounce", "ui.bootstrap.dropdown", "ui.bootstrap.stackedMap", "ui.bootstrap.modal", "ui.bootstrap.paging", "ui.bootstrap.pager", "ui.bootstrap.pagination", "ui.bootstrap.tooltip", "ui.bootstrap.popover", "ui.bootstrap.progressbar", "ui.bootstrap.rating", "ui.bootstrap.tabs", "ui.bootstrap.timepicker", "ui.bootstrap.typeahead"]), angular.module("ui.bootstrap.tpls", ["uib/template/accordion/accordion-group.html", "uib/template/accordion/accordion.html", "uib/template/alert/alert.html", "uib/template/carousel/carousel.html", "uib/template/carousel/slide.html", "uib/template/datepicker/datepicker.html", "uib/template/datepicker/day.html", "uib/template/datepicker/month.html", "uib/template/datepicker/year.html", "uib/template/datepickerPopup/popup.html", "uib/template/modal/backdrop.html", "uib/template/modal/window.html", "uib/template/pager/pager.html", "uib/template/pagination/pagination.html", "uib/template/tooltip/tooltip-html-popup.html", "uib/template/tooltip/tooltip-popup.html", "uib/template/tooltip/tooltip-template-popup.html", "uib/template/popover/popover-html.html", "uib/template/popover/popover-template.html", "uib/template/popover/popover.html", "uib/template/progressbar/bar.html", "uib/template/progressbar/progress.html", "uib/template/progressbar/progressbar.html", "uib/template/rating/rating.html", "uib/template/tabs/tab.html", "uib/template/tabs/tabset.html", "uib/template/timepicker/timepicker.html", "uib/template/typeahead/typeahead-match.html", "uib/template/typeahead/typeahead-popup.html"]), angular.module("ui.bootstrap.collapse", []).directive("uibCollapse", ["$animate", "$q", "$parse", "$injector", function (a, b, c, d) {
    var e = d.has("$animateCss") ? d.get("$animateCss") : null;
    return {
      link: function (d, f, g) {
        function h() {
          f.hasClass("collapse") && f.hasClass("in") || b.resolve(l(d)).then(function () {
            f.removeClass("collapse").addClass("collapsing").attr("aria-expanded", !0).attr("aria-hidden", !1), e ? e(f, {
              addClass: "in",
              easing:   "ease",
              to:       {height: f[0].scrollHeight + "px"}
            }).start().finally(i) : a.addClass(f, "in", {to: {height: f[0].scrollHeight + "px"}}).then(i)
          })
        }

        function i() {
          f.removeClass("collapsing").addClass("collapse").css({height: "auto"}), m(d)
        }

        function j() {
          return f.hasClass("collapse") || f.hasClass("in") ? void b.resolve(n(d)).then(function () {
            f.css({height: f[0].scrollHeight + "px"}).removeClass("collapse").addClass("collapsing").attr("aria-expanded", !1).attr("aria-hidden", !0), e ? e(f, {
              removeClass: "in",
              to:          {height: "0"}
            }).start().finally(k) : a.removeClass(f, "in", {to: {height: "0"}}).then(k)
          }) : k()
        }

        function k() {
          f.css({height: "0"}), f.removeClass("collapsing").addClass("collapse"), o(d)
        }

        var l = c(g.expanding), m = c(g.expanded), n = c(g.collapsing), o = c(g.collapsed);
        d.$eval(g.uibCollapse) || f.addClass("in").addClass("collapse").attr("aria-expanded", !0).attr("aria-hidden", !1).css({height: "auto"}), d.$watch(g.uibCollapse, function (a) {
          a ? j() : h()
        })
      }
    }
  }]), angular.module("ui.bootstrap.accordion", ["ui.bootstrap.collapse"]).constant("uibAccordionConfig", {closeOthers: !0}).controller("UibAccordionController", ["$scope", "$attrs", "uibAccordionConfig", function (a, b, c) {
    this.groups = [], this.closeOthers = function (d) {
      (angular.isDefined(b.closeOthers) ? a.$eval(b.closeOthers) : c.closeOthers) && angular.forEach(this.groups, function (a) {
        a !== d && (a.isOpen = !1)
      })
    }, this.addGroup = function (a) {
      var b = this;
      this.groups.push(a), a.$on("$destroy", function (c) {
        b.removeGroup(a)
      })
    }, this.removeGroup = function (a) {
      var b = this.groups.indexOf(a);
      -1 !== b && this.groups.splice(b, 1)
    }
  }]).directive("uibAccordion", function () {
    return {
      controller:   "UibAccordionController",
      controllerAs: "accordion",
      transclude:   !0,
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/accordion/accordion.html"
      }
    }
  }).directive("uibAccordionGroup", function () {
    return {
      require:  "^uibAccordion", transclude: !0, replace: !0, templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/accordion/accordion-group.html"
      }, scope: {heading: "@", panelClass: "@?", isOpen: "=?", isDisabled: "=?"}, controller: function () {
        this.setHeading = function (a) {
          this.heading = a
        }
      }, link:  function (a, b, c, d) {
        d.addGroup(a), a.openClass = c.openClass || "panel-open", a.panelClass = c.panelClass || "panel-default", a.$watch("isOpen", function (c) {
          b.toggleClass(a.openClass, !!c), c && d.closeOthers(a)
        }), a.toggleOpen = function (b) {
          a.isDisabled || b && 32 !== b.which || (a.isOpen = !a.isOpen)
        };
        var e = "accordiongroup-" + a.$id + "-" + Math.floor(1e4 * Math.random());
        a.headingId = e + "-tab", a.panelId = e + "-panel"
      }
    }
  }).directive("uibAccordionHeading", function () {
    return {
      transclude: !0, template: "", replace: !0, require: "^uibAccordionGroup", link: function (a, b, c, d, e) {
        d.setHeading(e(a, angular.noop))
      }
    }
  }).directive("uibAccordionTransclude", function () {
    return {
      require: "^uibAccordionGroup", link: function (a, b, c, d) {
        a.$watch(function () {
          return d[c.uibAccordionTransclude]
        }, function (a) {
          if (a) {
            var c = angular.element(b[0].querySelector("[uib-accordion-header]"));
            c.html(""), c.append(a)
          }
        })
      }
    }
  }), angular.module("ui.bootstrap.alert", []).controller("UibAlertController", ["$scope", "$attrs", "$interpolate", "$timeout", function (a, b, c, d) {
    a.closeable = !!b.close;
    var e       = angular.isDefined(b.dismissOnTimeout) ? c(b.dismissOnTimeout)(a.$parent) : null;
    e && d(function () {
      a.close()
    }, parseInt(e, 10))
  }]).directive("uibAlert", function () {
    return {
      controller:    "UibAlertController", controllerAs: "alert", templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/alert/alert.html"
      }, transclude: !0, replace: !0, scope: {type: "@", close: "&"}
    }
  }), angular.module("ui.bootstrap.buttons", []).constant("uibButtonConfig", {
    activeClass: "active",
    toggleEvent: "click"
  }).controller("UibButtonsController", ["uibButtonConfig", function (a) {
    this.activeClass = a.activeClass || "active", this.toggleEvent = a.toggleEvent || "click"
  }]).directive("uibBtnRadio", ["$parse", function (a) {
    return {
      require:      ["uibBtnRadio", "ngModel"],
      controller:   "UibButtonsController",
      controllerAs: "buttons",
      link:         function (b, c, d, e) {
        var f = e[0], g = e[1], h = a(d.uibUncheckable);
        c.find("input").css({display: "none"}), g.$render = function () {
          c.toggleClass(f.activeClass, angular.equals(g.$modelValue, b.$eval(d.uibBtnRadio)))
        }, c.on(f.toggleEvent, function () {
          if (!d.disabled) {
            var a = c.hasClass(f.activeClass);
            a && !angular.isDefined(d.uncheckable) || b.$apply(function () {
              g.$setViewValue(a ? null : b.$eval(d.uibBtnRadio)), g.$render()
            })
          }
        }), d.uibUncheckable && b.$watch(h, function (a) {
          d.$set("uncheckable", a ? "" : void 0)
        })
      }
    }
  }]).directive("uibBtnCheckbox", function () {
    return {
      require:      ["uibBtnCheckbox", "ngModel"],
      controller:   "UibButtonsController",
      controllerAs: "button",
      link:         function (a, b, c, d) {
        function e() {
          return g(c.btnCheckboxTrue, !0)
        }

        function f() {
          return g(c.btnCheckboxFalse, !1)
        }

        function g(b, c) {
          return angular.isDefined(b) ? a.$eval(b) : c
        }

        var h = d[0], i = d[1];
        b.find("input").css({display: "none"}), i.$render = function () {
          b.toggleClass(h.activeClass, angular.equals(i.$modelValue, e()))
        }, b.on(h.toggleEvent, function () {
          c.disabled || a.$apply(function () {
            i.$setViewValue(b.hasClass(h.activeClass) ? f() : e()), i.$render()
          })
        })
      }
    }
  }), angular.module("ui.bootstrap.carousel", []).controller("UibCarouselController", ["$scope", "$element", "$interval", "$timeout", "$animate", function (a, b, c, d, e) {
    function f() {
      for (; t.length;) t.shift()
    }

    function g(a) {
      for (var b = 0; b < q.length; b++) q[b].slide.active = b === a
    }

    function h(c, d, i) {
      if (!u) {
        if (angular.extend(c, {direction: i}), angular.extend(q[s].slide || {}, {direction: i}), e.enabled(b) && !a.$currentTransition && q[d].element && p.slides.length > 1) {
          q[d].element.data(r, c.direction);
          var j = p.getCurrentIndex();
          angular.isNumber(j) && q[j].element && q[j].element.data(r, c.direction), a.$currentTransition = !0, e.on("addClass", q[d].element, function (b, c) {
            if ("close" === c && (a.$currentTransition = null, e.off("addClass", b), t.length)) {
              var d = t.pop().slide, g = d.index, i = g > p.getCurrentIndex() ? "next" : "prev";
              f(), h(d, g, i)
            }
          })
        }
        a.active = c.index, s = c.index, g(d), l()
      }
    }

    function i(a) {
      for (var b = 0; b < q.length; b++) if (q[b].slide === a) return b
    }

    function j() {
      n && (c.cancel(n), n = null)
    }

    function k(b) {
      b.length || (a.$currentTransition = null, f())
    }

    function l() {
      j();
      var b = +a.interval;
      !isNaN(b) && b > 0 && (n = c(m, b))
    }

    function m() {
      var b = +a.interval;
      o && !isNaN(b) && b > 0 && q.length ? a.next() : a.pause()
    }

    var n, o, p = this, q = p.slides = a.slides = [], r = "uib-slideDirection", s = a.active, t = [], u = !1;
    p.addSlide = function (b, c) {
      q.push({slide: b, element: c}), q.sort(function (a, b) {
        return +a.slide.index - +b.slide.index
      }), (b.index === a.active || 1 === q.length && !angular.isNumber(a.active)) && (a.$currentTransition && (a.$currentTransition = null), s = b.index, a.active = b.index, g(s), p.select(q[i(b)]), 1 === q.length && a.play())
    }, p.getCurrentIndex = function () {
      for (var a = 0; a < q.length; a++) if (q[a].slide.index === s) return a
    }, p.next = a.next = function () {
      var b = (p.getCurrentIndex() + 1) % q.length;
      return 0 === b && a.noWrap() ? void a.pause() : p.select(q[b], "next")
    }, p.prev = a.prev = function () {
      var b = p.getCurrentIndex() - 1 < 0 ? q.length - 1 : p.getCurrentIndex() - 1;
      return a.noWrap() && b === q.length - 1 ? void a.pause() : p.select(q[b], "prev")
    }, p.removeSlide = function (b) {
      var c = i(b), d = t.indexOf(q[c]);
      -1 !== d && t.splice(d, 1), q.splice(c, 1), q.length > 0 && s === c ? c >= q.length ? (s = q.length - 1, a.active = s, g(s), p.select(q[q.length - 1])) : (s = c, a.active = s, g(s), p.select(q[c])) : s > c && (s--, a.active = s), 0 === q.length && (s = null, a.active = null, f())
    }, p.select = a.select = function (b, c) {
      var d = i(b.slide);
      void 0 === c && (c = d > p.getCurrentIndex() ? "next" : "prev"), b.slide.index === s || a.$currentTransition ? b && b.slide.index !== s && a.$currentTransition && t.push(q[d]) : h(b.slide, d, c)
    }, a.indexOfSlide = function (a) {
      return +a.slide.index
    }, a.isActive = function (b) {
      return a.active === b.slide.index
    }, a.isPrevDisabled = function () {
      return 0 === a.active && a.noWrap()
    }, a.isNextDisabled = function () {
      return a.active === q.length - 1 && a.noWrap()
    }, a.pause = function () {
      a.noPause || (o = !1, j())
    }, a.play = function () {
      o || (o = !0, l())
    }, a.$on("$destroy", function () {
      u = !0, j()
    }), a.$watch("noTransition", function (a) {
      e.enabled(b, !a)
    }), a.$watch("interval", l), a.$watchCollection("slides", k), a.$watch("active", function (a) {
      if (angular.isNumber(a) && s !== a) {
        for (var b = 0; b < q.length; b++) if (q[b].slide.index === a) {
          a = b;
          break
        }
        q[a] && (g(a), p.select(q[a]), s = a)
      }
    })
  }]).directive("uibCarousel", function () {
    return {
      transclude:   !0,
      replace:      !0,
      controller:   "UibCarouselController",
      controllerAs: "carousel",
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/carousel/carousel.html"
      },
      scope:        {active: "=", interval: "=", noTransition: "=", noPause: "=", noWrap: "&"}
    }
  }).directive("uibSlide", function () {
    return {
      require:  "^uibCarousel", transclude: !0, replace: !0, templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/carousel/slide.html"
      }, scope: {actual: "=?", index: "=?"}, link: function (a, b, c, d) {
        d.addSlide(a, b), a.$on("$destroy", function () {
          d.removeSlide(a)
        })
      }
    }
  }).animation(".item", ["$animateCss", function (a) {
    function b(a, b, c) {
      a.removeClass(b), c && c()
    }

    var c = "uib-slideDirection";
    return {
      beforeAddClass:       function (d, e, f) {
        if ("active" === e) {
          var g = !1, h = d.data(c), i = "next" === h ? "left" : "right", j = b.bind(this, d, i + " " + h, f);
          return d.addClass(h), a(d, {addClass: i}).start().done(j), function () {
            g = !0
          }
        }
        f()
      }, beforeRemoveClass: function (d, e, f) {
        if ("active" === e) {
          var g = !1, h = d.data(c), i = "next" === h ? "left" : "right", j = b.bind(this, d, i, f);
          return a(d, {addClass: i}).start().done(j), function () {
            g = !0
          }
        }
        f()
      }
    }
  }]), angular.module("ui.bootstrap.dateparser", []).service("uibDateParser", ["$log", "$locale", "dateFilter", "orderByFilter", function (a, b, c, d) {
    function e(a, b) {
      var c = [], e = a.split(""), f = a.indexOf("'");
      if (f > -1) {
        var g = !1;
        a     = a.split("");
        for (var h = f; h < a.length; h++) g ? ("'" === a[h] && (h + 1 < a.length && "'" === a[h + 1] ? (a[h + 1] = "$", e[h + 1] = "") : (e[h] = "", g = !1)), a[h] = "$") : "'" === a[h] && (a[h] = "$", e[h] = "", g = !0);
        a = a.join("")
      }
      return angular.forEach(n, function (d) {
        var f = a.indexOf(d.key);
        if (f > -1) {
          a = a.split(""), e[f] = "(" + d.regex + ")", a[f] = "$";
          for (var g = f + 1, h = f + d.key.length; h > g; g++) e[g] = "", a[g] = "$";
          a = a.join(""), c.push({index: f, key: d.key, apply: d[b], matcher: d.regex})
        }
      }), {regex: new RegExp("^" + e.join("") + "$"), map: d(c, "index")}
    }

    function f(a, b, c) {
      return !(1 > c) && (1 === b && c > 28 ? 29 === c && (a % 4 == 0 && a % 100 != 0 || a % 400 == 0) : 3 !== b && 5 !== b && 8 !== b && 10 !== b || 31 > c)
    }

    function g(a) {
      return parseInt(a, 10)
    }

    function h(a, b) {
      return a && b ? l(a, b) : a
    }

    function i(a, b) {
      return a && b ? l(a, b, !0) : a
    }

    function j(a, b) {
      var c = Date.parse("Jan 01, 1970 00:00:00 " + a) / 6e4;
      return isNaN(c) ? b : c
    }

    function k(a, b) {
      return a = new Date(a.getTime()), a.setMinutes(a.getMinutes() + b), a
    }

    function l(a, b, c) {
      return c = c ? -1 : 1, k(a, c * (j(b, a.getTimezoneOffset()) - a.getTimezoneOffset()))
    }

    var m, n, o = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
    this.init = function () {
      m = b.id, this.parsers = {}, this.formatters = {}, n = [{
        key:          "yyyy", regex: "\\d{4}", apply: function (a) {
          this.year = +a
        }, formatter: function (a) {
          var b = new Date;
          return b.setFullYear(Math.abs(a.getFullYear())), c(b, "yyyy")
        }
      }, {
        key:          "yy", regex: "\\d{2}", apply: function (a) {
          a = +a, this.year = 69 > a ? a + 2e3 : a + 1900
        }, formatter: function (a) {
          var b = new Date;
          return b.setFullYear(Math.abs(a.getFullYear())), c(b, "yy")
        }
      }, {
        key:          "y", regex: "\\d{1,4}", apply: function (a) {
          this.year = +a
        }, formatter: function (a) {
          var b = new Date;
          return b.setFullYear(Math.abs(a.getFullYear())), c(b, "y")
        }
      }, {
        key:          "M!", regex: "0?[1-9]|1[0-2]", apply: function (a) {
          this.month = a - 1
        }, formatter: function (a) {
          return /^[0-9]$/.test(a.getMonth()) ? c(a, "MM") : c(a, "M")
        }
      }, {
        key:          "MMMM", regex: b.DATETIME_FORMATS.MONTH.join("|"), apply: function (a) {
          this.month = b.DATETIME_FORMATS.MONTH.indexOf(a)
        }, formatter: function (a) {
          return c(a, "MMMM")
        }
      }, {
        key:          "MMM", regex: b.DATETIME_FORMATS.SHORTMONTH.join("|"), apply: function (a) {
          this.month = b.DATETIME_FORMATS.SHORTMONTH.indexOf(a)
        }, formatter: function (a) {
          return c(a, "MMM")
        }
      }, {
        key:          "MM", regex: "0[1-9]|1[0-2]", apply: function (a) {
          this.month = a - 1
        }, formatter: function (a) {
          return c(a, "MM")
        }
      }, {
        key:          "M", regex: "[1-9]|1[0-2]", apply: function (a) {
          this.month = a - 1
        }, formatter: function (a) {
          return c(a, "M")
        }
      }, {
        key:          "d!", regex: "[0-2]?[0-9]{1}|3[0-1]{1}", apply: function (a) {
          this.date = +a
        }, formatter: function (a) {
          return /^[1-9]$/.test(a.getDate()) ? c(a, "dd") : c(a, "d")
        }
      }, {
        key:          "dd", regex: "[0-2][0-9]{1}|3[0-1]{1}", apply: function (a) {
          this.date = +a
        }, formatter: function (a) {
          return c(a, "dd")
        }
      }, {
        key:          "d", regex: "[1-2]?[0-9]{1}|3[0-1]{1}", apply: function (a) {
          this.date = +a
        }, formatter: function (a) {
          return c(a, "d")
        }
      }, {
        key: "EEEE", regex: b.DATETIME_FORMATS.DAY.join("|"), formatter: function (a) {
          return c(a, "EEEE")
        }
      }, {
        key: "EEE", regex: b.DATETIME_FORMATS.SHORTDAY.join("|"), formatter: function (a) {
          return c(a, "EEE")
        }
      }, {
        key:          "HH", regex: "(?:0|1)[0-9]|2[0-3]", apply: function (a) {
          this.hours = +a
        }, formatter: function (a) {
          return c(a, "HH")
        }
      }, {
        key:          "hh", regex: "0[0-9]|1[0-2]", apply: function (a) {
          this.hours = +a
        }, formatter: function (a) {
          return c(a, "hh")
        }
      }, {
        key:          "H", regex: "1?[0-9]|2[0-3]", apply: function (a) {
          this.hours = +a
        }, formatter: function (a) {
          return c(a, "H")
        }
      }, {
        key:          "h", regex: "[0-9]|1[0-2]", apply: function (a) {
          this.hours = +a
        }, formatter: function (a) {
          return c(a, "h")
        }
      }, {
        key:          "mm", regex: "[0-5][0-9]", apply: function (a) {
          this.minutes = +a
        }, formatter: function (a) {
          return c(a, "mm")
        }
      }, {
        key:          "m", regex: "[0-9]|[1-5][0-9]", apply: function (a) {
          this.minutes = +a
        }, formatter: function (a) {
          return c(a, "m")
        }
      }, {
        key:          "sss", regex: "[0-9][0-9][0-9]", apply: function (a) {
          this.milliseconds = +a
        }, formatter: function (a) {
          return c(a, "sss")
        }
      }, {
        key:          "ss", regex: "[0-5][0-9]", apply: function (a) {
          this.seconds = +a
        }, formatter: function (a) {
          return c(a, "ss")
        }
      }, {
        key:          "s", regex: "[0-9]|[1-5][0-9]", apply: function (a) {
          this.seconds = +a
        }, formatter: function (a) {
          return c(a, "s")
        }
      }, {
        key:          "a", regex: b.DATETIME_FORMATS.AMPMS.join("|"), apply: function (a) {
          12 === this.hours && (this.hours = 0), "PM" === a && (this.hours += 12)
        }, formatter: function (a) {
          return c(a, "a")
        }
      }, {
        key:          "Z", regex: "[+-]\\d{4}", apply: function (a) {
          var b = a.match(/([+-])(\d{2})(\d{2})/), c = b[1], d = b[2], e = b[3];
          this.hours += g(c + d), this.minutes += g(c + e)
        }, formatter: function (a) {
          return c(a, "Z")
        }
      }, {
        key: "ww", regex: "[0-4][0-9]|5[0-3]", formatter: function (a) {
          return c(a, "ww")
        }
      }, {
        key: "w", regex: "[0-9]|[1-4][0-9]|5[0-3]", formatter: function (a) {
          return c(a, "w")
        }
      }, {
        key: "GGGG", regex: b.DATETIME_FORMATS.ERANAMES.join("|").replace(/\s/g, "\\s"), formatter: function (a) {
          return c(a, "GGGG")
        }
      }, {
        key: "GGG", regex: b.DATETIME_FORMATS.ERAS.join("|"), formatter: function (a) {
          return c(a, "GGG")
        }
      }, {
        key: "GG", regex: b.DATETIME_FORMATS.ERAS.join("|"), formatter: function (a) {
          return c(a, "GG")
        }
      }, {
        key: "G", regex: b.DATETIME_FORMATS.ERAS.join("|"), formatter: function (a) {
          return c(a, "G")
        }
      }]
    }, this.init(), this.filter = function (a, c) {
      if (!angular.isDate(a) || isNaN(a) || !c) return "";
      c = b.DATETIME_FORMATS[c] || c, b.id !== m && this.init(), this.formatters[c] || (this.formatters[c] = e(c, "formatter"));
      var d = this.formatters[c], f = d.map, g = c;
      return f.reduce(function (b, c, d) {
        var e = g.match(new RegExp("(.*)" + c.key));
        e && angular.isString(e[1]) && (b += e[1], g = g.replace(e[1] + c.key, ""));
        var h = d === f.length - 1 ? g : "";
        return c.apply ? b + c.apply.call(null, a) + h : b + h
      }, "")
    }, this.parse = function (c, d, g) {
      if (!angular.isString(c) || !d) return c;
      d = b.DATETIME_FORMATS[d] || d, d = d.replace(o, "\\$&"), b.id !== m && this.init(), this.parsers[d] || (this.parsers[d] = e(d, "apply"));
      var h = this.parsers[d], i = h.regex, j = h.map, k = c.match(i), l = !1;
      if (k && k.length) {
        var n, p;
        angular.isDate(g) && !isNaN(g.getTime()) ? n = {
          year:         g.getFullYear(),
          month:        g.getMonth(),
          date:         g.getDate(),
          hours:        g.getHours(),
          minutes:      g.getMinutes(),
          seconds:      g.getSeconds(),
          milliseconds: g.getMilliseconds()
        } : (g && a.warn("dateparser:", "baseDate is not a valid date"), n = {
          year:         1900,
          month:        0,
          date:         1,
          hours:        0,
          minutes:      0,
          seconds:      0,
          milliseconds: 0
        });
        for (var q = 1, r = k.length; r > q; q++) {
          var s = j[q - 1];
          "Z" === s.matcher && (l = !0), s.apply && s.apply.call(n, k[q])
        }
        var t = l ? Date.prototype.setUTCFullYear : Date.prototype.setFullYear,
            u = l ? Date.prototype.setUTCHours : Date.prototype.setHours;
        return f(n.year, n.month, n.date) && (!angular.isDate(g) || isNaN(g.getTime()) || l ? (p = new Date(0), t.call(p, n.year, n.month, n.date), u.call(p, n.hours || 0, n.minutes || 0, n.seconds || 0, n.milliseconds || 0)) : (p = new Date(g), t.call(p, n.year, n.month, n.date), u.call(p, n.hours, n.minutes, n.seconds, n.milliseconds))), p
      }
    }, this.toTimezone = h, this.fromTimezone = i, this.timezoneToOffset = j, this.addDateMinutes = k, this.convertTimezoneToLocal = l
  }]), angular.module("ui.bootstrap.isClass", []).directive("uibIsClass", ["$animate", function (a) {
    var b = /^\s*([\s\S]+?)\s+on\s+([\s\S]+?)\s*$/, c = /^\s*([\s\S]+?)\s+for\s+([\s\S]+?)\s*$/;
    return {
      restrict: "A", compile: function (d, e) {
        function f(a, b, c) {
          i.push(a), j.push({scope: a, element: b}), o.forEach(function (b, c) {
            g(b, a)
          }), a.$on("$destroy", h)
        }

        function g(b, d) {
          var e = b.match(c), f = d.$eval(e[1]), g = e[2], h = k[b];
          if (!h) {
            var i = function (b) {
              var c = null;
              j.some(function (a) {
                return a.scope.$eval(m) === b ? (c = a, !0) : void 0
              }), h.lastActivated !== c && (h.lastActivated && a.removeClass(h.lastActivated.element, f), c && a.addClass(c.element, f), h.lastActivated = c)
            };
            k[b]  = h = {lastActivated: null, scope: d, watchFn: i, compareWithExp: g, watcher: d.$watch(g, i)}
          }
          h.watchFn(d.$eval(g))
        }

        function h(a) {
          var b = a.targetScope, c = i.indexOf(b);
          if (i.splice(c, 1), j.splice(c, 1), i.length) {
            var d = i[0];
            angular.forEach(k, function (a) {
              a.scope === b && (a.watcher = d.$watch(a.compareWithExp, a.watchFn), a.scope = d)
            })
          } else k = {}
        }

        var i = [], j = [], k = {}, l = e.uibIsClass.match(b), m = l[2], n = l[1], o = n.split(",");
        return f
      }
    }
  }]), angular.module("ui.bootstrap.datepicker", ["ui.bootstrap.dateparser", "ui.bootstrap.isClass"]).value("$datepickerSuppressError", !1).value("$datepickerLiteralWarning", !0).constant("uibDatepickerConfig", {
    datepickerMode:      "day",
    formatDay:           "dd",
    formatMonth:         "MMMM",
    formatYear:          "yyyy",
    formatDayHeader:     "EEE",
    formatDayTitle:      "MMMM yyyy",
    formatMonthTitle:    "yyyy",
    maxDate:             null,
    maxMode:             "year",
    minDate:             null,
    minMode:             "day",
    ngModelOptions:      {},
    shortcutPropagation: !1,
    showWeeks:           !0,
    yearColumns:         5,
    yearRows:            4
  }).controller("UibDatepickerController", ["$scope", "$attrs", "$parse", "$interpolate", "$locale", "$log", "dateFilter", "uibDatepickerConfig", "$datepickerLiteralWarning", "$datepickerSuppressError", "uibDateParser", function (a, b, c, d, e, f, g, h, i, j, k) {
    function l(b) {
      a.datepickerMode = b, a.datepickerOptions.datepickerMode = b
    }

    var m = this, n = {$setViewValue: angular.noop}, o = {}, p = [];
    b.datepickerOptions, a.datepickerOptions || (a.datepickerOptions = {}), this.modes = ["day", "month", "year"], ["customClass", "dateDisabled", "datepickerMode", "formatDay", "formatDayHeader", "formatDayTitle", "formatMonth", "formatMonthTitle", "formatYear", "maxDate", "maxMode", "minDate", "minMode", "showWeeks", "shortcutPropagation", "startingDay", "yearColumns", "yearRows"].forEach(function (b) {
      switch (b) {
        case"customClass":
        case"dateDisabled":
          a[b] = a.datepickerOptions[b] || angular.noop;
          break;
        case"datepickerMode":
          a.datepickerMode = angular.isDefined(a.datepickerOptions.datepickerMode) ? a.datepickerOptions.datepickerMode : h.datepickerMode;
          break;
        case"formatDay":
        case"formatDayHeader":
        case"formatDayTitle":
        case"formatMonth":
        case"formatMonthTitle":
        case"formatYear":
          m[b] = angular.isDefined(a.datepickerOptions[b]) ? d(a.datepickerOptions[b])(a.$parent) : h[b];
          break;
        case"showWeeks":
        case"shortcutPropagation":
        case"yearColumns":
        case"yearRows":
          m[b] = angular.isDefined(a.datepickerOptions[b]) ? a.datepickerOptions[b] : h[b];
          break;
        case"startingDay":
          angular.isDefined(a.datepickerOptions.startingDay) ? m.startingDay = a.datepickerOptions.startingDay : angular.isNumber(h.startingDay) ? m.startingDay = h.startingDay : m.startingDay = (e.DATETIME_FORMATS.FIRSTDAYOFWEEK + 8) % 7;
          break;
        case"maxDate":
        case"minDate":
          a.$watch("datepickerOptions." + b, function (a) {
            a ? angular.isDate(a) ? m[b] = k.fromTimezone(new Date(a), o.timezone) : (i && f.warn("Literal date support has been deprecated, please switch to date object usage"), m[b] = new Date(g(a, "medium"))) : m[b] = h[b] ? k.fromTimezone(new Date(h[b]), o.timezone) : null, m.refreshView()
          });
          break;
        case"maxMode":
        case"minMode":
          a.datepickerOptions[b] ? a.$watch(function () {
            return a.datepickerOptions[b]
          }, function (c) {
            m[b] = a[b] = angular.isDefined(c) ? c : datepickerOptions[b], ("minMode" === b && m.modes.indexOf(a.datepickerOptions.datepickerMode) < m.modes.indexOf(m[b]) || "maxMode" === b && m.modes.indexOf(a.datepickerOptions.datepickerMode) > m.modes.indexOf(m[b])) && (a.datepickerMode = m[b], a.datepickerOptions.datepickerMode = m[b])
          }) : m[b] = a[b] = h[b] || null
      }
    }), a.uniqueId = "datepicker-" + a.$id + "-" + Math.floor(1e4 * Math.random()), a.disabled = angular.isDefined(b.disabled) || !1, angular.isDefined(b.ngDisabled) && p.push(a.$parent.$watch(b.ngDisabled, function (b) {
      a.disabled = b, m.refreshView()
    })), a.isActive = function (b) {
      return 0 === m.compare(b.date, m.activeDate) && (a.activeDateId = b.uid, !0)
    }, this.init = function (b) {
      n = b, o = b.$options || h.ngModelOptions, a.datepickerOptions.initDate ? (m.activeDate = k.fromTimezone(a.datepickerOptions.initDate, o.timezone) || new Date, a.$watch("datepickerOptions.initDate", function (a) {
        a && (n.$isEmpty(n.$modelValue) || n.$invalid) && (m.activeDate = k.fromTimezone(a, o.timezone), m.refreshView())
      })) : m.activeDate = new Date, this.activeDate = n.$modelValue ? k.fromTimezone(new Date(n.$modelValue), o.timezone) : k.fromTimezone(new Date, o.timezone), n.$render = function () {
        m.render()
      }
    }, this.render = function () {
      if (n.$viewValue) {
        var a = new Date(n.$viewValue);
        !isNaN(a) ? this.activeDate = k.fromTimezone(a, o.timezone) : j || f.error('Datepicker directive: "ng-model" value must be a Date object')
      }
      this.refreshView()
    }, this.refreshView = function () {
      if (this.element) {
        a.selectedDt = null, this._refreshView(), a.activeDt && (a.activeDateId = a.activeDt.uid);
        var b = n.$viewValue ? new Date(n.$viewValue) : null;
        b = k.fromTimezone(b, o.timezone), n.$setValidity("dateDisabled", !b || this.element && !this.isDisabled(b))
      }
    }, this.createDateObject = function (b, c) {
      var d = n.$viewValue ? new Date(n.$viewValue) : null;
      d     = k.fromTimezone(d, o.timezone);
      var e = new Date;
      e     = k.fromTimezone(e, o.timezone);
      var f = this.compare(b, e), g = {
        date:        b,
        label:       k.filter(b, c),
        selected:    d && 0 === this.compare(b, d),
        disabled:    this.isDisabled(b),
        past:        0 > f,
        current:     0 === f,
        future:      f > 0,
        customClass: this.customClass(b) || null
      };
      return d && 0 === this.compare(b, d) && (a.selectedDt = g), m.activeDate && 0 === this.compare(g.date, m.activeDate) && (a.activeDt = g), g
    }, this.isDisabled = function (b) {
      return a.disabled || this.minDate && this.compare(b, this.minDate) < 0 || this.maxDate && this.compare(b, this.maxDate) > 0 || a.dateDisabled && a.dateDisabled({
        date: b,
        mode: a.datepickerMode
      })
    }, this.customClass = function (b) {
      return a.customClass({date: b, mode: a.datepickerMode})
    }, this.split = function (a, b) {
      for (var c = []; a.length > 0;) c.push(a.splice(0, b));
      return c
    }, a.select = function (b) {
      if (a.datepickerMode === m.minMode) {
        var c = n.$viewValue ? k.fromTimezone(new Date(n.$viewValue), o.timezone) : new Date(0, 0, 0, 0, 0, 0, 0);
        c.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()), c = k.toTimezone(c, o.timezone), n.$setViewValue(c), n.$render()
      } else m.activeDate = b, l(m.modes[m.modes.indexOf(a.datepickerMode) - 1]), a.$emit("uib:datepicker.mode")
    }, a.move = function (a) {
      var b = m.activeDate.getFullYear() + a * (m.step.years || 0),
          c = m.activeDate.getMonth() + a * (m.step.months || 0);
      m.activeDate.setFullYear(b, c, 1), m.refreshView()
    }, a.toggleMode = function (b) {
      b = b || 1, a.datepickerMode === m.maxMode && 1 === b || a.datepickerMode === m.minMode && -1 === b || (l(m.modes[m.modes.indexOf(a.datepickerMode) + b]), a.$emit("uib:datepicker.mode"))
    }, a.keys = {
      13: "enter",
      32: "space",
      33: "pageup",
      34: "pagedown",
      35: "end",
      36: "home",
      37: "left",
      38: "up",
      39: "right",
      40: "down"
    };
    var q = function () {
      m.element[0].focus()
    };
    a.$on("uib:datepicker.focus", q), a.keydown = function (b) {
      var c = a.keys[b.which];
      if (c && !b.shiftKey && !b.altKey && !a.disabled) if (b.preventDefault(), m.shortcutPropagation || b.stopPropagation(), "enter" === c || "space" === c) {
        if (m.isDisabled(m.activeDate)) return;
        a.select(m.activeDate)
      } else !b.ctrlKey || "up" !== c && "down" !== c ? (m.handleKeyDown(c, b), m.refreshView()) : a.toggleMode("up" === c ? 1 : -1)
    }, a.$on("$destroy", function () {
      for (; p.length;) p.shift()()
    })
  }]).controller("UibDaypickerController", ["$scope", "$element", "dateFilter", function (a, b, c) {
    function d(a, b) {
      return 1 !== b || a % 4 != 0 || a % 100 == 0 && a % 400 != 0 ? f[b] : 29
    }

    function e(a) {
      var b = new Date(a);
      b.setDate(b.getDate() + 4 - (b.getDay() || 7));
      var c = b.getTime();
      return b.setMonth(0), b.setDate(1), Math.floor(Math.round((c - b) / 864e5) / 7) + 1
    }

    var f = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    this.step = {months: 1}, this.element = b, this.init = function (b) {
      angular.extend(b, this), a.showWeeks = b.showWeeks, b.refreshView()
    }, this.getDates = function (a, b) {
      for (var c, d = new Array(b), e = new Date(a), f = 0; b > f;) c = new Date(e), d[f++] = c, e.setDate(e.getDate() + 1);
      return d
    }, this._refreshView = function () {
      var b = this.activeDate.getFullYear(), d = this.activeDate.getMonth(), f = new Date(this.activeDate);
      f.setFullYear(b, d, 1);
      var g = this.startingDay - f.getDay(), h = g > 0 ? 7 - g : -g, i = new Date(f);
      h > 0 && i.setDate(1 - h);
      for (var j = this.getDates(i, 42), k = 0; 42 > k; k++) j[k] = angular.extend(this.createDateObject(j[k], this.formatDay), {
        secondary: j[k].getMonth() !== d,
        uid:       a.uniqueId + "-" + k
      });
      a.labels = new Array(7);
      for (var l = 0; 7 > l; l++) a.labels[l] = {abbr: c(j[l].date, this.formatDayHeader), full: c(j[l].date, "EEEE")};
      if (a.title = c(this.activeDate, this.formatDayTitle), a.rows = this.split(j, 7), a.showWeeks) {
        a.weekNumbers = [];
        for (var m = (11 - this.startingDay) % 7, n = a.rows.length, o = 0; n > o; o++) a.weekNumbers.push(e(a.rows[o][m].date))
      }
    }, this.compare = function (a, b) {
      var c = new Date(a.getFullYear(), a.getMonth(), a.getDate()),
          d = new Date(b.getFullYear(), b.getMonth(), b.getDate());
      return c.setFullYear(a.getFullYear()), d.setFullYear(b.getFullYear()), c - d
    }, this.handleKeyDown = function (a, b) {
      var c = this.activeDate.getDate();
      if ("left" === a) c -= 1; else if ("up" === a) c -= 7; else if ("right" === a) c += 1; else if ("down" === a) c += 7; else if ("pageup" === a || "pagedown" === a) {
        var e = this.activeDate.getMonth() + ("pageup" === a ? -1 : 1);
        this.activeDate.setMonth(e, 1), c = Math.min(d(this.activeDate.getFullYear(), this.activeDate.getMonth()), c)
      } else "home" === a ? c = 1 : "end" === a && (c = d(this.activeDate.getFullYear(), this.activeDate.getMonth()));
      this.activeDate.setDate(c)
    }
  }]).controller("UibMonthpickerController", ["$scope", "$element", "dateFilter", function (a, b, c) {
    this.step = {years: 1}, this.element = b, this.init = function (a) {
      angular.extend(a, this), a.refreshView()
    }, this._refreshView = function () {
      for (var b, d = new Array(12), e = this.activeDate.getFullYear(), f = 0; 12 > f; f++) b = new Date(this.activeDate), b.setFullYear(e, f, 1), d[f] = angular.extend(this.createDateObject(b, this.formatMonth), {uid: a.uniqueId + "-" + f});
      a.title = c(this.activeDate, this.formatMonthTitle), a.rows = this.split(d, 3)
    }, this.compare = function (a, b) {
      var c = new Date(a.getFullYear(), a.getMonth()), d = new Date(b.getFullYear(), b.getMonth());
      return c.setFullYear(a.getFullYear()), d.setFullYear(b.getFullYear()), c - d
    }, this.handleKeyDown = function (a, b) {
      var c = this.activeDate.getMonth();
      if ("left" === a) c -= 1; else if ("up" === a) c -= 3; else if ("right" === a) c += 1; else if ("down" === a) c += 3; else if ("pageup" === a || "pagedown" === a) {
        var d = this.activeDate.getFullYear() + ("pageup" === a ? -1 : 1);
        this.activeDate.setFullYear(d)
      } else "home" === a ? c = 0 : "end" === a && (c = 11);
      this.activeDate.setMonth(c)
    }
  }]).controller("UibYearpickerController", ["$scope", "$element", "dateFilter", function (a, b, c) {
    function d(a) {
      return parseInt((a - 1) / f, 10) * f + 1
    }

    var e, f;
    this.element = b, this.yearpickerInit = function () {
      e = this.yearColumns, f = this.yearRows * e, this.step = {years: f}
    }, this._refreshView = function () {
      for (var b, c = new Array(f), g = 0, h = d(this.activeDate.getFullYear()); f > g; g++) b = new Date(this.activeDate), b.setFullYear(h + g, 0, 1), c[g] = angular.extend(this.createDateObject(b, this.formatYear), {uid: a.uniqueId + "-" + g});
      a.title = [c[0].label, c[f - 1].label].join(" - "), a.rows = this.split(c, e), a.columns = e
    }, this.compare = function (a, b) {
      return a.getFullYear() - b.getFullYear()
    }, this.handleKeyDown = function (a, b) {
      var c = this.activeDate.getFullYear();
      "left" === a ? c -= 1 : "up" === a ? c -= e : "right" === a ? c += 1 : "down" === a ? c += e : "pageup" === a || "pagedown" === a ? c += ("pageup" === a ? -1 : 1) * f : "home" === a ? c = d(this.activeDate.getFullYear()) : "end" === a && (c = d(this.activeDate.getFullYear()) + f - 1), this.activeDate.setFullYear(c)
    }
  }]).directive("uibDatepicker", function () {
    return {
      replace:      !0,
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/datepicker/datepicker.html"
      },
      scope:        {datepickerOptions: "=?"},
      require:      ["uibDatepicker", "^ngModel"],
      controller:   "UibDatepickerController",
      controllerAs: "datepicker",
      link:         function (a, b, c, d) {
        var e = d[0], f = d[1];
        e.init(f)
      }
    }
  }).directive("uibDaypicker", function () {
    return {
      replace:     !0,
      templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/datepicker/day.html"
      },
      require:     ["^uibDatepicker", "uibDaypicker"],
      controller:  "UibDaypickerController",
      link:        function (a, b, c, d) {
        var e = d[0];
        d[1].init(e)
      }
    }
  }).directive("uibMonthpicker", function () {
    return {
      replace:     !0,
      templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/datepicker/month.html"
      },
      require:     ["^uibDatepicker", "uibMonthpicker"],
      controller:  "UibMonthpickerController",
      link:        function (a, b, c, d) {
        var e = d[0];
        d[1].init(e)
      }
    }
  }).directive("uibYearpicker", function () {
    return {
      replace:     !0,
      templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/datepicker/year.html"
      },
      require:     ["^uibDatepicker", "uibYearpicker"],
      controller:  "UibYearpickerController",
      link:        function (a, b, c, d) {
        var e = d[0];
        angular.extend(e, d[1]), e.yearpickerInit(), e.refreshView()
      }
    }
  }), angular.module("ui.bootstrap.position", []).factory("$uibPosition", ["$document", "$window", function (a, b) {
    var c, d, e = {normal: /(auto|scroll)/, hidden: /(auto|scroll|hidden)/}, f = {
      auto:      /\s?auto?\s?/i,
      primary:   /^(top|bottom|left|right)$/,
      secondary: /^(top|bottom|left|right|center)$/,
      vertical:  /^(top|bottom)$/
    }, g        = /(HTML|BODY)/;
    return {
      getRawNode:          function (a) {
        return a.nodeName ? a : a[0] || a
      }, parseStyle:       function (a) {
        return a = parseFloat(a), isFinite(a) ? a : 0
      }, offsetParent:     function (c) {
        c = this.getRawNode(c);
        for (var e = c.offsetParent || a[0].documentElement; e && e !== a[0].documentElement && function (a) {
          return "static" === (b.getComputedStyle(a).position || "static")
        }(e);) e = e.offsetParent;
        return e || a[0].documentElement
      }, scrollbarWidth:   function (e) {
        if (e) {
          if (angular.isUndefined(d)) {
            var f = a.find("body");
            f.addClass("uib-position-body-scrollbar-measure"), d = b.innerWidth - f[0].clientWidth, d = isFinite(d) ? d : 0, f.removeClass("uib-position-body-scrollbar-measure")
          }
          return d
        }
        if (angular.isUndefined(c)) {
          var g = angular.element('<div class="uib-position-scrollbar-measure"></div>');
          a.find("body").append(g), c = g[0].offsetWidth - g[0].clientWidth, c = isFinite(c) ? c : 0, g.remove()
        }
        return c
      }, scrollbarPadding: function (a) {
        a                                                                     = this.getRawNode(a);
        var c = b.getComputedStyle(a), d = this.parseStyle(c.paddingRight), e = this.parseStyle(c.paddingBottom),
            f                                                                 = this.scrollParent(a, !1, !0), h                               = this.scrollbarWidth(f, g.test(f.tagName));
        return {
          scrollbarWidth: h,
          widthOverflow:  f.scrollWidth > f.clientWidth,
          right:          d + h,
          originalRight:  d,
          heightOverflow: f.scrollHeight > f.clientHeight,
          bottom:         e + h,
          originalBottom: e
        }
      }, isScrollable:     function (a, c) {
        a     = this.getRawNode(a);
        var d = c ? e.hidden : e.normal, f = b.getComputedStyle(a);
        return d.test(f.overflow + f.overflowY + f.overflowX)
      }, scrollParent:     function (c, d, f) {
        c     = this.getRawNode(c);
        var g = d ? e.hidden : e.normal, h = a[0].documentElement, i = b.getComputedStyle(c);
        if (f && g.test(i.overflow + i.overflowY + i.overflowX)) return c;
        var j = "absolute" === i.position, k = c.parentElement || h;
        if (k === h || "fixed" === i.position) return h;
        for (; k.parentElement && k !== h;) {
          var l = b.getComputedStyle(k);
          if (j && "static" !== l.position && (j = !1), !j && g.test(l.overflow + l.overflowY + l.overflowX)) break;
          k = k.parentElement
        }
        return k
      }, position:         function (c, d) {
        c     = this.getRawNode(c);
        var e = this.offset(c);
        if (d) {
          var f = b.getComputedStyle(c);
          e.top -= this.parseStyle(f.marginTop), e.left -= this.parseStyle(f.marginLeft)
        }
        var g = this.offsetParent(c), h = {top: 0, left: 0};
        return g !== a[0].documentElement && (h = this.offset(g), h.top += g.clientTop - g.scrollTop, h.left += g.clientLeft - g.scrollLeft), {
          width:  Math.round(angular.isNumber(e.width) ? e.width : c.offsetWidth),
          height: Math.round(angular.isNumber(e.height) ? e.height : c.offsetHeight),
          top:    Math.round(e.top - h.top),
          left:   Math.round(e.left - h.left)
        }
      }, offset:           function (c) {
        c     = this.getRawNode(c);
        var d = c.getBoundingClientRect();
        return {
          width:  Math.round(angular.isNumber(d.width) ? d.width : c.offsetWidth),
          height: Math.round(angular.isNumber(d.height) ? d.height : c.offsetHeight),
          top:    Math.round(d.top + (b.pageYOffset || a[0].documentElement.scrollTop)),
          left:   Math.round(d.left + (b.pageXOffset || a[0].documentElement.scrollLeft))
        }
      }, viewportOffset:   function (c, d, e) {
        c = this.getRawNode(c), e = !1 !== e;
        var f                                                      = c.getBoundingClientRect(), g = {top: 0, left: 0, bottom: 0, right: 0},
            h = d ? a[0].documentElement : this.scrollParent(c), i = h.getBoundingClientRect();
        if (g.top = i.top + h.clientTop, g.left = i.left + h.clientLeft, h === a[0].documentElement && (g.top += b.pageYOffset, g.left += b.pageXOffset), g.bottom = g.top + h.clientHeight, g.right = g.left + h.clientWidth, e) {
          var j = b.getComputedStyle(h);
          g.top += this.parseStyle(j.paddingTop), g.bottom -= this.parseStyle(j.paddingBottom), g.left += this.parseStyle(j.paddingLeft), g.right -= this.parseStyle(j.paddingRight)
        }
        return {
          top:    Math.round(f.top - g.top),
          bottom: Math.round(g.bottom - f.bottom),
          left:   Math.round(f.left - g.left),
          right:  Math.round(g.right - f.right)
        }
      }, parsePlacement:   function (a) {
        var b = f.auto.test(a);
        return b && (a = a.replace(f.auto, "")), a = a.split("-"), a[0] = a[0] || "top", f.primary.test(a[0]) || (a[0] = "top"), a[1] = a[1] || "center", f.secondary.test(a[1]) || (a[1] = "center"), a[2] = !!b, a
      }, positionElements: function (a, c, d, e) {
        a = this.getRawNode(a), c = this.getRawNode(c);
        var g                                            = angular.isDefined(c.offsetWidth) ? c.offsetWidth : c.prop("offsetWidth"),
            h                                            = angular.isDefined(c.offsetHeight) ? c.offsetHeight : c.prop("offsetHeight");
        d                                                = this.parsePlacement(d);
        var i = e ? this.offset(a) : this.position(a), j = {top: 0, left: 0, placement: ""};
        if (d[2]) {
          var k = this.viewportOffset(a, e), l = b.getComputedStyle(c), m = {
            width:  g + Math.round(Math.abs(this.parseStyle(l.marginLeft) + this.parseStyle(l.marginRight))),
            height: h + Math.round(Math.abs(this.parseStyle(l.marginTop) + this.parseStyle(l.marginBottom)))
          };
          if (d[0] = "top" === d[0] && m.height > k.top && m.height <= k.bottom ? "bottom" : "bottom" === d[0] && m.height > k.bottom && m.height <= k.top ? "top" : "left" === d[0] && m.width > k.left && m.width <= k.right ? "right" : "right" === d[0] && m.width > k.right && m.width <= k.left ? "left" : d[0], d[1] = "top" === d[1] && m.height - i.height > k.bottom && m.height - i.height <= k.top ? "bottom" : "bottom" === d[1] && m.height - i.height > k.top && m.height - i.height <= k.bottom ? "top" : "left" === d[1] && m.width - i.width > k.right && m.width - i.width <= k.left ? "right" : "right" === d[1] && m.width - i.width > k.left && m.width - i.width <= k.right ? "left" : d[1], "center" === d[1]) if (f.vertical.test(d[0])) {
            var n = i.width / 2 - g / 2;
            k.left + n < 0 && m.width - i.width <= k.right ? d[1] = "left" : k.right + n < 0 && m.width - i.width <= k.left && (d[1] = "right")
          } else {
            var o = i.height / 2 - m.height / 2;
            k.top + o < 0 && m.height - i.height <= k.bottom ? d[1] = "top" : k.bottom + o < 0 && m.height - i.height <= k.top && (d[1] = "bottom")
          }
        }
        switch (d[0]) {
          case"top":
            j.top = i.top - h;
            break;
          case"bottom":
            j.top = i.top + i.height;
            break;
          case"left":
            j.left = i.left - g;
            break;
          case"right":
            j.left = i.left + i.width
        }
        switch (d[1]) {
          case"top":
            j.top = i.top;
            break;
          case"bottom":
            j.top = i.top + i.height - h;
            break;
          case"left":
            j.left = i.left;
            break;
          case"right":
            j.left = i.left + i.width - g;
            break;
          case"center":
            f.vertical.test(d[0]) ? j.left = i.left + i.width / 2 - g / 2 : j.top = i.top + i.height / 2 - h / 2
        }
        return j.top = Math.round(j.top), j.left = Math.round(j.left), j.placement = "center" === d[1] ? d[0] : d[0] + "-" + d[1], j
      }, positionArrow:    function (a, c) {
        a     = this.getRawNode(a);
        var d = a.querySelector(".tooltip-inner, .popover-inner");
        if (d) {
          var e = angular.element(d).hasClass("tooltip-inner"),
              g = e ? a.querySelector(".tooltip-arrow") : a.querySelector(".arrow");
          if (g) {
            var h = {top: "", bottom: "", left: "", right: ""};
            if (c = this.parsePlacement(c), "center" === c[1]) return void angular.element(g).css(h);
            var i = "border-" + c[0] + "-width", j = b.getComputedStyle(g)[i], k = "border-";
            k += f.vertical.test(c[0]) ? c[0] + "-" + c[1] : c[1] + "-" + c[0], k += "-radius";
            var l = b.getComputedStyle(e ? d : a)[k];
            switch (c[0]) {
              case"top":
                h.bottom = e ? "0" : "-" + j;
                break;
              case"bottom":
                h.top = e ? "0" : "-" + j;
                break;
              case"left":
                h.right = e ? "0" : "-" + j;
                break;
              case"right":
                h.left = e ? "0" : "-" + j
            }
            h[c[1]] = l, angular.element(g).css(h)
          }
        }
      }
    }
  }]), angular.module("ui.bootstrap.datepickerPopup", ["ui.bootstrap.datepicker", "ui.bootstrap.position"]).value("$datepickerPopupLiteralWarning", !0).constant("uibDatepickerPopupConfig", {
    altInputFormats:            [],
    appendToBody:               !1,
    clearText:                  "Clear",
    closeOnDateSelection:       !0,
    closeText:                  "Done",
    currentText:                "Today",
    datepickerPopup:            "yyyy-MM-dd",
    datepickerPopupTemplateUrl: "uib/template/datepickerPopup/popup.html",
    datepickerTemplateUrl:      "uib/template/datepicker/datepicker.html",
    html5Types:                 {
      date:             "yyyy-MM-dd",
      "datetime-local": "yyyy-MM-ddTHH:mm:ss.sss",
      month:            "yyyy-MM"
    },
    onOpenFocus:                !0,
    showButtonBar:              !0,
    placement:                  "auto bottom-left"
  }).controller("UibDatepickerPopupController", ["$scope", "$element", "$attrs", "$compile", "$log", "$parse", "$window", "$document", "$rootScope", "$uibPosition", "dateFilter", "uibDateParser", "uibDatepickerPopupConfig", "$timeout", "uibDatepickerConfig", "$datepickerPopupLiteralWarning", function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    function q(b) {
      var c = l.parse(b, w, a.date);
      if (isNaN(c)) for (var d = 0; d < I.length; d++) if (c = l.parse(b, I[d], a.date), !isNaN(c)) return c;
      return c
    }

    function r(a) {
      if (angular.isNumber(a) && (a = new Date(a)), !a) return null;
      if (angular.isDate(a) && !isNaN(a)) return a;
      if (angular.isString(a)) {
        var b = q(a);
        if (!isNaN(b)) return l.toTimezone(b, J)
      }
      return F.$options && F.$options.allowInvalid ? a : void 0
    }

    function s(a, b) {
      var d = a || b;
      return !c.ngRequired && !d || (angular.isNumber(d) && (d = new Date(d)), !d || (!(!angular.isDate(d) || isNaN(d)) || !!angular.isString(d) && !isNaN(q(b))))
    }

    function t(c) {
      if (a.isOpen || !a.disabled) {
        var d = H[0], e = b[0].contains(c.target), f = void 0 !== d.contains && d.contains(c.target);
        !a.isOpen || e || f || a.$apply(function () {
          a.isOpen = !1
        })
      }
    }

    function u(c) {
      27 === c.which && a.isOpen ? (c.preventDefault(), c.stopPropagation(), a.$apply(function () {
        a.isOpen = !1
      }), b[0].focus()) : 40 !== c.which || a.isOpen || (c.preventDefault(), c.stopPropagation(), a.$apply(function () {
        a.isOpen = !0
      }))
    }

    function v() {
      if (a.isOpen) {
        var d                                                        = angular.element(H[0].querySelector(".uib-datepicker-popup")),
            e = c.popupPlacement ? c.popupPlacement : m.placement, f = j.positionElements(b, d, e, y);
        d.css({
          top:  f.top + "px",
          left: f.left + "px"
        }), d.hasClass("uib-position-measure") && d.removeClass("uib-position-measure")
      }
    }

    var w, x, y, z, A, B, C, D, E, F, G, H, I, J, K = !1, L = [];
    this.init = function (e) {
      if (F = e, G = e.$options, x = angular.isDefined(c.closeOnDateSelection) ? a.$parent.$eval(c.closeOnDateSelection) : m.closeOnDateSelection, y = angular.isDefined(c.datepickerAppendToBody) ? a.$parent.$eval(c.datepickerAppendToBody) : m.appendToBody, z = angular.isDefined(c.onOpenFocus) ? a.$parent.$eval(c.onOpenFocus) : m.onOpenFocus, A = angular.isDefined(c.datepickerPopupTemplateUrl) ? c.datepickerPopupTemplateUrl : m.datepickerPopupTemplateUrl, B = angular.isDefined(c.datepickerTemplateUrl) ? c.datepickerTemplateUrl : m.datepickerTemplateUrl, I = angular.isDefined(c.altInputFormats) ? a.$parent.$eval(c.altInputFormats) : m.altInputFormats, a.showButtonBar = angular.isDefined(c.showButtonBar) ? a.$parent.$eval(c.showButtonBar) : m.showButtonBar, m.html5Types[c.type] ? (w = m.html5Types[c.type], K = !0) : (w = c.uibDatepickerPopup || m.datepickerPopup, c.$observe("uibDatepickerPopup", function (a, b) {
          var c = a || m.datepickerPopup;
          if (c !== w && (w = c, F.$modelValue = null, !w)) throw new Error("uibDatepickerPopup must have a date format specified.")
        })), !w) throw new Error("uibDatepickerPopup must have a date format specified.");
      if (K && c.uibDatepickerPopup) throw new Error("HTML5 date input types do not support custom formats.");
      C = angular.element("<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>"), G ? (J = G.timezone, a.ngModelOptions = angular.copy(G), a.ngModelOptions.timezone = null, !0 === a.ngModelOptions.updateOnDefault && (a.ngModelOptions.updateOn = a.ngModelOptions.updateOn ? a.ngModelOptions.updateOn + " default" : "default"), C.attr("ng-model-options", "ngModelOptions")) : J = null, C.attr({
        "ng-model":     "date",
        "ng-change":    "dateSelection(date)",
        "template-url": A
      }), D = angular.element(C.children()[0]), D.attr("template-url", B), a.datepickerOptions || (a.datepickerOptions = {}), K && "month" === c.type && (a.datepickerOptions.datepickerMode = "month", a.datepickerOptions.minMode = "month"), D.attr("datepicker-options", "datepickerOptions"), K ? F.$formatters.push(function (b) {
        return a.date = l.fromTimezone(b, J), b
      }) : (F.$$parserName = "date", F.$validators.date = s, F.$parsers.unshift(r), F.$formatters.push(function (b) {
        return F.$isEmpty(b) ? (a.date = b, b) : (a.date = l.fromTimezone(b, J), angular.isNumber(a.date) && (a.date = new Date(a.date)), l.filter(a.date, w))
      })), F.$viewChangeListeners.push(function () {
        a.date = q(F.$viewValue)
      }), b.on("keydown", u), H = d(C)(a), C.remove(), y ? h.find("body").append(H) : b.after(H), a.$on("$destroy", function () {
        for (!0 === a.isOpen && (i.$$phase || a.$apply(function () {
          a.isOpen = !1
        })), H.remove(), b.off("keydown", u), h.off("click", t), E && E.off("scroll", v), angular.element(g).off("resize", v); L.length;) L.shift()()
      })
    }, a.getText = function (b) {
      return a[b + "Text"] || m[b + "Text"]
    }, a.isDisabled = function (b) {
      "today" === b && (b = l.fromTimezone(new Date, J));
      var c = {};
      return angular.forEach(["minDate", "maxDate"], function (b) {
        null === a.datepickerOptions[b] ? c[b] = null : angular.isDate(a.datepickerOptions[b]) ? c[b] = l.fromTimezone(new Date(a.datepickerOptions[b]), J) : (p && e.warn("Literal date support has been deprecated, please switch to date object usage"), c[b] = new Date(k(a.datepickerOptions[b], "medium")))
      }), a.datepickerOptions && c.minDate && a.compare(b, c.minDate) < 0 || c.maxDate && a.compare(b, c.maxDate) > 0
    }, a.compare = function (a, b) {
      return new Date(a.getFullYear(), a.getMonth(), a.getDate()) - new Date(b.getFullYear(), b.getMonth(), b.getDate())
    }, a.dateSelection = function (c) {
      angular.isDefined(c) && (a.date = c);
      var d = a.date ? l.filter(a.date, w) : null;
      b.val(d), F.$setViewValue(d), x && (a.isOpen = !1, b[0].focus())
    }, a.keydown = function (c) {
      27 === c.which && (c.stopPropagation(), a.isOpen = !1, b[0].focus())
    }, a.select = function (b, c) {
      if (c.stopPropagation(), "today" === b) {
        var d = new Date;
        angular.isDate(a.date) ? (b = new Date(a.date), b.setFullYear(d.getFullYear(), d.getMonth(), d.getDate())) : b = new Date(d.setHours(0, 0, 0, 0))
      }
      a.dateSelection(b)
    }, a.close = function (c) {
      c.stopPropagation(), a.isOpen = !1, b[0].focus()
    }, a.disabled = angular.isDefined(c.disabled) || !1, c.ngDisabled && L.push(a.$parent.$watch(f(c.ngDisabled), function (b) {
      a.disabled = b
    })), a.$watch("isOpen", function (d) {
      d ? a.disabled ? a.isOpen = !1 : n(function () {
        v(), z && a.$broadcast("uib:datepicker.focus"), h.on("click", t);
        var d = c.popupPlacement ? c.popupPlacement : m.placement;
        y || j.parsePlacement(d)[2] ? (E = E || angular.element(j.scrollParent(b))) && E.on("scroll", v) : E = null, angular.element(g).on("resize", v)
      }, 0, !1) : (h.off("click", t), E && E.off("scroll", v), angular.element(g).off("resize", v))
    }), a.$on("uib:datepicker.mode", function () {
      n(v, 0, !1)
    })
  }]).directive("uibDatepickerPopup", function () {
    return {
      require:    ["ngModel", "uibDatepickerPopup"],
      controller: "UibDatepickerPopupController",
      scope:      {datepickerOptions: "=?", isOpen: "=?", currentText: "@", clearText: "@", closeText: "@"},
      link:       function (a, b, c, d) {
        var e = d[0];
        d[1].init(e)
      }
    }
  }).directive("uibDatepickerPopupWrap", function () {
    return {
      replace: !0, transclude: !0, templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/datepickerPopup/popup.html"
      }
    }
  }), angular.module("ui.bootstrap.debounce", []).factory("$$debounce", ["$timeout", function (a) {
    return function (b, c) {
      var d;
      return function () {
        var e = this, f = Array.prototype.slice.call(arguments);
        d && a.cancel(d), d = a(function () {
          b.apply(e, f)
        }, c)
      }
    }
  }]), angular.module("ui.bootstrap.dropdown", ["ui.bootstrap.position"]).constant("uibDropdownConfig", {
    appendToOpenClass: "uib-dropdown-open",
    openClass:         "open"
  }).service("uibDropdownService", ["$document", "$rootScope", function (a, b) {
    var c = null;
    this.open = function (b) {
      c || (a.on("click", d), a.on("keydown", e)), c && c !== b && (c.isOpen = !1), c = b
    }, this.close = function (b) {
      c === b && (c = null, a.off("click", d), a.off("keydown", e))
    };
    var d = function (a) {
      if (c && !(a && "disabled" === c.getAutoClose() || a && 3 === a.which)) {
        var d = c.getToggleElement();
        if (!(a && d && d[0].contains(a.target))) {
          var e = c.getDropdownElement();
          a && "outsideClick" === c.getAutoClose() && e && e[0].contains(a.target) || (c.isOpen = !1, b.$$phase || c.$apply())
        }
      }
    }, e  = function (a) {
      27 === a.which ? (c.focusToggleElement(), d()) : c.isKeynavEnabled() && -1 !== [38, 40].indexOf(a.which) && c.isOpen && (a.preventDefault(), a.stopPropagation(), c.focusDropdownEntry(a.which))
    }
  }]).controller("UibDropdownController", ["$scope", "$element", "$attrs", "$parse", "uibDropdownConfig", "uibDropdownService", "$animate", "$uibPosition", "$document", "$compile", "$templateRequest", function (a, b, c, d, e, f, g, h, i, j, k) {
    var l, m, n                                                                    = this, o                                                          = a.$new(), p = e.appendToOpenClass, q                   = e.openClass, r = angular.noop,
        s = c.onToggle ? d(c.onToggle) : angular.noop, t = !1, u = null, v = !1, w = i.find("body");
    b.addClass("dropdown"), this.init = function () {
      if (c.isOpen && (m = d(c.isOpen), r = m.assign, a.$watch(m, function (a) {
          o.isOpen = !!a
        })), angular.isDefined(c.dropdownAppendTo)) {
        var e = d(c.dropdownAppendTo)(o);
        e && (u = angular.element(e))
      }
      t = angular.isDefined(c.dropdownAppendToBody), v = angular.isDefined(c.keyboardNav), t && !u && (u = w), u && n.dropdownMenu && (u.append(n.dropdownMenu), b.on("$destroy", function () {
        n.dropdownMenu.remove()
      }))
    }, this.toggle = function (a) {
      return o.isOpen = arguments.length ? !!a : !o.isOpen, angular.isFunction(r) && r(o, o.isOpen), o.isOpen
    }, this.isOpen = function () {
      return o.isOpen
    }, o.getToggleElement = function () {
      return n.toggleElement
    }, o.getAutoClose = function () {
      return c.autoClose || "always"
    }, o.getElement = function () {
      return b
    }, o.isKeynavEnabled = function () {
      return v
    }, o.focusDropdownEntry = function (a) {
      var c = n.dropdownMenu ? angular.element(n.dropdownMenu).find("a") : b.find("ul").eq(0).find("a");
      switch (a) {
        case 40:
          angular.isNumber(n.selectedOption) ? n.selectedOption = n.selectedOption === c.length - 1 ? n.selectedOption : n.selectedOption + 1 : n.selectedOption = 0;
          break;
        case 38:
          angular.isNumber(n.selectedOption) ? n.selectedOption = 0 === n.selectedOption ? 0 : n.selectedOption - 1 : n.selectedOption = c.length - 1
      }
      c[n.selectedOption].focus()
    }, o.getDropdownElement = function () {
      return n.dropdownMenu
    }, o.focusToggleElement = function () {
      n.toggleElement && n.toggleElement[0].focus()
    }, o.$watch("isOpen", function (c, d) {
      if (u && n.dropdownMenu) {
        var e, i, m = h.positionElements(b, n.dropdownMenu, "bottom-left", !0);
        if (e = {
            top:     m.top + "px",
            display: c ? "block" : "none"
          }, i = n.dropdownMenu.hasClass("dropdown-menu-right"), i ? (e.left = "auto", e.right = window.innerWidth - (m.left + b.prop("offsetWidth")) + "px") : (e.left = m.left + "px", e.right = "auto"), !t) {
          var v = h.offset(u);
          e.top = m.top - v.top + "px", i ? e.right = window.innerWidth - (m.left - v.left + b.prop("offsetWidth")) + "px" : e.left = m.left - v.left + "px"
        }
        n.dropdownMenu.css(e)
      }
      var w = u || b;
      if (w.hasClass(u ? p : q) === !c && g[c ? "addClass" : "removeClass"](w, u ? p : q).then(function () {
          angular.isDefined(c) && c !== d && s(a, {open: !!c})
        }), c) n.dropdownMenuTemplateUrl && k(n.dropdownMenuTemplateUrl).then(function (a) {
        l = o.$new(), j(a.trim())(l, function (a) {
          var b = a;
          n.dropdownMenu.replaceWith(b), n.dropdownMenu = b
        })
      }), o.focusToggleElement(), f.open(o); else {
        if (n.dropdownMenuTemplateUrl) {
          l && l.$destroy();
          var y = angular.element('<ul class="dropdown-menu"></ul>');
          n.dropdownMenu.replaceWith(y), n.dropdownMenu = y
        }
        f.close(o), n.selectedOption = null
      }
      angular.isFunction(r) && r(a, c)
    })
  }]).directive("uibDropdown", function () {
    return {
      controller: "UibDropdownController", link: function (a, b, c, d) {
        d.init()
      }
    }
  }).directive("uibDropdownMenu", function () {
    return {
      restrict: "A", require: "?^uibDropdown", link: function (a, b, c, d) {
        if (d && !angular.isDefined(c.dropdownNested)) {
          b.addClass("dropdown-menu");
          var e = c.templateUrl;
          e && (d.dropdownMenuTemplateUrl = e), d.dropdownMenu || (d.dropdownMenu = b)
        }
      }
    }
  }).directive("uibDropdownToggle", function () {
    return {
      require: "?^uibDropdown", link: function (a, b, c, d) {
        if (d) {
          b.addClass("dropdown-toggle"), d.toggleElement = b;
          var e = function (e) {
            e.preventDefault(), b.hasClass("disabled") || c.disabled || a.$apply(function () {
              d.toggle()
            })
          };
          b.bind("click", e), b.attr({"aria-haspopup": !0, "aria-expanded": !1}), a.$watch(d.isOpen, function (a) {
            b.attr("aria-expanded", !!a)
          }), a.$on("$destroy", function () {
            b.unbind("click", e)
          })
        }
      }
    }
  }), angular.module("ui.bootstrap.stackedMap", []).factory("$$stackedMap", function () {
    return {
      createNew: function () {
        var a = [];
        return {
          add:          function (b, c) {
            a.push({key: b, value: c})
          }, get:       function (b) {
            for (var c = 0; c < a.length; c++) if (b === a[c].key) return a[c]
          }, keys:      function () {
            for (var b = [], c = 0; c < a.length; c++) b.push(a[c].key);
            return b
          }, top:       function () {
            return a[a.length - 1]
          }, remove:    function (b) {
            for (var c = -1, d = 0; d < a.length; d++) if (b === a[d].key) {
              c = d;
              break
            }
            return a.splice(c, 1)[0]
          }, removeTop: function () {
            return a.splice(a.length - 1, 1)[0]
          }, length:    function () {
            return a.length
          }
        }
      }
    }
  }), angular.module("ui.bootstrap.modal", ["ui.bootstrap.stackedMap", "ui.bootstrap.position"]).factory("$$multiMap", function () {
    return {
      createNew: function () {
        var a = {};
        return {
          entries:   function () {
            return Object.keys(a).map(function (b) {
              return {key: b, value: a[b]}
            })
          }, get:    function (b) {
            return a[b]
          }, hasKey: function (b) {
            return !!a[b]
          }, keys:   function () {
            return Object.keys(a)
          }, put:    function (b, c) {
            a[b] || (a[b] = []), a[b].push(c)
          }, remove: function (b, c) {
            var d = a[b];
            if (d) {
              var e = d.indexOf(c);
              -1 !== e && d.splice(e, 1), d.length || delete a[b]
            }
          }
        }
      }
    }
  }).provider("$uibResolve", function () {
    var a = this;
    this.resolver = null, this.setResolver = function (a) {
      this.resolver = a
    }, this.$get = ["$injector", "$q", function (b, c) {
      var d = a.resolver ? b.get(a.resolver) : null;
      return {
        resolve: function (a, e, f, g) {
          if (d) return d.resolve(a, e, f, g);
          var h = [];
          return angular.forEach(a, function (a) {
            angular.isFunction(a) || angular.isArray(a) ? h.push(c.resolve(b.invoke(a))) : angular.isString(a) ? h.push(c.resolve(b.get(a))) : h.push(c.resolve(a))
          }), c.all(h).then(function (b) {
            var c = {}, d = 0;
            return angular.forEach(a, function (a, e) {
              c[e] = b[d++]
            }), c
          })
        }
      }
    }]
  }).directive("uibModalBackdrop", ["$animate", "$injector", "$uibModalStack", function (a, b, c) {
    function d(b, d, e) {
      e.modalInClass && (a.addClass(d, e.modalInClass), b.$on(c.NOW_CLOSING_EVENT, function (c, f) {
        var g = f();
        b.modalOptions.animation ? a.removeClass(d, e.modalInClass).then(g) : g()
      }))
    }

    return {
      replace: !0, templateUrl: "uib/template/modal/backdrop.html", compile: function (a, b) {
        return a.addClass(b.backdropClass), d
      }
    }
  }]).directive("uibModalWindow", ["$uibModalStack", "$q", "$animateCss", "$document", function (a, b, c, d) {
    return {
      scope:   {index: "@"}, replace: !0, transclude: !0, templateUrl: function (a, b) {
        return b.templateUrl || "uib/template/modal/window.html"
      }, link: function (e, f, g) {
        f.addClass(g.windowClass || ""), f.addClass(g.windowTopClass || ""), e.size = g.size, e.close = function (b) {
          var c = a.getTop();
          c && c.value.backdrop && "static" !== c.value.backdrop && b.target === b.currentTarget && (b.preventDefault(), b.stopPropagation(), a.dismiss(c.key, "backdrop click"))
        }, f.on("click", e.close), e.$isRendered = !0;
        var h = b.defer();
        g.$observe("modalRender", function (a) {
          "true" === a && h.resolve()
        }), h.promise.then(function () {
          var h = null;
          g.modalInClass && (h = c(f, {addClass: g.modalInClass}).start(), e.$on(a.NOW_CLOSING_EVENT, function (a, b) {
            var d = b();
            c(f, {removeClass: g.modalInClass}).start().then(d)
          })), b.when(h).then(function () {
            var b = a.getTop();
            if (b && a.modalRendered(b.key), !d[0].activeElement || !f[0].contains(d[0].activeElement)) {
              var c = f[0].querySelector("[autofocus]");
              c ? c.focus() : f[0].focus()
            }
          })
        })
      }
    }
  }]).directive("uibModalAnimationClass", function () {
    return {
      compile: function (a, b) {
        b.modalAnimation && a.addClass(b.uibModalAnimationClass)
      }
    }
  }).directive("uibModalTransclude", function () {
    return {
      link: function (a, b, c, d, e) {
        e(a.$parent, function (a) {
          b.empty(), b.append(a)
        })
      }
    }
  }).factory("$uibModalStack", ["$animate", "$animateCss", "$document", "$compile", "$rootScope", "$q", "$$multiMap", "$$stackedMap", "$uibPosition", function (a, b, c, d, e, f, g, h, i) {
    function j(a) {
      return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length)
    }

    function k() {
      for (var a = -1, b = v.keys(), c = 0; c < b.length; c++) v.get(b[c]).value.backdrop && (a = c);
      return a > -1 && y > a && (a = y), a
    }

    function l(a, b) {
      var c = v.get(a).value, d = c.appendTo;
      v.remove(a), z = v.top(), z && (y = parseInt(z.value.modalDomEl.attr("index"), 10)), o(c.modalDomEl, c.modalScope, function () {
        var b = c.openedClass || u;
        w.remove(b, a), d.toggleClass(b, w.hasKey(b)), t && t.heightOverflow && t.scrollbarWidth && (t.originalRight ? d.css({paddingRight: t.originalRight + "px"}) : d.css({paddingRight: ""}), t = null), m(!0)
      }, c.closedDeferred), n(), b && b.focus ? b.focus() : d.focus && d.focus()
    }

    function m(a) {
      var b;
      v.length() > 0 && (b = v.top().value, b.modalDomEl.toggleClass(b.windowTopClass || "", a))
    }

    function n() {
      if (r && -1 === k()) {
        var a = s;
        o(r, s, function () {
          a = null
        }), r = void 0, s = void 0
      }
    }

    function o(b, c, d, e) {
      function g() {
        g.done || (g.done = !0, a.leave(b).then(function () {
          b.remove(), e && e.resolve()
        }), c.$destroy(), d && d())
      }

      var h, i = null, j = function () {
        return h || (h = f.defer(), i = h.promise), function () {
          h.resolve()
        }
      };
      return c.$broadcast(x.NOW_CLOSING_EVENT, j), f.when(i).then(g)
    }

    function p(a) {
      if (a.isDefaultPrevented()) return a;
      var b = v.top();
      if (b) switch (a.which) {
        case 27:
          b.value.keyboard && (a.preventDefault(), e.$apply(function () {
            x.dismiss(b.key, "escape key press")
          }));
          break;
        case 9:
          var c = x.loadFocusElementList(b), d = !1;
          a.shiftKey ? (x.isFocusInFirstItem(a, c) || x.isModalFocused(a, b)) && (d = x.focusLastFocusableElement(c)) : x.isFocusInLastItem(a, c) && (d = x.focusFirstFocusableElement(c)), d && (a.preventDefault(), a.stopPropagation())
      }
    }

    function q(a, b, c) {
      return !a.value.modalScope.$broadcast("modal.closing", b, c).defaultPrevented
    }

    var r, s, t, u                                                   = "modal-open", v = h.createNew(), w              = g.createNew(),
        x = {NOW_CLOSING_EVENT: "modal.stack.now-closing"}, y = 0, z = null;
    return e.$watch(k, function (a) {
      s && (s.index = a)
    }), c.on("keydown", p), e.$on("$destroy", function () {
      c.off("keydown", p)
    }), x.open = function (b, f) {
      var g = c[0].activeElement, h = f.openedClass || u;
      m(!1), z = v.top(), v.add(b, {
        deferred:       f.deferred,
        renderDeferred: f.renderDeferred,
        closedDeferred: f.closedDeferred,
        modalScope:     f.scope,
        backdrop:       f.backdrop,
        keyboard:       f.keyboard,
        openedClass:    f.openedClass,
        windowTopClass: f.windowTopClass,
        animation:      f.animation,
        appendTo:       f.appendTo
      }), w.put(h, b);
      var j = f.appendTo, l = k();
      if (!j.length) throw new Error("appendTo element not found. Make sure that the element passed is in DOM.");
      l >= 0 && !r && (s = e.$new(!0), s.modalOptions = f, s.index = l, r = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>'), r.attr("backdrop-class", f.backdropClass), f.animation && r.attr("modal-animation", "true"), d(r)(s), a.enter(r, j)), y = z ? parseInt(z.value.modalDomEl.attr("index"), 10) + 1 : 0;
      var n = angular.element('<div uib-modal-window="modal-window"></div>');
      n.attr({
        "template-url":     f.windowTemplateUrl,
        "window-class":     f.windowClass,
        "window-top-class": f.windowTopClass,
        size:               f.size,
        index:              y,
        animate:            "animate"
      }).html(f.content), f.animation && n.attr("modal-animation", "true"), t = i.scrollbarPadding(j), t.heightOverflow && t.scrollbarWidth && j.css({paddingRight: t.right + "px"}), j.addClass(h), a.enter(d(n)(f.scope), j), v.top().value.modalDomEl = n, v.top().value.modalOpener = g
    }, x.close = function (a, b) {
      var c = v.get(a);
      return c && q(c, b, !0) ? (c.value.modalScope.$$uibDestructionScheduled = !0, c.value.deferred.resolve(b), l(a, c.value.modalOpener), !0) : !c
    }, x.dismiss = function (a, b) {
      var c = v.get(a);
      return c && q(c, b, !1) ? (c.value.modalScope.$$uibDestructionScheduled = !0, c.value.deferred.reject(b), l(a, c.value.modalOpener), !0) : !c
    }, x.dismissAll = function (a) {
      for (var b = this.getTop(); b && this.dismiss(b.key, a);) b = this.getTop()
    }, x.getTop = function () {
      return v.top()
    }, x.modalRendered = function (a) {
      var b = v.get(a);
      b && b.value.renderDeferred.resolve()
    }, x.focusFirstFocusableElement = function (a) {
      return a.length > 0 && (a[0].focus(), !0)
    }, x.focusLastFocusableElement = function (a) {
      return a.length > 0 && (a[a.length - 1].focus(), !0)
    }, x.isModalFocused = function (a, b) {
      if (a && b) {
        var c = b.value.modalDomEl;
        if (c && c.length) return (a.target || a.srcElement) === c[0]
      }
      return !1
    }, x.isFocusInFirstItem = function (a, b) {
      return b.length > 0 && (a.target || a.srcElement) === b[0]
    }, x.isFocusInLastItem = function (a, b) {
      return b.length > 0 && (a.target || a.srcElement) === b[b.length - 1]
    }, x.loadFocusElementList = function (a) {
      if (a) {
        var b = a.value.modalDomEl;
        if (b && b.length) {
          var c = b[0].querySelectorAll("a[href], area[href], input:not([disabled]), button:not([disabled]),select:not([disabled]), textarea:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable=true]");
          return c ? Array.prototype.filter.call(c, function (a) {
            return j(a)
          }) : c
        }
      }
    }, x
  }]).provider("$uibModal", function () {
    var a = {
      options: {animation: !0, backdrop: !0, keyboard: !0},
      $get:    ["$rootScope", "$q", "$document", "$templateRequest", "$controller", "$uibResolve", "$uibModalStack", function (b, c, d, e, f, g, h) {
        function i(a) {
          return a.template ? c.when(a.template) : e(angular.isFunction(a.templateUrl) ? a.templateUrl() : a.templateUrl)
        }

        var j = {}, k = null;
        return j.getPromiseChain = function () {
          return k
        }, j.open = function (e) {
          function j() {
            return r
          }

          var l = c.defer(), m = c.defer(), n = c.defer(), o = c.defer(), p = {
            result:     l.promise, opened: m.promise, closed: n.promise, rendered: o.promise, close: function (a) {
              return h.close(p, a)
            }, dismiss: function (a) {
              return h.dismiss(p, a)
            }
          };
          if (e = angular.extend({}, a.options, e), e.resolve = e.resolve || {}, e.appendTo = e.appendTo || d.find("body").eq(0), !e.template && !e.templateUrl) throw new Error("One of template or templateUrl options is required.");
          var q, r = c.all([i(e), g.resolve(e.resolve, {}, null, null)]);
          return q = k = c.all([k]).then(j, j).then(function (a) {
            var c = e.scope || b, d = c.$new();
            d.$close = p.close, d.$dismiss = p.dismiss, d.$on("$destroy", function () {
              d.$$uibDestructionScheduled || d.$dismiss("$uibUnscheduledDestruction")
            });
            var g, i, j = {};
            e.controller && (j.$scope = d, j.$uibModalInstance = p, angular.forEach(a[1], function (a, b) {
              j[b] = a
            }), i = f(e.controller, j, !0), e.controllerAs ? (g = i.instance, e.bindToController && (g.$close = d.$close, g.$dismiss = d.$dismiss, angular.extend(g, c)), g = i(), d[e.controllerAs] = g) : g = i(), angular.isFunction(g.$onInit) && g.$onInit()), h.open(p, {
              scope:             d,
              deferred:          l,
              renderDeferred:    o,
              closedDeferred:    n,
              content:           a[0],
              animation:         e.animation,
              backdrop:          e.backdrop,
              keyboard:          e.keyboard,
              backdropClass:     e.backdropClass,
              windowTopClass:    e.windowTopClass,
              windowClass:       e.windowClass,
              windowTemplateUrl: e.windowTemplateUrl,
              size:              e.size,
              openedClass:       e.openedClass,
              appendTo:          e.appendTo
            }), m.resolve(!0)
          }, function (a) {
            m.reject(a), l.reject(a)
          }).finally(function () {
            k === q && (k = null)
          }), p
        }, j
      }]
    };
    return a
  }), angular.module("ui.bootstrap.paging", []).factory("uibPaging", ["$parse", function (a) {
    return {
      create: function (b, c, d) {
        b.setNumPages = d.numPages ? a(d.numPages).assign : angular.noop, b.ngModelCtrl = {$setViewValue: angular.noop}, b._watchers = [], b.init = function (a, e) {
          b.ngModelCtrl = a, b.config = e, a.$render = function () {
            b.render()
          }, d.itemsPerPage ? b._watchers.push(c.$parent.$watch(d.itemsPerPage, function (a) {
            b.itemsPerPage = parseInt(a, 10), c.totalPages = b.calculateTotalPages(), b.updatePage()
          })) : b.itemsPerPage = e.itemsPerPage, c.$watch("totalItems", function (a, d) {
            (angular.isDefined(a) || a !== d) && (c.totalPages = b.calculateTotalPages(), b.updatePage())
          })
        }, b.calculateTotalPages = function () {
          var a = b.itemsPerPage < 1 ? 1 : Math.ceil(c.totalItems / b.itemsPerPage);
          return Math.max(a || 0, 1)
        }, b.render = function () {
          c.page = parseInt(b.ngModelCtrl.$viewValue, 10) || 1
        }, c.selectPage = function (a, d) {
          d && d.preventDefault(), (!c.ngDisabled || !d) && c.page !== a && a > 0 && a <= c.totalPages && (d && d.target && d.target.blur(), b.ngModelCtrl.$setViewValue(a), b.ngModelCtrl.$render())
        }, c.getText = function (a) {
          return c[a + "Text"] || b.config[a + "Text"]
        }, c.noPrevious = function () {
          return 1 === c.page
        }, c.noNext = function () {
          return c.page === c.totalPages
        }, b.updatePage = function () {
          b.setNumPages(c.$parent, c.totalPages), c.page > c.totalPages ? c.selectPage(c.totalPages) : b.ngModelCtrl.$render()
        }, c.$on("$destroy", function () {
          for (; b._watchers.length;) b._watchers.shift()()
        })
      }
    }
  }]), angular.module("ui.bootstrap.pager", ["ui.bootstrap.paging"]).controller("UibPagerController", ["$scope", "$attrs", "uibPaging", "uibPagerConfig", function (a, b, c, d) {
    a.align = angular.isDefined(b.align) ? a.$parent.$eval(b.align) : d.align, c.create(this, a, b)
  }]).constant("uibPagerConfig", {
    itemsPerPage: 10,
    previousText: "« Previous",
    nextText:     "Next »",
    align:        !0
  }).directive("uibPager", ["uibPagerConfig", function (a) {
    return {
      scope:        {totalItems: "=", previousText: "@", nextText: "@", ngDisabled: "="},
      require:      ["uibPager", "?ngModel"],
      controller:   "UibPagerController",
      controllerAs: "pager",
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/pager/pager.html"
      },
      replace:      !0,
      link:         function (b, c, d, e) {
        var f = e[0], g = e[1];
        g && f.init(g, a)
      }
    }
  }]), angular.module("ui.bootstrap.pagination", ["ui.bootstrap.paging"]).controller("UibPaginationController", ["$scope", "$attrs", "$parse", "uibPaging", "uibPaginationConfig", function (a, b, c, d, e) {
    function f(a, b, c) {
      return {number: a, text: b, active: c}
    }

    function g(a, b) {
      var c = [], d = 1, e = b, g = angular.isDefined(i) && b > i;
      g && (j ? (d = Math.max(a - Math.floor(i / 2), 1), (e = d + i - 1) > b && (e = b, d = e - i + 1)) : (d = (Math.ceil(a / i) - 1) * i + 1, e = Math.min(d + i - 1, b)));
      for (var h = d; e >= h; h++) {
        var n = f(h, m(h), h === a);
        c.push(n)
      }
      if (g && i > 0 && (!j || k || l)) {
        if (d > 1) {
          if (!l || d > 3) {
            var o = f(d - 1, "...", !1);
            c.unshift(o)
          }
          if (l) {
            if (3 === d) {
              var p = f(2, "2", !1);
              c.unshift(p)
            }
            var q = f(1, "1", !1);
            c.unshift(q)
          }
        }
        if (b > e) {
          if (!l || b - 2 > e) {
            var r = f(e + 1, "...", !1);
            c.push(r)
          }
          if (l) {
            if (e === b - 2) {
              var s = f(b - 1, b - 1, !1);
              c.push(s)
            }
            var t = f(b, b, !1);
            c.push(t)
          }
        }
      }
      return c
    }

    var h = this, i = angular.isDefined(b.maxSize) ? a.$parent.$eval(b.maxSize) : e.maxSize,
        j           = angular.isDefined(b.rotate) ? a.$parent.$eval(b.rotate) : e.rotate,
        k           = angular.isDefined(b.forceEllipses) ? a.$parent.$eval(b.forceEllipses) : e.forceEllipses,
        l           = angular.isDefined(b.boundaryLinkNumbers) ? a.$parent.$eval(b.boundaryLinkNumbers) : e.boundaryLinkNumbers,
        m           = angular.isDefined(b.pageLabel) ? function (c) {
          return a.$parent.$eval(b.pageLabel, {$page: c})
        } : angular.identity;
    a.boundaryLinks = angular.isDefined(b.boundaryLinks) ? a.$parent.$eval(b.boundaryLinks) : e.boundaryLinks, a.directionLinks = angular.isDefined(b.directionLinks) ? a.$parent.$eval(b.directionLinks) : e.directionLinks, d.create(this, a, b), b.maxSize && h._watchers.push(a.$parent.$watch(c(b.maxSize), function (a) {
      i = parseInt(a, 10), h.render()
    }));
    var n       = this.render;
    this.render = function () {
      n(), a.page > 0 && a.page <= a.totalPages && (a.pages = g(a.page, a.totalPages))
    }
  }]).constant("uibPaginationConfig", {
    itemsPerPage:        10,
    boundaryLinks:       !1,
    boundaryLinkNumbers: !1,
    directionLinks:      !0,
    firstText:           "First",
    previousText:        "Previous",
    nextText:            "Next",
    lastText:            "Last",
    rotate:              !0,
    forceEllipses:       !1
  }).directive("uibPagination", ["$parse", "uibPaginationConfig", function (a, b) {
    return {
      scope:        {totalItems: "=", firstText: "@", previousText: "@", nextText: "@", lastText: "@", ngDisabled: "="},
      require:      ["uibPagination", "?ngModel"],
      controller:   "UibPaginationController",
      controllerAs: "pagination",
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/pagination/pagination.html"
      },
      replace:      !0,
      link:         function (a, c, d, e) {
        var f = e[0], g = e[1];
        g && f.init(g, b)
      }
    }
  }]), angular.module("ui.bootstrap.tooltip", ["ui.bootstrap.position", "ui.bootstrap.stackedMap"]).provider("$uibTooltip", function () {
    function a(a) {
      var b = /[A-Z]/g
      ;
      return a.replace(b, function (a, b) {
        return (b ? "-" : "") + a.toLowerCase()
      })
    }

    var b = {
      placement:            "top",
      placementClassPrefix: "",
      animation:            !0,
      popupDelay:           0,
      popupCloseDelay:      0,
      useContentExp:        !1
    }, c  = {mouseenter: "mouseleave", click: "click", outsideClick: "outsideClick", focus: "blur", none: ""}, d = {};
    this.options = function (a) {
      angular.extend(d, a)
    }, this.setTriggers = function (a) {
      angular.extend(c, a)
    }, this.$get = ["$window", "$compile", "$timeout", "$document", "$uibPosition", "$interpolate", "$rootScope", "$parse", "$$stackedMap", function (e, f, g, h, i, j, k, l, m) {
      function n(a) {
        if (27 === a.which) {
          var b = o.top();
          b && (b.value.close(), o.removeTop(), b = null)
        }
      }

      var o = m.createNew();
      return h.on("keypress", n), k.$on("$destroy", function () {
        h.off("keypress", n)
      }), function (e, k, m, n) {
        function p(a) {
          var b = (a || n.trigger || m).split(" ");
          return {
            show: b, hide: b.map(function (a) {
              return c[a] || a
            })
          }
        }

        n                                    = angular.extend({}, b, d, n);
        var q = a(e), r = j.startSymbol(), s = j.endSymbol(),
            t                                = "<div " + q + '-popup uib-title="' + r + "title" + s + '" ' + (n.useContentExp ? 'content-exp="contentExp()" ' : 'content="' + r + "content" + s + '" ') + 'placement="' + r + "placement" + s + '" popup-class="' + r + "popupClass" + s + '" animation="animation" is-open="isOpen" origin-scope="origScope" class="uib-position-measure"></div>';
        return {
          compile: function (a, b) {
            var c = f(t);
            return function (a, b, d, f) {
              function j() {
                N.isOpen ? q() : m()
              }

              function m() {
                M && !a.$eval(d[k + "Enable"]) || (u(), x(), N.popupDelay ? G || (G = g(r, N.popupDelay, !1)) : r())
              }

              function q() {
                s(), N.popupCloseDelay ? H || (H = g(t, N.popupCloseDelay, !1)) : t()
              }

              function r() {
                return s(), u(), N.content ? (v(), void N.$evalAsync(function () {
                  N.isOpen = !0, y(!0), S()
                })) : angular.noop
              }

              function s() {
                G && (g.cancel(G), G = null), I && (g.cancel(I), I = null)
              }

              function t() {
                N && N.$evalAsync(function () {
                  N && (N.isOpen = !1, y(!1), N.animation ? F || (F = g(w, 150, !1)) : w())
                })
              }

              function u() {
                H && (g.cancel(H), H = null), F && (g.cancel(F), F = null)
              }

              function v() {
                D || (E = N.$new(), D = c(E, function (a) {
                  K ? h.find("body").append(a) : b.after(a)
                }), z())
              }

              function w() {
                s(), u(), A(), D && (D.remove(), D = null), E && (E.$destroy(), E = null)
              }

              function x() {
                N.title = d[k + "Title"], N.content = Q ? Q(a) : d[e], N.popupClass = d[k + "Class"], N.placement = angular.isDefined(d[k + "Placement"]) ? d[k + "Placement"] : n.placement;
                var b = i.parsePlacement(N.placement);
                J     = b[1] ? b[0] + "-" + b[1] : b[0];
                var c = parseInt(d[k + "PopupDelay"], 10), f = parseInt(d[k + "PopupCloseDelay"], 10);
                N.popupDelay = isNaN(c) ? n.popupDelay : c, N.popupCloseDelay = isNaN(f) ? n.popupCloseDelay : f
              }

              function y(b) {
                P && angular.isFunction(P.assign) && P.assign(a, b)
              }

              function z() {
                R.length = 0, Q ? (R.push(a.$watch(Q, function (a) {
                  N.content = a, !a && N.isOpen && t()
                })), R.push(E.$watch(function () {
                  O || (O = !0, E.$$postDigest(function () {
                    O = !1, N && N.isOpen && S()
                  }))
                }))) : R.push(d.$observe(e, function (a) {
                  N.content = a, !a && N.isOpen ? t() : S()
                })), R.push(d.$observe(k + "Title", function (a) {
                  N.title = a, N.isOpen && S()
                })), R.push(d.$observe(k + "Placement", function (a) {
                  N.placement = a || n.placement;
                  var b       = i.parsePlacement(N.placement);
                  J = b[1] ? b[0] + "-" + b[1] : b[0], N.isOpen && S()
                }))
              }

              function A() {
                R.length && (angular.forEach(R, function (a) {
                  a()
                }), R.length = 0)
              }

              function B(a) {
                N && N.isOpen && D && (b[0].contains(a.target) || D[0].contains(a.target) || q())
              }

              var D, E, F, G, H, I, J, K = !!angular.isDefined(n.appendToBody) && n.appendToBody, L = p(void 0),
                  M                                                                                 = angular.isDefined(d[k + "Enable"]), N = a.$new(!0), O                         = !1,
                  P                                                                                 = !!angular.isDefined(d[k + "IsOpen"]) && l(d[k + "IsOpen"]),
                  Q                                                                                 = !!n.useContentExp && l(d[e]), R = [], S                                       = function () {
                    D && D.html() && (I || (I = g(function () {
                      var a = i.positionElements(b, D, N.placement, K);
                      D.css({
                        top:  a.top + "px",
                        left: a.left + "px"
                      }), D.hasClass(a.placement.split("-")[0]) || (D.removeClass(J.split("-")[0]), D.addClass(a.placement.split("-")[0])), D.hasClass(n.placementClassPrefix + a.placement) || (D.removeClass(n.placementClassPrefix + J), D.addClass(n.placementClassPrefix + a.placement)), D.hasClass("uib-position-measure") ? (i.positionArrow(D, a.placement), D.removeClass("uib-position-measure")) : J !== a.placement && i.positionArrow(D, a.placement), J = a.placement, I = null
                    }, 0, !1)))
                  };
              N.origScope = a, N.isOpen = !1, o.add(N, {close: t}), N.contentExp = function () {
                return N.content
              }, d.$observe("disabled", function (a) {
                a && s(), a && N.isOpen && t()
              }), P && a.$watch(P, function (a) {
                N && !a === N.isOpen && j()
              });
              var T = function () {
                L.show.forEach(function (a) {
                  "outsideClick" === a ? b.off("click", j) : (b.off(a, m), b.off(a, j))
                }), L.hide.forEach(function (a) {
                  "outsideClick" === a ? h.off("click", B) : b.off(a, q)
                })
              };
              !function () {
                var a = d[k + "Trigger"];
                T(), L = p(a), "none" !== L.show && L.show.forEach(function (a, c) {
                  "outsideClick" === a ? (b.on("click", j), h.on("click", B)) : a === L.hide[c] ? b.on(a, j) : a && (b.on(a, m), b.on(L.hide[c], q)), b.on("keypress", function (a) {
                    27 === a.which && q()
                  })
                })
              }();
              var U       = a.$eval(d[k + "Animation"]);
              N.animation = angular.isDefined(U) ? !!U : n.animation;
              var V, W    = k + "AppendToBody";
              V = W in d && void 0 === d[W] || a.$eval(d[W]), K = angular.isDefined(V) ? V : K, a.$on("$destroy", function () {
                T(), w(), o.remove(N), N = null
              })
            }
          }
        }
      }
    }]
  }).directive("uibTooltipTemplateTransclude", ["$animate", "$sce", "$compile", "$templateRequest", function (a, b, c, d) {
    return {
      link: function (e, f, g) {
        var h, i, j, k = e.$eval(g.tooltipTemplateTranscludeScope), l = 0, m = function () {
          i && (i.remove(), i = null), h && (h.$destroy(), h = null), j && (a.leave(j).then(function () {
            i = null
          }), i = j, j = null)
        };
        e.$watch(b.parseAsResourceUrl(g.uibTooltipTemplateTransclude), function (b) {
          var g = ++l;
          b ? (d(b, !0).then(function (d) {
            if (g === l) {
              var e = k.$new(), i = d, n = c(i)(e, function (b) {
                m(), a.enter(b, f)
              });
              h = e, j = n, h.$emit("$includeContentLoaded", b)
            }
          }, function () {
            g === l && (m(), e.$emit("$includeContentError", b))
          }), e.$emit("$includeContentRequested", b)) : m()
        }), e.$on("$destroy", m)
      }
    }
  }]).directive("uibTooltipClasses", ["$uibPosition", function (a) {
    return {
      restrict: "A", link: function (b, c, d) {
        if (b.placement) {
          var e = a.parsePlacement(b.placement);
          c.addClass(e[0])
        }
        b.popupClass && c.addClass(b.popupClass), b.animation() && c.addClass(d.tooltipAnimationClass)
      }
    }
  }]).directive("uibTooltipPopup", function () {
    return {
      replace:     !0,
      scope:       {content: "@", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
      templateUrl: "uib/template/tooltip/tooltip-popup.html"
    }
  }).directive("uibTooltip", ["$uibTooltip", function (a) {
    return a("uibTooltip", "tooltip", "mouseenter")
  }]).directive("uibTooltipTemplatePopup", function () {
    return {
      replace:     !0,
      scope:       {contentExp: "&", placement: "@", popupClass: "@", animation: "&", isOpen: "&", originScope: "&"},
      templateUrl: "uib/template/tooltip/tooltip-template-popup.html"
    }
  }).directive("uibTooltipTemplate", ["$uibTooltip", function (a) {
    return a("uibTooltipTemplate", "tooltip", "mouseenter", {useContentExp: !0})
  }]).directive("uibTooltipHtmlPopup", function () {
    return {
      replace:     !0,
      scope:       {contentExp: "&", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
      templateUrl: "uib/template/tooltip/tooltip-html-popup.html"
    }
  }).directive("uibTooltipHtml", ["$uibTooltip", function (a) {
    return a("uibTooltipHtml", "tooltip", "mouseenter", {useContentExp: !0})
  }]), angular.module("ui.bootstrap.popover", ["ui.bootstrap.tooltip"]).directive("uibPopoverTemplatePopup", function () {
    return {
      replace:     !0,
      scope:       {
        uibTitle:    "@",
        contentExp:  "&",
        placement:   "@",
        popupClass:  "@",
        animation:   "&",
        isOpen:      "&",
        originScope: "&"
      },
      templateUrl: "uib/template/popover/popover-template.html"
    }
  }).directive("uibPopoverTemplate", ["$uibTooltip", function (a) {
    return a("uibPopoverTemplate", "popover", "click", {useContentExp: !0})
  }]).directive("uibPopoverHtmlPopup", function () {
    return {
      replace:     !0,
      scope:       {contentExp: "&", uibTitle: "@", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
      templateUrl: "uib/template/popover/popover-html.html"
    }
  }).directive("uibPopoverHtml", ["$uibTooltip", function (a) {
    return a("uibPopoverHtml", "popover", "click", {useContentExp: !0})
  }]).directive("uibPopoverPopup", function () {
    return {
      replace:     !0,
      scope:       {uibTitle: "@", content: "@", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
      templateUrl: "uib/template/popover/popover.html"
    }
  }).directive("uibPopover", ["$uibTooltip", function (a) {
    return a("uibPopover", "popover", "click")
  }]), angular.module("ui.bootstrap.progressbar", []).constant("uibProgressConfig", {
    animate: !0,
    max:     100
  }).controller("UibProgressController", ["$scope", "$attrs", "uibProgressConfig", function (a, b, c) {
    function d() {
      return angular.isDefined(a.maxParam) ? a.maxParam : c.max
    }

    var e = this, f = angular.isDefined(b.animate) ? a.$parent.$eval(b.animate) : c.animate;
    this.bars = [], a.max = d(), this.addBar = function (a, b, c) {
      f || b.css({transition: "none"}), this.bars.push(a), a.max = d(), a.title = c && angular.isDefined(c.title) ? c.title : "progressbar", a.$watch("value", function (b) {
        a.recalculatePercentage()
      }), a.recalculatePercentage = function () {
        var b = e.bars.reduce(function (a, b) {
          return b.percent = +(100 * b.value / b.max).toFixed(2), a + b.percent
        }, 0);
        b > 100 && (a.percent -= b - 100)
      }, a.$on("$destroy", function () {
        b = null, e.removeBar(a)
      })
    }, this.removeBar = function (a) {
      this.bars.splice(this.bars.indexOf(a), 1), this.bars.forEach(function (a) {
        a.recalculatePercentage()
      })
    }, a.$watch("maxParam", function (a) {
      e.bars.forEach(function (a) {
        a.max = d(), a.recalculatePercentage()
      })
    })
  }]).directive("uibProgress", function () {
    return {
      replace:     !0,
      transclude:  !0,
      controller:  "UibProgressController",
      require:     "uibProgress",
      scope:       {maxParam: "=?max"},
      templateUrl: "uib/template/progressbar/progress.html"
    }
  }).directive("uibBar", function () {
    return {
      replace:     !0,
      transclude:  !0,
      require:     "^uibProgress",
      scope:       {value: "=", type: "@"},
      templateUrl: "uib/template/progressbar/bar.html",
      link:        function (a, b, c, d) {
        d.addBar(a, b, c)
      }
    }
  }).directive("uibProgressbar", function () {
    return {
      replace:     !0,
      transclude:  !0,
      controller:  "UibProgressController",
      scope:       {value: "=", maxParam: "=?max", type: "@"},
      templateUrl: "uib/template/progressbar/progressbar.html",
      link:        function (a, b, c, d) {
        d.addBar(a, angular.element(b.children()[0]), {title: c.title})
      }
    }
  }), angular.module("ui.bootstrap.rating", []).constant("uibRatingConfig", {
    max:         5,
    stateOn:     null,
    stateOff:    null,
    enableReset: !0,
    titles:      ["one", "two", "three", "four", "five"]
  }).controller("UibRatingController", ["$scope", "$attrs", "uibRatingConfig", function (a, b, c) {
    var d = {$setViewValue: angular.noop}, e = this;
    this.init = function (e) {
      d = e, d.$render = this.render, d.$formatters.push(function (a) {
        return angular.isNumber(a) && a << 0 !== a && (a = Math.round(a)), a
      }), this.stateOn = angular.isDefined(b.stateOn) ? a.$parent.$eval(b.stateOn) : c.stateOn, this.stateOff = angular.isDefined(b.stateOff) ? a.$parent.$eval(b.stateOff) : c.stateOff, this.enableReset = angular.isDefined(b.enableReset) ? a.$parent.$eval(b.enableReset) : c.enableReset;
      var f       = angular.isDefined(b.titles) ? a.$parent.$eval(b.titles) : c.titles;
      this.titles = angular.isArray(f) && f.length > 0 ? f : c.titles;
      var g       = angular.isDefined(b.ratingStates) ? a.$parent.$eval(b.ratingStates) : new Array(angular.isDefined(b.max) ? a.$parent.$eval(b.max) : c.max);
      a.range     = this.buildTemplateObjects(g)
    }, this.buildTemplateObjects = function (a) {
      for (var b = 0, c = a.length; c > b; b++) a[b] = angular.extend({index: b}, {
        stateOn:  this.stateOn,
        stateOff: this.stateOff,
        title:    this.getTitle(b)
      }, a[b]);
      return a
    }, this.getTitle = function (a) {
      return a >= this.titles.length ? a + 1 : this.titles[a]
    }, a.rate = function (b) {
      if (!a.readonly && b >= 0 && b <= a.range.length) {
        var c = e.enableReset && d.$viewValue === b ? 0 : b;
        d.$setViewValue(c), d.$render()
      }
    }, a.enter = function (b) {
      a.readonly || (a.value = b), a.onHover({value: b})
    }, a.reset = function () {
      a.value = d.$viewValue, a.onLeave()
    }, a.onKeydown = function (b) {
      /(37|38|39|40)/.test(b.which) && (b.preventDefault(), b.stopPropagation(), a.rate(a.value + (38 === b.which || 39 === b.which ? 1 : -1)))
    }, this.render = function () {
      a.value = d.$viewValue, a.title = e.getTitle(a.value - 1)
    }
  }]).directive("uibRating", function () {
    return {
      require:     ["uibRating", "ngModel"],
      scope:       {readonly: "=?readOnly", onHover: "&", onLeave: "&"},
      controller:  "UibRatingController",
      templateUrl: "uib/template/rating/rating.html",
      replace:     !0,
      link:        function (a, b, c, d) {
        var e = d[0], f = d[1];
        e.init(f)
      }
    }
  }), angular.module("ui.bootstrap.tabs", []).controller("UibTabsetController", ["$scope", function (a) {
    function b(a) {
      for (var b = 0; b < d.tabs.length; b++) if (d.tabs[b].index === a) return b
    }

    var c, d = this;
    d.tabs = [], d.select = function (a, f) {
      if (!e) {
        var g = b(c), h = d.tabs[g];
        if (h) {
          if (h.tab.onDeselect({$event: f}), f && f.isDefaultPrevented()) return;
          h.tab.active = !1
        }
        var i = d.tabs[a];
        i ? (i.tab.onSelect({$event: f}), i.tab.active = !0, d.active = i.index, c = i.index) : !i && angular.isNumber(c) && (d.active = null, c = null)
      }
    }, d.addTab = function (a) {
      if (d.tabs.push({tab: a, index: a.index}), d.tabs.sort(function (a, b) {
          return a.index > b.index ? 1 : a.index < b.index ? -1 : 0
        }), a.index === d.active || !angular.isNumber(d.active) && 1 === d.tabs.length) {
        var c = b(a.index);
        d.select(c)
      }
    }, d.removeTab = function (a) {
      for (var b, c = 0; c < d.tabs.length; c++) if (d.tabs[c].tab === a) {
        b = c;
        break
      }
      if (d.tabs[b].index === d.active) {
        var e = b === d.tabs.length - 1 ? b - 1 : b + 1 % d.tabs.length;
        d.select(e)
      }
      d.tabs.splice(b, 1)
    }, a.$watch("tabset.active", function (a) {
      angular.isNumber(a) && a !== c && d.select(b(a))
    });
    var e;
    a.$on("$destroy", function () {
      e = !0
    })
  }]).directive("uibTabset", function () {
    return {
      transclude:       !0,
      replace:          !0,
      scope:            {},
      bindToController: {active: "=?", type: "@"},
      controller:       "UibTabsetController",
      controllerAs:     "tabset",
      templateUrl:      function (a, b) {
        return b.templateUrl || "uib/template/tabs/tabset.html"
      },
      link:             function (a, b, c) {
        a.vertical = !!angular.isDefined(c.vertical) && a.$parent.$eval(c.vertical), a.justified = !!angular.isDefined(c.justified) && a.$parent.$eval(c.justified), angular.isUndefined(c.active) && (a.active = 0)
      }
    }
  }).directive("uibTab", ["$parse", function (a) {
    return {
      require:      "^uibTabset",
      replace:      !0,
      templateUrl:  function (a, b) {
        return b.templateUrl || "uib/template/tabs/tab.html"
      },
      transclude:   !0,
      scope:        {heading: "@", index: "=?", classes: "@?", onSelect: "&select", onDeselect: "&deselect"},
      controller:   function () {
      },
      controllerAs: "tab",
      link:         function (b, c, d, e, f) {
        b.disabled = !1, d.disable && b.$parent.$watch(a(d.disable), function (a) {
          b.disabled = !!a
        }), angular.isUndefined(d.index) && (e.tabs && e.tabs.length ? b.index = Math.max.apply(null, e.tabs.map(function (a) {
          return a.index
        })) + 1 : b.index = 0), angular.isUndefined(d.classes) && (b.classes = ""), b.select = function (a) {
          if (!b.disabled) {
            for (var c, d = 0; d < e.tabs.length; d++) if (e.tabs[d].tab === b) {
              c = d;
              break
            }
            e.select(c, a)
          }
        }, e.addTab(b), b.$on("$destroy", function () {
          e.removeTab(b)
        }), b.$transcludeFn = f
      }
    }
  }]).directive("uibTabHeadingTransclude", function () {
    return {
      restrict: "A", require: "^uibTab", link: function (a, b) {
        a.$watch("headingElement", function (a) {
          a && (b.html(""), b.append(a))
        })
      }
    }
  }).directive("uibTabContentTransclude", function () {
    function a(a) {
      return a.tagName && (a.hasAttribute("uib-tab-heading") || a.hasAttribute("data-uib-tab-heading") || a.hasAttribute("x-uib-tab-heading") || "uib-tab-heading" === a.tagName.toLowerCase() || "data-uib-tab-heading" === a.tagName.toLowerCase() || "x-uib-tab-heading" === a.tagName.toLowerCase() || "uib:tab-heading" === a.tagName.toLowerCase())
    }

    return {
      restrict: "A", require: "^uibTabset", link: function (b, c, d) {
        var e = b.$eval(d.uibTabContentTransclude).tab;
        e.$transcludeFn(e.$parent, function (b) {
          angular.forEach(b, function (b) {
            a(b) ? e.headingElement = b : c.append(b)
          })
        })
      }
    }
  }), angular.module("ui.bootstrap.timepicker", []).constant("uibTimepickerConfig", {
    hourStep:      1,
    minuteStep:    1,
    secondStep:    1,
    showMeridian:  !0,
    showSeconds:   !1,
    meridians:     null,
    readonlyInput: !1,
    mousewheel:    !0,
    arrowkeys:     !0,
    showSpinners:  !0,
    templateUrl:   "uib/template/timepicker/timepicker.html"
  }).controller("UibTimepickerController", ["$scope", "$element", "$attrs", "$parse", "$log", "$locale", "uibTimepickerConfig", function (a, b, c, d, e, f, g) {
    function h() {
      var b = +a.hours;
      return (a.showMeridian ? b > 0 && 13 > b : b >= 0 && 24 > b) && "" !== a.hours ? (a.showMeridian && (12 === b && (b = 0), a.meridian === v[1] && (b += 12)), b) : void 0
    }

    function i() {
      var b = +a.minutes;
      return b >= 0 && 60 > b && "" !== a.minutes ? b : void 0
    }

    function j() {
      var b = +a.seconds;
      return b >= 0 && 60 > b ? b : void 0
    }

    function k(a, b) {
      return null === a ? "" : angular.isDefined(a) && a.toString().length < 2 && !b ? "0" + a : a.toString()
    }

    function l(a) {
      m(), u.$setViewValue(new Date(s)), n(a)
    }

    function m() {
      u.$setValidity("time", !0), a.invalidHours = !1, a.invalidMinutes = !1, a.invalidSeconds = !1
    }

    function n(b) {
      if (u.$modelValue) {
        var c = s.getHours(), d = s.getMinutes(), e = s.getSeconds();
        a.showMeridian && (c = 0 === c || 12 === c ? 12 : c % 12), a.hours = "h" === b ? c : k(c, !w), "m" !== b && (a.minutes = k(d)), a.meridian = s.getHours() < 12 ? v[0] : v[1], "s" !== b && (a.seconds = k(e)), a.meridian = s.getHours() < 12 ? v[0] : v[1]
      } else a.hours = null, a.minutes = null, a.seconds = null, a.meridian = v[0]
    }

    function o(a) {
      s = q(s, a), l()
    }

    function p(a, b) {
      return q(a, 60 * b)
    }

    function q(a, b) {
      var c = new Date(a.getTime() + 1e3 * b), d = new Date(a);
      return d.setHours(c.getHours(), c.getMinutes(), c.getSeconds()), d
    }

    function r() {
      return (null === a.hours || "" === a.hours) && (null === a.minutes || "" === a.minutes) && (!a.showSeconds || a.showSeconds && (null === a.seconds || "" === a.seconds))
    }

    var s = new Date, t = [], u = {$setViewValue: angular.noop},
        v                       = angular.isDefined(c.meridians) ? a.$parent.$eval(c.meridians) : g.meridians || f.DATETIME_FORMATS.AMPMS,
        w                       = !angular.isDefined(c.padHours) || a.$parent.$eval(c.padHours);
    a.tabindex = angular.isDefined(c.tabindex) ? c.tabindex : 0, b.removeAttr("tabindex"), this.init = function (b, d) {
      u = b, u.$render = this.render, u.$formatters.unshift(function (a) {
        return a ? new Date(a) : null
      });
      var e = d.eq(0), f = d.eq(1), h = d.eq(2);
      (angular.isDefined(c.mousewheel) ? a.$parent.$eval(c.mousewheel) : g.mousewheel) && this.setupMousewheelEvents(e, f, h), (angular.isDefined(c.arrowkeys) ? a.$parent.$eval(c.arrowkeys) : g.arrowkeys) && this.setupArrowkeyEvents(e, f, h), a.readonlyInput = angular.isDefined(c.readonlyInput) ? a.$parent.$eval(c.readonlyInput) : g.readonlyInput, this.setupInputEvents(e, f, h)
    };
    var x = g.hourStep;
    c.hourStep && t.push(a.$parent.$watch(d(c.hourStep), function (a) {
      x = +a
    }));
    var y = g.minuteStep;
    c.minuteStep && t.push(a.$parent.$watch(d(c.minuteStep), function (a) {
      y = +a
    }));
    var z;
    t.push(a.$parent.$watch(d(c.min), function (a) {
      var b = new Date(a);
      z     = isNaN(b) ? void 0 : b
    }));
    var A;
    t.push(a.$parent.$watch(d(c.max), function (a) {
      var b = new Date(a);
      A     = isNaN(b) ? void 0 : b
    }));
    var B = !1;
    c.ngDisabled && t.push(a.$parent.$watch(d(c.ngDisabled), function (a) {
      B = a
    })), a.noIncrementHours = function () {
      var a = p(s, 60 * x);
      return B || a > A || s > a && z > a
    }, a.noDecrementHours = function () {
      var a = p(s, 60 * -x);
      return B || z > a || a > s && a > A
    }, a.noIncrementMinutes = function () {
      var a = p(s, y);
      return B || a > A || s > a && z > a
    }, a.noDecrementMinutes = function () {
      var a = p(s, -y);
      return B || z > a || a > s && a > A
    }, a.noIncrementSeconds = function () {
      var a = q(s, C);
      return B || a > A || s > a && z > a
    }, a.noDecrementSeconds = function () {
      var a = q(s, -C);
      return B || z > a || a > s && a > A
    }, a.noToggleMeridian = function () {
      return s.getHours() < 12 ? B || p(s, 720) > A : B || p(s, -720) < z
    };
    var C = g.secondStep;
    c.secondStep && t.push(a.$parent.$watch(d(c.secondStep), function (a) {
      C = +a
    })), a.showSeconds = g.showSeconds, c.showSeconds && t.push(a.$parent.$watch(d(c.showSeconds), function (b) {
      a.showSeconds = !!b
    })), a.showMeridian = g.showMeridian, c.showMeridian && t.push(a.$parent.$watch(d(c.showMeridian), function (b) {
      if (a.showMeridian = !!b, u.$error.time) {
        var c = h(), d = i();
        angular.isDefined(c) && angular.isDefined(d) && (s.setHours(c), l())
      } else n()
    })), this.setupMousewheelEvents = function (b, c, d) {
      var e = function (a) {
        a.originalEvent && (a = a.originalEvent);
        var b = a.wheelDelta ? a.wheelDelta : -a.deltaY;
        return a.detail || b > 0
      };
      b.bind("mousewheel wheel", function (b) {
        B || a.$apply(e(b) ? a.incrementHours() : a.decrementHours()), b.preventDefault()
      }), c.bind("mousewheel wheel", function (b) {
        B || a.$apply(e(b) ? a.incrementMinutes() : a.decrementMinutes()), b.preventDefault()
      }), d.bind("mousewheel wheel", function (b) {
        B || a.$apply(e(b) ? a.incrementSeconds() : a.decrementSeconds()), b.preventDefault()
      })
    }, this.setupArrowkeyEvents = function (b, c, d) {
      b.bind("keydown", function (b) {
        B || (38 === b.which ? (b.preventDefault(), a.incrementHours(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementHours(), a.$apply()))
      }), c.bind("keydown", function (b) {
        B || (38 === b.which ? (b.preventDefault(), a.incrementMinutes(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementMinutes(), a.$apply()))
      }), d.bind("keydown", function (b) {
        B || (38 === b.which ? (b.preventDefault(), a.incrementSeconds(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementSeconds(), a.$apply()))
      })
    }, this.setupInputEvents = function (b, c, d) {
      if (a.readonlyInput) return a.updateHours = angular.noop, a.updateMinutes = angular.noop, void(a.updateSeconds = angular.noop);
      var e = function (b, c, d) {
        u.$setViewValue(null), u.$setValidity("time", !1), angular.isDefined(b) && (a.invalidHours = b), angular.isDefined(c) && (a.invalidMinutes = c), angular.isDefined(d) && (a.invalidSeconds = d)
      };
      a.updateHours = function () {
        var a = h(), b = i();
        u.$setDirty(), angular.isDefined(a) && angular.isDefined(b) ? (s.setHours(a), s.setMinutes(b), z > s || s > A ? e(!0) : l("h")) : e(!0)
      }, b.bind("blur", function (b) {
        u.$setTouched(), r() ? m() : null === a.hours || "" === a.hours ? e(!0) : !a.invalidHours && a.hours < 10 && a.$apply(function () {
          a.hours = k(a.hours, !w)
        })
      }), a.updateMinutes = function () {
        var a = i(), b = h();
        u.$setDirty(), angular.isDefined(a) && angular.isDefined(b) ? (s.setHours(b), s.setMinutes(a), z > s || s > A ? e(void 0, !0) : l("m")) : e(void 0, !0)
      }, c.bind("blur", function (b) {
        u.$setTouched(), r() ? m() : null === a.minutes ? e(void 0, !0) : !a.invalidMinutes && a.minutes < 10 && a.$apply(function () {
          a.minutes = k(a.minutes)
        })
      }), a.updateSeconds = function () {
        var a = j();
        u.$setDirty(), angular.isDefined(a) ? (s.setSeconds(a), l("s")) : e(void 0, void 0, !0)
      }, d.bind("blur", function (b) {
        r() ? m() : !a.invalidSeconds && a.seconds < 10 && a.$apply(function () {
          a.seconds = k(a.seconds)
        })
      })
    }, this.render = function () {
      var b = u.$viewValue;
      isNaN(b) ? (u.$setValidity("time", !1), e.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')) : (b && (s = b), z > s || s > A ? (u.$setValidity("time", !1), a.invalidHours = !0, a.invalidMinutes = !0) : m(), n())
    }, a.showSpinners = angular.isDefined(c.showSpinners) ? a.$parent.$eval(c.showSpinners) : g.showSpinners, a.incrementHours = function () {
      a.noIncrementHours() || o(60 * x * 60)
    }, a.decrementHours = function () {
      a.noDecrementHours() || o(60 * -x * 60)
    }, a.incrementMinutes = function () {
      a.noIncrementMinutes() || o(60 * y)
    }, a.decrementMinutes = function () {
      a.noDecrementMinutes() || o(60 * -y)
    }, a.incrementSeconds = function () {
      a.noIncrementSeconds() || o(C)
    }, a.decrementSeconds = function () {
      a.noDecrementSeconds() || o(-C)
    }, a.toggleMeridian = function () {
      var b = i(), c = h();
      a.noToggleMeridian() || (angular.isDefined(b) && angular.isDefined(c) ? o(720 * (s.getHours() < 12 ? 60 : -60)) : a.meridian = a.meridian === v[0] ? v[1] : v[0])
    }, a.blur = function () {
      u.$setTouched()
    }, a.$on("$destroy", function () {
      for (; t.length;) t.shift()()
    })
  }]).directive("uibTimepicker", ["uibTimepickerConfig", function (a) {
    return {
      require:      ["uibTimepicker", "?^ngModel"],
      controller:   "UibTimepickerController",
      controllerAs: "timepicker",
      replace:      !0,
      scope:        {},
      templateUrl:  function (b, c) {
        return c.templateUrl || a.templateUrl
      },
      link:         function (a, b, c, d) {
        var e = d[0], f = d[1];
        f && e.init(f, b.find("input"))
      }
    }
  }]), angular.module("ui.bootstrap.typeahead", ["ui.bootstrap.debounce", "ui.bootstrap.position"]).factory("uibTypeaheadParser", ["$parse", function (a) {
    var b = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;
    return {
      parse: function (c) {
        var d = c.match(b);
        if (!d) throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "' + c + '".');
        return {itemName: d[3], source: a(d[4]), viewMapper: a(d[2] || d[1]), modelMapper: a(d[1])}
      }
    }
  }]).controller("UibTypeaheadController", ["$scope", "$element", "$attrs", "$compile", "$parse", "$q", "$timeout", "$document", "$window", "$rootScope", "$$debounce", "$uibPosition", "uibTypeaheadParser", function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
    function n() {
      N.moveInProgress || (N.moveInProgress = !0, N.$digest()), Y()
    }

    function o() {
      N.position = D ? l.offset(b) : l.position(b), N.position.top += b.prop("offsetHeight")
    }

    var p, q, r = [9, 13, 27, 38, 40], t = a.$eval(c.typeaheadMinLength);
    t || 0 === t || (t = 1), a.$watch(c.typeaheadMinLength, function (a) {
      t = a || 0 === a ? a : 1
    });
    var u = a.$eval(c.typeaheadWaitMs) || 0, v = !1 !== a.$eval(c.typeaheadEditable);
    a.$watch(c.typeaheadEditable, function (a) {
      v = !1 !== a
    });
    var w, x, y                                                                                    = e(c.typeaheadLoading).assign || angular.noop, z = e(c.typeaheadOnSelect),
        A                                                                                          = !!angular.isDefined(c.typeaheadSelectOnBlur) && a.$eval(c.typeaheadSelectOnBlur),
        B                                                                                          = e(c.typeaheadNoResults).assign || angular.noop,
        C                                                                                          = c.typeaheadInputFormatter ? e(c.typeaheadInputFormatter) : void 0,
        D                                                                                          = !!c.typeaheadAppendToBody && a.$eval(c.typeaheadAppendToBody),
        E                                                                                          = c.typeaheadAppendTo ? a.$eval(c.typeaheadAppendTo) : null, F                           = !1 !== a.$eval(c.typeaheadFocusFirst),
        G                                                                                          = !!c.typeaheadSelectOnExact && a.$eval(c.typeaheadSelectOnExact),
        H = e(c.typeaheadIsOpen).assign || angular.noop, I = a.$eval(c.typeaheadShowHint) || !1, J = e(c.ngModel),
        K                                                                                          = e(c.ngModel + "($$$p)"), L                                                             = function (b, c) {
          return angular.isFunction(J(a)) && q && q.$options && q.$options.getterSetter ? K(b, {$$$p: c}) : J.assign(b, c)
        }, M                                                                                       = m.parse(c.uibTypeahead), N = a.$new(), O                                            = a.$on("$destroy", function () {
          N.$destroy()
        });
    N.$on("$destroy", O);
    var P = "typeahead-" + N.$id + "-" + Math.floor(1e4 * Math.random());
    b.attr({"aria-autocomplete": "list", "aria-expanded": !1, "aria-owns": P});
    var Q, R;
    I && (Q = angular.element("<div></div>"), Q.css("position", "relative"), b.after(Q), R = b.clone(), R.attr("placeholder", ""), R.attr("tabindex", "-1"), R.val(""), R.css({
      position:       "absolute",
      top:            "0px",
      left:           "0px",
      "border-color": "transparent",
      "box-shadow":   "none",
      opacity:        1,
      background:     "none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, 255)",
      color:          "#999"
    }), b.css({
      position:           "relative",
      "vertical-align":   "top",
      "background-color": "transparent"
    }), Q.append(R), R.after(b));
    var S = angular.element("<div uib-typeahead-popup></div>");
    S.attr({
      id:                 P,
      matches:            "matches",
      active:             "activeIdx",
      select:             "select(activeIdx, evt)",
      "move-in-progress": "moveInProgress",
      query:              "query",
      position:           "position",
      "assign-is-open":   "assignIsOpen(isOpen)",
      debounce:           "debounceUpdate"
    }), angular.isDefined(c.typeaheadTemplateUrl) && S.attr("template-url", c.typeaheadTemplateUrl), angular.isDefined(c.typeaheadPopupTemplateUrl) && S.attr("popup-template-url", c.typeaheadPopupTemplateUrl);
    var T = function () {
      I && R.val("")
    }, U  = function () {
      N.matches = [], N.activeIdx = -1, b.attr("aria-expanded", !1), T()
    }, V  = function (a) {
      return P + "-option-" + a
    };
    N.$watch("activeIdx", function (a) {
      0 > a ? b.removeAttr("aria-activedescendant") : b.attr("aria-activedescendant", V(a))
    });
    var W = function (a, b) {
      return !!(N.matches.length > b && a) && a.toUpperCase() === N.matches[b].label.toUpperCase()
    }, X  = function (c, d) {
      var e = {$viewValue: c};
      y(a, !0), B(a, !1), f.when(M.source(a, e)).then(function (f) {
        var g = c === p.$viewValue;
        if (g && w) if (f && f.length > 0) {
          N.activeIdx = F ? 0 : -1, B(a, !1), N.matches.length = 0;
          for (var h = 0; h < f.length; h++) e[M.itemName] = f[h], N.matches.push({
            id:    V(h),
            label: M.viewMapper(N, e),
            model: f[h]
          });
          if (N.query = c, o(), b.attr("aria-expanded", !0), G && 1 === N.matches.length && W(c, 0) && (angular.isNumber(N.debounceUpdate) || angular.isObject(N.debounceUpdate) ? k(function () {
              N.select(0, d)
            }, angular.isNumber(N.debounceUpdate) ? N.debounceUpdate : N.debounceUpdate.default) : N.select(0, d)), I) {
            var i = N.matches[0].label;
            angular.isString(c) && c.length > 0 && i.slice(0, c.length).toUpperCase() === c.toUpperCase() ? R.val(c + i.slice(c.length)) : R.val("")
          }
        } else U(), B(a, !0);
        g && y(a, !1)
      }, function () {
        U(), y(a, !1), B(a, !0)
      })
    };
    D && (angular.element(i).on("resize", n), h.find("body").on("scroll", n));
    var Y = k(function () {
      N.matches.length && o(), N.moveInProgress = !1
    }, 200);
    N.moveInProgress = !1, N.query = void 0;
    var Z, $ = function (a) {
      Z = g(function () {
        X(a)
      }, u)
    }, _     = function () {
      Z && g.cancel(Z)
    };
    U(), N.assignIsOpen = function (b) {
      H(a, b)
    }, N.select = function (d, e) {
      var f, h, i = {};
      x = !0, i[M.itemName] = h = N.matches[d].model, f = M.modelMapper(a, i), L(a, f), p.$setValidity("editable", !0), p.$setValidity("parse", !0), z(a, {
        $item:  h,
        $model: f,
        $label: M.viewMapper(a, i),
        $event: e
      }), U(), !1 !== N.$eval(c.typeaheadFocusOnSelect) && g(function () {
        b[0].focus()
      }, 0, !1)
    }, b.on("keydown", function (b) {
      if (0 !== N.matches.length && -1 !== r.indexOf(b.which)) {
        if (-1 === N.activeIdx && (9 === b.which || 13 === b.which) || 9 === b.which && b.shiftKey) return U(), void N.$digest();
        b.preventDefault();
        var c;
        switch (b.which) {
          case 9:
          case 13:
            N.$apply(function () {
              angular.isNumber(N.debounceUpdate) || angular.isObject(N.debounceUpdate) ? k(function () {
                N.select(N.activeIdx, b)
              }, angular.isNumber(N.debounceUpdate) ? N.debounceUpdate : N.debounceUpdate.default) : N.select(N.activeIdx, b)
            });
            break;
          case 27:
            b.stopPropagation(), U(), a.$digest();
            break;
          case 38:
            N.activeIdx = (N.activeIdx > 0 ? N.activeIdx : N.matches.length) - 1, N.$digest(), c = S.find("li")[N.activeIdx], c.parentNode.scrollTop = c.offsetTop;
            break;
          case 40:
            N.activeIdx = (N.activeIdx + 1) % N.matches.length, N.$digest(), c = S.find("li")[N.activeIdx], c.parentNode.scrollTop = c.offsetTop
        }
      }
    }), b.bind("focus", function (a) {
      w = !0, 0 !== t || p.$viewValue || g(function () {
        X(p.$viewValue, a)
      }, 0)
    }), b.bind("blur", function (a) {
      A && N.matches.length && -1 !== N.activeIdx && !x && (x = !0, N.$apply(function () {
        angular.isObject(N.debounceUpdate) && angular.isNumber(N.debounceUpdate.blur) ? k(function () {
          N.select(N.activeIdx, a)
        }, N.debounceUpdate.blur) : N.select(N.activeIdx, a)
      })), !v && p.$error.editable && (p.$viewValue = "", p.$setValidity("editable", !0), p.$setValidity("parse", !0), b.val("")), w = !1, x = !1
    });
    var aa = function (c) {
      b[0] !== c.target && 3 !== c.which && 0 !== N.matches.length && (U(), j.$$phase || a.$digest())
    };
    h.on("click", aa), a.$on("$destroy", function () {
      h.off("click", aa), (D || E) && ba.remove(), D && (angular.element(i).off("resize", n), h.find("body").off("scroll", n)), S.remove(), I && Q.remove()
    });
    var ba = d(S)(N);
    D ? h.find("body").append(ba) : E ? angular.element(E).eq(0).append(ba) : b.after(ba), this.init = function (b, c) {
      p = b, q = c, N.debounceUpdate = p.$options && e(p.$options.debounce)(a), p.$parsers.unshift(function (b) {
        return w = !0, 0 === t || b && b.length >= t ? u > 0 ? (_(), $(b)) : X(b) : (y(a, !1), _(), U()), v ? b : b ? void p.$setValidity("editable", !1) : (p.$setValidity("editable", !0), null)
      }), p.$formatters.push(function (b) {
        var c, d, e = {};
        return v || p.$setValidity("editable", !0), C ? (e.$model = b, C(a, e)) : (e[M.itemName] = b, c = M.viewMapper(a, e), e[M.itemName] = void 0, d = M.viewMapper(a, e), c !== d ? c : b)
      })
    }
  }]).directive("uibTypeahead", function () {
    return {
      controller: "UibTypeaheadController",
      require:    ["ngModel", "^?ngModelOptions", "uibTypeahead"],
      link:       function (a, b, c, d) {
        d[2].init(d[0], d[1])
      }
    }
  }).directive("uibTypeaheadPopup", ["$$debounce", function (a) {
    return {
      scope:      {
        matches:        "=",
        query:          "=",
        active:         "=",
        position:       "&",
        moveInProgress: "=",
        select:         "&",
        assignIsOpen:   "&",
        debounce:       "&"
      }, replace: !0, templateUrl: function (a, b) {
        return b.popupTemplateUrl || "uib/template/typeahead/typeahead-popup.html"
      }, link:    function (b, c, d) {
        b.templateUrl = d.templateUrl, b.isOpen = function () {
          var a = b.matches.length > 0;
          return b.assignIsOpen({isOpen: a}), a
        }, b.isActive = function (a) {
          return b.active === a
        }, b.selectActive = function (a) {
          b.active = a
        }, b.selectMatch = function (c, d) {
          var e = b.debounce();
          angular.isNumber(e) || angular.isObject(e) ? a(function () {
            b.select({activeIdx: c, evt: d})
          }, angular.isNumber(e) ? e : e.default) : b.select({activeIdx: c, evt: d})
        }
      }
    }
  }]).directive("uibTypeaheadMatch", ["$templateRequest", "$compile", "$parse", function (a, b, c) {
    return {
      scope: {index: "=", match: "=", query: "="}, link: function (d, e, f) {
        var g = c(f.templateUrl)(d.$parent) || "uib/template/typeahead/typeahead-match.html";
        a(g).then(function (a) {
          var c = angular.element(a.trim());
          e.replaceWith(c), b(c)(d)
        })
      }
    }
  }]).filter("uibTypeaheadHighlight", ["$sce", "$injector", "$log", function (a, b, c) {
    function d(a) {
      return a.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
    }

    function e(a) {
      return /<.*>/g.test(a)
    }

    var f;
    return f = b.has("$sanitize"), function (b, g) {
      return !f && e(b) && c.warn("Unsafe use of typeahead please use ngSanitize"), b = g ? ("" + b).replace(new RegExp(d(g), "gi"), "<strong>$&</strong>") : b, f || (b = a.trustAsHtml(b)), b
    }
  }]), angular.module("uib/template/accordion/accordion-group.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/accordion/accordion-group.html", '<div class="panel" ng-class="panelClass || \'panel-default\'">\n  <div role="tab" id="{{::headingId}}" aria-selected="{{isOpen}}" class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a role="button" data-toggle="collapse" href aria-expanded="{{isOpen}}" aria-controls="{{::panelId}}" tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" uib-accordion-transclude="heading"><span uib-accordion-header ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div id="{{::panelId}}" aria-labelledby="{{::headingId}}" aria-hidden="{{!isOpen}}" role="tabpanel" class="panel-collapse collapse" uib-collapse="!isOpen">\n    <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n')
  }]), angular.module("uib/template/accordion/accordion.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/accordion/accordion.html", '<div role="tablist" class="panel-group" ng-transclude></div>')
  }]), angular.module("uib/template/alert/alert.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/alert/alert.html", '<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissible\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close({$event: $event})">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')
  }]), angular.module("uib/template/carousel/carousel.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/carousel/carousel.html", '<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n  <div class="carousel-inner" ng-transclude></div>\n  <a role="button" href class="left carousel-control" ng-click="prev()" ng-class="{ disabled: isPrevDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-left"></span>\n    <span class="sr-only">previous</span>\n  </a>\n  <a role="button" href class="right carousel-control" ng-click="next()" ng-class="{ disabled: isNextDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-right"></span>\n    <span class="sr-only">next</span>\n  </a>\n  <ol class="carousel-indicators" ng-show="slides.length > 1">\n    <li ng-repeat="slide in slides | orderBy:indexOfSlide track by $index" ng-class="{ active: isActive(slide) }" ng-click="select(slide)">\n      <span class="sr-only">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if="isActive(slide)">, currently active</span></span>\n    </li>\n  </ol>\n</div>\n')
  }]), angular.module("uib/template/carousel/slide.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/carousel/slide.html", '<div ng-class="{\n    \'active\': active\n  }" class="item text-center" ng-transclude></div>\n')
  }]), angular.module("uib/template/datepicker/datepicker.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/datepicker/datepicker.html", '<div class="uib-datepicker" ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <uib-daypicker ng-switch-when="day" tabindex="0"></uib-daypicker>\n  <uib-monthpicker ng-switch-when="month" tabindex="0"></uib-monthpicker>\n  <uib-yearpicker ng-switch-when="year" tabindex="0"></uib-yearpicker>\n</div>\n')
  }]), angular.module("uib/template/datepicker/day.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/datepicker/day.html", '<table class="uib-daypicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::5 + showWeeks}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-if="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in ::labels track by $index" class="text-center"><small aria-label="{{::label.full}}">{{::label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-weeks" ng-repeat="row in rows track by $index">\n      <td ng-if="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row" class="uib-day text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default btn-sm"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')
  }]), angular.module("uib/template/datepicker/month.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/datepicker/month.html", '<table class="uib-monthpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-months" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-month text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')
  }]), angular.module("uib/template/datepicker/year.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/datepicker/year.html", '<table class="uib-yearpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::columns - 2}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-years" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-year text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')
  }]), angular.module("uib/template/datepickerPopup/popup.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/datepickerPopup/popup.html", '<div>\n  <ul class="uib-datepicker-popup dropdown-menu uib-position-measure" dropdown-nested ng-if="isOpen" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n    <li ng-transclude></li>\n    <li ng-if="showButtonBar" class="uib-button-bar">\n      <span class="btn-group pull-left">\n        <button type="button" class="btn btn-sm btn-info uib-datepicker-current" ng-click="select(\'today\', $event)" ng-disabled="isDisabled(\'today\')">{{ getText(\'current\') }}</button>\n        <button type="button" class="btn btn-sm btn-danger uib-clear" ng-click="select(null, $event)">{{ getText(\'clear\') }}</button>\n      </span>\n      <button type="button" class="btn btn-sm btn-success pull-right uib-close" ng-click="close($event)">{{ getText(\'close\') }}</button>\n    </li>\n  </ul>\n</div>\n')
  }]), angular.module("uib/template/modal/backdrop.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/modal/backdrop.html", '<div class="modal-backdrop"\n     uib-modal-animation-class="fade"\n     modal-in-class="in"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')
  }]), angular.module("uib/template/modal/window.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/modal/window.html", '<div modal-render="{{$isRendered}}" tabindex="-1" role="dialog" class="modal"\n    uib-modal-animation-class="fade"\n    modal-in-class="in"\n    ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}">\n    <div class="modal-dialog {{size ? \'modal-\' + size : \'\'}}"><div class="modal-content" uib-modal-transclude></div></div>\n</div>\n')
  }]), angular.module("uib/template/pager/pager.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/pager/pager.html", '<ul class="pager">\n  <li ng-class="{disabled: noPrevious()||ngDisabled, previous: align}"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext()||ngDisabled, next: align}"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n</ul>\n')
  }]), angular.module("uib/template/pagination/pagination.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/pagination/pagination.html", '<ul class="pagination">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText(\'first\')}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="pagination-page"><a href ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText(\'last\')}}</a></li>\n</ul>\n')
  }]), angular.module("uib/template/tooltip/tooltip-html-popup.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/tooltip/tooltip-html-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html="contentExp()"></div>\n</div>\n')
  }]), angular.module("uib/template/tooltip/tooltip-popup.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/tooltip/tooltip-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')
  }]), angular.module("uib/template/tooltip/tooltip-template-popup.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/tooltip/tooltip-template-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner"\n    uib-tooltip-template-transclude="contentExp()"\n    tooltip-template-transclude-scope="originScope()"></div>\n</div>\n')
  }]), angular.module("uib/template/popover/popover-html.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/popover/popover-html.html", '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind-html="contentExp()"></div>\n  </div>\n</div>\n')
  }]), angular.module("uib/template/popover/popover-template.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/popover/popover-template.html", '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content"\n        uib-tooltip-template-transclude="contentExp()"\n        tooltip-template-transclude-scope="originScope()"></div>\n  </div>\n</div>\n')
  }]), angular.module("uib/template/popover/popover.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/popover/popover.html", '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')
  }]), angular.module("uib/template/progressbar/bar.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/progressbar/bar.html", '<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n')
  }]), angular.module("uib/template/progressbar/progress.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/progressbar/progress.html", '<div class="progress" ng-transclude aria-labelledby="{{::title}}"></div>')
  }]), angular.module("uib/template/progressbar/progressbar.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/progressbar/progressbar.html", '<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n</div>\n')
  }]), angular.module("uib/template/rating/rating.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/rating/rating.html", '<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}" aria-valuetext="{{title}}">\n    <span ng-repeat-start="r in range track by $index" class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    <i ng-repeat-end ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')" ng-attr-title="{{r.title}}"></i>\n</span>\n')
  }]), angular.module("uib/template/tabs/tab.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/tabs/tab.html", '<li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item">\n  <a href ng-click="select($event)" class="nav-link" uib-tab-heading-transclude>{{heading}}</a>\n</li>\n')
  }]), angular.module("uib/template/tabs/tabset.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/tabs/tabset.html", '<div>\n  <ul class="nav nav-{{tabset.type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane"\n         ng-repeat="tab in tabset.tabs"\n         ng-class="{active: tabset.active === tab.index}"\n         uib-tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')
  }]), angular.module("uib/template/timepicker/timepicker.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/timepicker/timepicker.html", '<table class="uib-timepicker">\n  <tbody>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-increment hours"><a ng-click="incrementHours()" ng-class="{disabled: noIncrementHours()}" class="btn btn-link" ng-disabled="noIncrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-increment minutes"><a ng-click="incrementMinutes()" ng-class="{disabled: noIncrementMinutes()}" class="btn btn-link" ng-disabled="noIncrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-increment seconds"><a ng-click="incrementSeconds()" ng-class="{disabled: noIncrementSeconds()}" class="btn btn-link" ng-disabled="noIncrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n    <tr>\n      <td class="form-group uib-time hours" ng-class="{\'has-error\': invalidHours}">\n        <input style="width:50px;" type="text" placeholder="HH" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementHours()" ng-blur="blur()">\n      </td>\n      <td class="uib-separator">:</td>\n      <td class="form-group uib-time minutes" ng-class="{\'has-error\': invalidMinutes}">\n        <input style="width:50px;" type="text" placeholder="MM" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementMinutes()" ng-blur="blur()">\n      </td>\n      <td ng-show="showSeconds" class="uib-separator">:</td>\n      <td class="form-group uib-time seconds" ng-class="{\'has-error\': invalidSeconds}" ng-show="showSeconds">\n        <input style="width:50px;" type="text" placeholder="SS" ng-model="seconds" ng-change="updateSeconds()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementSeconds()" ng-blur="blur()">\n      </td>\n      <td ng-show="showMeridian" class="uib-time am-pm"><button type="button" ng-class="{disabled: noToggleMeridian()}" class="btn btn-default text-center" ng-click="toggleMeridian()" ng-disabled="noToggleMeridian()" tabindex="{{::tabindex}}">{{meridian}}</button></td>\n    </tr>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-decrement hours"><a ng-click="decrementHours()" ng-class="{disabled: noDecrementHours()}" class="btn btn-link" ng-disabled="noDecrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-decrement minutes"><a ng-click="decrementMinutes()" ng-class="{disabled: noDecrementMinutes()}" class="btn btn-link" ng-disabled="noDecrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-decrement seconds"><a ng-click="decrementSeconds()" ng-class="{disabled: noDecrementSeconds()}" class="btn btn-link" ng-disabled="noDecrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n  </tbody>\n</table>\n')
  }]), angular.module("uib/template/typeahead/typeahead-match.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/typeahead/typeahead-match.html", '<a href\n   tabindex="-1"\n   ng-bind-html="match.label | uibTypeaheadHighlight:query"\n   ng-attr-title="{{match.label}}"></a>\n')
  }]), angular.module("uib/template/typeahead/typeahead-popup.html", []).run(["$templateCache", function (a) {
    a.put("uib/template/typeahead/typeahead-popup.html", '<ul class="dropdown-menu" ng-show="isOpen() && !moveInProgress" ng-style="{top: position().top+\'px\', left: position().left+\'px\'}" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index, $event)" role="option" id="{{::match.id}}">\n        <div uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n')
  }]), angular.module("ui.bootstrap.carousel").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibCarouselCss && angular.element(document).find("head").prepend('<style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>'), angular.$$uibCarouselCss = !0
  }), angular.module("ui.bootstrap.datepicker").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerCss && angular.element(document).find("head").prepend('<style type="text/css">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style>'), angular.$$uibDatepickerCss = !0
  }), angular.module("ui.bootstrap.position").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibPositionCss && angular.element(document).find("head").prepend('<style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>'), angular.$$uibPositionCss = !0
  }), angular.module("ui.bootstrap.datepickerPopup").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerpopupCss && angular.element(document).find("head").prepend('<style type="text/css">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style>'), angular.$$uibDatepickerpopupCss = !0
  }), angular.module("ui.bootstrap.tooltip").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibTooltipCss && angular.element(document).find("head").prepend('<style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style>'), angular.$$uibTooltipCss = !0
  }), angular.module("ui.bootstrap.timepicker").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibTimepickerCss && angular.element(document).find("head").prepend('<style type="text/css">.uib-time input{width:50px;}</style>'), angular.$$uibTimepickerCss = !0
  }), angular.module("ui.bootstrap.typeahead").run(function () {
    !angular.$$csp().noInlineStyle && !angular.$$uibTypeaheadCss && angular.element(document).find("head").prepend('<style type="text/css">[uib-typeahead-popup].dropdown-menu{display:block;}</style>'), angular.$$uibTypeaheadCss = !0
  }), "undefined" != typeof module && "undefined" != typeof exports && module.exports === exports && (module.exports = "ui.router"), function (window, angular, undefined) {
    "use strict";

    function inherit(parent, extra) {
      return extend(new (extend(function () {
      }, {prototype: parent})), extra)
    }

    function merge(dst) {
      return forEach(arguments, function (obj) {
        obj !== dst && forEach(obj, function (value, key) {
          dst.hasOwnProperty(key) || (dst[key] = value)
        })
      }), dst
    }

    function ancestors(first, second) {
      var path = [];
      for (var n in first.path) {
        if (first.path[n] !== second.path[n]) break;
        path.push(first.path[n])
      }
      return path
    }

    function objectKeys(object) {
      if (Object.keys) return Object.keys(object);
      var result = [];
      return angular.forEach(object, function (val, key) {
        result.push(key)
      }), result
    }

    function arraySearch(array, value) {
      if (Array.prototype.indexOf) return array.indexOf(value, Number(arguments[2]) || 0);
      var len = array.length >>> 0, from = Number(arguments[2]) || 0;
      for (from = from < 0 ? Math.ceil(from) : Math.floor(from), from < 0 && (from += len); from < len; from++) if (from in array && array[from] === value) return from;
      return -1
    }

    function inheritParams(currentParams, newParams, $current, $to) {
      var parentParams, parents = ancestors($current, $to), inherited = {}, inheritList = [];
      for (var i in parents) if (parents[i].params && (parentParams = objectKeys(parents[i].params), parentParams.length)) for (var j in parentParams) arraySearch(inheritList, parentParams[j]) >= 0 || (inheritList.push(parentParams[j]), inherited[parentParams[j]] = currentParams[parentParams[j]]);
      return extend({}, inherited, newParams)
    }

    function equalForKeys(a, b, keys) {
      if (!keys) {
        keys = [];
        for (var n in a) keys.push(n)
      }
      for (var i = 0; i < keys.length; i++) {
        var k = keys[i];
        if (a[k] != b[k]) return !1
      }
      return !0
    }

    function filterByKeys(keys, values) {
      var filtered = {};
      return forEach(keys, function (name) {
        filtered[name] = values[name]
      }), filtered
    }

    function $Resolve($q, $injector) {
      var VISIT_IN_PROGRESS = 1, VISIT_DONE = 2, NOTHING = {}, NO_DEPENDENCIES = [], NO_LOCALS = NOTHING,
          NO_PARENT                                                                            = extend($q.when(NOTHING), {$$promises: NOTHING, $$values: NOTHING});
      this.study = function (invocables) {
        function visit(value, key) {
          if (visited[key] !== VISIT_DONE) {
            if (cycle.push(key), visited[key] === VISIT_IN_PROGRESS) throw cycle.splice(0, cycle.indexOf(key)), new Error("Cyclic dependency: " + cycle.join(" -> "));
            if (visited[key] = VISIT_IN_PROGRESS, isString(value)) plan.push(key, [function () {
              return $injector.get(value)
            }], NO_DEPENDENCIES); else {
              var params = $injector.annotate(value);
              forEach(params, function (param) {
                param !== key && invocables.hasOwnProperty(param) && visit(invocables[param], param)
              }), plan.push(key, value, params)
            }
            cycle.pop(), visited[key] = VISIT_DONE
          }
        }

        function isResolve(value) {
          return isObject(value) && value.then && value.$$promises
        }

        if (!isObject(invocables)) throw new Error("'invocables' must be an object");
        var plan = [], cycle = [], visited = {};
        return forEach(invocables, visit), invocables = cycle = visited = null, function (locals, parent, self) {
          function done() {
            --wait || (merged || merge(values, parent.$$values), result.$$values = values, result.$$promises = !0, delete result.$$inheritedValues, resolution.resolve(values))
          }

          function fail(reason) {
            result.$$failure = reason, resolution.reject(reason)
          }

          if (isResolve(locals) && self === undefined && (self = parent, parent = locals, locals = null), locals) {
            if (!isObject(locals)) throw new Error("'locals' must be an object")
          } else locals = NO_LOCALS;
          if (parent) {
            if (!isResolve(parent)) throw new Error("'parent' must be a promise returned by $resolve.resolve()")
          } else parent = NO_PARENT;
          var resolution = $q.defer(), result = resolution.promise, promises = result.$$promises = {},
              values = extend({}, locals), wait = 1 + plan.length / 3, merged = !1;
          if (isDefined(parent.$$failure)) return fail(parent.$$failure), result;
          parent.$$inheritedValues && merge(values, parent.$$inheritedValues), parent.$$values ? (merged = merge(values, parent.$$values), result.$$inheritedValues = parent.$$values, done()) : (parent.$$inheritedValues && (result.$$inheritedValues = parent.$$inheritedValues), extend(promises, parent.$$promises), parent.then(done, fail));
          for (var i = 0, ii = plan.length; i < ii; i += 3) locals.hasOwnProperty(plan[i]) ? done() : function (key, invocable, params) {
            function onfailure(reason) {
              invocation.reject(reason), fail(reason)
            }

            function proceed() {
              if (!isDefined(result.$$failure)) try {
                invocation.resolve($injector.invoke(invocable, self, values)), invocation.promise.then(function (result) {
                  values[key] = result, done()
                }, onfailure)
              } catch (e) {
                onfailure(e)
              }
            }

            var invocation = $q.defer(), waitParams = 0;
            forEach(params, function (dep) {
              promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep) && (waitParams++, promises[dep].then(function (result) {
                values[dep] = result, --waitParams || proceed()
              }, onfailure))
            }), waitParams || proceed(), promises[key] = invocation.promise
          }(plan[i], plan[i + 1], plan[i + 2]);
          return result
        }
      }, this.resolve = function (invocables, locals, parent, self) {
        return this.study(invocables)(locals, parent, self)
      }
    }

    function $TemplateFactory($http, $templateCache, $injector) {
      this.fromConfig = function (config, params, locals) {
        return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null
      }, this.fromString = function (template, params) {
        return isFunction(template) ? template(params) : template
      }, this.fromUrl = function (url, params) {
        return isFunction(url) && (url = url(params)), null == url ? null : $http.get(url, {cache: $templateCache}).then(function (response) {
          return response.data
        })
      }, this.fromProvider = function (provider, params, locals) {
        return $injector.invoke(provider, null, locals || {params: params})
      }
    }

    function UrlMatcher(pattern, config) {
      function $value(value) {
        return isDefined(value) ? this.type.decode(value) : $UrlMatcherFactory.$$getDefaultValue(this)
      }

      function addParameter(id, type, config) {
        if (!/^\w+(-+\w+)*$/.test(id)) throw new Error("Invalid parameter name '" + id + "' in pattern '" + pattern + "'")
          ;
        if (params[id]) throw new Error("Duplicate parameter name '" + id + "' in pattern '" + pattern + "'");
        params[id] = extend({type: type || new Type, $value: $value}, config)
      }

      function quoteRegExp(string, pattern, isOptional) {
        var result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
        if (!pattern) return result;
        var flag = isOptional ? "?" : "";
        return result + flag + "(" + pattern + ")" + flag
      }

      function paramConfig(param) {
        if (!config.params || !config.params[param]) return {};
        var cfg = config.params[param];
        return isObject(cfg) ? cfg : {value: cfg}
      }

      config                                                                                                  = angular.isObject(config) ? config : {};
      var m, placeholder = /([:*])(\w+)|\{(\w+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, compiled = "^",
          last                                                                                                = 0, segments = this.segments = [], params = this.params = {};
      this.source = pattern;
      for (var id, regexp, segment, type, cfg; (m = placeholder.exec(pattern)) && (id = m[2] || m[3], regexp = m[4] || ("*" == m[1] ? ".*" : "[^/]*"), segment = pattern.substring(last, m.index), type = this.$types[regexp] || new Type({pattern: new RegExp(regexp)}), cfg = paramConfig(id), !(segment.indexOf("?") >= 0));) compiled += quoteRegExp(segment, type.$subPattern(), isDefined(cfg.value)), addParameter(id, type, cfg), segments.push(segment), last = placeholder.lastIndex;
      segment = pattern.substring(last);
      var i   = segment.indexOf("?");
      if (i >= 0) {
        var search = this.sourceSearch = segment.substring(i);
        segment = segment.substring(0, i), this.sourcePath = pattern.substring(0, last + i), forEach(search.substring(1).split(/[&?]/), function (key) {
          addParameter(key, null, paramConfig(key))
        })
      } else this.sourcePath = pattern, this.sourceSearch = "";
      compiled += quoteRegExp(segment) + (!1 === config.strict ? "/?" : "") + "$", segments.push(segment), this.regexp = new RegExp(compiled, config.caseInsensitive ? "i" : undefined), this.prefix = segments[0]
    }

    function Type(config) {
      extend(this, config)
    }

    function $UrlMatcherFactory() {
      function getDefaultConfig() {
        return {strict: isStrictMode, caseInsensitive: isCaseInsensitive}
      }

      function isInjectable(value) {
        return isFunction(value) || isArray(value) && isFunction(value[value.length - 1])
      }

      function flushTypeQueue() {
        forEach(typeQueue, function (type) {
          if (UrlMatcher.prototype.$types[type.name]) throw new Error("A type named '" + type.name + "' has already been defined.");
          var def                                = new Type(isInjectable(type.def) ? injector.invoke(type.def) : type.def);
          UrlMatcher.prototype.$types[type.name] = def
        })
      }

      var injector, isCaseInsensitive = !1, isStrictMode = !0, enqueue = !0, typeQueue = [], defaultTypes = {
        int:       {
          decode:     function (val) {
            return parseInt(val, 10)
          }, is:      function (val) {
            return !!isDefined(val) && this.decode(val.toString()) === val
          }, pattern: /\d+/
        }, bool:   {
          encode:     function (val) {
            return val ? 1 : 0
          }, decode:  function (val) {
            return 0 !== parseInt(val, 10)
          }, is:      function (val) {
            return !0 === val || !1 === val
          }, pattern: /0|1/
        }, string: {pattern: /[^\/]*/}, date: {
          equals:     function (a, b) {
            return a.toISOString() === b.toISOString()
          }, decode:  function (val) {
            return new Date(val)
          }, encode:  function (val) {
            return [val.getFullYear(), ("0" + (val.getMonth() + 1)).slice(-2), ("0" + val.getDate()).slice(-2)].join("-")
          }, pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/
        }
      };
      $UrlMatcherFactory.$$getDefaultValue = function (config) {
        if (!isInjectable(config.value)) return config.value;
        if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
        return injector.invoke(config.value)
      }, this.caseInsensitive = function (value) {
        isCaseInsensitive = value
      }, this.strictMode = function (value) {
        isStrictMode = value
      }, this.compile = function (pattern, config) {
        return new UrlMatcher(pattern, extend(getDefaultConfig(), config))
      }, this.isMatcher = function (o) {
        if (!isObject(o)) return !1;
        var result = !0;
        return forEach(UrlMatcher.prototype, function (val, name) {
          isFunction(val) && (result = result && isDefined(o[name]) && isFunction(o[name]))
        }), result
      }, this.type = function (name, def) {
        return isDefined(def) ? (typeQueue.push({
          name: name,
          def:  def
        }), enqueue || flushTypeQueue(), this) : UrlMatcher.prototype.$types[name]
      }, this.$get = ["$injector", function ($injector) {
        return injector = $injector, enqueue = !1, UrlMatcher.prototype.$types = {}, flushTypeQueue(), forEach(defaultTypes, function (type, name) {
          UrlMatcher.prototype.$types[name] || (UrlMatcher.prototype.$types[name] = new Type(type))
        }), this
      }]
    }

    function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
      function regExpPrefix(re) {
        var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
        return null != prefix ? prefix[1].replace(/\\(.)/g, "$1") : ""
      }

      function interpolate(pattern, match) {
        return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
          return match["$" === what ? 0 : Number(what)]
        })
      }

      function handleIfMatch($injector, handler, match) {
        if (!match) return !1;
        var result = $injector.invoke(handler, handler, {$match: match});
        return !isDefined(result) || result
      }

      function $get($location, $rootScope, $injector, $browser) {
        function appendBasePath(url, isHtml5, absolute) {
          return "/" === baseHref ? url : isHtml5 ? baseHref.slice(0, -1) + url : absolute ? baseHref.slice(1) + url : url
        }

        function update(evt) {
          function check(rule) {
            var handled = rule($injector, $location);
            return !!handled && (isString(handled) && $location.replace().url(handled), !0)
          }

          if (!evt || !evt.defaultPrevented) {
            var i, n = rules.length;
            for (i = 0; i < n; i++) if (check(rules[i])) return;
            otherwise && check(otherwise)
          }
        }

        function listen() {
          return listener = listener || $rootScope.$on("$locationChangeSuccess", update)
        }

        var baseHref = $browser.baseHref(), location = $location.url();
        return interceptDeferred || listen(), {
          sync:      function () {
            update()
          }, listen: function () {
            return listen()
          }, update: function (read) {
            if (read) return void(location = $location.url());
            $location.url() !== location && ($location.url(location), $location.replace())
          }, push:   function (urlMatcher, params, options) {
            $location.url(urlMatcher.format(params || {})), options && options.replace && $location.replace()
          }, href:   function (urlMatcher, params, options) {
            if (!urlMatcher.validates(params)) return null;
            var isHtml5 = $locationProvider.html5Mode(), url = urlMatcher.format(params);
            if (options = options || {}, isHtml5 || null === url || (url = "#" + $locationProvider.hashPrefix() + url), url = appendBasePath(url, isHtml5, options.absolute), !options.absolute || !url) return url;
            var slash = !isHtml5 && url ? "/" : "", port = $location.port();
            return port = 80 === port || 443 === port ? "" : ":" + port, [$location.protocol(), "://", $location.host(), port, slash, url].join("")
          }
        }
      }

      var listener, rules = [], otherwise = null, interceptDeferred = !1;
      this.rule = function (rule) {
        if (!isFunction(rule)) throw new Error("'rule' must be a function");
        return rules.push(rule), this
      }, this.otherwise = function (rule) {
        if (isString(rule)) {
          var redirect = rule;
          rule         = function () {
            return redirect
          }
        } else if (!isFunction(rule)) throw new Error("'rule' must be a function");
        return otherwise = rule, this
      }, this.when = function (what, handler) {
        var redirect, handlerIsString = isString(handler);
        if (isString(what) && (what = $urlMatcherFactory.compile(what)), !handlerIsString && !isFunction(handler) && !isArray(handler)) throw new Error("invalid 'handler' in when()");
        var strategies = {
          matcher:  function (what, handler) {
            return handlerIsString && (redirect = $urlMatcherFactory.compile(handler), handler = ["$match", function ($match) {
              return redirect.format($match)
            }]), extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()))
            }, {prefix: isString(what.prefix) ? what.prefix : ""})
          }, regex: function (what, handler) {
            if (what.global || what.sticky) throw new Error("when() RegExp must not be global or sticky");
            return handlerIsString && (redirect = handler, handler = ["$match", function ($match) {
              return interpolate(redirect, $match)
            }]), extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path()))
            }, {prefix: regExpPrefix(what)})
          }
        }, check       = {matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp};
        for (var n in check) if (check[n]) return this.rule(strategies[n](what, handler));
        throw new Error("invalid 'what' in when()")
      }, this.deferIntercept = function (defer) {
        defer === undefined && (defer = !0), interceptDeferred = defer
      }, this.$get = $get, $get.$inject = ["$location", "$rootScope", "$injector", "$browser"]
    }

    function $StateProvider($urlRouterProvider, $urlMatcherFactory) {
      function isRelative(stateName) {
        return 0 === stateName.indexOf(".") || 0 === stateName.indexOf("^")
      }

      function findState(stateOrName, base) {
        if (!stateOrName) return undefined;
        var isStr = isString(stateOrName), name = isStr ? stateOrName : stateOrName.name;
        if (isRelative(name)) {
          if (!base) throw new Error("No reference point given for path '" + name + "'");
          for (var rel = name.split("."), i = 0, pathLength = rel.length, current = base; i < pathLength; i++) if ("" !== rel[i] || 0 !== i) {
            if ("^" !== rel[i]) break;
            if (!current.parent) throw new Error("Path '" + name + "' not valid for state '" + base.name + "'");
            current = current.parent
          } else current = base;
          rel = rel.slice(i).join("."), name = current.name + (current.name && rel ? "." : "") + rel
        }
        var state = states[name];
        return !state || !isStr && (isStr || state !== stateOrName && state.self !== stateOrName) ? undefined : state
      }

      function queueState(parentName, state) {
        queue[parentName] || (queue[parentName] = []), queue[parentName].push(state)
      }

      function registerState(state) {
        state    = inherit(state, {
          self: state, resolve: state.resolve || {}, toString: function () {
            return this.name
          }
        });
        var name = state.name;
        if (!isString(name) || name.indexOf("@") >= 0) throw new Error("State must have a valid name");
        if (states.hasOwnProperty(name)) throw new Error("State '" + name + "'' is already defined");
        var parentName = -1 !== name.indexOf(".") ? name.substring(0, name.lastIndexOf(".")) : isString(state.parent) ? state.parent : "";
        if (parentName && !states[parentName]) return queueState(parentName, state.self);
        for (var key in stateBuilder) isFunction(stateBuilder[key]) && (state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]));
        if (states[name] = state, !state[abstractKey] && state.url && $urlRouterProvider.when(state.url, ["$match", "$stateParams", function ($match, $stateParams) {
            $state.$current.navigable == state && equalForKeys($match, $stateParams) || $state.transitionTo(state, $match, {location: !1})
          }]), queue[name]) for (var i = 0; i < queue[name].length; i++) registerState(queue[name][i]);
        return state
      }

      function isGlob(text) {
        return text.indexOf("*") > -1
      }

      function doesStateMatchGlob(glob) {
        var globSegments = glob.split("."), segments = $state.$current.name.split(".");
        if ("**" === globSegments[0] && (segments = segments.slice(segments.indexOf(globSegments[1])), segments.unshift("**")), "**" === globSegments[globSegments.length - 1] && (segments.splice(segments.indexOf(globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE), segments.push("**")), globSegments.length != segments.length) return !1;
        for (var i = 0, l = globSegments.length; i < l; i++) "*" === globSegments[i] && (segments[i] = "*");
        return segments.join("") === globSegments.join("")
      }

      function decorator(name, func) {
        return isString(name) && !isDefined(func) ? stateBuilder[name] : isFunction(func) && isString(name) ? (stateBuilder[name] && !stateBuilder.$delegates[name] && (stateBuilder.$delegates[name] = stateBuilder[name]), stateBuilder[name] = func, this) : this
      }

      function state(name, definition) {
        return isObject(name) ? definition = name : definition.name = name, registerState(definition), this
      }

      function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter) {
        function handleRedirect(redirect, state, params, options) {
          var evt = $rootScope.$broadcast("$stateNotFound", redirect, state, params);
          if (evt.defaultPrevented) return $urlRouter.update(), TransitionAborted;
          if (!evt.retry) return null;
          if (options.$retry) return $urlRouter.update(), TransitionFailed;
          var retryTransition = $state.transition = $q.when(evt.retry);
          return retryTransition.then(function () {
            return retryTransition !== $state.transition ? TransitionSuperseded : (redirect.options.$retry = !0, $state.transitionTo(redirect.to, redirect.toParams, redirect.options))
          }, function () {
            return TransitionAborted
          }), $urlRouter.update(), retryTransition
        }

        function resolveState(state, params, paramsAreFiltered, inherited, dst) {
          var $stateParams = paramsAreFiltered ? params : filterByKeys(objectKeys(state.params), params),
              locals       = {$stateParams: $stateParams};
          dst.resolve      = $resolve.resolve(state.resolve, locals, dst.resolve, state);
          var promises     = [dst.resolve.then(function (globals) {
            dst.globals = globals
          })];
          return inherited && promises.push(inherited), forEach(state.views, function (view, name) {
            var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
            injectables.$template = [function () {
              return $view.load(name, {view: view, locals: locals, params: $stateParams}) || ""
            }], promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {
              if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
                var injectLocals    = angular.extend({}, injectables, locals);
                result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals)
              } else result.$$controller = view.controller;
              result.$$state = state, result.$$controllerAs = view.controllerAs, dst[name] = result
            }))
          }), $q.all(promises).then(function (values) {
            return dst
          })
        }

        var TransitionSuperseded = $q.reject(new Error("transition superseded")),
            TransitionPrevented  = $q.reject(new Error("transition prevented")),
            TransitionAborted    = $q.reject(new Error("transition aborted")),
            TransitionFailed     = $q.reject(new Error("transition failed"));
        return root.locals = {resolve: null, globals: {$stateParams: {}}}, $state = {
          params:     {},
          current:    root.self,
          $current:   root,
          transition: null
        }, $state.reload = function () {
          $state.transitionTo($state.current, $stateParams, {reload: !0, inherit: !1, notify: !1})
        }, $state.go = function (to, params, options) {
          return $state.transitionTo(to, params, extend({inherit: !0, relative: $state.$current}, options))
        }, $state.transitionTo = function (to, toParams, options) {
          toParams = toParams || {}, options = extend({
            location: !0,
            inherit:  !1,
            relative: null,
            notify:   !0,
            reload:   !1,
            $retry:   !1
          }, options || {});
          var evt, from = $state.$current, fromParams = $state.params, fromPath = from.path,
              toState                                                           = findState(to, options.relative);
          if (!isDefined(toState)) {
            var redirect       = {to: to, toParams: toParams, options: options},
                redirectResult = handleRedirect(redirect, from.self, fromParams, options);
            if (redirectResult) return redirectResult;
            if (to = redirect.to, toParams = redirect.toParams, options = redirect.options, toState = findState(to, options.relative), !isDefined(toState)) {
              if (!options.relative) throw new Error("No such state '" + to + "'");
              throw new Error("Could not resolve '" + to + "' from state '" + options.relative + "'")
            }
          }
          if (toState[abstractKey]) throw new Error("Cannot transition to abstract state '" + to + "'");
          options.inherit && (toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState)), to = toState;
          var toPath = to.path, keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];
          if (!options.reload) for (; state && state === fromPath[keep] && equalForKeys(toParams, fromParams, state.ownParams);) locals = toLocals[keep] = state.locals, keep++, state = toPath[keep];
          if (shouldTriggerReload(to, from, locals, options)) return !1 !== to.self.reloadOnSearch && $urlRouter.update(), $state.transition = null, $q.when($state.current);
          if (toParams = filterByKeys(objectKeys(to.params), toParams || {}), options.notify && $rootScope.$broadcast("$stateChangeStart", to.self, toParams, from.self, fromParams).defaultPrevented) return $urlRouter.update(), TransitionPrevented;
          for (var resolved = $q.when(locals), l = keep; l < toPath.length; l++, state = toPath[l]) locals = toLocals[l] = inherit(locals), resolved = resolveState(state, toParams, state === to, resolved, locals);
          var transition = $state.transition = resolved.then(function () {
            var l, entering, exiting;
            if ($state.transition !== transition) return TransitionSuperseded;
            for (l = fromPath.length - 1; l >= keep; l--) exiting = fromPath[l], exiting.self.onExit && $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals), exiting.locals = null;
            for (l = keep; l < toPath.length; l++) entering = toPath[l], entering.locals = toLocals[l], entering.self.onEnter && $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
            return $state.transition !== transition ? TransitionSuperseded : ($state.$current = to, $state.current = to.self, $state.params = toParams, copy($state.params, $stateParams), $state.transition = null, options.location && to.navigable && $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {replace: "replace" === options.location}), options.notify && $rootScope.$broadcast("$stateChangeSuccess", to.self, toParams, from.self, fromParams), $urlRouter.update(!0), $state.current)
          }, function (error) {
            return $state.transition !== transition ? TransitionSuperseded : ($state.transition = null, evt = $rootScope.$broadcast("$stateChangeError", to.self, toParams, from.self, fromParams, error), evt.defaultPrevented || $urlRouter.update(), $q.reject(error))
          });
          return transition
        }, $state.is = function (stateOrName, params) {
          var state = findState(stateOrName);
          return isDefined(state) ? $state.$current === state && (!isDefined(params) || null === params || angular.equals($stateParams, params)) : undefined
        }, $state.includes = function (stateOrName, params) {
          if (isString(stateOrName) && isGlob(stateOrName)) {
            if (!doesStateMatchGlob(stateOrName)) return !1;
            stateOrName = $state.$current.name
          }
          var state = findState(stateOrName);
          return isDefined(state) ? !!isDefined($state.$current.includes[state.name]) && equalForKeys(params, $stateParams) : undefined
        }, $state.href = function (stateOrName, params, options) {
          options   = extend({lossy: !0, inherit: !0, absolute: !1, relative: $state.$current}, options || {});
          var state = findState(stateOrName, options.relative);
          if (!isDefined(state)) return null;
          options.inherit && (params = inheritParams($stateParams, params || {}, $state.$current, state));
          var nav = state && options.lossy ? state.navigable : state;
          return nav && nav.url ? $urlRouter.href(nav.url, filterByKeys(objectKeys(state.params), params || {}), {absolute: options.absolute}) : null
        }, $state.get = function (stateOrName, context) {
          if (0 === arguments.length) return objectKeys(states).map(function (name) {
            return states[name].self
          });
          var state = findState(stateOrName, context);
          return state && state.self ? state.self : null
        }, $state
      }

      function shouldTriggerReload(to, from, locals, options) {
        if (to === from && (locals === from.locals && !options.reload || !1 === to.self.reloadOnSearch)) return !0
      }

      var root, $state, states = {}, queue = {}, abstractKey = "abstract", stateBuilder = {
        parent:        function (state) {
          if (isDefined(state.parent) && state.parent) return findState(state.parent);
          var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
          return compositeName ? findState(compositeName[1]) : root
        }, data:       function (state) {
          return state.parent && state.parent.data && (state.data = state.self.data = extend({}, state.parent.data, state.data)), state.data
        }, url:        function (state) {
          var url = state.url, config = {params: state.params || {}};
          if (isString(url)) return "^" == url.charAt(0) ? $urlMatcherFactory.compile(url.substring(1), config) : (state.parent.navigable || root).url.concat(url, config);
          if (!url || $urlMatcherFactory.isMatcher(url)) return url;
          throw new Error("Invalid url '" + url + "' in state '" + state + "'")
        }, navigable:  function (state) {
          return state.url ? state : state.parent ? state.parent.navigable : null
        }, params:     function (state) {
          return state.params ? state.params : state.url ? state.url.params : state.parent.params
        }, views:      function (state) {
          var views = {};
          return forEach(isDefined(state.views) ? state.views : {"": state}, function (view, name) {
            name.indexOf("@") < 0 && (name += "@" + state.parent.name), views[name] = view
          }), views
        }, ownParams:  function (state) {
          if (state.params = state.params || {}, !state.parent) return objectKeys(state.params);
          var paramNames = {};
          forEach(state.params, function (v, k) {
            paramNames[k] = !0
          }), forEach(state.parent.params, function (v, k) {
            if (!paramNames[k]) throw new Error("Missing required parameter '" + k + "' in state '" + state.name + "'");
            paramNames[k] = !1
          });
          var ownParams = [];
          return forEach(paramNames, function (own, p) {
            own && ownParams.push(p)
          }), ownParams
        }, path:       function (state) {
          return state.parent ? state.parent.path.concat(state) : []
        }, includes:   function (state) {
          var includes = state.parent ? extend({}, state.parent.includes) : {};
          return includes[state.name] = !0, includes
        }, $delegates: {}
      };
      root = registerState({
        name:     "",
        url:      "^",
        views:    null,
        abstract: !0
      }), root.navigable = null, this.decorator = decorator, this.state = state, this.$get = $get, $get.$inject = ["$rootScope", "$q", "$view", "$injector", "$resolve", "$stateParams", "$urlRouter"]
    }

    function $ViewProvider() {
      function $get($rootScope, $templateFactory) {
        return {
          load: function (name, options) {
            var result;
            return options = extend({
              template:   null,
              controller: null,
              view:       null,
              locals:     null,
              notify:     !0,
              async:      !0,
              params:     {}
            }, options), options.view && (result = $templateFactory.fromConfig(options.view, options.params, options.locals)), result && options.notify && $rootScope.$broadcast("$viewContentLoading", options), result
          }
        }
      }

      this.$get = $get, $get.$inject = ["$rootScope", "$templateFactory"]
    }

    function $ViewScrollProvider() {
      var useAnchorScroll = !1;
      this.useAnchorScroll = function () {
        useAnchorScroll = !0
      }, this.$get = ["$anchorScroll", "$timeout", function ($anchorScroll, $timeout) {
        return useAnchorScroll ? $anchorScroll : function ($element) {
          $timeout(function () {
            $element[0].scrollIntoView()
          }, 0, !1)
        }
      }]
    }

    function $ViewDirective($state, $injector, $uiViewScroll) {
      function getRenderer(attrs, scope) {
        if ($animate) return {
          enter:    function (element, target, cb) {
            $animate.enter(element, null, target, cb)
          }, leave: function (element, cb) {
            $animate.leave(element, cb)
          }
        };
        if ($animator) {
          var animate = $animator && $animator(scope, attrs);
          return {
            enter:    function (element, target, cb) {
              animate.enter(element, null, target), cb()
            }, leave: function (element, cb) {
              animate.leave(element), cb()
            }
          }
        }
        return function () {
          return {
            enter:    function (element, target, cb) {
              target.after(element), cb()
            }, leave: function (element, cb) {
              element.remove(), cb()
            }
          }
        }()
      }

      var service    = function () {
        return $injector.has ? function (service) {
          return $injector.has(service) ? $injector.get(service) : null
        } : function (service) {
          try {
            return $injector.get(service)
          } catch (e) {
            return null
          }
        }
      }(), $animator = service("$animator"), $animate = service("$animate");
      return {
        restrict:   "ECA",
        terminal:   !0,
        priority:   400,
        transclude: "element",
        compile:    function (tElement, tAttrs, $transclude) {
          return function (scope, $element, attrs) {
            function cleanupLastView() {
              previousEl && (previousEl.remove(), previousEl = null), currentScope && (currentScope.$destroy(), currentScope = null), currentEl && (renderer.leave(currentEl, function () {
                previousEl = null
              }), previousEl = currentEl, currentEl = null)
            }

            function updateView(firstTime) {
              var newScope, name = getUiViewName(attrs, $element.inheritedData("$uiView")),
                  previousLocals = name && $state.$current && $state.$current.locals[name];
              if (firstTime || previousLocals !== latestLocals) {
                newScope = scope.$new(), latestLocals = $state.$current.locals[name];
                var clone = $transclude(newScope, function (clone) {
                  renderer.enter(clone, $element, function () {
                    (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) && $uiViewScroll(clone)
                  }), cleanupLastView()
                });
                currentEl = clone, currentScope = newScope, currentScope.$emit("$viewContentLoaded"), currentScope.$eval(onloadExp)
              }
            }

            var previousEl, currentEl, currentScope, latestLocals, onloadExp = attrs.onload || "",
                autoScrollExp                                                = attrs.autoscroll,
                renderer                                                     = getRenderer(attrs, scope);
            scope.$on("$stateChangeSuccess", function () {
              updateView(!1)
            }), scope.$on("$viewContentLoading", function () {
              updateView(!1)
            }), updateView(!0)
          }
        }
      }
    }

    function $ViewDirectiveFill($compile, $controller, $state) {
      return {
        restrict: "ECA", priority: -400, compile: function (tElement) {
          var initial = tElement.html();
          return function (scope, $element, attrs) {
            var current = $state.$current, name = getUiViewName(attrs, $element.inheritedData("$uiView")),
                locals                          = current && current.locals[name];
            if (locals) {
              $element.data("$uiView", {
                name:  name,
                state: locals.$$state
              }), $element.html(locals.$template ? locals.$template : initial);
              var link = $compile($element.contents());
              if (locals.$$controller) {
                locals.$scope  = scope;
                var controller = $controller(locals.$$controller, locals);
                locals.$$controllerAs && (scope[locals.$$controllerAs] = controller), $element.data("$ngControllerController", controller), $element.children().data("$ngControllerController", controller)
              }
              link(scope)
            }
          }
        }
      }
    }

    function getUiViewName(attrs, inherited) {
      var name = attrs.uiView || attrs.name || "";
      return name.indexOf("@") >= 0 ? name : name + "@" + (inherited ? inherited.state.name : "")
    }

    function parseStateRef(ref, current) {
      var parsed, preparsed = ref.match(/^\s*({[^}]*})\s*$/);
      if (preparsed && (ref = current + "(" + preparsed[1] + ")"), !(parsed = ref.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/)) || 4 !== parsed.length) throw new Error("Invalid state ref '" + ref + "'");
      return {state: parsed[1], paramExpr: parsed[3] || null}
    }

    function stateContext(el) {
      var stateData = el.parent().inheritedData("$uiView");
      if (stateData && stateData.state && stateData.state.name) return stateData.state
    }

    function $StateRefDirective($state, $timeout) {
      var allowedOptions = ["location", "inherit", "reload"];
      return {
        restrict: "A",
        require:  ["?^uiSrefActive", "?^uiSrefActiveEq"],
        link:     function (scope, element, attrs, uiSrefActive) {
          var ref = parseStateRef(attrs.uiSref, $state.current.name), params = null,
              base                                                           = stateContext(element) || $state.$current, isForm        = "FORM" === element[0].nodeName,
              attr                                                           = isForm ? "action" : "href", nav                         = !0, options           = {relative: base, inherit: !0},
              optionsOverride                                                = scope.$eval(attrs.uiSrefOpts) || {};
          angular.forEach(allowedOptions, function (option) {
            option in optionsOverride && (options[option] = optionsOverride[option])
          });
          var update = function (newVal) {
            if (newVal && (params = newVal), nav) {
              var newHref         = $state.href(ref.state, params, options),
                  activeDirective = uiSrefActive[1] || uiSrefActive[0];
              if (activeDirective && activeDirective.$$setStateInfo(ref.state, params), null === newHref) return nav = !1, !1;
              element[0][attr] = newHref
            }
          };
          ref.paramExpr && (scope.$watch(ref.paramExpr, function (newVal, oldVal) {
            newVal !== params && update(newVal)
          }, !0), params = scope.$eval(ref.paramExpr)), update(), isForm || element.bind("click", function (e) {
            if (!((e.which || e.button) > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr("target"))) {
              var transition = $timeout(function () {
                $state.go(ref.state, params, options)
              });
              e.preventDefault(), e.preventDefault = function () {
                $timeout.cancel(transition)
              }
            }
          })
        }
      }
    }

    function $StateRefActiveDirective($state, $stateParams, $interpolate) {
      return {
        restrict: "A", controller: ["$scope", "$element", "$attrs", function ($scope, $element, $attrs) {
          function update() {
            isMatch() ? $element.addClass(activeClass) : $element.removeClass(activeClass)
          }

          function isMatch() {
            return void 0 !== $attrs.uiSrefActiveEq ? $state.$current.self === state && matchesParams() : $state.includes(state.name) && matchesParams()
          }

          function matchesParams() {
            return !params || equalForKeys(params, $stateParams)
          }

          var state, params, activeClass;
          activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || "", !1)($scope), this.$$setStateInfo = function (newState, newParams) {
            state = $state.get(newState, stateContext($element)), params = newParams, update()
          }, $scope.$on("$stateChangeSuccess", update)
        }]
      }
    }

    function $IsStateFilter($state) {
      return function (state) {
        return $state.is(state)
      }
    }

    function $IncludedByStateFilter($state) {
      return function (state) {
        return $state.includes(state)
      }
    }

    var isDefined                                                                                 = angular.isDefined, isFunction = angular.isFunction, isString = angular.isString,
        isObject = angular.isObject, isArray = angular.isArray, forEach = angular.forEach, extend = angular.extend,
        copy                                                                                      = angular.copy;
    angular.module("ui.router.util", ["ng"]), angular.module("ui.router.router", ["ui.router.util"]), angular.module("ui.router.state", ["ui.router.router", "ui.router.util"]), angular.module("ui.router", ["ui.router.state"]), angular.module("ui.router.compat", ["ui.router"]), $Resolve.$inject = ["$q", "$injector"], angular.module("ui.router.util").service("$resolve", $Resolve), $TemplateFactory.$inject = ["$http", "$templateCache", "$injector"], angular.module("ui.router.util").service("$templateFactory", $TemplateFactory), UrlMatcher.prototype.concat = function (pattern, config) {
      return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, config)
    }, UrlMatcher.prototype.toString = function () {
      return this.source
    }, UrlMatcher.prototype.exec = function (path, searchParams) {
      var m = this.regexp.exec(path);
      if (!m) return null;
      searchParams                                                                 = searchParams || {};
      var i, cfg, param, params = this.parameters(), nTotal = params.length, nPath = this.segments.length - 1,
          values                                                                   = {};
      if (nPath !== m.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'");
      for (i = 0; i < nPath; i++) param = params[i], cfg = this.params[param], values[param] = cfg.$value(m[i + 1]);
      for (; i < nTotal; i++) param = params[i], cfg = this.params[param], values[param] = cfg.$value(searchParams[param]);
      return values
    }, UrlMatcher.prototype.parameters = function (param) {
      return isDefined(param) ? this.params[param] || null : objectKeys(this.params)
    }, UrlMatcher.prototype.validates = function (params) {
      var isOptional, cfg, result = !0, self = this;
      return forEach(params, function (val, key) {
        self.params[key] && (cfg = self.params[key], isOptional = !val && isDefined(cfg.value), result = result && (isOptional || cfg.type.is(val)))
      }), result
    }, UrlMatcher.prototype.format = function (values) {
      var segments = this.segments, params = this.parameters();
      if (!values) return segments.join("").replace("//", "/");
      var i, search, value, param, cfg, array, nPath = segments.length - 1, nTotal = params.length,
          result                                                                   = segments[0];
      if (!this.validates(values)) return null;
      for (i = 0; i < nPath; i++) param = params[i], value = values[param], cfg = this.params[param], (isDefined(value) || "/" !== segments[i] && "/" !== segments[i + 1]) && (null != value && (result += encodeURIComponent(cfg.type.encode(value))), result += segments[i + 1]);
      for (; i < nTotal; i++) param = params[i], null != (value = values[param]) && (array = isArray(value), array && (value = value.map(encodeURIComponent).join("&" + param + "=")), result += (search ? "&" : "?") + param + "=" + (array ? value : encodeURIComponent(value)), search = !0);
      return result
    }, UrlMatcher.prototype.$types = {}, Type.prototype.is = function (val, key) {
      return !0
    }, Type.prototype.encode = function (val, key) {
      return val
    }, Type.prototype.decode = function (val, key) {
      return val
    }, Type.prototype.equals = function (a, b) {
      return a == b
    }, Type.prototype.$subPattern = function () {
      var sub = this.pattern.toString();
      return sub.substr(1, sub.length - 2)
    }, Type.prototype.pattern = /.*/, angular.module("ui.router.util").provider("$urlMatcherFactory", $UrlMatcherFactory), $UrlRouterProvider.$inject = ["$locationProvider", "$urlMatcherFactoryProvider"], angular.module("ui.router.router").provider("$urlRouter", $UrlRouterProvider), $StateProvider.$inject = ["$urlRouterProvider", "$urlMatcherFactoryProvider"], angular.module("ui.router.state").value("$stateParams", {}).provider("$state", $StateProvider), $ViewProvider.$inject = [], angular.module("ui.router.state").provider("$view", $ViewProvider), angular.module("ui.router.state").provider("$uiViewScroll", $ViewScrollProvider), $ViewDirective.$inject = ["$state", "$injector", "$uiViewScroll"], $ViewDirectiveFill.$inject = ["$compile", "$controller", "$state"], angular.module("ui.router.state").directive("uiView", $ViewDirective), angular.module("ui.router.state").directive("uiView", $ViewDirectiveFill), $StateRefDirective.$inject = ["$state", "$timeout"], $StateRefActiveDirective.$inject = ["$state", "$stateParams", "$interpolate"], angular.module("ui.router.state").directive("uiSref", $StateRefDirective).directive("uiSrefActive", $StateRefActiveDirective).directive("uiSrefActiveEq", $StateRefActiveDirective), $IsStateFilter.$inject = ["$state"], $IncludedByStateFilter.$inject = ["$state"], angular.module("ui.router.state").filter("isState", $IsStateFilter).filter("includedByState", $IncludedByStateFilter)
  }(window, window.angular), angular.module("angular-growl", []), angular.module("angular-growl").directive("growl", [function () {
    "use strict";
    return {
      restrict:    "A",
      templateUrl: "templates/growl/growl.html",
      replace:     !1,
      scope:       {reference: "@", inline: "=", limitMessages: "="},
      controller:  ["$scope", "$interval", "growl", "growlMessages", function ($scope, $interval, growl, growlMessages) {
        $scope.referenceId = $scope.reference || 0, growlMessages.initDirective($scope.referenceId, $scope.limitMessages), $scope.growlMessages = growlMessages, $scope.inlineMessage = angular.isDefined($scope.inline) ? $scope.inline : growl.inlineMessages(), $scope.$watch("limitMessages", function (limitMessages) {
          var directive = growlMessages.directives[$scope.referenceId];
          angular.isUndefined(limitMessages) || angular.isUndefined(directive) || (directive.limitMessages = limitMessages)
        }), $scope.stopTimeoutClose = function (message) {
          message.clickToClose || (angular.forEach(message.promises, function (promise) {
            $interval.cancel(promise)
          }), message.close ? growlMessages.deleteMessage(message) : message.close = !0)
        }, $scope.alertClasses = function (message) {
          return {
            "alert-success":     "success" === message.severity,
            "alert-error":       "error" === message.severity,
            "alert-danger":      "error" === message.severity,
            "alert-info":        "info" === message.severity,
            "alert-warning":     "warning" === message.severity,
            icon:                !1 === message.disableIcons,
            "alert-dismissable": !message.disableCloseButton
          }
        }, $scope.showCountDown = function (message) {
          return !message.disableCountDown && message.ttl > 0
        }, $scope.wrapperClasses = function () {
          var classes = {};
          return classes["growl-fixed"] = !$scope.inlineMessage, classes[growl.position()] = !0, classes
        }, $scope.computeTitle = function (message) {
          return {success: "Success", error: "Error", info: "Information", warn: "Warning"}[message.severity]
        }
      }]
    }
  }]),
    angular.module("angular-growl").run(["$templateCache", function ($templateCache) {
      "use strict";
      void 0 === $templateCache.get("templates/growl/growl.html") && $templateCache.put("templates/growl/growl.html", '<div class="growl-container" ng-class="wrapperClasses()"><div class="growl-item alert" ng-repeat="message in growlMessages.directives[referenceId].messages" ng-class="alertClasses(message)" ng-click="stopTimeoutClose(message)"><button type="button" class="close" data-dismiss="alert" aria-hidden="true" ng-click="growlMessages.deleteMessage(message)" ng-show="!message.disableCloseButton">&times;</button><button type="button" class="close" aria-hidden="true" ng-show="showCountDown(message)">{{message.countdown}}</button><h4 class="growl-title" ng-show="message.title" ng-bind="message.title"></h4><div class="growl-message" ng-bind-html="message.text"></div></div></div>')
    }]), angular.module("angular-growl").provider("growl", function () {
    "use strict";
    var _ttl                                                                                         = {success: null, error: null, warning: null, info: null}, _messagesKey = "messages",
        _messageTextKey                                                                              = "text", _messageTitleKey = "title", _messageSeverityKey                    = "severity",
        _messageTTLKey = "ttl", _onlyUniqueMessages = !0, _messageVariableKey = "variables", _inline = !1,
        _position                                                                                    = "top-right", _disableCloseButton = !1, _disableIcons = !1, _reverseOrder = !1,
        _disableCountDown                                                                            = !1, _translateMessages                                                   = !0;
    this.globalTimeToLive = function (ttl) {
      if ("object" == typeof ttl) for (var k in ttl) ttl.hasOwnProperty(k) && (_ttl[k] = ttl[k]); else for (var severity in _ttl) _ttl.hasOwnProperty(severity) && (_ttl[severity] = ttl);
      return this
    }, this.globalTranslateMessages = function (translateMessages) {
      return _translateMessages = translateMessages, this
    }, this.globalDisableCloseButton = function (disableCloseButton) {
      return _disableCloseButton = disableCloseButton, this
    }, this.globalDisableIcons = function (disableIcons) {
      return _disableIcons = disableIcons, this
    }, this.globalReversedOrder = function (reverseOrder) {
      return _reverseOrder = reverseOrder, this
    }, this.globalDisableCountDown = function (countDown) {
      return _disableCountDown = countDown, this
    }, this.messageVariableKey = function (messageVariableKey) {
      return _messageVariableKey = messageVariableKey, this
    }, this.globalInlineMessages = function (inline) {
      return _inline = inline, this
    }, this.globalPosition = function (position) {
      return _position = position, this
    }, this.messagesKey = function (messagesKey) {
      return _messagesKey = messagesKey, this
    }, this.messageTextKey = function (messageTextKey) {
      return _messageTextKey = messageTextKey, this
    }, this.messageTitleKey = function (messageTitleKey) {
      return _messageTitleKey = messageTitleKey, this
    }, this.messageSeverityKey = function (messageSeverityKey) {
      return _messageSeverityKey = messageSeverityKey, this
    }, this.messageTTLKey = function (messageTTLKey) {
      return _messageTTLKey = messageTTLKey, this
    }, this.onlyUniqueMessages = function (onlyUniqueMessages) {
      return _onlyUniqueMessages = onlyUniqueMessages, this
    }, this.serverMessagesInterceptor = ["$q", "growl", function ($q, growl) {
      function checkResponse(response) {
        void 0 !== response && response.data && response.data[_messagesKey] && response.data[_messagesKey].length > 0 && growl.addServerMessages(response.data[_messagesKey])
      }

      return {
        response:         function (response) {
          return checkResponse(response), response
        }, responseError: function (rejection) {
          return checkResponse(rejection), $q.reject(rejection)
        }
      }
    }], this.$get = ["$rootScope", "$interpolate", "$sce", "$filter", "$interval", "growlMessages", function ($rootScope, $interpolate, $sce, $filter, $interval, growlMessages) {
      function broadcastMessage(message) {
        if (translate && message.translateMessage) message.text = translate(message.text, message.variables) || message.text, message.title = translate(message.title) || message.title; else {
          var polation = $interpolate(message.text);
          message.text = polation(message.variables)
        }
        var addedMessage = growlMessages.addMessage(message);
        return $rootScope.$broadcast("growlMessage", message), $interval(function () {
        }, 0, 1), addedMessage
      }

      function sendMessage(text, config, severity) {
        var message, _config = config || {};
        return message = {
          text:               text,
          title:              _config.title,
          severity:           severity,
          ttl:                _config.ttl || _ttl[severity],
          variables:          _config.variables || {},
          disableCloseButton: void 0 === _config.disableCloseButton ? _disableCloseButton : _config.disableCloseButton,
          disableIcons:       void 0 === _config.disableIcons ? _disableIcons : _config.disableIcons,
          disableCountDown:   void 0 === _config.disableCountDown ? _disableCountDown : _config.disableCountDown,
          position:           _config.position || _position,
          referenceId:        _config.referenceId || 0,
          translateMessage:   void 0 === _config.translateMessage ? _translateMessages : _config.translateMessage,
          destroy:            function () {
            growlMessages.deleteMessage(message)
          },
          setText:            function (newText) {
            message.text = $sce.trustAsHtml(String(newText))
          },
          onclose:            _config.onclose,
          onopen:             _config.onopen
        }, broadcastMessage(message)
      }

      function warning(text, config) {
        return sendMessage(text, config, "warning")
      }

      function error(text, config) {
        return sendMessage(text, config, "error")
      }

      function info(text, config) {
        return sendMessage(text, config, "info")
      }

      function success(text, config) {
        return sendMessage(text, config, "success")
      }

      function general(text, config, severity) {
        return severity = (severity || "error").toLowerCase(), sendMessage(text, config, severity)
      }

      function addServerMessages(messages) {
        if (messages && messages.length) {
          var i, message, severity, length;
          for (length = messages.length, i = 0; i < length; i++) if (message = messages[i], message[_messageTextKey]) {
            severity   = (message[_messageSeverityKey] || "error").toLowerCase();
            var config = {};
            config.variables = message[_messageVariableKey] || {}, config.title = message[_messageTitleKey], message[_messageTTLKey] && (config.ttl = message[_messageTTLKey]), sendMessage(message[_messageTextKey], config, severity)
          }
        }
      }

      function onlyUnique() {
        return _onlyUniqueMessages
      }

      function reverseOrder() {
        return _reverseOrder
      }

      function inlineMessages() {
        return _inline
      }

      function position() {
        return _position
      }

      var translate;
      growlMessages.onlyUnique = _onlyUniqueMessages, growlMessages.reverseOrder = _reverseOrder;
      try {
        translate = $filter("translate")
      } catch (e) {
      }
      return {
        warning:           warning,
        error:             error,
        info:              info,
        success:           success,
        general:           general,
        addServerMessages: addServerMessages,
        onlyUnique:        onlyUnique,
        reverseOrder:      reverseOrder,
        inlineMessages:    inlineMessages,
        position:          position
      }
    }]
  }), angular.module("angular-growl").service("growlMessages", ["$sce", "$interval", function ($sce, $interval) {
    "use strict";

    function preLoad(referenceId) {
      return preloadDirectives[referenceId] ? preloadDirectives[referenceId] : preloadDirectives[referenceId] = {messages: []}
    }

    function directiveForRefId(referenceId) {
      var refId = referenceId || 0;
      return self.directives[refId] || preloadDirectives[refId]
    }

    var self              = this;
    this.directives       = {};
    var preloadDirectives = {};
    this.initDirective = function (referenceId, limitMessages) {
      return preloadDirectives[referenceId] ? (this.directives[referenceId] = preloadDirectives[referenceId], this.directives[referenceId].limitMessages = limitMessages) : this.directives[referenceId] = {
        messages:      [],
        limitMessages: limitMessages
      }, this.directives[referenceId]
    }, this.getAllMessages = function (referenceId) {
      referenceId = referenceId || 0;
      return directiveForRefId(referenceId) ? directiveForRefId(referenceId).messages : []
    }, this.destroyAllMessages = function (referenceId) {
      for (var messages = this.getAllMessages(referenceId), i = messages.length - 1; i >= 0; i--) messages[i].destroy();
      var directive = directiveForRefId(referenceId);
      directive && (directive.messages = [])
    }, this.addMessage = function (message) {
      var directive, messages, found, msgText;
      if (directive = this.directives[message.referenceId] ? this.directives[message.referenceId] : preLoad(message.referenceId), messages = directive.messages, !this.onlyUnique || (angular.forEach(messages, function (msg) {
          msgText = $sce.getTrustedHtml(msg.text), message.text === msgText && message.severity === msg.severity && message.title === msg.title && (found = !0)
        }), !found)) {
        if (message.text = $sce.trustAsHtml(String(message.text)), message.ttl && -1 !== message.ttl && (message.countdown = message.ttl / 1e3, message.promises = [], message.close = !1, message.countdownFunction = function () {
            message.countdown > 1 ? (message.countdown--, message.promises.push($interval(message.countdownFunction, 1e3, 1, 1))) : message.countdown--
          }), angular.isDefined(directive.limitMessages)) {
          var diff = messages.length - (directive.limitMessages - 1);
          diff > 0 && messages.splice(directive.limitMessages - 1, diff)
        }
        if (this.reverseOrder ? messages.unshift(message) : messages.push(message), "function" == typeof message.onopen && message.onopen(), message.ttl && -1 !== message.ttl) {
          var self = this;
          message.promises.push($interval(angular.bind(this, function () {
            self.deleteMessage(message)
          }), message.ttl, 1, 1)), message.promises.push($interval(message.countdownFunction, 1e3, 1, 1))
        }
        return message
      }
    }, this.deleteMessage = function (message) {
      var messages = this.getAllMessages(message.referenceId), index = -1;
      for (var i in messages) messages.hasOwnProperty(i) && (index = messages[i] === message ? i : index);
      index > -1 && (messages[index].close = !0, messages.splice(index, 1)), "function" == typeof message.onclose && message.onclose()
    }
  }]), "undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
+function ($) {
  "use strict";
  var version = $.fn.jquery.split(" ")[0].split(".");
  if (version[0] < 2 && version[1] < 9 || 1 == version[0] && 9 == version[1] && version[2] < 1 || version[0] > 2) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")
}(jQuery), function ($) {
  "use strict";

  function transitionEnd() {
    var el = document.createElement("bootstrap"), transEndEventNames = {
      WebkitTransition: "webkitTransitionEnd",
      MozTransition:    "transitionend",
      OTransition:      "oTransitionEnd otransitionend",
      transition:       "transitionend"
    };
    for (var name in transEndEventNames) if (void 0 !== el.style[name]) return {end: transEndEventNames[name]};
    return !1
  }

  $.fn.emulateTransitionEnd = function (duration) {
    var called = !1, $el = this;
    $(this).one("bsTransitionEnd", function () {
      called = !0
    });
    var callback = function () {
      called || $($el).trigger($.support.transition.end)
    };
    return setTimeout(callback, duration), this
  }, $(function () {
    $.support.transition = transitionEnd(), $.support.transition && ($.event.special.bsTransitionEnd = {
      bindType:     $.support.transition.end,
      delegateType: $.support.transition.end,
      handle:       function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    })
  })
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.alert");
      data || $this.data("bs.alert", data = new Alert(this)), "string" == typeof option && data[option].call($this)
    })
  }

  var dismiss = '[data-dismiss="alert"]', Alert = function (el) {
    $(el).on("click", dismiss, this.close)
  };
  Alert.VERSION = "3.3.6", Alert.TRANSITION_DURATION = 150, Alert.prototype.close = function (e) {
    function removeElement() {
      $parent.detach().trigger("closed.bs.alert").remove()
    }

    var $this = $(this), selector = $this.attr("data-target");
    selector || (selector = $this.attr("href"), selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ""));
    var $parent = $(selector);
    e && e.preventDefault(), $parent.length || ($parent = $this.closest(".alert")), $parent.trigger(e = $.Event("close.bs.alert")), e.isDefaultPrevented() || ($parent.removeClass("in"), $.support.transition && $parent.hasClass("fade") ? $parent.one("bsTransitionEnd", removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION) : removeElement())
  };
  var old = $.fn.alert;
  $.fn.alert = Plugin, $.fn.alert.Constructor = Alert, $.fn.alert.noConflict = function () {
    return $.fn.alert = old, this
  }, $(document).on("click.bs.alert.data-api", dismiss, Alert.prototype.close)
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.button"), options = "object" == typeof option && option;
      data || $this.data("bs.button", data = new Button(this, options)), "toggle" == option ? data.toggle() : option && data.setState(option)
    })
  }

  var Button = function (element, options) {
    this.$element = $(element), this.options = $.extend({}, Button.DEFAULTS, options), this.isLoading = !1
  };
  Button.VERSION = "3.3.6", Button.DEFAULTS = {loadingText: "loading..."}, Button.prototype.setState = function (state) {
    var d = "disabled", $el = this.$element, val = $el.is("input") ? "val" : "html", data = $el.data();
    state += "Text", null == data.resetText && $el.data("resetText", $el[val]()), setTimeout($.proxy(function () {
      $el[val](null == data[state] ? this.options[state] : data[state]), "loadingText" == state ? (this.isLoading = !0, $el.addClass(d).attr(d, d)) : this.isLoading && (this.isLoading = !1, $el.removeClass(d).removeAttr(d))
    }, this), 0)
  }, Button.prototype.toggle = function () {
    var changed = !0, $parent = this.$element.closest('[data-toggle="buttons"]');
    if ($parent.length) {
      var $input = this.$element.find("input");
      "radio" == $input.prop("type") ? ($input.prop("checked") && (changed = !1), $parent.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == $input.prop("type") && ($input.prop("checked") !== this.$element.hasClass("active") && (changed = !1), this.$element.toggleClass("active")), $input.prop("checked", this.$element.hasClass("active")), changed && $input.trigger("change")
    } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active")
  };
  var old = $.fn.button;
  $.fn.button = Plugin, $.fn.button.Constructor = Button, $.fn.button.noConflict = function () {
    return $.fn.button = old, this
  }, $(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function (e) {
    var $btn = $(e.target);
    $btn.hasClass("btn") || ($btn = $btn.closest(".btn")), Plugin.call($btn, "toggle"), $(e.target).is('input[type="radio"]') || $(e.target).is('input[type="checkbox"]') || e.preventDefault()
  }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (e) {
    $(e.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(e.type))
  })
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.carousel"),
          options               = $.extend({}, Carousel.DEFAULTS, $this.data(), "object" == typeof option && option),
          action                = "string" == typeof option ? option : options.slide;
      data || $this.data("bs.carousel", data = new Carousel(this, options)), "number" == typeof option ? data.to(option) : action ? data[action]() : options.interval && data.pause().cycle()
    })
  }

  var Carousel = function (element, options) {
    this.$element = $(element), this.$indicators = this.$element.find(".carousel-indicators"), this.options = options, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", $.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", $.proxy(this.pause, this)).on("mouseleave.bs.carousel", $.proxy(this.cycle, this))
  };
  Carousel.VERSION = "3.3.6", Carousel.TRANSITION_DURATION = 600, Carousel.DEFAULTS = {
    interval: 5e3,
    pause:    "hover",
    wrap:     !0,
    keyboard: !0
  }, Carousel.prototype.keydown = function (e) {
    if (!/input|textarea/i.test(e.target.tagName)) {
      switch (e.which) {
        case 37:
          this.prev();
          break;
        case 39:
          this.next();
          break;
        default:
          return
      }
      e.preventDefault()
    }
  }, Carousel.prototype.cycle = function (e) {
    return e || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval)), this
  }, Carousel.prototype.getItemIndex = function (item) {
    return this.$items = item.parent().children(".item"), this.$items.index(item || this.$active)
  }, Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active);
    if (("prev" == direction && 0 === activeIndex || "next" == direction && activeIndex == this.$items.length - 1) && !this.options.wrap) return active;
    var delta = "prev" == direction ? -1 : 1, itemIndex = (activeIndex + delta) % this.$items.length;
    return this.$items.eq(itemIndex)
  }, Carousel.prototype.to = function (pos) {
    var that = this, activeIndex = this.getItemIndex(this.$active = this.$element.find(".item.active"));
    if (!(pos > this.$items.length - 1 || pos < 0)) return this.sliding ? this.$element.one("slid.bs.carousel", function () {
      that.to(pos)
    }) : activeIndex == pos ? this.pause().cycle() : this.slide(pos > activeIndex ? "next" : "prev", this.$items.eq(pos))
  }, Carousel.prototype.pause = function (e) {
    return e || (this.paused = !0), this.$element.find(".next, .prev").length && $.support.transition && (this.$element.trigger($.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
  }, Carousel.prototype.next = function () {
    if (!this.sliding) return this.slide("next")
  }, Carousel.prototype.prev = function () {
    if (!this.sliding) return this.slide("prev")
  }, Carousel.prototype.slide = function (type, next) {
    var $active                                                                        = this.$element.find(".item.active"), $next = next || this.getItemForDirection(type, $active),
        isCycling = this.interval, direction = "next" == type ? "left" : "right", that = this;
    if ($next.hasClass("active")) return this.sliding = !1;
    var relatedTarget = $next[0],
        slideEvent    = $.Event("slide.bs.carousel", {relatedTarget: relatedTarget, direction: direction});
    if (this.$element.trigger(slideEvent), !slideEvent.isDefaultPrevented()) {
      if (this.sliding = !0, isCycling && this.pause(), this.$indicators.length) {
        this.$indicators.find(".active").removeClass("active");
        var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)]);
        $nextIndicator && $nextIndicator.addClass("active")
      }
      var slidEvent = $.Event("slid.bs.carousel", {relatedTarget: relatedTarget, direction: direction});
      return $.support.transition && this.$element.hasClass("slide") ? ($next.addClass(type), $next[0].offsetWidth, $active.addClass(direction), $next.addClass(direction), $active.one("bsTransitionEnd", function () {
        $next.removeClass([type, direction].join(" ")).addClass("active"), $active.removeClass(["active", direction].join(" ")), that.sliding = !1, setTimeout(function () {
          that.$element.trigger(slidEvent)
        }, 0)
      }).emulateTransitionEnd(Carousel.TRANSITION_DURATION)) : ($active.removeClass("active"), $next.addClass("active"), this.sliding = !1, this.$element.trigger(slidEvent)), isCycling && this.cycle(), this
    }
  };
  var old = $.fn.carousel;
  $.fn.carousel = Plugin, $.fn.carousel.Constructor = Carousel, $.fn.carousel.noConflict = function () {
    return $.fn.carousel = old, this
  };
  var clickHandler = function (e) {
    var href, $this = $(this),
        $target     = $($this.attr("data-target") || (href = $this.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, ""));
    if ($target.hasClass("carousel")) {
      var options = $.extend({}, $target.data(), $this.data()), slideIndex = $this.attr("data-slide-to");
      slideIndex && (options.interval = !1), Plugin.call($target, options), slideIndex && $target.data("bs.carousel").to(slideIndex), e.preventDefault()
    }
  };
  $(document).on("click.bs.carousel.data-api", "[data-slide]", clickHandler).on("click.bs.carousel.data-api", "[data-slide-to]", clickHandler), $(window).on("load", function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this);
      Plugin.call($carousel, $carousel.data())
    })
  })
}(jQuery), function ($) {
  "use strict";

  function getTargetFromTrigger($trigger) {
    var href,
        target = $trigger.attr("data-target") || (href = $trigger.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, "");
    return $(target)
  }

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.collapse"),
          options               = $.extend({}, Collapse.DEFAULTS, $this.data(), "object" == typeof option && option);
      !data && options.toggle && /show|hide/.test(option) && (options.toggle = !1), data || $this.data("bs.collapse", data = new Collapse(this, options)), "string" == typeof option && data[option]()
    })
  }

  var Collapse = function (element, options) {
    this.$element = $(element), this.options = $.extend({}, Collapse.DEFAULTS, options), this.$trigger = $('[data-toggle="collapse"][href="#' + element.id + '"],[data-toggle="collapse"][data-target="#' + element.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
  };
  Collapse.VERSION = "3.3.6", Collapse.TRANSITION_DURATION = 350, Collapse.DEFAULTS = {toggle: !0}, Collapse.prototype.dimension = function () {
    return this.$element.hasClass("width") ? "width" : "height"
  }, Collapse.prototype.show = function () {
    if (!this.transitioning && !this.$element.hasClass("in")) {
      var activesData, actives = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
      if (!(actives && actives.length && (activesData = actives.data("bs.collapse")) && activesData.transitioning)) {
        var startEvent = $.Event("show.bs.collapse");
        if (this.$element.trigger(startEvent), !startEvent.isDefaultPrevented()) {
          actives && actives.length && (Plugin.call(actives, "hide"), activesData || actives.data("bs.collapse", null));
          var dimension = this.dimension();
          this.$element.removeClass("collapse").addClass("collapsing")[dimension](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
          var complete = function () {
            this.$element.removeClass("collapsing").addClass("collapse in")[dimension](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
          };
          if (!$.support.transition) return complete.call(this);
          var scrollSize = $.camelCase(["scroll", dimension].join("-"));
          this.$element.one("bsTransitionEnd", $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
        }
      }
    }
  }, Collapse.prototype.hide = function () {
    if (!this.transitioning && this.$element.hasClass("in")) {
      var startEvent = $.Event("hide.bs.collapse");
      if (this.$element.trigger(startEvent), !startEvent.isDefaultPrevented()) {
        var dimension = this.dimension();
        this.$element[dimension](this.$element[dimension]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
        var complete = function () {
          this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
        };
        if (!$.support.transition) return complete.call(this);
        this.$element[dimension](0).one("bsTransitionEnd", $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)
      }
    }
  }, Collapse.prototype.toggle = function () {
    this[this.$element.hasClass("in") ? "hide" : "show"]()
  }, Collapse.prototype.getParent = function () {
    return $(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each($.proxy(function (i, element) {
      var $element = $(element);
      this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
    }, this)).end()
  }, Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass("in");
    $element.attr("aria-expanded", isOpen), $trigger.toggleClass("collapsed", !isOpen).attr("aria-expanded", isOpen)
  };
  var old = $.fn.collapse;
  $.fn.collapse = Plugin, $.fn.collapse.Constructor = Collapse, $.fn.collapse.noConflict = function () {
    return $.fn.collapse = old, this
  }, $(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (e) {
    var $this = $(this);
    $this.attr("data-target") || e.preventDefault();
    var $target = getTargetFromTrigger($this), data = $target.data("bs.collapse"),
        option                                      = data ? "toggle" : $this.data();
    Plugin.call($target, option)
  })
}(jQuery), function ($) {
  "use strict";

  function getParent($this) {
    var selector = $this.attr("data-target");
    selector || (selector = $this.attr("href"), selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, ""));
    var $parent = selector && $(selector);
    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    e && 3 === e.which || ($(backdrop).remove(), $(toggle).each(function () {
      var $this = $(this), $parent = getParent($this), relatedTarget = {relatedTarget: this};
      $parent.hasClass("open") && (e && "click" == e.type && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target) || ($parent.trigger(e = $.Event("hide.bs.dropdown", relatedTarget)), e.isDefaultPrevented() || ($this.attr("aria-expanded", "false"), $parent.removeClass("open").trigger($.Event("hidden.bs.dropdown", relatedTarget)))))
    }))
  }

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.dropdown");
      data || $this.data("bs.dropdown", data = new Dropdown(this)), "string" == typeof option && data[option].call($this)
    })
  }

  var backdrop = ".dropdown-backdrop", toggle = '[data-toggle="dropdown"]', Dropdown = function (element) {
    $(element).on("click.bs.dropdown", this.toggle)
  };
  Dropdown.VERSION = "3.3.6", Dropdown.prototype.toggle = function (e) {
    var $this = $(this);
    if (!$this.is(".disabled, :disabled")) {
      var $parent = getParent($this), isActive = $parent.hasClass("open");
      if (clearMenus(), !isActive) {
        "ontouchstart" in document.documentElement && !$parent.closest(".navbar-nav").length && $(document.createElement("div")).addClass("dropdown-backdrop").insertAfter($(this)).on("click", clearMenus);
        var relatedTarget = {relatedTarget: this};
        if ($parent.trigger(e = $.Event("show.bs.dropdown", relatedTarget)), e.isDefaultPrevented()) return;
        $this.trigger("focus").attr("aria-expanded", "true"), $parent.toggleClass("open").trigger($.Event("shown.bs.dropdown", relatedTarget))
      }
      return !1
    }
  }, Dropdown.prototype.keydown = function (e) {
    if (/(38|40|27|32)/.test(e.which) && !/input|textarea/i.test(e.target.tagName)) {
      var $this = $(this);
      if (e.preventDefault(), e.stopPropagation(), !$this.is(".disabled, :disabled")) {
        var $parent = getParent($this), isActive = $parent.hasClass("open");
        if (!isActive && 27 != e.which || isActive && 27 == e.which) return 27 == e.which && $parent.find(toggle).trigger("focus"), $this.trigger("click");
        var $items = $parent.find(".dropdown-menu li:not(.disabled):visible a");
        if ($items.length) {
          var index = $items.index(e.target);
          38 == e.which && index > 0 && index--, 40 == e.which && index < $items.length - 1 && index++, ~index || (index = 0), $items.eq(index).trigger("focus")
        }
      }
    }
  };
  var old = $.fn.dropdown;
  $.fn.dropdown = Plugin, $.fn.dropdown.Constructor = Dropdown, $.fn.dropdown.noConflict = function () {
    return $.fn.dropdown = old, this
  }, $(document).on("click.bs.dropdown.data-api", clearMenus).on("click.bs.dropdown.data-api", ".dropdown form", function (e) {
    e.stopPropagation()
  }).on("click.bs.dropdown.data-api", toggle, Dropdown.prototype.toggle).on("keydown.bs.dropdown.data-api", toggle, Dropdown.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", Dropdown.prototype.keydown)
}(jQuery), function ($) {
  "use strict";

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.modal"),
          options               = $.extend({}, Modal.DEFAULTS, $this.data(), "object" == typeof option && option);
      data || $this.data("bs.modal", data = new Modal(this, options)), "string" == typeof option ? data[option](_relatedTarget) : options.show && data.show(_relatedTarget)
    })
  }

  var Modal = function (element, options) {
    this.options = options, this.$body = $(document.body), this.$element = $(element), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, $.proxy(function () {
      this.$element.trigger("loaded.bs.modal")
    }, this))
  };
  Modal.VERSION = "3.3.6", Modal.TRANSITION_DURATION = 300, Modal.BACKDROP_TRANSITION_DURATION = 150, Modal.DEFAULTS = {
    backdrop: !0,
    keyboard: !0,
    show:     !0
  }, Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }, Modal.prototype.show = function (_relatedTarget) {
    var that = this, e = $.Event("show.bs.modal", {relatedTarget: _relatedTarget});
    this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', $.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function () {
      that.$element.one("mouseup.dismiss.bs.modal", function (e) {
        $(e.target).is(that.$element) && (that.ignoreBackdropClick = !0)
      })
    }), this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass("fade");
      that.$element.parent().length || that.$element.appendTo(that.$body), that.$element.show().scrollTop(0), that.adjustDialog(), transition && that.$element[0].offsetWidth, that.$element.addClass("in"), that.enforceFocus();
      var e = $.Event("shown.bs.modal", {relatedTarget: _relatedTarget});
      transition ? that.$dialog.one("bsTransitionEnd", function () {
        that.$element.trigger("focus").trigger(e)
      }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger("focus").trigger(e)
    }))
  }, Modal.prototype.hide = function (e) {
    e && e.preventDefault(), e = $.Event("hide.bs.modal"), this.$element.trigger(e), this.isShown && !e.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), $(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), $.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal())
  }, Modal.prototype.enforceFocus = function () {
    $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (e) {
      this.$element[0] === e.target || this.$element.has(e.target).length || this.$element.trigger("focus")
    }, this))
  }, Modal.prototype.escape = function () {
    this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", $.proxy(function (e) {
      27 == e.which && this.hide()
    }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
  }, Modal.prototype.resize = function () {
    this.isShown ? $(window).on("resize.bs.modal", $.proxy(this.handleUpdate, this)) : $(window).off("resize.bs.modal")
  }, Modal.prototype.hideModal = function () {
    var that = this;
    this.$element.hide(), this.backdrop(function () {
      that.$body.removeClass("modal-open"), that.resetAdjustments(), that.resetScrollbar(), that.$element.trigger("hidden.bs.modal")
    })
  }, Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
  }, Modal.prototype.backdrop = function (callback) {
    var that = this, animate = this.$element.hasClass("fade") ? "fade" : "";
    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate;
      if (this.$backdrop = $(document.createElement("div")).addClass("modal-backdrop " + animate).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", $.proxy(function (e) {
          if (this.ignoreBackdropClick) return void(this.ignoreBackdropClick = !1);
          e.target === e.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())
        }, this)), doAnimate && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !callback) return;
      doAnimate ? this.$backdrop.one("bsTransitionEnd", callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback()
    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass("in");
      var callbackRemove = function () {
        that.removeBackdrop(), callback && callback()
      };
      $.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove()
    } else callback && callback()
  }, Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }, Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;
    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : "",
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ""
    })
  }, Modal.prototype.resetAdjustments = function () {
    this.$element.css({paddingLeft: "", paddingRight: ""})
  }, Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth;
    if (!fullWindowWidth) {
      var documentElementRect = document.documentElement.getBoundingClientRect();
      fullWindowWidth         = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth, this.scrollbarWidth = this.measureScrollbar()
  }, Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt(this.$body.css("padding-right") || 0, 10);
    this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", bodyPad + this.scrollbarWidth)
  }, Modal.prototype.resetScrollbar = function () {
    this.$body.css("padding-right", this.originalBodyPad)
  }, Modal.prototype.measureScrollbar = function () {
    var scrollDiv = document.createElement("div");
    scrollDiv.className = "modal-scrollbar-measure", this.$body.append(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    return this.$body[0].removeChild(scrollDiv), scrollbarWidth
  };
  var old = $.fn.modal;
  $.fn.modal = Plugin, $.fn.modal.Constructor = Modal, $.fn.modal.noConflict = function () {
    return $.fn.modal = old, this
  }, $(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (e) {
    var $this = $(this), href = $this.attr("href"),
        $target               = $($this.attr("data-target") || href && href.replace(/.*(?=#[^\s]+$)/, "")),
        option                = $target.data("bs.modal") ? "toggle" : $.extend({remote: !/#/.test(href) && href}, $target.data(), $this.data());
    $this.is("a") && e.preventDefault(), $target.one("show.bs.modal", function (showEvent) {
      showEvent.isDefaultPrevented() || $target.one("hidden.bs.modal", function () {
        $this.is(":visible") && $this.trigger("focus")
      })
    }), Plugin.call($target, option, this)
  })
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.tooltip"), options = "object" == typeof option && option;
      !data && /destroy|hide/.test(option) || (data || $this.data("bs.tooltip", data = new Tooltip(this, options)), "string" == typeof option && data[option]())
    })
  }

  var Tooltip = function (element, options) {
    this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", element, options)
  };
  Tooltip.VERSION = "3.3.6", Tooltip.TRANSITION_DURATION = 150, Tooltip.DEFAULTS = {
    animation: !0,
    placement: "top",
    selector:  !1,
    template:  '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger:   "hover focus",
    title:     "",
    delay:     0,
    html:      !1,
    container: !1,
    viewport:  {
      selector: "body",
      padding:  0
    }
  }, Tooltip.prototype.init = function (type, element, options) {
    if (this.enabled = !0, this.type = type, this.$element = $(element), this.options = this.getOptions(options), this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
        click: !1,
        hover: !1,
        focus: !1
      }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
    for (var triggers = this.options.trigger.split(" "), i = triggers.length; i--;) {
      var trigger = triggers[i];
      if ("click" == trigger) this.$element.on("click." + this.type, this.options.selector, $.proxy(this.toggle, this)); else if ("manual" != trigger) {
        var eventIn  = "hover" == trigger ? "mouseenter" : "focusin",
            eventOut = "hover" == trigger ? "mouseleave" : "focusout";
        this.$element.on(eventIn + "." + this.type, this.options.selector, $.proxy(this.enter, this)), this.$element.on(eventOut + "." + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }
    this.options.selector ? this._options = $.extend({}, this.options, {
      trigger:  "manual",
      selector: ""
    }) : this.fixTitle()
  }, Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }, Tooltip.prototype.getOptions = function (options) {
    return options = $.extend({}, this.getDefaults(), this.$element.data(), options), options.delay && "number" == typeof options.delay && (options.delay = {
      show: options.delay,
      hide: options.delay
    }), options
  }, Tooltip.prototype.getDelegateOptions = function () {
    var options = {}, defaults = this.getDefaults();
    return this._options && $.each(this._options, function (key, value) {
      defaults[key] != value && (options[key] = value)
    }), options
  }, Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data("bs." + this.type);
    return self || (self = new this.constructor(obj.currentTarget, this.getDelegateOptions()), $(obj.currentTarget).data("bs." + this.type, self)), obj instanceof $.Event && (self.inState["focusin" == obj.type ? "focus" : "hover"] = !0), self.tip().hasClass("in") || "in" == self.hoverState ? void(self.hoverState = "in") : (clearTimeout(self.timeout), self.hoverState = "in", self.options.delay && self.options.delay.show ? void(self.timeout = setTimeout(function () {
      "in" == self.hoverState && self.show()
    }, self.options.delay.show)) : self.show())
  }, Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) if (this.inState[key]) return !0;
    return !1
  }, Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data("bs." + this.type);
    if (self || (self = new this.constructor(obj.currentTarget, this.getDelegateOptions()), $(obj.currentTarget).data("bs." + this.type, self)), obj instanceof $.Event && (self.inState["focusout" == obj.type ? "focus" : "hover"] = !1), !self.isInStateTrue()) {
      if (clearTimeout(self.timeout), self.hoverState = "out", !self.options.delay || !self.options.delay.hide) return self.hide();
      self.timeout = setTimeout(function () {
        "out" == self.hoverState && self.hide()
      }, self.options.delay.hide)
    }
  }, Tooltip.prototype.show = function () {
    var e = $.Event("show.bs." + this.type);
    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e);
      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
      if (e.isDefaultPrevented() || !inDom) return;
      var that = this, $tip = this.tip(), tipId = this.getUID(this.type);
      this.setContent(), $tip.attr("id", tipId), this.$element.attr("aria-describedby", tipId), this.options.animation && $tip.addClass("fade");
      var placement                             = "function" == typeof this.options.placement ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement,
          autoToken = /\s?auto?\s?/i, autoPlace = autoToken.test(placement);
      autoPlace && (placement = placement.replace(autoToken, "") || "top"), $tip.detach().css({
        top:     0,
        left:    0,
        display: "block"
      }).addClass(placement).data("bs." + this.type, this), this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
      var pos = this.getPosition(), actualWidth = $tip[0].offsetWidth, actualHeight = $tip[0].offsetHeight;
      if (autoPlace) {
        var orgPlacement = placement, viewportDim = this.getPosition(this.$viewport);
        placement = "bottom" == placement && pos.bottom + actualHeight > viewportDim.bottom ? "top" : "top" == placement && pos.top - actualHeight < viewportDim.top ? "bottom" : "right" == placement && pos.right + actualWidth > viewportDim.width ? "left" : "left" == placement && pos.left - actualWidth < viewportDim.left ? "right" : placement, $tip.removeClass(orgPlacement).addClass(placement)
      }
      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);
      this.applyPlacement(calculatedOffset, placement);
      var complete = function () {
        var prevHoverState = that.hoverState;
        that.$element.trigger("shown.bs." + that.type), that.hoverState = null, "out" == prevHoverState && that.leave(that)
      };
      $.support.transition && this.$tip.hasClass("fade") ? $tip.one("bsTransitionEnd", complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete()
    }
  }, Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip                                                         = this.tip(), width = $tip[0].offsetWidth, height       = $tip[0].offsetHeight,
        marginTop = parseInt($tip.css("margin-top"), 10), marginLeft = parseInt($tip.css("margin-left"), 10);
    isNaN(marginTop) && (marginTop = 0), isNaN(marginLeft) && (marginLeft = 0), offset.top += marginTop, offset.left += marginLeft, $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({top: Math.round(props.top), left: Math.round(props.left)})
      }
    }, offset), 0), $tip.addClass("in");
    var actualWidth = $tip[0].offsetWidth, actualHeight = $tip[0].offsetHeight;
    "top" == placement && actualHeight != height && (offset.top = offset.top + height - actualHeight);
    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);
    delta.left ? offset.left += delta.left : offset.top += delta.top;
    var isVertical          = /top|bottom/.test(placement),
        arrowDelta          = isVertical ? 2 * delta.left - width + actualWidth : 2 * delta.top - height + actualHeight,
        arrowOffsetPosition = isVertical ? "offsetWidth" : "offsetHeight";
    $tip.offset(offset), this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }, Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow().css(isVertical ? "left" : "top", 50 * (1 - delta / dimension) + "%").css(isVertical ? "top" : "left", "")
  }, Tooltip.prototype.setContent = function () {
    var $tip = this.tip(), title = this.getTitle();
    $tip.find(".tooltip-inner")[this.options.html ? "html" : "text"](title), $tip.removeClass("fade in top bottom left right")
  }, Tooltip.prototype.hide = function (callback) {
    function complete() {
      "in" != that.hoverState && $tip.detach(), that.$element.removeAttr("aria-describedby").trigger("hidden.bs." + that.type), callback && callback()
    }

    var that = this, $tip = $(this.$tip), e = $.Event("hide.bs." + this.type);
    if (this.$element.trigger(e), !e.isDefaultPrevented()) return $tip.removeClass("in"), $.support.transition && $tip.hasClass("fade") ? $tip.one("bsTransitionEnd", complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete(), this.hoverState = null, this
  }, Tooltip.prototype.fixTitle = function () {
    var $e = this.$element;
    ($e.attr("title") || "string" != typeof $e.attr("data-original-title")) && $e.attr("data-original-title", $e.attr("title") || "").attr("title", "")
  }, Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }, Tooltip.prototype.getPosition = function ($element) {
    $element = $element || this.$element;
    var el   = $element[0], isBody = "BODY" == el.tagName, elRect = el.getBoundingClientRect();
    null == elRect.width && (elRect = $.extend({}, elRect, {
      width:  elRect.right - elRect.left,
      height: elRect.bottom - elRect.top
    }));
    var elOffset  = isBody ? {top: 0, left: 0} : $element.offset(),
        scroll    = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop()},
        outerDims = isBody ? {width: $(window).width(), height: $(window).height()} : null;
    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }, Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return "bottom" == placement ? {
      top:  pos.top + pos.height,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : "top" == placement ? {
      top:  pos.top - actualHeight,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : "left" == placement ? {
      top:  pos.top + pos.height / 2 - actualHeight / 2,
      left: pos.left - actualWidth
    } : {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}
  }, Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = {top: 0, left: 0};
    if (!this.$viewport) return delta;
    var viewportPadding    = this.options.viewport && this.options.viewport.padding || 0,
        viewportDimensions = this.getPosition(this.$viewport);
    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll,
          bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;
      topEdgeOffset < viewportDimensions.top ? delta.top = viewportDimensions.top - topEdgeOffset : bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height && (delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset)
    } else {
      var leftEdgeOffset = pos.left - viewportPadding, rightEdgeOffset = pos.left + viewportPadding + actualWidth;
      leftEdgeOffset < viewportDimensions.left ? delta.left = viewportDimensions.left - leftEdgeOffset : rightEdgeOffset > viewportDimensions.right && (delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset)
    }
    return delta
  }, Tooltip.prototype.getTitle = function () {
    var $e = this.$element, o = this.options;
    return $e.attr("data-original-title") || ("function" == typeof o.title ? o.title.call($e[0]) : o.title)
  }, Tooltip.prototype.getUID = function (prefix) {
    do {
      prefix += ~~(1e6 * Math.random())
    } while (document.getElementById(prefix));
    return prefix
  }, Tooltip.prototype.tip = function () {
    if (!this.$tip && (this.$tip = $(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
    return this.$tip
  }, Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
  }, Tooltip.prototype.enable = function () {
    this.enabled = !0
  }, Tooltip.prototype.disable = function () {
    this.enabled = !1
  }, Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }, Tooltip.prototype.toggle = function (e) {
    var self = this;
    e && ((self = $(e.currentTarget).data("bs." + this.type)) || (self = new this.constructor(e.currentTarget, this.getDelegateOptions()), $(e.currentTarget).data("bs." + this.type, self))), e ? (self.inState.click = !self.inState.click, self.isInStateTrue() ? self.enter(self) : self.leave(self)) : self.tip().hasClass("in") ? self.leave(self) : self.enter(self)
  }, Tooltip.prototype.destroy = function () {
    var that = this;
    clearTimeout(this.timeout), this.hide(function () {
      that.$element.off("." + that.type).removeData("bs." + that.type), that.$tip && that.$tip.detach(), that.$tip = null, that.$arrow = null, that.$viewport = null
    })
  };
  var old = $.fn.tooltip;
  $.fn.tooltip = Plugin, $.fn.tooltip.Constructor = Tooltip, $.fn.tooltip.noConflict = function () {
    return $.fn.tooltip = old, this
  }
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.popover"), options = "object" == typeof option && option;
      !data && /destroy|hide/.test(option) || (data || $this.data("bs.popover", data = new Popover(this, options)), "string" == typeof option && data[option]())
    })
  }

  var Popover = function (element, options) {
    this.init("popover", element, options)
  };
  if (!$.fn.tooltip) throw new Error("Popover requires tooltip.js");
  Popover.VERSION = "3.3.6", Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: "right",
    trigger:   "click",
    content:   "",
    template:  '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  }), Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype), Popover.prototype.constructor = Popover, Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }, Popover.prototype.setContent = function () {
    var $tip = this.tip(), title = this.getTitle(), content = this.getContent();
    $tip.find(".popover-title")[this.options.html ? "html" : "text"](title), $tip.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof content ? "html" : "append" : "text"](content), $tip.removeClass("fade top bottom left right in"), $tip.find(".popover-title").html() || $tip.find(".popover-title").hide()
  }, Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }, Popover.prototype.getContent = function () {
    var $e = this.$element, o = this.options;
    return $e.attr("data-content") || ("function" == typeof o.content ? o.content.call($e[0]) : o.content)
  }, Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find(".arrow")
  };
  var old = $.fn.popover;
  $.fn.popover = Plugin, $.fn.popover.Constructor = Popover, $.fn.popover.noConflict = function () {
    return $.fn.popover = old, this
  }
}(jQuery), function ($) {
  "use strict";

  function ScrollSpy(element, options) {
    this.$body = $(document.body), this.$scrollElement = $($(element).is(document.body) ? window : element), this.options = $.extend({}, ScrollSpy.DEFAULTS, options), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", $.proxy(this.process, this)), this.refresh(), this.process()
  }

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.scrollspy"), options = "object" == typeof option && option;
      data || $this.data("bs.scrollspy", data = new ScrollSpy(this, options)), "string" == typeof option && data[option]()
    })
  }

  ScrollSpy.VERSION = "3.3.6", ScrollSpy.DEFAULTS = {offset: 10}, ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }, ScrollSpy.prototype.refresh = function () {
    var that = this, offsetMethod = "offset", offsetBase = 0;
    this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), $.isWindow(this.$scrollElement[0]) || (offsetMethod = "position", offsetBase = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () {
      var $el = $(this), href = $el.data("target") || $el.attr("href"), $href = /^#./.test(href) && $(href);
      return $href && $href.length && $href.is(":visible") && [[$href[offsetMethod]().top + offsetBase, href]] || null
    }).sort(function (a, b) {
      return a[0] - b[0]
    }).each(function () {
      that.offsets.push(this[0]), that.targets.push(this[1])
    })
  }, ScrollSpy.prototype.process = function () {
    var i, scrollTop                                                                           = this.$scrollElement.scrollTop() + this.options.offset, scrollHeight     = this.getScrollHeight(),
        maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height(), offsets = this.offsets,
        targets                                                                                = this.targets, activeTarget = this.activeTarget;
    if (this.scrollHeight != scrollHeight && this.refresh(), scrollTop >= maxScroll) return activeTarget != (i = targets[targets.length - 1]) && this.activate(i);
    if (activeTarget && scrollTop < offsets[0]) return this.activeTarget = null, this.clear();
    for (i = offsets.length; i--;) activeTarget != targets[i] && scrollTop >= offsets[i] && (void 0 === offsets[i + 1] || scrollTop < offsets[i + 1]) && this.activate(targets[i])
  }, ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target, this.clear();
    var selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]',
        active   = $(selector).parents("li").addClass("active");
    active.parent(".dropdown-menu").length && (active = active.closest("li.dropdown").addClass("active")), active.trigger("activate.bs.scrollspy")
  }, ScrollSpy.prototype.clear = function () {
    $(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
  };
  var old = $.fn.scrollspy;
  $.fn.scrollspy = Plugin, $.fn.scrollspy.Constructor = ScrollSpy, $.fn.scrollspy.noConflict = function () {
    return $.fn.scrollspy = old, this
  }, $(window).on("load.bs.scrollspy.data-api", function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      Plugin.call($spy, $spy.data())
    })
  })
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.tab");
      data || $this.data("bs.tab", data = new Tab(this)), "string" == typeof option && data[option]()
    })
  }

  var Tab = function (element) {
    this.element = $(element)
  };
  Tab.VERSION = "3.3.6", Tab.TRANSITION_DURATION = 150, Tab.prototype.show = function () {
    var $this = this.element, $ul = $this.closest("ul:not(.dropdown-menu)"), selector = $this.data("target");
    if (selector || (selector = $this.attr("href"), selector = selector && selector.replace(/.*(?=#[^\s]*$)/, "")), !$this.parent("li").hasClass("active")) {
      var $previous = $ul.find(".active:last a"), hideEvent = $.Event("hide.bs.tab", {relatedTarget: $this[0]}),
          showEvent                                         = $.Event("show.bs.tab", {relatedTarget: $previous[0]});
      if ($previous.trigger(hideEvent), $this.trigger(showEvent), !showEvent.isDefaultPrevented() && !hideEvent.isDefaultPrevented()) {
        var $target = $(selector);
        this.activate($this.closest("li"), $ul), this.activate($target, $target.parent(), function () {
          $previous.trigger({type: "hidden.bs.tab", relatedTarget: $this[0]}), $this.trigger({
            type:          "shown.bs.tab",
            relatedTarget: $previous[0]
          })
        })
      }
    }
  }, Tab.prototype.activate = function (element, container, callback) {
    function next() {
      $active.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), element.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), transition ? (element[0].offsetWidth, element.addClass("in")) : element.removeClass("fade"), element.parent(".dropdown-menu").length && element.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), callback && callback()
    }

    var $active    = container.find("> .active"),
        transition = callback && $.support.transition && ($active.length && $active.hasClass("fade") || !!container.find("> .fade").length);
    $active.length && transition ? $active.one("bsTransitionEnd", next).emulateTransitionEnd(Tab.TRANSITION_DURATION) : next(), $active.removeClass("in")
  };
  var old = $.fn.tab;
  $.fn.tab = Plugin, $.fn.tab.Constructor = Tab, $.fn.tab.noConflict = function () {
    return $.fn.tab = old, this
  };
  var clickHandler = function (e) {
    e.preventDefault(), Plugin.call($(this), "show")
  };
  $(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', clickHandler).on("click.bs.tab.data-api", '[data-toggle="pill"]', clickHandler)
}(jQuery), function ($) {
  "use strict";

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this), data = $this.data("bs.affix"), options = "object" == typeof option && option;
      data || $this.data("bs.affix", data = new Affix(this, options)), "string" == typeof option && data[option]()
    })
  }

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options), this.$target = $(this.options.target).on("scroll.bs.affix.data-api", $.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", $.proxy(this.checkPositionWithEventLoop, this)), this.$element = $(element), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition()
  };
  Affix.VERSION = "3.3.6", Affix.RESET = "affix affix-top affix-bottom", Affix.DEFAULTS = {
    offset: 0,
    target: window
  }, Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop = this.$target.scrollTop(), position = this.$element.offset(), targetHeight = this.$target.height();
    if (null != offsetTop && "top" == this.affixed) return scrollTop < offsetTop && "top";
    if ("bottom" == this.affixed) return null != offsetTop ? !(scrollTop + this.unpin <= position.top) && "bottom" : !(scrollTop + targetHeight <= scrollHeight - offsetBottom) && "bottom";
    var initializing = null == this.affixed, colliderTop = initializing ? scrollTop : position.top,
        colliderHeight                                   = initializing ? targetHeight : height;
    return null != offsetTop && scrollTop <= offsetTop ? "top" : null != offsetBottom && colliderTop + colliderHeight >= scrollHeight - offsetBottom && "bottom"
  }, Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset;
    this.$element.removeClass(Affix.RESET).addClass("affix");
    var scrollTop = this.$target.scrollTop(), position = this.$element.offset();
    return this.pinnedOffset = position.top - scrollTop
  }, Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }, Affix.prototype.checkPosition = function () {
    if (this.$element.is(":visible")) {
      var height = this.$element.height(), offset = this.options.offset, offsetTop = offset.top,
          offsetBottom                                                             = offset.bottom, scrollHeight = Math.max($(document).height(), $(document.body).height());
      "object" != typeof offset && (offsetBottom = offsetTop = offset), "function" == typeof offsetTop && (offsetTop = offset.top(this.$element)), "function" == typeof offsetBottom && (offsetBottom = offset.bottom(this.$element));
      var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);
      if (this.affixed != affix) {
        null != this.unpin && this.$element.css("top", "");
        var affixType = "affix" + (affix ? "-" + affix : ""), e = $.Event(affixType + ".bs.affix");
        if (this.$element.trigger(e), e.isDefaultPrevented()) return;
        this.affixed = affix, this.unpin = "bottom" == affix ? this.getPinnedOffset() : null, this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace("affix", "affixed") + ".bs.affix")
      }
      "bottom" == affix && this.$element.offset({top: scrollHeight - height - offsetBottom})
    }
  };
  var old = $.fn.affix;
  $.fn.affix = Plugin, $.fn.affix.Constructor = Affix, $.fn.affix.noConflict = function () {
    return $.fn.affix = old, this
  }, $(window).on("load", function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this), data = $spy.data();
      data.offset = data.offset || {}, null != data.offsetBottom && (data.offset.bottom = data.offsetBottom), null != data.offsetTop && (data.offset.top = data.offsetTop), Plugin.call($spy, data)
    })
  })
}(jQuery), function (f) {
  if ("object" == typeof exports && "undefined" != typeof module) module.exports = f(); else if ("function" == typeof define && define.amd) define([], f); else {
    var g;
    g = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, g.io = f()
  }
}(function () {
  var define;
  return function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = "function" == typeof require && require;
          if (!u && a) return a(o, !0);
          if (i) return i(o, !0);
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f
        }
        var l = n[o] = {exports: {}};
        t[o][0].call(l.exports, function (e) {
          var n = t[o][1][e];
          return s(n || e)
        }, l, l.exports, e, t, n, r)
      }
      return n[o].exports
    }

    for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
    return s
  }({
    1:  [function (_dereq_, module, exports) {
      module.exports = _dereq_("./lib/")
    }, {"./lib/": 2}],
    2:  [function (_dereq_, module, exports) {
      module.exports = _dereq_("./socket"), module.exports.parser = _dereq_("engine.io-parser")
    }, {"./socket": 3, "engine.io-parser": 19}],
    3:  [function (_dereq_, module, exports) {
      (function (global) {
        function Socket(uri, opts) {
          if (!(this instanceof Socket)) return new Socket(uri, opts);
          opts = opts || {}, uri && "object" == typeof uri && (opts = uri, uri = null), uri ? (uri = parseuri(uri), opts.hostname = uri.host, opts.secure = "https" == uri.protocol || "wss" == uri.protocol, opts.port = uri.port, uri.query && (opts.query = uri.query)) : opts.host && (opts.hostname = parseuri(opts.host).host), this.secure = null != opts.secure ? opts.secure : global.location && "https:" == location.protocol, opts.hostname && !opts.port && (opts.port = this.secure ? "443" : "80"), this.agent = opts.agent || !1, this.hostname = opts.hostname || (global.location ? location.hostname : "localhost"), this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80), this.query = opts.query || {}, "string" == typeof this.query && (this.query = parseqs.decode(this.query)), this.upgrade = !1 !== opts.upgrade, this.path = (opts.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!opts.forceJSONP, this.jsonp = !1 !== opts.jsonp, this.forceBase64 = !!opts.forceBase64, this.enablesXDR = !!opts.enablesXDR, this.timestampParam = opts.timestampParam || "t", this.timestampRequests = opts.timestampRequests, this.transports = opts.transports || ["polling", "websocket"], this.readyState = "", this.writeBuffer = [], this.policyPort = opts.policyPort || 843, this.rememberUpgrade = opts.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== opts.perMessageDeflate && (opts.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = opts.pfx || null, this.key = opts.key || null, this.passphrase = opts.passphrase || null, this.cert = opts.cert || null, this.ca = opts.ca || null, this.ciphers = opts.ciphers || null, this.rejectUnauthorized = void 0 === opts.rejectUnauthorized ? null : opts.rejectUnauthorized;
          var freeGlobal = "object" == typeof global && global;
          freeGlobal.global === freeGlobal && opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0 && (this.extraHeaders = opts.extraHeaders), this.open()
        }

        function clone(obj) {
          var o = {};
          for (var i in obj) obj.hasOwnProperty(i) && (o[i] = obj[i]);
          return o
        }

        var transports                                                                      = _dereq_("./transports"), Emitter                                   = _dereq_("component-emitter"),
            debug                                                                           = _dereq_("debug")("engine.io-client:socket"), index = _dereq_("indexof"),
            parser = _dereq_("engine.io-parser"), parseuri = _dereq_("parseuri"), parsejson = _dereq_("parsejson"),
            parseqs                                                                         = _dereq_("parseqs");
        module.exports = Socket, Socket.priorWebsocketSuccess = !1, Emitter(Socket.prototype), Socket.protocol = parser.protocol, Socket.Socket = Socket, Socket.Transport = _dereq_("./transport"), Socket.transports = _dereq_("./transports"), Socket.parser = _dereq_("engine.io-parser"), Socket.prototype.createTransport = function (name) {
          debug('creating transport "%s"', name);
          var query = clone(this.query);
          return query.EIO = parser.protocol, query.transport = name, this.id && (query.sid = this.id), new transports[name]({
            agent:              this.agent,
            hostname:           this.hostname,
            port:               this.port,
            secure:             this.secure,
            path:               this.path,
            query:              query,
            forceJSONP:         this.forceJSONP,
            jsonp:              this.jsonp,
            forceBase64:        this.forceBase64,
            enablesXDR:         this.enablesXDR,
            timestampRequests:  this.timestampRequests,
            timestampParam:     this.timestampParam,
            policyPort:         this.policyPort,
            socket:             this,
            pfx:                this.pfx,
            key:                this.key,
            passphrase:         this.passphrase,
            cert:               this.cert,
            ca:                 this.ca,
            ciphers:            this.ciphers,
            rejectUnauthorized: this.rejectUnauthorized,
            perMessageDeflate:  this.perMessageDeflate,
            extraHeaders:       this.extraHeaders
          })
        }, Socket.prototype.open = function () {
          var transport;
          if (this.rememberUpgrade && Socket.priorWebsocketSuccess && -1 != this.transports.indexOf("websocket")) transport = "websocket"; else {
            if (0 === this.transports.length) {
              var self = this;
              return void setTimeout(function () {
                self.emit("error", "No transports available")
              }, 0)
            }
            transport = this.transports[0]
          }
          this.readyState = "opening";
          try {
            transport = this.createTransport(transport)
          } catch (e) {
            return this.transports.shift(), void this.open()
          }
          transport.open(), this.setTransport(transport)
        }, Socket.prototype.setTransport = function (transport) {
          debug("setting transport %s", transport.name);
          var self = this;
          this.transport && (debug("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = transport, transport.on("drain", function () {
            self.onDrain()
          }).on("packet", function (packet) {
            self.onPacket(packet)
          }).on("error", function (e) {
            self.onError(e)
          }).on("close", function () {
            self.onClose("transport close")
          })
        }, Socket.prototype.probe = function (name) {
          function onTransportOpen() {
            if (self.onlyBinaryUpgrades) {
              var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
              failed                 = failed || upgradeLosesBinary
            }
            failed || (debug('probe transport "%s" opened', name), transport.send([{
              type: "ping",
              data: "probe"
            }]), transport.once("packet", function (msg) {
              if (!failed) if ("pong" == msg.type && "probe" == msg.data) {
                if (debug('probe transport "%s" pong', name), self.upgrading = !0, self.emit("upgrading", transport), !transport) return;
                Socket.priorWebsocketSuccess = "websocket" == transport.name, debug('pausing current transport "%s"', self.transport.name), self.transport.pause(function () {
                  failed || "closed" != self.readyState && (debug("changing transport and sending upgrade packet"), cleanup(), self.setTransport(transport), transport.send([{type: "upgrade"}]), self.emit("upgrade", transport), transport = null, self.upgrading = !1, self.flush())
                })
              } else {
                debug('probe transport "%s" failed', name);
                var err = new Error("probe error");
                err.transport = transport.name, self.emit("upgradeError", err)
              }
            }))
          }

          function freezeTransport() {
            failed || (failed = !0, cleanup(), transport.close(), transport = null)
          }

          function onerror(err) {
            var error = new Error("probe error: " + err);
            error.transport = transport.name, freezeTransport(), debug('probe transport "%s" failed because of error: %s', name, err), self.emit("upgradeError", error)
          }

          function onTransportClose() {
            onerror("transport closed")
          }

          function onclose() {
            onerror("socket closed")
          }

          function onupgrade(to) {
            transport && to.name != transport.name && (debug('"%s" works - aborting "%s"', to.name, transport.name), freezeTransport())
          }

          function cleanup() {
            transport.removeListener("open", onTransportOpen), transport.removeListener("error", onerror), transport.removeListener("close", onTransportClose), self.removeListener("close", onclose), self.removeListener("upgrading", onupgrade)
          }

          debug('probing transport "%s"', name);
          var transport = this.createTransport(name, {probe: 1}), failed = !1, self = this;
          Socket.priorWebsocketSuccess = !1, transport.once("open", onTransportOpen), transport.once("error", onerror), transport.once("close", onTransportClose), this.once("close", onclose), this.once("upgrading", onupgrade), transport.open()
        }, Socket.prototype.onOpen = function () {
          if (debug("socket open"), this.readyState = "open", Socket.priorWebsocketSuccess = "websocket" == this.transport.name, this.emit("open"), this.flush(), "open" == this.readyState && this.upgrade && this.transport.pause) {
            debug("starting upgrade probes");
            for (var i = 0, l = this.upgrades.length; i < l; i++) this.probe(this.upgrades[i])
          }
        }, Socket.prototype.onPacket = function (packet) {
          if ("opening" == this.readyState || "open" == this.readyState) switch (debug('socket receive: type "%s", data "%s"', packet.type, packet.data), this.emit("packet", packet), this.emit("heartbeat"), packet.type) {
            case"open":
              this.onHandshake(parsejson(packet.data));
              break;
            case"pong":
              this.setPing(), this.emit("pong");
              break;
            case"error":
              var err = new Error("server error");
              err.code = packet.data, this.onError(err);
              break;
            case"message":
              this.emit("data", packet.data), this.emit("message", packet.data)
          } else debug('packet received with socket readyState "%s"', this.readyState)
        }, Socket.prototype.onHandshake = function (data) {
          this.emit("handshake", data), this.id = data.sid, this.transport.query.sid = data.sid, this.upgrades = this.filterUpgrades(data.upgrades), this.pingInterval = data.pingInterval, this.pingTimeout = data.pingTimeout, this.onOpen(), "closed" != this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat))
        }, Socket.prototype.onHeartbeat = function (timeout) {
          clearTimeout(this.pingTimeoutTimer);
          var self              = this;
          self.pingTimeoutTimer = setTimeout(function () {
            "closed" != self.readyState && self.onClose("ping timeout")
          }, timeout || self.pingInterval + self.pingTimeout)
        }, Socket.prototype.setPing = function () {
          var self = this;
          clearTimeout(self.pingIntervalTimer), self.pingIntervalTimer = setTimeout(function () {
            debug("writing ping packet - expecting pong within %sms", self.pingTimeout), self.ping(), self.onHeartbeat(self.pingTimeout)
          }, self.pingInterval)
        }, Socket.prototype.ping = function () {
          var self = this;
          this.sendPacket("ping", function () {
            self.emit("ping")
          })
        }, Socket.prototype.onDrain = function () {
          this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush()
        },
          Socket.prototype.flush = function () {
            "closed" != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (debug("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"))
          }, Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {
          return this.sendPacket("message", msg, options, fn), this
        }, Socket.prototype.sendPacket = function (type, data, options, fn) {
          if ("function" == typeof data && (fn = data, data = void 0), "function" == typeof options && (fn = options, options = null), "closing" != this.readyState && "closed" != this.readyState) {
            options = options || {}, options.compress = !1 !== options.compress;
            var packet = {type: type, data: data, options: options};
            this.emit("packetCreate", packet), this.writeBuffer.push(packet), fn && this.once("flush", fn), this.flush()
          }
        }, Socket.prototype.close = function () {
          function close() {
            self.onClose("forced close"), debug("socket closing - telling transport to close"), self.transport.close()
          }

          function cleanupAndClose() {
            self.removeListener("upgrade", cleanupAndClose), self.removeListener("upgradeError", cleanupAndClose), close()
          }

          function waitForUpgrade() {
            self.once("upgrade", cleanupAndClose), self.once("upgradeError", cleanupAndClose)
          }

          if ("opening" == this.readyState || "open" == this.readyState) {
            this.readyState = "closing";
            var self        = this;
            this.writeBuffer.length ? this.once("drain", function () {
              this.upgrading ? waitForUpgrade() : close()
            }) : this.upgrading ? waitForUpgrade() : close()
          }
          return this
        }, Socket.prototype.onError = function (err) {
          debug("socket error %j", err), Socket.priorWebsocketSuccess = !1, this.emit("error", err), this.onClose("transport error", err)
        }, Socket.prototype.onClose = function (reason, desc) {
          if ("opening" == this.readyState || "open" == this.readyState || "closing" == this.readyState) {
            debug('socket close with reason: "%s"', reason);
            var self = this;
            clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", reason, desc), self.writeBuffer = [], self.prevBufferLen = 0
          }
        }, Socket.prototype.filterUpgrades = function (upgrades) {
          for (var filteredUpgrades = [], i = 0, j = upgrades.length; i < j; i++) ~index(this.transports, upgrades[i]) && filteredUpgrades.push(upgrades[i]);
          return filteredUpgrades
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {
      "./transport":       4,
      "./transports":      5,
      "component-emitter": 15,
      debug:               17,
      "engine.io-parser":  19,
      indexof:             23,
      parsejson:           26,
      parseqs:             27,
      parseuri:            28
    }],
    4:  [function (_dereq_, module, exports) {
      function Transport(opts) {
        this.path = opts.path, this.hostname = opts.hostname, this.port = opts.port, this.secure = opts.secure, this.query = opts.query, this.timestampParam = opts.timestampParam, this.timestampRequests = opts.timestampRequests, this.readyState = "", this.agent = opts.agent || !1, this.socket = opts.socket, this.enablesXDR = opts.enablesXDR, this.pfx = opts.pfx, this.key = opts.key, this.passphrase = opts.passphrase, this.cert = opts.cert, this.ca = opts.ca, this.ciphers = opts.ciphers, this.rejectUnauthorized = opts.rejectUnauthorized, this.extraHeaders = opts.extraHeaders
      }

      var parser = _dereq_("engine.io-parser"), Emitter = _dereq_("component-emitter");
      module.exports = Transport, Emitter(Transport.prototype), Transport.prototype.onError = function (msg, desc) {
        var err = new Error(msg);
        return err.type = "TransportError", err.description = desc, this.emit("error", err), this
      }, Transport.prototype.open = function () {
        return "closed" != this.readyState && "" != this.readyState || (this.readyState = "opening", this.doOpen()), this
      }, Transport.prototype.close = function () {
        return "opening" != this.readyState && "open" != this.readyState || (this.doClose(), this.onClose()), this
      }, Transport.prototype.send = function (packets) {
        if ("open" != this.readyState) throw new Error("Transport not open");
        this.write(packets)
      }, Transport.prototype.onOpen = function () {
        this.readyState = "open", this.writable = !0, this.emit("open")
      }, Transport.prototype.onData = function (data) {
        var packet = parser.decodePacket(data, this.socket.binaryType);
        this.onPacket(packet)
      }, Transport.prototype.onPacket = function (packet) {
        this.emit("packet", packet)
      }, Transport.prototype.onClose = function () {
        this.readyState = "closed", this.emit("close")
      }
    }, {"component-emitter": 15, "engine.io-parser": 19}],
    5:  [function (_dereq_, module, exports) {
      (function (global) {
        function polling(opts) {
          var xd = !1, xs = !1, jsonp = !1 !== opts.jsonp;
          if (global.location) {
            var isSSL = "https:" == location.protocol, port = location.port;
            port || (port = isSSL ? 443 : 80), xd = opts.hostname != location.hostname || port != opts.port, xs = opts.secure != isSSL
          }
          if (opts.xdomain = xd, opts.xscheme = xs, "open" in new XMLHttpRequest(opts) && !opts.forceJSONP) return new XHR(opts);
          if (!jsonp) throw new Error("JSONP disabled");
          return new JSONP(opts)
        }

        var XMLHttpRequest = _dereq_("xmlhttprequest-ssl"), XHR = _dereq_("./polling-xhr"),
            JSONP                                               = _dereq_("./polling-jsonp"), websocket       = _dereq_("./websocket");
        exports.polling = polling, exports.websocket = websocket
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {"./polling-jsonp": 6, "./polling-xhr": 7, "./websocket": 9, "xmlhttprequest-ssl": 10}],
    6:  [function (_dereq_, module, exports) {
      (function (global) {
        function empty() {
        }

        function JSONPPolling(opts) {
          Polling.call(this, opts), this.query = this.query || {}, callbacks || (global.___eio || (global.___eio = []), callbacks = global.___eio), this.index = callbacks.length;
          var self = this;
          callbacks.push(function (msg) {
            self.onData(msg)
          }), this.query.j = this.index, global.document && global.addEventListener && global.addEventListener("beforeunload", function () {
            self.script && (self.script.onerror = empty)
          }, !1)
        }

        var Polling             = _dereq_("./polling"), inherit = _dereq_("component-inherit");
        module.exports          = JSONPPolling;
        var callbacks, rNewline = /\n/g, rEscapedNewline = /\\n/g;
        inherit(JSONPPolling, Polling), JSONPPolling.prototype.supportsBinary = !1, JSONPPolling.prototype.doClose = function () {
          this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), Polling.prototype.doClose.call(this)
        }, JSONPPolling.prototype.doPoll = function () {
          var self = this, script = document.createElement("script");
          this.script && (this.script.parentNode.removeChild(this.script), this.script = null), script.async = !0, script.src = this.uri(), script.onerror = function (e) {
            self.onError("jsonp poll error", e)
          };
          var insertAt = document.getElementsByTagName("script")[0];
          insertAt ? insertAt.parentNode.insertBefore(script, insertAt) : (document.head || document.body).appendChild(script), this.script = script, "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent) && setTimeout(function () {
            var iframe = document.createElement("iframe");
            document.body.appendChild(iframe), document.body.removeChild(iframe)
          }, 100)
        }, JSONPPolling.prototype.doWrite = function (data, fn) {
          function complete() {
            initIframe(), fn()
          }

          function initIframe() {
            if (self.iframe) try {
              self.form.removeChild(self.iframe)
            } catch (e) {
              self.onError("jsonp polling iframe removal error", e)
            }
            try {
              var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
              iframe   = document.createElement(html)
            } catch (e) {
              iframe = document.createElement("iframe"), iframe.name = self.iframeId, iframe.src = "javascript:0"
            }
            iframe.id = self.iframeId, self.form.appendChild(iframe), self.iframe = iframe
          }

          var self = this;
          if (!this.form) {
            var iframe, form = document.createElement("form"), area = document.createElement("textarea"),
                id                                                  = this.iframeId = "eio_iframe_" + this.index;
            form.className = "socketio", form.style.position = "absolute", form.style.top = "-1000px", form.style.left = "-1000px", form.target = id, form.method = "POST", form.setAttribute("accept-charset", "utf-8"), area.name = "d", form.appendChild(area), document.body.appendChild(form), this.form = form, this.area = area
          }
          this.form.action = this.uri(), initIframe(), data = data.replace(rEscapedNewline, "\\\n"), this.area.value = data.replace(rNewline, "\\n");
          try {
            this.form.submit()
          } catch (e) {
          }
          this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
            "complete" == self.iframe.readyState && complete()
          } : this.iframe.onload = complete
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {"./polling": 8, "component-inherit": 16}],
    7:  [function (_dereq_, module, exports) {
      (function (global) {
        function empty() {
        }

        function XHR(opts) {
          if (Polling.call(this, opts), global.location) {
            var isSSL = "https:" == location.protocol, port = location.port;
            port || (port = isSSL ? 443 : 80), this.xd = opts.hostname != global.location.hostname || port != opts.port, this.xs = opts.secure != isSSL
          } else this.extraHeaders = opts.extraHeaders
        }

        function Request(opts) {
          this.method = opts.method || "GET", this.uri = opts.uri, this.xd = !!opts.xd, this.xs = !!opts.xs, this.async = !1 !== opts.async, this.data = void 0 != opts.data ? opts.data : null, this.agent = opts.agent, this.isBinary = opts.isBinary, this.supportsBinary = opts.supportsBinary, this.enablesXDR = opts.enablesXDR, this.pfx = opts.pfx, this.key = opts.key, this.passphrase = opts.passphrase, this.cert = opts.cert, this.ca = opts.ca, this.ciphers = opts.ciphers, this.rejectUnauthorized = opts.rejectUnauthorized, this.extraHeaders = opts.extraHeaders, this.create()
        }

        function unloadHandler() {
          for (var i in Request.requests) Request.requests.hasOwnProperty(i) && Request.requests[i].abort()
        }

        var XMLHttpRequest = _dereq_("xmlhttprequest-ssl"), Polling = _dereq_("./polling"),
            Emitter                                                 = _dereq_("component-emitter"), inherit         = _dereq_("component-inherit"),
            debug                                                   = _dereq_("debug")("engine.io-client:polling-xhr");
        module.exports = XHR, module.exports.Request = Request, inherit(XHR, Polling), XHR.prototype.supportsBinary = !0, XHR.prototype.request = function (opts) {
          return opts = opts || {}, opts.uri = this.uri(), opts.xd = this.xd, opts.xs = this.xs, opts.agent = this.agent || !1, opts.supportsBinary = this.supportsBinary, opts.enablesXDR = this.enablesXDR, opts.pfx = this.pfx, opts.key = this.key, opts.passphrase = this.passphrase, opts.cert = this.cert, opts.ca = this.ca, opts.ciphers = this.ciphers, opts.rejectUnauthorized = this.rejectUnauthorized, opts.extraHeaders = this.extraHeaders, new Request(opts)
        }, XHR.prototype.doWrite = function (data, fn) {
          var isBinary                                                                   = "string" != typeof data && void 0 !== data,
              req = this.request({method: "POST", data: data, isBinary: isBinary}), self = this;
          req.on("success", fn), req.on("error", function (err) {
            self.onError("xhr post error", err)
          }), this.sendXhr = req
        }, XHR.prototype.doPoll = function () {
          debug("xhr poll");
          var req = this.request(), self = this;
          req.on("data", function (data) {
            self.onData(data)
          }), req.on("error", function (err) {
            self.onError("xhr poll error", err)
          }), this.pollXhr = req
        }, Emitter(Request.prototype), Request.prototype.create = function () {
          var opts = {agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR};
          opts.pfx = this.pfx, opts.key = this.key, opts.passphrase = this.passphrase, opts.cert = this.cert, opts.ca = this.ca, opts.ciphers = this.ciphers, opts.rejectUnauthorized = this.rejectUnauthorized;
          var xhr = this.xhr = new XMLHttpRequest(opts), self = this;
          try {
            debug("xhr open %s: %s", this.method, this.uri), xhr.open(this.method, this.uri, this.async);
            try {
              if (this.extraHeaders) {
                xhr.setDisableHeaderCheck(!0);
                for (var i in this.extraHeaders) this.extraHeaders.hasOwnProperty(i) && xhr.setRequestHeader(i, this.extraHeaders[i])
              }
            } catch (e) {
            }
            if (this.supportsBinary && (xhr.responseType = "arraybuffer"), "POST" == this.method) try {
              this.isBinary ? xhr.setRequestHeader("Content-type", "application/octet-stream") : xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8")
            } catch (e) {
            }
            "withCredentials" in xhr && (xhr.withCredentials = !0), this.hasXDR() ? (xhr.onload = function () {
              self.onLoad()
            }, xhr.onerror = function () {
              self.onError(xhr.responseText)
            }) : xhr.onreadystatechange = function () {
              4 == xhr.readyState && (200 == xhr.status || 1223 == xhr.status ? self.onLoad() : setTimeout(function () {
                self.onError(xhr.status)
              }, 0))
            }, debug("xhr data %s", this.data), xhr.send(this.data)
          } catch (e) {
            return void setTimeout(function () {
              self.onError(e)
            }, 0)
          }
          global.document && (this.index = Request.requestsCount++, Request.requests[this.index] = this)
        }, Request.prototype.onSuccess = function () {
          this.emit("success"), this.cleanup()
        }, Request.prototype.onData = function (data) {
          this.emit("data", data), this.onSuccess()
        }, Request.prototype.onError = function (err) {
          this.emit("error", err), this.cleanup(!0)
        }, Request.prototype.cleanup = function (fromError) {
          if (void 0 !== this.xhr && null !== this.xhr) {
            if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = empty : this.xhr.onreadystatechange = empty, fromError) try {
              this.xhr.abort()
            } catch (e) {
            }
            global.document && delete Request.requests[this.index], this.xhr = null
          }
        }, Request.prototype.onLoad = function () {
          var data;
          try {
            var contentType;
            try {
              contentType = this.xhr.getResponseHeader("Content-Type").split(";")[0]
            } catch (e) {
            }
            if ("application/octet-stream" === contentType) data = this.xhr.response; else if (this.supportsBinary) try {
              data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response))
            } catch (e) {
              for (var ui8Arr = new Uint8Array(this.xhr.response), dataArray = [], idx = 0, length = ui8Arr.length; idx < length; idx++) dataArray.push(ui8Arr[idx]);
              data = String.fromCharCode.apply(null, dataArray)
            } else data = this.xhr.responseText
          } catch (e) {
            this.onError(e)
          }
          null != data && this.onData(data)
        }, Request.prototype.hasXDR = function () {
          return void 0 !== global.XDomainRequest && !this.xs && this.enablesXDR
        }, Request.prototype.abort = function () {
          this.cleanup()
        }, global.document && (Request.requestsCount = 0, Request.requests = {}, global.attachEvent ? global.attachEvent("onunload", unloadHandler) : global.addEventListener && global.addEventListener("beforeunload", unloadHandler, !1))
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {"./polling": 8, "component-emitter": 15, "component-inherit": 16, debug: 17, "xmlhttprequest-ssl": 10}],
    8:  [function (_dereq_, module, exports) {
      function Polling(opts) {
        var forceBase64 = opts && opts.forceBase64;
        hasXHR2 && !forceBase64 || (this.supportsBinary = !1), Transport.call(this, opts)
      }

      var Transport = _dereq_("../transport"), parseqs = _dereq_("parseqs"), parser = _dereq_("engine.io-parser"),
          inherit                                                                   = _dereq_("component-inherit"), yeast                             = _dereq_("yeast"),
          debug                                                                     = _dereq_("debug")("engine.io-client:polling");
      module.exports                                                                = Polling;
      var hasXHR2                                                                   = function () {
        return null != new (_dereq_("xmlhttprequest-ssl"))({xdomain: !1}).responseType
      }();
      inherit(Polling, Transport), Polling.prototype.name = "polling", Polling.prototype.doOpen = function () {
        this.poll()
      }, Polling.prototype.pause = function (onPause) {
        function pause() {
          debug("paused"), self.readyState = "paused", onPause()
        }

        var self = this;
        if (this.readyState = "pausing", this.polling || !this.writable) {
          var total = 0;
          this.polling && (debug("we are currently polling - waiting to pause"), total++, this.once("pollComplete", function () {
            debug("pre-pause polling complete"), --total || pause()
          })), this.writable || (debug("we are currently writing - waiting to pause"), total++, this.once("drain", function () {
            debug("pre-pause writing complete"), --total || pause()
          }))
        } else pause()
      }, Polling.prototype.poll = function () {
        debug("polling"), this.polling = !0, this.doPoll(), this.emit("poll")
      }, Polling.prototype.onData = function (data) {
        var self = this;
        debug("polling got data %s", data);
        var callback = function (packet, index, total) {
          if ("opening" == self.readyState && self.onOpen(), "close" == packet.type) return self.onClose(), !1;
          self.onPacket(packet)
        };
        parser.decodePayload(data, this.socket.binaryType, callback), "closed" != this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" == this.readyState ? this.poll() : debug('ignoring poll - transport state "%s"', this.readyState))
      }, Polling.prototype.doClose = function () {
        function close() {
          debug("writing close packet"), self.write([{type: "close"}])
        }

        var self = this;
        "open" == this.readyState ? (debug("transport open - closing"), close()) : (debug("transport not open - deferring close"), this.once("open", close))
      }, Polling.prototype.write = function (packets) {
        var self       = this;
        this.writable  = !1;
        var callbackfn = function () {
          self.writable = !0, self.emit("drain")
        }, self        = this;
        parser.encodePayload(packets, this.supportsBinary, function (data) {
          self.doWrite(data, callbackfn)
        })
      }, Polling.prototype.uri = function () {
        var query = this.query || {}, schema = this.secure ? "https" : "http", port = "";
        return !1 !== this.timestampRequests && (query[this.timestampParam] = yeast()), this.supportsBinary || query.sid || (query.b64 = 1), query = parseqs.encode(query), this.port && ("https" == schema && 443 != this.port || "http" == schema && 80 != this.port) && (port = ":" + this.port), query.length && (query = "?" + query), schema + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + port + this.path + query
      }
    }, {
      "../transport":       4,
      "component-inherit":  16,
      debug:                17,
      "engine.io-parser":   19,
      parseqs:              27,
      "xmlhttprequest-ssl": 10,
      yeast:                30
    }],
    9:  [function (_dereq_, module, exports) {
      (function (global) {
        function WS(opts) {
          opts && opts.forceBase64 && (this.supportsBinary = !1), this.perMessageDeflate = opts.perMessageDeflate, Transport.call(this, opts)
        }

        var Transport                                                                   = _dereq_("../transport"), parser                                 = _dereq_("engine.io-parser"),
            parseqs = _dereq_("parseqs"), inherit = _dereq_("component-inherit"), yeast = _dereq_("yeast"),
            debug                                                                       = _dereq_("debug")("engine.io-client:websocket"),
            BrowserWebSocket                                                            = global.WebSocket || global.MozWebSocket, WebSocket = BrowserWebSocket;
        if (!WebSocket && "undefined" == typeof window) try {
          WebSocket = _dereq_("ws")
        } catch (e) {
        }
        module.exports = WS, inherit(WS, Transport), WS.prototype.name = "websocket", WS.prototype.supportsBinary = !0, WS.prototype.doOpen = function () {
          if (this.check()) {
            var uri = this.uri(), opts = {agent: this.agent, perMessageDeflate: this.perMessageDeflate};
            opts.pfx = this.pfx, opts.key = this.key, opts.passphrase = this.passphrase, opts.cert = this.cert, opts.ca = this.ca, opts.ciphers = this.ciphers, opts.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (opts.headers = this.extraHeaders), this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, void 0, opts), void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "buffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners()
          }
        }, WS.prototype.addEventListeners = function () {
          var self = this;
          this.ws.onopen = function () {
            self.onOpen()
          }, this.ws.onclose = function () {
            self.onClose()
          }, this.ws.onmessage = function (ev) {
            self.onData(ev.data)
          }, this.ws.onerror = function (e) {
            self.onError("websocket error", e)
          }
        }, "undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent) && (WS.prototype.onData = function (data) {
          var self = this;
          setTimeout(function () {
            Transport.prototype.onData.call(self, data)
          }, 0)
        }), WS.prototype.write = function (packets) {
          function done() {
            self.emit("flush"), setTimeout(function () {
              self.writable = !0, self.emit("drain")
            }, 0)
          }

          var self      = this;
          this.writable = !1;
          for (var total = packets.length, i = 0, l = total; i < l; i++) !function (packet) {
            parser.encodePacket(packet, self.supportsBinary, function (data) {
              if (!BrowserWebSocket) {
                var opts = {};
                if (packet.options && (opts.compress = packet.options.compress), self.perMessageDeflate) {
                  ("string" == typeof data ? global.Buffer.byteLength(data) : data.length) < self.perMessageDeflate.threshold && (opts.compress = !1)
                }
              }
              try {
                BrowserWebSocket ? self.ws.send(data) : self.ws.send(data, opts)
              } catch (e) {
                debug("websocket closed before onclose event")
              }
              --total || done()
            })
          }(packets[i])
        }, WS.prototype.onClose = function () {
          Transport.prototype.onClose.call(this)
        }, WS.prototype.doClose = function () {
          void 0 !== this.ws && this.ws.close()
        }, WS.prototype.uri = function () {
          var query = this.query || {}, schema = this.secure ? "wss" : "ws", port = "";
          return this.port && ("wss" == schema && 443 != this.port || "ws" == schema && 80 != this.port) && (port = ":" + this.port), this.timestampRequests && (query[this.timestampParam] = yeast()), this.supportsBinary || (query.b64 = 1), query = parseqs.encode(query), query.length && (query = "?" + query), schema + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + port + this.path + query
        }, WS.prototype.check = function () {
          return !(!WebSocket || "__initialize" in WebSocket && this.name === WS.prototype.name)
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {
      "../transport":      4,
      "component-inherit": 16,
      debug:               17,
      "engine.io-parser":  19,
      parseqs:             27,
      ws:                  void 0,
      yeast:               30
    }],
    10: [function (_dereq_, module, exports) {
      var hasCORS    = _dereq_("has-cors");
      module.exports = function (opts) {
        var xdomain = opts.xdomain, xscheme = opts.xscheme, enablesXDR = opts.enablesXDR;
        try {
          if ("undefined" != typeof XMLHttpRequest && (!xdomain || hasCORS)) return new XMLHttpRequest
        } catch (e) {
        }
        try {
          if ("undefined" != typeof XDomainRequest && !xscheme && enablesXDR) return new XDomainRequest
        } catch (e) {
        }
        if (!xdomain) try {
          return new ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {
        }
      }
    }, {"has-cors": 22}],
    11: [function (_dereq_, module, exports) {
      function after(count, callback, err_cb) {
        function proxy(err, result) {
          if (proxy.count <= 0) throw new Error("after called too many times");
          --proxy.count, err ? (bail = !0, callback(err), callback = err_cb) : 0 !== proxy.count || bail || callback(null, result)
        }

        var bail = !1;
        return err_cb = err_cb || noop, proxy.count = count, 0 === count ? callback() : proxy
      }

      function noop() {
      }

      module.exports = after
    }, {}],
    12: [function (_dereq_, module, exports) {
      module.exports = function (arraybuffer, start, end) {
        var bytes = arraybuffer.byteLength;
        if (start = start || 0, end = end || bytes, arraybuffer.slice) return arraybuffer.slice(start, end);
        if (start < 0 && (start += bytes), end < 0 && (end += bytes), end > bytes && (end = bytes), start >= bytes || start >= end || 0 === bytes) return new ArrayBuffer(0);
        for (var abv = new Uint8Array(arraybuffer), result = new Uint8Array(end - start), i = start, ii = 0; i < end; i++, ii++) result[ii] = abv[i];
        return result.buffer
      }
    }, {}],
    13: [function (_dereq_, module, exports) {
      !function (chars) {
        "use strict";
        exports.encode = function (arraybuffer) {
          var i, bytes = new Uint8Array(arraybuffer), len = bytes.length, base64 = "";
          for (i = 0; i < len; i += 3) base64 += chars[bytes[i] >> 2], base64 += chars[(3 & bytes[i]) << 4 | bytes[i + 1] >> 4], base64 += chars[(15 & bytes[i + 1]) << 2 | bytes[i + 2] >> 6], base64 += chars[63 & bytes[i + 2]];
          return len % 3 == 2 ? base64 = base64.substring(0, base64.length - 1) + "=" : len % 3 == 1 && (base64 = base64.substring(0, base64.length - 2) + "=="), base64
        }, exports.decode = function (base64) {
          var i, encoded1, encoded2, encoded3, encoded4, bufferLength = .75 * base64.length, len = base64.length, p = 0;
          "=" === base64[base64.length - 1] && (bufferLength--, "=" === base64[base64.length - 2] && bufferLength--);
          var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);
          for (i = 0; i < len; i += 4) encoded1 = chars.indexOf(base64[i]), encoded2 = chars.indexOf(base64[i + 1]), encoded3 = chars.indexOf(base64[i + 2]), encoded4 = chars.indexOf(base64[i + 3]), bytes[p++] = encoded1 << 2 | encoded2 >> 4, bytes[p++] = (15 & encoded2) << 4 | encoded3 >> 2, bytes[p++] = (3 & encoded3) << 6 | 63 & encoded4;
          return arraybuffer
        }
      }("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")
    }, {}],
    14: [function (_dereq_, module, exports) {
      (function (global) {
        function mapArrayBufferViews(ary) {
          for (var i = 0; i < ary.length; i++) {
            var chunk = ary[i];
            if (chunk.buffer instanceof ArrayBuffer) {
              var buf = chunk.buffer;
              if (chunk.byteLength !== buf.byteLength) {
                var copy = new Uint8Array(chunk.byteLength);
                copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength)), buf = copy.buffer
              }
              ary[i] = buf
            }
          }
        }

        function BlobBuilderConstructor(ary, options) {
          options = options || {};
          var bb  = new BlobBuilder;
          mapArrayBufferViews(ary);
          for (var i = 0; i < ary.length; i++) bb.append(ary[i]);
          return options.type ? bb.getBlob(options.type) : bb.getBlob()
        }

        function BlobConstructor(ary, options) {
          return mapArrayBufferViews(ary), new Blob(ary, options || {})
        }

        var BlobBuilder                      = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder,
            blobSupported                    = function () {
              try {
                return 2 === new Blob(["hi"]).size
              } catch (e) {
                return !1
              }
            }(), blobSupportsArrayBufferView = blobSupported && function () {
              try {
                return 2 === new Blob([new Uint8Array([1, 2])]).size
              } catch (e) {
                return !1
              }
            }(),
            blobBuilderSupported             = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;
        module.exports                       = function () {
          return blobSupported ? blobSupportsArrayBufferView ? global.Blob : BlobConstructor : blobBuilderSupported ? BlobBuilderConstructor : void 0
        }()
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {}],
    15: [function (_dereq_, module, exports) {
      function Emitter(obj) {
        if (obj) return mixin(obj)
      }

      function mixin(obj) {
        for (var key in Emitter.prototype) obj[key] = Emitter.prototype[key];
        return obj
      }

      module.exports = Emitter, Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
        return this._callbacks = this._callbacks || {}, (this._callbacks[event] = this._callbacks[event] || []).push(fn), this
      }, Emitter.prototype.once = function (event, fn) {
        function on() {
          self.off(event, on), fn.apply(this, arguments)
        }

        var self = this;
        return this._callbacks = this._callbacks || {}, on.fn = fn, this.on(event, on), this
      }, Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
        if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
        var callbacks = this._callbacks[event];
        if (!callbacks) return this;
        if (1 == arguments.length) return delete this._callbacks[event], this;
        for (var cb, i = 0; i < callbacks.length; i++) if ((cb = callbacks[i]) === fn || cb.fn === fn) {
          callbacks.splice(i, 1);
          break
        }
        return this
      }, Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args        = [].slice.call(arguments, 1), callbacks = this._callbacks[event];
        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) callbacks[i].apply(this, args)
        }
        return this
      }, Emitter.prototype.listeners = function (event) {
        return this._callbacks = this._callbacks || {}, this._callbacks[event] || []
      }, Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length
      }
    }, {}],
    16: [function (_dereq_, module, exports) {
      module.exports = function (a, b) {
        var fn = function () {
        };
        fn.prototype = b.prototype, a.prototype = new fn, a.prototype.constructor = a
      }
    }, {}],
    17: [function (_dereq_, module, exports) {
      function useColors() {
        return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31
      }

      function formatArgs() {
        var args = arguments, useColors = this.useColors;
        if (args[0] = (useColors ? "%c" : "") + this.namespace + (useColors ? " %c" : " ") + args[0] + (useColors ? "%c " : " ") + "+" + exports.humanize(this.diff), !useColors) return args;
        var c     = "color: " + this.color;
        args      = [args[0], c, "color: inherit"].concat(Array.prototype.slice.call(args, 1));
        var index = 0, lastC = 0;
        return args[0].replace(/%[a-z%]/g, function (match) {
          "%%" !== match && (index++, "%c" === match && (lastC = index))
        }), args.splice(lastC, 0, c), args
      }

      function log() {
        return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
      }

      function save(namespaces) {
        try {
          null == namespaces ? exports.storage.removeItem("debug") : exports.storage.debug = namespaces
        } catch (e) {
        }
      }

      function load() {
        var r;
        try {
          r = exports.storage.debug
        } catch (e) {
        }
        return r
      }

      exports = module.exports = _dereq_("./debug"), exports.log = log, exports.formatArgs = formatArgs, exports.save = save, exports.load = load, exports.useColors = useColors, exports.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : function () {
        try {
          return window.localStorage
        } catch (e) {
        }
      }(), exports.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], exports.formatters.j = function (v) {
        return JSON.stringify(v)
      }, exports.enable(load())
    }, {"./debug": 18}],
    18: [function (_dereq_, module, exports) {
      function selectColor() {
        return exports.colors[prevColor++ % exports.colors.length]
      }

      function debug(namespace) {
        function disabled() {
        }

        function enabled() {
          var self = enabled, curr = +new Date, ms = curr - (prevTime || curr);
          self.diff = ms, self.prev = prevTime, self.curr = curr, prevTime = curr, null == self.useColors && (self.useColors = exports.useColors()), null == self.color && self.useColors && (self.color = selectColor());
          var args = Array.prototype.slice.call(arguments);
          args[0] = exports.coerce(args[0]), "string" != typeof args[0] && (args = ["%o"].concat(args));
          var index = 0;
          args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
            if ("%%" === match) return match;
            index++;
            var formatter = exports.formatters[format];
            if ("function" == typeof formatter) {
              var val = args[index];
              match = formatter.call(self, val), args.splice(index, 1), index--
            }
            return match
          }), "function" == typeof exports.formatArgs && (args = exports.formatArgs.apply(self, args)), (enabled.log || exports.log || console.log.bind(console)).apply(self, args)
        }

        disabled.enabled = !1, enabled.enabled = !0;
        var fn = exports.enabled(namespace) ? enabled : disabled;
        return fn.namespace = namespace, fn
      }

      function enable(namespaces) {
        exports.save(namespaces);
        for (var split = (namespaces || "").split(/[\s,]+/), len = split.length, i = 0; i < len; i++) split[i] && (namespaces = split[i].replace(/\*/g, ".*?"), "-" === namespaces[0] ? exports.skips.push(new RegExp("^" + namespaces.substr(1) + "$")) : exports.names.push(new RegExp("^" + namespaces + "$")))
      }

      function disable() {
        exports.enable("")
      }

      function enabled(name) {
        var i, len;
        for (i = 0, len = exports.skips.length; i < len; i++) if (exports.skips[i].test(name)) return !1;
        for (i = 0, len = exports.names.length; i < len; i++) if (exports.names[i].test(name)) return !0;
        return !1
      }

      function coerce(val) {
        return val instanceof Error ? val.stack || val.message : val
      }

      exports = module.exports = debug, exports.coerce = coerce, exports.disable = disable, exports.enable = enable, exports.enabled = enabled, exports.humanize = _dereq_("ms"), exports.names = [], exports.skips = [], exports.formatters = {};
      var prevTime, prevColor = 0
    }, {ms: 25}],
    19: [function (_dereq_, module, exports) {
      (function (global) {
        function encodeBase64Object(packet, callback) {
          return callback("b" + exports.packets[packet.type] + packet.data.data)
        }

        function encodeArrayBuffer(packet, supportsBinary, callback) {
          if (!supportsBinary) return exports.encodeBase64Packet(packet, callback);
          var data = packet.data, contentArray = new Uint8Array(data),
              resultBuffer                     = new Uint8Array(1 + data.byteLength);
          resultBuffer[0]                      = packets[packet.type];
          for (var i = 0; i < contentArray.length; i++) resultBuffer[i + 1] = contentArray[i];
          return callback(resultBuffer.buffer)
        }

        function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
          if (!supportsBinary) return exports.encodeBase64Packet(packet, callback);
          var fr = new FileReader;
          return fr.onload = function () {
            packet.data = fr.result, exports.encodePacket(packet, supportsBinary, !0, callback)
          }, fr.readAsArrayBuffer(packet.data)
        }

        function encodeBlob(packet, supportsBinary, callback) {
          if (!supportsBinary) return exports.encodeBase64Packet(packet, callback);
          if (dontSendBlobs) return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
          var length = new Uint8Array(1);
          return length[0] = packets[packet.type], callback(new Blob([length.buffer, packet.data]))
        }

        function map(ary, each, done) {
          for (var result = new Array(ary.length), next = after(ary.length, done), i = 0; i < ary.length; i++) !function (i, el, cb) {
            each(el, function (error, msg) {
              result[i] = msg, cb(error, result)
            })
          }(i, ary[i], next)
        }

        var keys                                                                = _dereq_("./keys"), hasBinary = _dereq_("has-binary"),
            sliceBuffer                                                         = _dereq_("arraybuffer.slice"), base64encoder = _dereq_("base64-arraybuffer"),
            after                                                               = _dereq_("after"), utf8 = _dereq_("utf8"), isAndroid = navigator.userAgent.match(/Android/i),
            isPhantomJS = /PhantomJS/i.test(navigator.userAgent), dontSendBlobs = isAndroid || isPhantomJS;
        exports.protocol                                                        = 3;
        var packets                                                             = exports.packets = {open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6},
            packetslist = keys(packets), err = {type: "error", data: "parser error"}, Blob = _dereq_("blob");
        exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
          "function" == typeof supportsBinary && (callback = supportsBinary, supportsBinary = !1), "function" == typeof utf8encode && (callback = utf8encode, utf8encode = null);
          var data = void 0 === packet.data ? void 0 : packet.data.buffer || packet.data;
          if (global.ArrayBuffer && data instanceof ArrayBuffer) return encodeArrayBuffer(packet, supportsBinary, callback);
          if (Blob && data instanceof global.Blob) return encodeBlob(packet, supportsBinary, callback);
          if (data && data.base64) return encodeBase64Object(packet, callback);
          var encoded = packets[packet.type];
          return void 0 !== packet.data && (encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data)), callback("" + encoded)
        }, exports.encodeBase64Packet = function (packet, callback) {
          var message = "b" + exports.packets[packet.type];
          if (Blob && packet.data instanceof global.Blob) {
            var fr = new FileReader;
            return fr.onload = function () {
              var b64 = fr.result.split(",")[1];
              callback(message + b64)
            }, fr.readAsDataURL(packet.data)
          }
          var b64data;
          try {
            b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data))
          } catch (e) {
            for (var typed = new Uint8Array(packet.data), basic = new Array(typed.length), i = 0; i < typed.length; i++) basic[i] = typed[i];
            b64data = String.fromCharCode.apply(null, basic)
          }
          return message += global.btoa(b64data), callback(message)
        },
          exports.decodePacket = function (data, binaryType, utf8decode) {
            if ("string" == typeof data || void 0 === data) {
              if ("b" == data.charAt(0)) return exports.decodeBase64Packet(data.substr(1), binaryType);
              if (utf8decode) try {
                data = utf8.decode(data)
              } catch (e) {
                return err
              }
              var type = data.charAt(0);
              return Number(type) == type && packetslist[type] ? data.length > 1 ? {
                type: packetslist[type],
                data: data.substring(1)
              } : {type: packetslist[type]} : err
            }
            var asArray = new Uint8Array(data), type = asArray[0], rest = sliceBuffer(data, 1);
            return Blob && "blob" === binaryType && (rest = new Blob([rest])), {type: packetslist[type], data: rest}
          }, exports.decodeBase64Packet = function (msg, binaryType) {
          var type = packetslist[msg.charAt(0)];
          if (!global.ArrayBuffer) return {type: type, data: {base64: !0, data: msg.substr(1)}};
          var data = base64encoder.decode(msg.substr(1));
          return "blob" === binaryType && Blob && (data = new Blob([data])), {type: type, data: data}
        }, exports.encodePayload = function (packets, supportsBinary, callback) {
          function setLengthHeader(message) {
            return message.length + ":" + message
          }

          function encodeOne(packet, doneCallback) {
            exports.encodePacket(packet, !!isBinary && supportsBinary, !0, function (message) {
              doneCallback(null, setLengthHeader(message))
            })
          }

          "function" == typeof supportsBinary && (callback = supportsBinary, supportsBinary = null);
          var isBinary = hasBinary(packets);
          return supportsBinary && isBinary ? Blob && !dontSendBlobs ? exports.encodePayloadAsBlob(packets, callback) : exports.encodePayloadAsArrayBuffer(packets, callback) : packets.length ? void map(packets, encodeOne, function (err, results) {
            return callback(results.join(""))
          }) : callback("0:")
        }, exports.decodePayload = function (data, binaryType, callback) {
          if ("string" != typeof data) return exports.decodePayloadAsBinary(data, binaryType, callback);
          "function" == typeof binaryType && (callback = binaryType, binaryType = null);
          var packet;
          if ("" == data) return callback(err, 0, 1);
          for (var n, msg, length = "", i = 0, l = data.length; i < l; i++) {
            var chr = data.charAt(i);
            if (":" != chr) length += chr; else {
              if ("" == length || length != (n = Number(length))) return callback(err, 0, 1);
              if (msg = data.substr(i + 1, n), length != msg.length) return callback(err, 0, 1);
              if (msg.length) {
                if (packet = exports.decodePacket(msg, binaryType, !0), err.type == packet.type && err.data == packet.data) return callback(err, 0, 1);
                if (!1 === callback(packet, i + n, l)) return
              }
              i += n, length = ""
            }
          }
          return "" != length ? callback(err, 0, 1) : void 0
        }, exports.encodePayloadAsArrayBuffer = function (packets, callback) {
          function encodeOne(packet, doneCallback) {
            exports.encodePacket(packet, !0, !0, function (data) {
              return doneCallback(null, data)
            })
          }

          if (!packets.length) return callback(new ArrayBuffer(0));
          map(packets, encodeOne, function (err, encodedPackets) {
            var totalLength    = encodedPackets.reduce(function (acc, p) {
              var len;
              return len = "string" == typeof p ? p.length : p.byteLength, acc + len.toString().length + len + 2
            }, 0), resultArray = new Uint8Array(totalLength), bufferIndex = 0;
            return encodedPackets.forEach(function (p) {
              var isString = "string" == typeof p, ab = p;
              if (isString) {
                for (var view = new Uint8Array(p.length), i = 0; i < p.length; i++) view[i] = p.charCodeAt(i);
                ab = view.buffer
              }
              resultArray[bufferIndex++] = isString ? 0 : 1;
              for (var lenStr = ab.byteLength.toString(), i = 0; i < lenStr.length; i++) resultArray[bufferIndex++] = parseInt(lenStr[i]);
              resultArray[bufferIndex++] = 255;
              for (var view = new Uint8Array(ab), i = 0; i < view.length; i++) resultArray[bufferIndex++] = view[i]
            }), callback(resultArray.buffer)
          })
        }, exports.encodePayloadAsBlob = function (packets, callback) {
          function encodeOne(packet, doneCallback) {
            exports.encodePacket(packet, !0, !0, function (encoded) {
              var binaryIdentifier = new Uint8Array(1);
              if (binaryIdentifier[0] = 1, "string" == typeof encoded) {
                for (var view = new Uint8Array(encoded.length), i = 0; i < encoded.length; i++) view[i] = encoded.charCodeAt(i);
                encoded = view.buffer, binaryIdentifier[0] = 0
              }
              for (var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size, lenStr = len.toString(), lengthAry = new Uint8Array(lenStr.length + 1), i = 0; i < lenStr.length; i++) lengthAry[i] = parseInt(lenStr[i]);
              if (lengthAry[lenStr.length] = 255, Blob) {
                var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
                doneCallback(null, blob)
              }
            })
          }

          map(packets, encodeOne, function (err, results) {
            return callback(new Blob(results))
          })
        }, exports.decodePayloadAsBinary = function (data, binaryType, callback) {
          "function" == typeof binaryType && (callback = binaryType, binaryType = null);
          for (var bufferTail = data, buffers = [], numberTooLong = !1; bufferTail.byteLength > 0;) {
            for (var tailArray = new Uint8Array(bufferTail), isString = 0 === tailArray[0], msgLength = "", i = 1; 255 != tailArray[i]; i++) {
              if (msgLength.length > 310) {
                numberTooLong = !0;
                break
              }
              msgLength += tailArray[i]
            }
            if (numberTooLong) return callback(err, 0, 1);
            bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length), msgLength = parseInt(msgLength);
            var msg = sliceBuffer(bufferTail, 0, msgLength);
            if (isString) try {
              msg = String.fromCharCode.apply(null, new Uint8Array(msg))
            } catch (e) {
              var typed = new Uint8Array(msg);
              msg       = "";
              for (var i = 0; i < typed.length; i++) msg += String.fromCharCode(typed[i])
            }
            buffers.push(msg), bufferTail = sliceBuffer(bufferTail, msgLength)
          }
          var total = buffers.length;
          buffers.forEach(function (buffer, i) {
            callback(exports.decodePacket(buffer, binaryType, !0), i, total)
          })
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {
      "./keys":             20,
      after:                11,
      "arraybuffer.slice":  12,
      "base64-arraybuffer": 13,
      blob:                 14,
      "has-binary":         21,
      utf8:                 29
    }],
    20: [function (_dereq_, module, exports) {
      module.exports = Object.keys || function (obj) {
        var arr = [], has = Object.prototype.hasOwnProperty;
        for (var i in obj) has.call(obj, i) && arr.push(i);
        return arr
      }
    }, {}],
    21: [function (_dereq_, module, exports) {
      (function (global) {
        function hasBinary(data) {
          function _hasBinary(obj) {
            if (!obj) return !1;
            if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) return !0;
            if (isArray(obj)) {
              for (var i = 0; i < obj.length; i++) if (_hasBinary(obj[i])) return !0
            } else if (obj && "object" == typeof obj) {
              obj.toJSON && (obj = obj.toJSON());
              for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) return !0
            }
            return !1
          }

          return _hasBinary(data)
        }

        var isArray    = _dereq_("isarray");
        module.exports = hasBinary
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {isarray: 24}],
    22: [function (_dereq_, module, exports) {
      try {
        module.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest
      } catch (err) {
        module.exports = !1
      }
    }, {}],
    23: [function (_dereq_, module, exports) {
      var indexOf    = [].indexOf;
      module.exports = function (arr, obj) {
        if (indexOf) return arr.indexOf(obj);
        for (var i = 0; i < arr.length; ++i) if (arr[i] === obj) return i;
        return -1
      }
    }, {}],
    24: [function (_dereq_, module, exports) {
      module.exports = Array.isArray || function (arr) {
        return "[object Array]" == Object.prototype.toString.call(arr)
      }
    }, {}],
    25: [function (_dereq_, module, exports) {
      function parse(str) {
        if (str = "" + str, !(str.length > 1e4)) {
          var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
          if (match) {
            var n = parseFloat(match[1]);
            switch ((match[2] || "ms").toLowerCase()) {
              case"years":
              case"year":
              case"yrs":
              case"yr":
              case"y":
                return n * y;
              case"days":
              case"day":
              case"d":
                return n * d;
              case"hours":
              case"hour":
              case"hrs":
              case"hr":
              case"h":
                return n * h;
              case"minutes":
              case"minute":
              case"mins":
              case"min":
              case"m":
                return n * m;
              case"seconds":
              case"second":
              case"secs":
              case"sec":
              case"s":
                return n * s;
              case"milliseconds":
              case"millisecond":
              case"msecs":
              case"msec":
              case"ms":
                return n
            }
          }
        }
      }

      function short(ms) {
        return ms >= d ? Math.round(ms / d) + "d" : ms >= h ? Math.round(ms / h) + "h" : ms >= m ? Math.round(ms / m) + "m" : ms >= s ? Math.round(ms / s) + "s" : ms + "ms"
      }

      function long(ms) {
        return plural(ms, d, "day") || plural(ms, h, "hour") || plural(ms, m, "minute") || plural(ms, s, "second") || ms + " ms"
      }

      function plural(ms, n, name) {
        if (!(ms < n)) return ms < 1.5 * n ? Math.floor(ms / n) + " " + name : Math.ceil(ms / n) + " " + name + "s"
      }

      var s          = 1e3, m = 60 * s, h = 60 * m, d = 24 * h, y = 365.25 * d;
      module.exports = function (val, options) {
        return options = options || {}, "string" == typeof val ? parse(val) : options.long ? long(val) : short(val)
      }
    }, {}],
    26: [function (_dereq_, module, exports) {
      (function (global) {
        var rvalidchars                                                           = /^[\],:{}\s]*$/, rvalidescape                           = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
            rvalidtokens                                                          = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
            rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g, rtrimLeft = /^\s+/, rtrimRight = /\s+$/;
        module.exports                                                            = function (data) {
          return "string" == typeof data && data ? (data = data.replace(rtrimLeft, "").replace(rtrimRight, ""), global.JSON && JSON.parse ? JSON.parse(data) : rvalidchars.test(data.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, "")) ? new Function("return " + data)() : void 0) : null
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {}],
    27: [function (_dereq_, module, exports) {
      exports.encode = function (obj) {
        var str = "";
        for (var i in obj) obj.hasOwnProperty(i) && (str.length && (str += "&"), str += encodeURIComponent(i) + "=" + encodeURIComponent(obj[i]));
        return str
      }, exports.decode = function (qs) {
        for (var qry = {}, pairs = qs.split("&"), i = 0, l = pairs.length; i < l; i++) {
          var pair                         = pairs[i].split("=");
          qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1])
        }
        return qry
      }
    }, {}],
    28: [function (_dereq_, module, exports) {
      var re         = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
          parts      = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
      module.exports = function (str) {
        var src = str, b = str.indexOf("["), e = str.indexOf("]");
        -1 != b && -1 != e && (str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ";") + str.substring(e, str.length));
        for (var m = re.exec(str || ""), uri = {}, i = 14; i--;) uri[parts[i]] = m[i] || "";
        return -1 != b && -1 != e && (uri.source = src, uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ":"), uri.authority = uri.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), uri.ipv6uri = !0), uri
      }
    }, {}],
    29: [function (_dereq_, module, exports) {
      (function (global) {
        !function (root) {
          function ucs2decode(string) {
            for (var value, extra, output = [], counter = 0, length = string.length; counter < length;) value = string.charCodeAt(counter++), value >= 55296 && value <= 56319 && counter < length ? (extra = string.charCodeAt(counter++), 56320 == (64512 & extra) ? output.push(((1023 & value) << 10) + (1023 & extra) + 65536) : (output.push(value), counter--)) : output.push(value);
            return output
          }

          function ucs2encode(array) {
            for (var value, length = array.length, index = -1, output = ""; ++index < length;) value = array[index], value > 65535 && (value -= 65536, output += stringFromCharCode(value >>> 10 & 1023 | 55296), value = 56320 | 1023 & value), output += stringFromCharCode(value);
            return output
          }

          function checkScalarValue(codePoint) {
            if (codePoint >= 55296 && codePoint <= 57343) throw Error("Lone surrogate U+" + codePoint.toString(16).toUpperCase() + " is not a scalar value")
          }

          function createByte(codePoint, shift) {
            return stringFromCharCode(codePoint >> shift & 63 | 128)
          }

          function encodeCodePoint(codePoint) {
            if (0 == (4294967168 & codePoint)) return stringFromCharCode(codePoint);
            var symbol = "";
            return 0 == (4294965248 & codePoint) ? symbol = stringFromCharCode(codePoint >> 6 & 31 | 192) : 0 == (4294901760 & codePoint) ? (checkScalarValue(codePoint), symbol = stringFromCharCode(codePoint >> 12 & 15 | 224), symbol += createByte(codePoint, 6)) : 0 == (4292870144 & codePoint) && (symbol = stringFromCharCode(codePoint >> 18 & 7 | 240), symbol += createByte(codePoint, 12), symbol += createByte(codePoint, 6)), symbol += stringFromCharCode(63 & codePoint | 128)
          }

          function utf8encode(string) {
            for (var codePoint, codePoints = ucs2decode(string), length = codePoints.length, index = -1, byteString = ""; ++index < length;) codePoint = codePoints[index], byteString += encodeCodePoint(codePoint);
            return byteString
          }

          function readContinuationByte() {
            if (byteIndex >= byteCount) throw Error("Invalid byte index");
            var continuationByte = 255 & byteArray[byteIndex];
            if (byteIndex++, 128 == (192 & continuationByte)) return 63 & continuationByte;
            throw Error("Invalid continuation byte")
          }

          function decodeSymbol() {
            var byte1, byte2, byte3, byte4, codePoint;
            if (byteIndex > byteCount) throw Error("Invalid byte index");
            if (byteIndex == byteCount) return !1;
            if (byte1 = 255 & byteArray[byteIndex], byteIndex++, 0 == (128 & byte1)) return byte1;
            if (192 == (224 & byte1)) {
              var byte2 = readContinuationByte();
              if ((codePoint = (31 & byte1) << 6 | byte2) >= 128) return codePoint;
              throw Error("Invalid continuation byte")
            }
            if (224 == (240 & byte1)) {
              if (byte2 = readContinuationByte(), byte3 = readContinuationByte(), (codePoint = (15 & byte1) << 12 | byte2 << 6 | byte3) >= 2048) return checkScalarValue(codePoint), codePoint;
              throw Error("Invalid continuation byte")
            }
            if (240 == (248 & byte1) && (byte2 = readContinuationByte(), byte3 = readContinuationByte(), byte4 = readContinuationByte(), (codePoint = (15 & byte1) << 18 | byte2 << 12 | byte3 << 6 | byte4) >= 65536 && codePoint <= 1114111)) return codePoint;
            throw Error("Invalid UTF-8 detected")
          }

          function utf8decode(byteString) {
            byteArray = ucs2decode(byteString), byteCount = byteArray.length, byteIndex = 0;
            for (var tmp, codePoints = []; !1 !== (tmp = decodeSymbol());) codePoints.push(tmp);
            return ucs2encode(codePoints)
          }

          var freeExports = "object" == typeof exports && exports,
              freeModule  = "object" == typeof module && module && module.exports == freeExports && module,
              freeGlobal  = "object" == typeof global && global;
          freeGlobal.global !== freeGlobal && freeGlobal.window !== freeGlobal || (root = freeGlobal);
          var byteArray, byteCount, byteIndex, stringFromCharCode = String.fromCharCode, utf8 = {
            version: "2.0.0",
            encode:  utf8encode,
            decode:  utf8decode
          };
          if ("function" == typeof define && "object" == typeof define.amd && define.amd) define(function () {
            return utf8
          }); else if (freeExports && !freeExports.nodeType) if (freeModule) freeModule.exports = utf8; else {
            var object = {}, hasOwnProperty = object.hasOwnProperty;
            for (var key in utf8) hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key])
          } else root.utf8 = utf8
        }(this)
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {}],
    30: [function (_dereq_, module, exports) {
      "use strict";

      function encode(num) {
        var encoded = "";
        do {
          encoded = alphabet[num % length] + encoded, num = Math.floor(num / length)
        } while (num > 0);
        return encoded
      }

      function decode(str) {
        var decoded = 0;
        for (i = 0; i < str.length; i++) decoded = decoded * length + map[str.charAt(i)];
        return decoded
      }

      function yeast() {
        var now = encode(+new Date);
        return now !== prev ? (seed = 0, prev = now) : now + "." + encode(seed++)
      }

      for (var prev, alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), length = 64, map = {}, seed = 0, i = 0; i < length; i++) map[alphabet[i]] = i;
      yeast.encode = encode, yeast.decode = decode, module.exports = yeast
    }, {}],
    31: [function (_dereq_, module, exports) {
      function lookup(uri, opts) {
        "object" == typeof uri && (opts = uri, uri = void 0), opts = opts || {};
        var io, parsed = url(uri), source = parsed.source, id = parsed.id, path = parsed.path,
            sameNamespace                                                       = cache[id] && path in cache[id].nsps,
            newConnection                                                       = opts.forceNew || opts["force new connection"] || !1 === opts.multiplex || sameNamespace;
        return newConnection ? (debug("ignoring socket cache for %s", source), io = Manager(source, opts)) : (cache[id] || (debug("new io instance for %s", source), cache[id] = Manager(source, opts)), io = cache[id]), io.socket(parsed.path)
      }

      var url = _dereq_("./url"), parser = _dereq_("socket.io-parser"), Manager = _dereq_("./manager"),
          debug                                                                 = _dereq_("debug")("socket.io-client");
      module.exports                                                            = exports = lookup;
      var cache = exports.managers = {};
      exports.protocol = parser.protocol, exports.connect = lookup, exports.Manager = _dereq_("./manager"), exports.Socket = _dereq_("./socket")
    }, {"./manager": 32, "./socket": 34, "./url": 35, debug: 39, "socket.io-parser": 47}],
    32: [function (_dereq_, module, exports) {
      function Manager(uri, opts) {
        if (!(this instanceof Manager)) return new Manager(uri, opts);
        uri && "object" == typeof uri && (opts = uri, uri = void 0), opts = opts || {}, opts.path = opts.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = opts, this.reconnection(!1 !== opts.reconnection), this.reconnectionAttempts(opts.reconnectionAttempts || 1 / 0), this.reconnectionDelay(opts.reconnectionDelay || 1e3), this.reconnectionDelayMax(opts.reconnectionDelayMax || 5e3), this.randomizationFactor(opts.randomizationFactor || .5), this.backoff = new Backoff({
          min:    this.reconnectionDelay(),
          max:    this.reconnectionDelayMax(),
          jitter: this.randomizationFactor()
        }), this.timeout(null == opts.timeout ? 2e4 : opts.timeout), this.readyState = "closed", this.uri = uri, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [], this.encoder = new parser.Encoder, this.decoder = new parser.Decoder, this.autoConnect = !1 !== opts.autoConnect, this.autoConnect && this.open()
      }

      var eio = _dereq_("engine.io-client"), Socket = _dereq_("./socket"), Emitter = _dereq_("component-emitter"),
          parser                                                                   = _dereq_("socket.io-parser"), on                                 = _dereq_("./on"), bind = _dereq_("component-bind"),
          debug                                                                    = _dereq_("debug")("socket.io-client:manager"), indexOf            = _dereq_("indexof"),
          Backoff                                                                  = _dereq_("backo2"), has                                         = Object.prototype.hasOwnProperty;
      module.exports = Manager, Manager.prototype.emitAll = function () {
        this.emit.apply(this, arguments);
        for (var nsp in this.nsps) has.call(this.nsps, nsp) && this.nsps[nsp].emit.apply(this.nsps[nsp], arguments)
      }, Manager.prototype.updateSocketIds = function () {
        for (var nsp in this.nsps) has.call(this.nsps, nsp) && (this.nsps[nsp].id = this.engine.id)
      }, Emitter(Manager.prototype), Manager.prototype.reconnection = function (v) {
        return arguments.length ? (this._reconnection = !!v, this) : this._reconnection
      }, Manager.prototype.reconnectionAttempts = function (v) {
        return arguments.length ? (this._reconnectionAttempts = v, this) : this._reconnectionAttempts
      }, Manager.prototype.reconnectionDelay = function (v) {
        return arguments.length ? (this._reconnectionDelay = v, this.backoff && this.backoff.setMin(v), this) : this._reconnectionDelay
      }, Manager.prototype.randomizationFactor = function (v) {
        return arguments.length ? (this._randomizationFactor = v, this.backoff && this.backoff.setJitter(v), this) : this._randomizationFactor
      }, Manager.prototype.reconnectionDelayMax = function (v) {
        return arguments.length ? (this._reconnectionDelayMax = v, this.backoff && this.backoff.setMax(v), this) : this._reconnectionDelayMax
      }, Manager.prototype.timeout = function (v) {
        return arguments.length ? (this._timeout = v, this) : this._timeout
      }, Manager.prototype.maybeReconnectOnOpen = function () {
        !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect()
      }, Manager.prototype.open = Manager.prototype.connect = function (fn) {
        if (debug("readyState %s", this.readyState), ~this.readyState.indexOf("open")) return this;
        debug("opening %s", this.uri), this.engine = eio(this.uri, this.opts);
        var socket = this.engine, self = this;
        this.readyState = "opening", this.skipReconnect = !1;
        var openSub  = on(socket, "open", function () {
          self.onopen(), fn && fn()
        }), errorSub = on(socket, "error", function (data) {
          if (debug("connect_error"), self.cleanup(), self.readyState = "closed", self.emitAll("connect_error", data), fn) {
            var err = new Error("Connection error");
            err.data = data, fn(err)
          } else self.maybeReconnectOnOpen()
        });
        if (!1 !== this._timeout) {
          var timeout = this._timeout;
          debug("connect attempt will timeout after %d", timeout);
          var timer = setTimeout(function () {
            debug("connect attempt timed out after %d", timeout), openSub.destroy(), socket.close(), socket.emit("error", "timeout"), self.emitAll("connect_timeout", timeout)
          }, timeout);
          this.subs.push({
            destroy: function () {
              clearTimeout(timer)
            }
          })
        }
        return this.subs.push(openSub), this.subs.push(errorSub), this
      }, Manager.prototype.onopen = function () {
        debug("open"), this.cleanup(), this.readyState = "open", this.emit("open");
        var socket = this.engine;
        this.subs.push(on(socket, "data", bind(this, "ondata"))), this.subs.push(on(socket, "ping", bind(this, "onping"))), this.subs.push(on(socket, "pong", bind(this, "onpong"))), this.subs.push(on(socket, "error", bind(this, "onerror"))), this.subs.push(on(socket, "close", bind(this, "onclose"))), this.subs.push(on(this.decoder, "decoded", bind(this, "ondecoded")))
      }, Manager.prototype.onping = function () {
        this.lastPing = new Date, this.emitAll("ping")
      }, Manager.prototype.onpong = function () {
        this.emitAll("pong", new Date - this.lastPing)
      }, Manager.prototype.ondata = function (data) {
        this.decoder.add(data)
      }, Manager.prototype.ondecoded = function (packet) {
        this.emit("packet", packet)
      }, Manager.prototype.onerror = function (err) {
        debug("error", err), this.emitAll("error", err)
      }, Manager.prototype.socket = function (nsp) {
        function onConnecting() {
          ~indexOf(self.connecting, socket) || self.connecting.push(socket)
        }

        var socket = this.nsps[nsp];
        if (!socket) {
          socket = new Socket(this, nsp), this.nsps[nsp] = socket;
          var self = this;
          socket.on("connecting", onConnecting), socket.on("connect", function () {
            socket.id = self.engine.id
          }), this.autoConnect && onConnecting()
        }
        return socket
      }, Manager.prototype.destroy = function (socket) {
        var index = indexOf(this.connecting, socket);
        ~index && this.connecting.splice(index, 1), this.connecting.length || this.close()
      }, Manager.prototype.packet = function (packet) {
        debug("writing packet %j", packet);
        var self = this;
        self.encoding ? self.packetBuffer.push(packet) : (self.encoding = !0, this.encoder.encode(packet, function (encodedPackets) {
          for (var i = 0; i < encodedPackets.length; i++) self.engine.write(encodedPackets[i], packet.options);
          self.encoding = !1, self.processPacketQueue()
        }))
      }, Manager.prototype.processPacketQueue = function () {
        if (this.packetBuffer.length > 0 && !this.encoding) {
          var pack = this.packetBuffer.shift();
          this.packet(pack)
        }
      }, Manager.prototype.cleanup = function () {
        debug("cleanup");
        for (var sub; sub = this.subs.shift();) sub.destroy();
        this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy()
      }, Manager.prototype.close = Manager.prototype.disconnect = function () {
        debug("disconnect"), this.skipReconnect = !0, this.reconnecting = !1, "opening" == this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close()
      }, Manager.prototype.onclose = function (reason) {
        debug("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", reason), this._reconnection && !this.skipReconnect && this.reconnect()
      }, Manager.prototype.reconnect = function () {
        if (this.reconnecting || this.skipReconnect) return this;
        var self = this;
        if (this.backoff.attempts >= this._reconnectionAttempts) debug("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1; else {
          var delay = this.backoff.duration();
          debug("will wait %dms before reconnect attempt", delay), this.reconnecting = !0;
          var timer = setTimeout(function () {
            self.skipReconnect || (debug("attempting reconnect"), self.emitAll("reconnect_attempt", self.backoff.attempts), self.emitAll("reconnecting", self.backoff.attempts), self.skipReconnect || self.open(function (err) {
              err ? (debug("reconnect attempt error"), self.reconnecting = !1, self.reconnect(), self.emitAll("reconnect_error", err.data)) : (debug("reconnect success"), self.onreconnect())
            }))
          }, delay);
          this.subs.push({
            destroy: function () {
              clearTimeout(timer)
            }
          })
        }
      }, Manager.prototype.onreconnect = function () {
        var attempt = this.backoff.attempts;
        this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", attempt)
      }
    }, {
      "./on":              33,
      "./socket":          34,
      backo2:              36,
      "component-bind":    37,
      "component-emitter": 38,
      debug:               39,
      "engine.io-client":  1,
      indexof:             42,
      "socket.io-parser":  47
    }],
    33: [function (_dereq_, module, exports) {
      function on(obj, ev, fn) {
        return obj.on(ev, fn), {
          destroy: function () {
            obj.removeListener(ev, fn)
          }
        }
      }

      module.exports = on
    }, {}],
    34: [function (_dereq_, module, exports) {
      function Socket(io, nsp) {
        this.io = io, this.nsp = nsp, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.io.autoConnect && this.open()
      }

      var parser                                                      = _dereq_("socket.io-parser"), Emitter = _dereq_("component-emitter"),
          toArray                                                     = _dereq_("to-array"), on = _dereq_("./on"), bind   = _dereq_("component-bind"),
          debug = _dereq_("debug")("socket.io-client:socket"), hasBin = _dereq_("has-binary");
      module.exports                                                  = Socket;
      var events                                                      = {
        connect:           1,
        connect_error:     1,
        connect_timeout:   1,
        connecting:        1,
        disconnect:        1,
        error:             1,
        reconnect:         1,
        reconnect_attempt: 1,
        reconnect_failed:  1,
        reconnect_error:   1,
        reconnecting:      1,
        ping:              1,
        pong:              1
      }, emit                                                         = Emitter.prototype.emit;
      Emitter(Socket.prototype), Socket.prototype.subEvents = function () {
        if (!this.subs) {
          var io    = this.io;
          this.subs = [on(io, "open", bind(this, "onopen")), on(io, "packet", bind(this, "onpacket")), on(io, "close", bind(this, "onclose"))]
        }
      }, Socket.prototype.open = Socket.prototype.connect = function () {
        return this.connected ? this : (this.subEvents(), this.io.open(), "open" == this.io.readyState && this.onopen(), this.emit("connecting"), this)
      }, Socket.prototype.send = function () {
        var args = toArray(arguments);
        return args.unshift("message"), this.emit.apply(this, args), this
      }, Socket.prototype.emit = function (ev) {
        if (events.hasOwnProperty(ev)) return emit.apply(this, arguments), this;
        var args = toArray(arguments), parserType = parser.EVENT;
        hasBin(args) && (parserType = parser.BINARY_EVENT);
        var packet = {type: parserType, data: args};
        return packet.options = {}, packet.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof args[args.length - 1] && (debug("emitting packet with ack id %d", this.ids), this.acks[this.ids] = args.pop(), packet.id = this.ids++), this.connected ? this.packet(packet) : this.sendBuffer.push(packet), delete this.flags, this
      }, Socket.prototype.packet = function (packet) {
        packet.nsp = this.nsp, this.io.packet(packet)
      }, Socket.prototype.onopen = function () {
        debug("transport is open - connecting"), "/" != this.nsp && this.packet({type: parser.CONNECT})
      }, Socket.prototype.onclose = function (reason) {
        debug("close (%s)", reason), this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", reason)
      }, Socket.prototype.onpacket = function (packet) {
        if (packet.nsp == this.nsp) switch (packet.type) {
          case parser.CONNECT:
            this.onconnect();
            break;
          case parser.EVENT:
          case parser.BINARY_EVENT:
            this.onevent(packet);
            break;
          case parser.ACK:
          case parser.BINARY_ACK:
            this.onack(packet);
            break;
          case parser.DISCONNECT:
            this.ondisconnect();
            break;
          case parser.ERROR:
            this.emit("error", packet.data)
        }
      }, Socket.prototype.onevent = function (packet) {
        var args = packet.data || [];
        debug("emitting event %j", args), null != packet.id && (debug("attaching ack callback to event"), args.push(this.ack(packet.id))), this.connected ? emit.apply(this, args) : this.receiveBuffer.push(args)
      }, Socket.prototype.ack = function (id) {
        var self = this, sent = !1;
        return function () {
          if (!sent) {
            sent     = !0;
            var args = toArray(arguments);
            debug("sending ack %j", args);
            var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;
            self.packet({type: type, id: id, data: args})
          }
        }
      }, Socket.prototype.onack = function (packet) {
        var ack = this.acks[packet.id];
        "function" == typeof ack ? (debug("calling ack %s with %j", packet.id, packet.data), ack.apply(this, packet.data), delete this.acks[packet.id]) : debug("bad ack %s", packet.id)
      }, Socket.prototype.onconnect = function () {
        this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered()
      }, Socket.prototype.emitBuffered = function () {
        var i;
        for (i = 0; i < this.receiveBuffer.length; i++) emit.apply(this, this.receiveBuffer[i]);
        for (this.receiveBuffer = [], i = 0; i < this.sendBuffer.length; i++) this.packet(this.sendBuffer[i]);
        this.sendBuffer = []
      }, Socket.prototype.ondisconnect = function () {
        debug("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect")
      }, Socket.prototype.destroy = function () {
        if (this.subs) {
          for (var i = 0; i < this.subs.length; i++) this.subs[i].destroy();
          this.subs = null
        }
        this.io.destroy(this)
      }, Socket.prototype.close = Socket.prototype.disconnect = function () {
        return this.connected && (debug("performing disconnect (%s)", this.nsp), this.packet({type: parser.DISCONNECT})), this.destroy(), this.connected && this.onclose("io client disconnect"), this
      }, Socket.prototype.compress = function (compress) {
        return this.flags = this.flags || {}, this.flags.compress = compress, this
      }
    }, {
      "./on":              33,
      "component-bind":    37,
      "component-emitter": 38,
      debug:               39,
      "has-binary":        41,
      "socket.io-parser":  47,
      "to-array":          51
    }],
    35: [function (_dereq_, module, exports) {
      (function (global) {
        function url(uri, loc) {
          var obj = uri, loc = loc || global.location;
          null == uri && (uri = loc.protocol + "//" + loc.host), "string" == typeof uri && ("/" == uri.charAt(0) && (uri = "/" == uri.charAt(1) ? loc.protocol + uri : loc.host + uri), /^(https?|wss?):\/\//.test(uri) || (debug("protocol-less url %s", uri), uri = void 0 !== loc ? loc.protocol + "//" + uri : "https://" + uri), debug("parse %s", uri), obj = parseuri(uri)), obj.port || (/^(http|ws)$/.test(obj.protocol) ? obj.port = "80" : /^(http|ws)s$/.test(obj.protocol) && (obj.port = "443")), obj.path = obj.path || "/";
          var ipv6 = -1 !== obj.host.indexOf(":"), host = ipv6 ? "[" + obj.host + "]" : obj.host;
          return obj.id = obj.protocol + "://" + host + ":" + obj.port, obj.href = obj.protocol + "://" + host + (loc && loc.port == obj.port ? "" : ":" + obj.port), obj
        }

        var parseuri   = _dereq_("parseuri"), debug = _dereq_("debug")("socket.io-client:url");
        module.exports = url
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {debug: 39, parseuri: 45}],
    36: [function (_dereq_, module, exports) {
      function Backoff(opts) {
        opts = opts || {}, this.ms = opts.min || 100, this.max = opts.max || 1e4, this.factor = opts.factor || 2, this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0, this.attempts = 0
      }

      module.exports = Backoff, Backoff.prototype.duration = function () {
        var ms = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var rand = Math.random(), deviation = Math.floor(rand * this.jitter * ms);
          ms       = 0 == (1 & Math.floor(10 * rand)) ? ms - deviation : ms + deviation
        }
        return 0 | Math.min(ms, this.max)
      }, Backoff.prototype.reset = function () {
        this.attempts = 0
      }, Backoff.prototype.setMin = function (min) {
        this.ms = min
      }, Backoff.prototype.setMax = function (max) {
        this.max = max
      }, Backoff.prototype.setJitter = function (jitter) {
        this.jitter = jitter
      }
    }, {}],
    37: [function (_dereq_, module, exports) {
      var slice      = [].slice;
      module.exports = function (obj, fn) {
        if ("string" == typeof fn && (fn = obj[fn]), "function" != typeof fn) throw new Error("bind() requires a function");
        var args = slice.call(arguments, 2);
        return function () {
          return fn.apply(obj, args.concat(slice.call(arguments)))
        }
      }
    }, {}],
    38: [function (_dereq_, module, exports) {
      function Emitter(obj) {
        if (obj) return mixin(obj)
      }

      function mixin(obj) {
        for (var key in Emitter.prototype) obj[key] = Emitter.prototype[key];
        return obj
      }

      module.exports = Emitter, Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
        return this._callbacks = this._callbacks || {}, (this._callbacks["$" + event] = this._callbacks["$" + event] || []).push(fn), this
      }, Emitter.prototype.once = function (event, fn) {
        function on() {
          this.off(event, on), fn.apply(this, arguments)
        }

        return on.fn = fn, this.on(event, on), this
      }, Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
        if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
        var callbacks = this._callbacks["$" + event];
        if (!callbacks) return this;
        if (1 == arguments.length) return delete this._callbacks["$" + event], this;
        for (var cb, i = 0; i < callbacks.length; i++) if ((cb = callbacks[i]) === fn || cb.fn === fn) {
          callbacks.splice(i, 1);
          break
        }
        return this
      }, Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args        = [].slice.call(arguments, 1), callbacks = this._callbacks["$" + event];
        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) callbacks[i].apply(this, args)
        }
        return this
      }, Emitter.prototype.listeners = function (event) {
        return this._callbacks = this._callbacks || {}, this._callbacks["$" + event] || []
      }, Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length
      }
    }, {}],
    39: [function (_dereq_, module, exports) {
      arguments[4][17][0].apply(exports, arguments)
    }, {"./debug": 40, dup: 17}],
    40: [function (_dereq_, module, exports) {
      arguments[4][18][0].apply(exports, arguments)
    }, {dup: 18, ms: 44}],
    41: [function (_dereq_, module, exports) {
      (function (global) {
        function hasBinary(data) {
          function _hasBinary(obj) {
            if (!obj) return !1;
            if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) return !0;
            if (isArray(obj)) {
              for (var i = 0; i < obj.length; i++) if (_hasBinary(obj[i])) return !0
            } else if (obj && "object" == typeof obj) {
              obj.toJSON && "function" == typeof obj.toJSON && (obj = obj.toJSON());
              for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) return !0
            }
            return !1
          }

          return _hasBinary(data)
        }

        var isArray    = _dereq_("isarray");
        module.exports = hasBinary
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {isarray: 43}],
    42: [function (_dereq_, module, exports) {
      arguments[4][23][0].apply(exports, arguments)
    }, {dup: 23}],
    43: [function (_dereq_, module, exports) {
      arguments[4][24][0].apply(exports, arguments)
    }, {dup: 24}],
    44: [function (_dereq_, module, exports) {
      arguments[4][25][0].apply(exports, arguments)
    }, {
      dup: 25
    }],
    45: [function (_dereq_, module, exports) {
      arguments[4][28][0].apply(exports, arguments)
    }, {dup: 28}],
    46: [function (_dereq_, module, exports) {
      (function (global) {
        var isArray = _dereq_("isarray"), isBuf = _dereq_("./is-buffer");
        exports.deconstructPacket = function (packet) {
          function _deconstructPacket(data) {
            if (!data) return data;
            if (isBuf(data)) {
              var placeholder = {_placeholder: !0, num: buffers.length};
              return buffers.push(data), placeholder
            }
            if (isArray(data)) {
              for (var newData = new Array(data.length), i = 0; i < data.length; i++) newData[i] = _deconstructPacket(data[i]);
              return newData
            }
            if ("object" == typeof data && !(data instanceof Date)) {
              var newData = {};
              for (var key in data) newData[key] = _deconstructPacket(data[key]);
              return newData
            }
            return data
          }

          var buffers = [], packetData = packet.data, pack = packet;
          return pack.data = _deconstructPacket(packetData), pack.attachments = buffers.length, {
            packet:  pack,
            buffers: buffers
          }
        }, exports.reconstructPacket = function (packet, buffers) {
          function _reconstructPacket(data) {
            if (data && data._placeholder) {
              return buffers[data.num]
            }
            if (isArray(data)) {
              for (var i = 0; i < data.length; i++) data[i] = _reconstructPacket(data[i]);
              return data
            }
            if (data && "object" == typeof data) {
              for (var key in data) data[key] = _reconstructPacket(data[key]);
              return data
            }
            return data
          }

          return packet.data = _reconstructPacket(packet.data), packet.attachments = void 0, packet
        }, exports.removeBlobs = function (data, callback) {
          function _removeBlobs(obj, curKey, containingObject) {
            if (!obj) return obj;
            if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
              pendingBlobs++;
              var fileReader = new FileReader;
              fileReader.onload = function () {
                containingObject ? containingObject[curKey] = this.result : bloblessData = this.result, --pendingBlobs || callback(bloblessData)
              }, fileReader.readAsArrayBuffer(obj)
            } else if (isArray(obj)) for (var i = 0; i < obj.length; i++) _removeBlobs(obj[i], i, obj); else if (obj && "object" == typeof obj && !isBuf(obj)) for (var key in obj) _removeBlobs(obj[key], key, obj)
          }

          var pendingBlobs = 0, bloblessData = data;
          _removeBlobs(bloblessData), pendingBlobs || callback(bloblessData)
        }
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {"./is-buffer": 48, isarray: 43}],
    47: [function (_dereq_, module, exports) {
      function Encoder() {
      }

      function encodeAsString(obj) {
        var str = "", nsp = !1;
        return str += obj.type, exports.BINARY_EVENT != obj.type && exports.BINARY_ACK != obj.type || (str += obj.attachments, str += "-"), obj.nsp && "/" != obj.nsp && (nsp = !0, str += obj.nsp), null != obj.id && (nsp && (str += ",", nsp = !1), str += obj.id), null != obj.data && (nsp && (str += ","), str += json.stringify(obj.data)), debug("encoded %j as %s", obj, str), str
      }

      function encodeAsBinary(obj, callback) {
        function writeEncoding(bloblessData) {
          var deconstruction = binary.deconstructPacket(bloblessData), pack = encodeAsString(deconstruction.packet),
              buffers                                                       = deconstruction.buffers;
          buffers.unshift(pack), callback(buffers)
        }

        binary.removeBlobs(obj, writeEncoding)
      }

      function Decoder() {
        this.reconstructor = null
      }

      function decodeString(str) {
        var p = {}, i = 0;
        if (p.type = Number(str.charAt(0)), null == exports.types[p.type]) return error();
        if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {
          for (var buf = ""; "-" != str.charAt(++i) && (buf += str.charAt(i), i != str.length);) ;
          if (buf != Number(buf) || "-" != str.charAt(i)) throw new Error("Illegal attachments");
          p.attachments = Number(buf)
        }
        if ("/" == str.charAt(i + 1)) for (p.nsp = ""; ++i;) {
          var c = str.charAt(i);
          if ("," == c) break;
          if (p.nsp += c, i == str.length) break
        } else p.nsp = "/";
        var next = str.charAt(i + 1);
        if ("" !== next && Number(next) == next) {
          for (p.id = ""; ++i;) {
            var c = str.charAt(i);
            if (null == c || Number(c) != c) {
              --i;
              break
            }
            if (p.id += str.charAt(i), i == str.length) break
          }
          p.id = Number(p.id)
        }
        if (str.charAt(++i)) try {
          p.data = json.parse(str.substr(i))
        } catch (e) {
          return error()
        }
        return debug("decoded %s as %j", str, p), p
      }

      function BinaryReconstructor(packet) {
        this.reconPack = packet, this.buffers = []
      }

      function error(data) {
        return {type: exports.ERROR, data: "parser error"}
      }

      var debug                                                                = _dereq_("debug")("socket.io-parser"), json = _dereq_("json3"),
          Emitter = (_dereq_("isarray"), _dereq_("component-emitter")), binary = _dereq_("./binary"),
          isBuf                                                                = _dereq_("./is-buffer");
      exports.protocol = 4, exports.types = ["CONNECT", "DISCONNECT", "EVENT", "BINARY_EVENT", "ACK", "BINARY_ACK", "ERROR"], exports.CONNECT = 0, exports.DISCONNECT = 1, exports.EVENT = 2, exports.ACK = 3, exports.ERROR = 4, exports.BINARY_EVENT = 5, exports.BINARY_ACK = 6, exports.Encoder = Encoder, exports.Decoder = Decoder, Encoder.prototype.encode = function (obj, callback) {
        if (debug("encoding packet %j", obj), exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) encodeAsBinary(obj, callback); else {
          callback([encodeAsString(obj)])
        }
      }, Emitter(Decoder.prototype), Decoder.prototype.add = function (obj) {
        var packet;
        if ("string" == typeof obj) packet = decodeString(obj), exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type ? (this.reconstructor = new BinaryReconstructor(packet), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", packet)) : this.emit("decoded", packet); else {
          if (!isBuf(obj) && !obj.base64) throw new Error("Unknown type: " + obj);
          if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
          (packet = this.reconstructor.takeBinaryData(obj)) && (this.reconstructor = null, this.emit("decoded", packet))
        }
      }, Decoder.prototype.destroy = function () {
        this.reconstructor && this.reconstructor.finishedReconstruction()
      }, BinaryReconstructor.prototype.takeBinaryData = function (binData) {
        if (this.buffers.push(binData), this.buffers.length == this.reconPack.attachments) {
          var packet = binary.reconstructPacket(this.reconPack, this.buffers);
          return this.finishedReconstruction(), packet
        }
        return null
      }, BinaryReconstructor.prototype.finishedReconstruction = function () {
        this.reconPack = null, this.buffers = []
      }
    }, {"./binary": 46, "./is-buffer": 48, "component-emitter": 49, debug: 39, isarray: 43, json3: 50}],
    48: [function (_dereq_, module, exports) {
      (function (global) {
        function isBuf(obj) {
          return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer
        }

        module.exports = isBuf
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {}],
    49: [function (_dereq_, module, exports) {
      arguments[4][15][0].apply(exports, arguments)
    }, {dup: 15}],
    50: [function (_dereq_, module, exports) {
      (function (global) {
        (function () {
          function runInContext(context, exports) {
            function has(name) {
              if (has[name] !== undef) return has[name];
              var isSupported;
              if ("bug-string-char-index" == name) isSupported = "a" != "a"[0]; else if ("json" == name) isSupported = has("json-stringify") && has("json-parse"); else {
                var value, serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                if ("json-stringify" == name) {
                  var stringify = exports.stringify, stringifySupported = "function" == typeof stringify && isExtended;
                  if (stringifySupported) {
                    (value = function () {
                      return 1
                    }).toJSON = value;
                    try {
                      stringifySupported = "0" === stringify(0) && "0" === stringify(new Number) && '""' == stringify(new String) && stringify(getClass) === undef && stringify(undef) === undef && stringify() === undef && "1" === stringify(value) && "[1]" == stringify([value]) && "[null]" == stringify([undef]) && "null" == stringify(null) && "[null,null,null]" == stringify([undef, getClass, null]) && stringify({a: [value, !0, !1, null, "\0\b\n\f\r\t"]}) == serialized && "1" === stringify(null, value) && "[\n 1,\n 2\n]" == stringify([1, 2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == stringify(new Date(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == stringify(new Date(864e13)) && '"-000001-01-01T00:00:00.000Z"' == stringify(new Date(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == stringify(new Date(-1))
                    } catch (exception) {
                      stringifySupported = !1
                    }
                  }
                  isSupported = stringifySupported
                }
                if ("json-parse" == name) {
                  var parse = exports.parse;
                  if ("function" == typeof parse) try {
                    if (0 === parse("0") && !parse(!1)) {
                      value              = parse(serialized);
                      var parseSupported = 5 == value.a.length && 1 === value.a[0];
                      if (parseSupported) {
                        try {
                          parseSupported = !parse('"\t"')
                        } catch (exception) {
                        }
                        if (parseSupported) try {
                          parseSupported = 1 !== parse("01")
                        } catch (exception) {
                        }
                        if (parseSupported) try {
                          parseSupported = 1 !== parse("1.")
                        } catch (exception) {
                        }
                      }
                    }
                  } catch (exception) {
                    parseSupported = !1
                  }
                  isSupported = parseSupported
                }
              }
              return has[name] = !!isSupported
            }

            context || (context = root.Object()), exports || (exports = root.Object());
            var Number                                                           = context.Number || root.Number, String                   = context.String || root.String,
                Object                                                           = context.Object || root.Object, Date = context.Date || root.Date,
                SyntaxError = context.SyntaxError || root.SyntaxError, TypeError = context.TypeError || root.TypeError,
                Math                                                             = context.Math || root.Math, nativeJSON = context.JSON || root.JSON;
            "object" == typeof nativeJSON && nativeJSON && (exports.stringify = nativeJSON.stringify, exports.parse = nativeJSON.parse);
            var isProperty, forEach, undef, objectProto = Object.prototype, getClass = objectProto.toString,
                isExtended                                                           = new Date(-0xc782b5b800cec);
            try {
              isExtended = -109252 == isExtended.getUTCFullYear() && 0 === isExtended.getUTCMonth() && 1 === isExtended.getUTCDate() && 10 == isExtended.getUTCHours() && 37 == isExtended.getUTCMinutes() && 6 == isExtended.getUTCSeconds() && 708 == isExtended.getUTCMilliseconds()
            } catch (exception) {
            }
            if (!has("json")) {
              var charIndexBuggy = has("bug-string-char-index");
              if (!isExtended) var floor  = Math.floor,
                                   Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
                                   getDay = function (year, month) {
                                     return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400)
                                   };
              if ((isProperty = objectProto.hasOwnProperty) || (isProperty = function (property) {
                  var constructor, members = {};
                  return (members.__proto__ = null, members.__proto__ = {toString: 1}, members).toString != getClass ? isProperty = function (property) {
                    var original = this.__proto__, result = property in (this.__proto__ = null, this);
                    return this.__proto__ = original, result
                  } : (constructor = members.constructor, isProperty = function (property) {
                    var parent = (this.constructor || constructor).prototype;
                    return property in this && !(property in parent && this[property] === parent[property])
                  }), members = null, isProperty.call(this, property)
                }), forEach = function (object, callback) {
                  var Properties, members, property, size = 0;
                  (Properties = function () {
                    this.valueOf = 0
                  }).prototype.valueOf = 0, members = new Properties;
                  for (property in members) isProperty.call(members, property) && size++;
                  return Properties = members = null, size ? forEach = 2 == size ? function (object, callback) {
                    var property, members = {}, isFunction = "[object Function]" == getClass.call(object);
                    for (property in object) isFunction && "prototype" == property || isProperty.call(members, property) || !(members[property] = 1) || !isProperty.call(object, property) || callback(property)
                  } : function (object, callback) {
                    var property, isConstructor, isFunction = "[object Function]" == getClass.call(object);
                    for (property in object) isFunction && "prototype" == property || !isProperty.call(object, property) || (isConstructor = "constructor" === property) || callback(property);
                    (isConstructor || isProperty.call(object, property = "constructor")) && callback(property)
                  } : (members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"], forEach = function (object, callback) {
                    var property, length, isFunction = "[object Function]" == getClass.call(object),
                        hasProperty                  = !isFunction && "function" != typeof object.constructor && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;
                    for (property in object) isFunction && "prototype" == property || !hasProperty.call(object, property) || callback(property);
                    for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) ;
                  }), forEach(object, callback)
                }, !has("json-stringify")) {
                var Escapes        = {92: "\\\\", 34: '\\"', 8: "\\b", 12: "\\f", 10: "\\n", 13: "\\r", 9: "\\t"},
                    toPaddedString = function (width, value) {
                      return ("000000" + (value || 0)).slice(-width)
                    }, quote       = function (value) {
                      for (var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10, symbols = useCharIndex && (charIndexBuggy ? value.split("") : value); index < length; index++) {
                        var charCode = value.charCodeAt(index);
                        switch (charCode) {
                          case 8:
                          case 9:
                          case 10:
                          case 12:
                          case 13:
                          case 34:
                          case 92:
                            result += Escapes[charCode];
                            break;
                          default:
                            if (charCode < 32) {
                              result += "\\u00" + toPaddedString(2, charCode.toString(16));
                              break
                            }
                            result += useCharIndex ? symbols[index] : value.charAt(index)
                        }
                      }
                      return result + '"'
                    }, serialize   = function (property, object, callback, properties, whitespace, indentation, stack) {
                      var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results,
                          element, index, length, prefix, result;
                      try {
                        value = object[property]
                      } catch (exception) {
                      }
                      if ("object" == typeof value && value) if ("[object Date]" != (className = getClass.call(value)) || isProperty.call(value, "toJSON")) "function" == typeof value.toJSON && ("[object Number]" != className && "[object String]" != className && "[object Array]" != className || isProperty.call(value, "toJSON")) && (value = value.toJSON(property)); else if (value > -1 / 0 && value < 1 / 0) {
                        if (getDay) {
                          for (date = floor(value / 864e5), year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) ;
                          for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) ;
                          date = 1 + date - getDay(year, month), time = (value % 864e5 + 864e5) % 864e5, hours = floor(time / 36e5) % 24, minutes = floor(time / 6e4) % 60, seconds = floor(time / 1e3) % 60, milliseconds = time % 1e3
                        } else year = value.getUTCFullYear(), month = value.getUTCMonth(), date = value.getUTCDate(), hours = value.getUTCHours(), minutes = value.getUTCMinutes(), seconds = value.getUTCSeconds(), milliseconds = value.getUTCMilliseconds();
                        value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) + "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) + "." + toPaddedString(3, milliseconds) + "Z"
                      } else value = null;
                      if (callback && (value = callback.call(object, property, value)), null === value) return "null";
                      if ("[object Boolean]" == (className = getClass.call(value))) return "" + value;
                      if ("[object Number]" == className) return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
                      if ("[object String]" == className) return quote("" + value);
                      if ("object" == typeof value) {
                        for (length = stack.length; length--;) if (stack[length] === value) throw TypeError();
                        if (stack.push(value), results = [], prefix = indentation, indentation += whitespace, "[object Array]" == className) {
                          for (index = 0, length = value.length; index < length; index++) element = serialize(index, value, callback, properties, whitespace, indentation, stack), results.push(element === undef ? "null" : element);
                          result = results.length ? whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]" : "[]"
                        } else forEach(properties || value, function (property) {
                          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                          element !== undef && results.push(quote(property) + ":" + (whitespace ? " " : "") + element)
                        }), result = results.length ? whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}" : "{}";
                        return stack.pop(), result
                      }
                    };
                exports.stringify  = function (source, filter, width) {
                  var whitespace, callback, properties, className;
                  if (objectTypes[typeof filter] && filter) if ("[object Function]" == (className = getClass.call(filter))) callback = filter; else if ("[object Array]" == className) {
                    properties = {};
                    for (var value, index = 0, length = filter.length; index < length; value = filter[index++], ("[object String]" == (className = getClass.call(value)) || "[object Number]" == className) && (properties[value] = 1)) ;
                  }
                  if (width) if ("[object Number]" == (className = getClass.call(width))) {
                    if ((width -= width % 1) > 0) for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ") ;
                  } else "[object String]" == className && (whitespace = width.length <= 10 ? width : width.slice(0, 10));
                  return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", [])
                }
              }
              if (!has("json-parse")) {
                var Index, Source, fromCharCode = String.fromCharCode, Unescapes = {
                  92:  "\\",
                  34:  '"',
                  47:  "/",
                  98:  "\b",
                  116: "\t",
                  110: "\n",
                  102: "\f",
                  114: "\r"
                }, abort                        = function () {
                  throw Index = Source = null, SyntaxError()
                }, lex                          = function () {
                  for (var value, begin, position, isSigned, charCode, source = Source, length = source.length; Index < length;) switch (charCode = source.charCodeAt(Index)) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                      Index++;
                      break;
                    case 123:
                    case 125:
                    case 91:
                    case 93:
                    case 58:
                    case 44:
                      return value = charIndexBuggy ? source.charAt(Index) : source[Index], Index++, value;
                    case 34:
                      for (value = "@", Index++; Index < length;) if ((charCode = source.charCodeAt(Index)) < 32) abort(); else if (92 == charCode) switch (charCode = source.charCodeAt(++Index)) {
                        case 92:
                        case 34:
                        case 47:
                        case 98:
                        case 116:
                        case 110:
                        case 102:
                        case 114:
                          value += Unescapes[charCode], Index++;
                          break;
                        case 117:
                          for (begin = ++Index, position = Index + 4; Index < position; Index++) (charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70 || abort();
                          value += fromCharCode("0x" + source.slice(begin, Index));
                          break;
                        default:
                          abort()
                      } else {
                        if (34 == charCode) break;
                        for (charCode = source.charCodeAt(Index), begin = Index; charCode >= 32 && 92 != charCode && 34 != charCode;) charCode = source.charCodeAt(++Index);
                        value += source.slice(begin, Index)
                      }
                      if (34 == source.charCodeAt(Index)) return Index++, value;
                      abort();
                    default:
                      if (begin = Index, 45 == charCode && (isSigned = !0, charCode = source.charCodeAt(++Index)), charCode >= 48 && charCode <= 57) {
                        for (48 == charCode && (charCode = source.charCodeAt(Index + 1)) >= 48 && charCode <= 57 && abort(), isSigned = !1; Index < length && (charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57; Index++) ;
                        if (46 == source.charCodeAt(Index)) {
                          for (position = ++Index; position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57; position++) ;
                          position == Index && abort(), Index = position
                        }
                        if (101 == (charCode = source.charCodeAt(Index)) || 69 == charCode) {
                          for (charCode = source.charCodeAt(++Index), 43 != charCode && 45 != charCode || Index++, position = Index; position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57; position++) ;
                          position == Index && abort(), Index = position
                        }
                        return +source.slice(begin, Index)
                      }
                      if (isSigned && abort(), "true" == source.slice(Index, Index + 4)) return Index += 4, !0;
                      if ("false" == source.slice(Index, Index + 5)) return Index += 5, !1;
                      if ("null" == source.slice(Index, Index + 4)) return Index += 4, null;
                      abort()
                  }
                  return "$"
                }, get                          = function (value) {
                  var results, hasMembers;
                  if ("$" == value && abort(), "string" == typeof value) {
                    if ("@" == (charIndexBuggy ? value.charAt(0) : value[0])) return value.slice(1);
                    if ("[" == value) {
                      for (results = []; "]" != (value = lex()); hasMembers || (hasMembers = !0)) hasMembers && ("," == value ? "]" == (value = lex()) && abort() : abort()), "," == value && abort(), results.push(get(value));
                      return results
                    }
                    if ("{" == value) {
                      for (results = {}; "}" != (value = lex()); hasMembers || (hasMembers = !0)) hasMembers && ("," == value ? "}" == (value = lex()) && abort() : abort()), "," != value && "string" == typeof value && "@" == (charIndexBuggy ? value.charAt(0) : value[0]) && ":" == lex() || abort(), results[value.slice(1)] = get(lex());
                      return results
                    }
                    abort()
                  }
                  return value
                }, update                       = function (source, property, callback) {
                  var element = walk(source, property, callback);
                  element === undef ? delete source[property] : source[property] = element
                }, walk                         = function (source, property, callback) {
                  var length, value = source[property];
                  if ("object" == typeof value && value) if ("[object Array]" == getClass.call(value)) for (length = value.length; length--;) update(value, length, callback); else forEach(value, function (property) {
                    update(value, property, callback)
                  });
                  return callback.call(source, property, value)
                };
                exports.parse                   = function (source, callback) {
                  var result, value;
                  return Index = 0, Source = "" + source, result = get(lex()), "$" != lex() && abort(), Index = Source = null, callback && "[object Function]" == getClass.call(callback) ? walk((value = {}, value[""] = result, value), "", callback) : result
                }
              }
            }
            return exports.runInContext = runInContext, exports
          }

          var isLoader = "function" == typeof define && define.amd, objectTypes = {function: !0, object: !0},
              freeExports                                                       = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
              root                                                              = objectTypes[typeof window] && window || this,
              freeGlobal                                                        = freeExports && objectTypes[typeof module] && module && !module.nodeType && "object" == typeof global && global;
          if (!freeGlobal || freeGlobal.global !== freeGlobal && freeGlobal.window !== freeGlobal && freeGlobal.self !== freeGlobal || (root = freeGlobal), freeExports && !isLoader) runInContext(root, freeExports); else {
            var nativeJSON = root.JSON, previousJSON = root.JSON3, isRestored = !1,
                JSON3                                                         = runInContext(root, root.JSON3 = {
                  noConflict: function () {
                    return isRestored || (isRestored = !0, root.JSON = nativeJSON, root.JSON3 = previousJSON, nativeJSON = previousJSON = null), JSON3
                  }
                });
            root.JSON = {parse: JSON3.parse, stringify: JSON3.stringify}
          }
          isLoader && define(function () {
            return JSON3
          })
        }).call(this)
      }).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
    }, {}],
    51: [function (_dereq_, module, exports) {
      function toArray(list, index) {
        var array = [];
        index     = index || 0;
        for (var i = index || 0; i < list.length; i++) array[i - index] = list[i];
        return array
      }

      module.exports = toArray
    }, {}]
  }, {}, [31])(31)
}), function (global, factory) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define(factory) : global.moment = factory()
}(this, function () {
  "use strict";

  function utils_hooks__hooks() {
    return hookCallback.apply(null, arguments)
  }

  function isArray(input) {
    return input instanceof Array || "[object Array]" === Object.prototype.toString.call(input)
  }

  function isDate(input) {
    return input instanceof Date || "[object Date]" === Object.prototype.toString.call(input)
  }

  function map(arr, fn) {
    var i, res = [];
    for (i = 0; i < arr.length; ++i) res.push(fn(arr[i], i));
    return res
  }

  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b)
  }

  function extend(a, b) {
    for (var i in b) hasOwnProp(b, i) && (a[i] = b[i]);
    return hasOwnProp(b, "toString") && (a.toString = b.toString), hasOwnProp(b, "valueOf") && (a.valueOf = b.valueOf), a
  }

  function create_utc__createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, !0).utc()
  }

  function defaultParsingFlags() {
    return {
      empty:           !1,
      unusedTokens:    [],
      unusedInput:     [],
      overflow:        -2,
      charsLeftOver:   0,
      nullInput:       !1,
      invalidMonth:    null,
      invalidFormat:   !1,
      userInvalidated: !1,
      iso:             !1
    }
  }

  function getParsingFlags(m) {
    return null == m._pf && (m._pf = defaultParsingFlags()), m._pf
  }

  function valid__isValid(m) {
    if (null == m._isValid) {
      var flags = getParsingFlags(m);
      m._isValid = !(isNaN(m._d.getTime()) || !(flags.overflow < 0) || flags.empty || flags.invalidMonth || flags.invalidWeekday || flags.nullInput || flags.invalidFormat || flags.userInvalidated), m._strict && (m._isValid = m._isValid && 0 === flags.charsLeftOver && 0 === flags.unusedTokens.length && void 0 === flags.bigHour)
    }
    return m._isValid
  }

  function valid__createInvalid(flags) {
    var m = create_utc__createUTC(NaN);
    return null != flags ? extend(getParsingFlags(m), flags) : getParsingFlags(m).userInvalidated = !0, m
  }

  function isUndefined(input) {
    return void 0 === input
  }

  function copyConfig(to, from) {
    var i, prop, val;
    if (isUndefined(from._isAMomentObject) || (to._isAMomentObject = from._isAMomentObject), isUndefined(from._i) || (to._i = from._i), isUndefined(from._f) || (to._f = from._f), isUndefined(from._l) || (to._l = from._l), isUndefined(from._strict) || (to._strict = from._strict), isUndefined(from._tzm) || (to._tzm = from._tzm), isUndefined(from._isUTC) || (to._isUTC = from._isUTC), isUndefined(from._offset) || (to._offset = from._offset), isUndefined(from._pf) || (to._pf = getParsingFlags(from)), isUndefined(from._locale) || (to._locale = from._locale), momentProperties.length > 0) for (i in momentProperties) prop = momentProperties[i], val = from[prop], isUndefined(val) || (to[prop] = val);
    return to
  }

  function Moment(config) {
    copyConfig(this, config), this._d = new Date(null != config._d ? config._d.getTime() : NaN), !1 === updateInProgress && (updateInProgress = !0, utils_hooks__hooks.updateOffset(this), updateInProgress = !1)
  }

  function isMoment(obj) {
    return obj instanceof Moment || null != obj && null != obj._isAMomentObject
  }

  function absFloor(number) {
    return number < 0 ? Math.ceil(number) : Math.floor(number)
  }

  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion, value = 0;
    return 0 !== coercedNumber && isFinite(coercedNumber) && (value = absFloor(coercedNumber)), value
  }

  function compareArrays(array1, array2, dontConvert) {
    var i, len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length),
        diffs                                                       = 0;
    for (i = 0; i < len; i++) (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) && diffs++;
    return diffs + lengthDiff
  }

  function warn(msg) {
    !1 === utils_hooks__hooks.suppressDeprecationWarnings && "undefined" != typeof console && console.warn
  }

  function deprecate(msg, fn) {
    var firstTime = !0;
    return extend(function () {
      return firstTime && (warn(msg + "\nArguments: " + Array.prototype.slice.call(arguments).join(", ") + "\n" + (new Error).stack), firstTime = !1), fn.apply(this, arguments)
    }, fn)
  }

  function deprecateSimple(name, msg) {
    deprecations[name] || (warn(msg), deprecations[name] = !0)
  }

  function isFunction(input) {
    return input instanceof Function || "[object Function]" === Object.prototype.toString.call(input)
  }

  function isObject(input) {
    return "[object Object]" === Object.prototype.toString.call(input)
  }

  function locale_set__set(config) {
    var prop, i;
    for (i in config) prop = config[i], isFunction(prop) ? this[i] = prop : this["_" + i] = prop;
    this._config = config, this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source)
  }

  function mergeConfigs(parentConfig, childConfig) {
    var prop, res = extend({}, parentConfig);
    for (prop in childConfig) hasOwnProp(childConfig, prop) && (isObject(parentConfig[prop]) && isObject(childConfig[prop]) ? (res[prop] = {}, extend(res[prop], parentConfig[prop]), extend(res[prop], childConfig[prop])) : null != childConfig[prop] ? res[prop] = childConfig[prop] : delete res[prop]);
    return res
  }

  function Locale(config) {
    null != config && this.set(config)
  }

  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace("_", "-") : key
  }

  function chooseLocale(names) {
    for (var j, next, locale, split, i = 0; i < names.length;) {
      for (split = normalizeLocale(names[i]).split("-"), j = split.length, next = normalizeLocale(names[i + 1]), next = next ? next.split("-") : null; j > 0;) {
        if (locale = loadLocale(split.slice(0, j).join("-"))) return locale;
        if (next && next.length >= j && compareArrays(split, next, !0) >= j - 1) break;
        j--
      }
      i++
    }
    return null
  }

  function loadLocale(name) {
    var oldLocale = null;
    if (!locales[name] && "undefined" != typeof module && module && module.exports) try {
      oldLocale = globalLocale._abbr, require("./locale/" + name), locale_locales__getSetGlobalLocale(oldLocale)
    } catch (e) {
    }
    return locales[name]
  }

  function locale_locales__getSetGlobalLocale(key, values) {
    var data;
    return key && (data = isUndefined(values) ? locale_locales__getLocale(key) : defineLocale(key, values)) && (globalLocale = data), globalLocale._abbr
  }

  function defineLocale(name, config) {
    return null !== config ? (config.abbr = name, null != locales[name] ? (deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale"), config = mergeConfigs(locales[name]._config, config)) : null != config.parentLocale && (null != locales[config.parentLocale] ? config = mergeConfigs(locales[config.parentLocale]._config, config) : deprecateSimple("parentLocaleUndefined", "specified parentLocale is not defined yet")), locales[name] = new Locale(config), locale_locales__getSetGlobalLocale(name), locales[name]) : (delete locales[name], null)
  }

  function updateLocale(name, config) {
    if (null != config) {
      var locale;
      null != locales[name] && (config = mergeConfigs(locales[name]._config, config)), locale = new Locale(config), locale.parentLocale = locales[name], locales[name] = locale, locale_locales__getSetGlobalLocale(name)
    } else null != locales[name] && (null != locales[name].parentLocale ? locales[name] = locales[name].parentLocale : null != locales[name] && delete locales[name]);
    return locales[name]
  }

  function locale_locales__getLocale(key) {
    var locale;
    if (key && key._locale && key._locale._abbr && (key = key._locale._abbr), !key) return globalLocale;
    if (!isArray(key)) {
      if (locale = loadLocale(key)) return locale;
      key = [key]
    }
    return chooseLocale(key)
  }

  function locale_locales__listLocales() {
    return Object.keys(locales)
  }

  function addUnitAlias(unit, shorthand) {
    var lowerCase      = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit
  }

  function normalizeUnits(units) {
    return "string" == typeof units ? aliases[units] || aliases[units.toLowerCase()] : void 0
  }

  function normalizeObjectUnits(inputObject) {
    var normalizedProp, prop, normalizedInput = {};
    for (prop in inputObject) hasOwnProp(inputObject, prop) && (normalizedProp = normalizeUnits(prop)) && (normalizedInput[normalizedProp] = inputObject[prop]);
    return normalizedInput
  }

  function makeGetSet(unit, keepTime) {
    return function (value) {
      return null != value ? (get_set__set(this, unit, value), utils_hooks__hooks.updateOffset(this, keepTime), this) : get_set__get(this, unit)
    }
  }

  function get_set__get(mom, unit) {
    return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN
  }

  function get_set__set(mom, unit, value) {
    mom.isValid() && mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value)
  }

  function getSet(units, value) {
    var unit;
    if ("object" == typeof units) for (unit in units) this.set(unit, units[unit]); else if (units = normalizeUnits(units), isFunction(this[units])) return this[units](value);
    return this
  }

  function zeroFill(number, targetLength, forceSign) {
    var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length;
    return (number >= 0 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber
  }

  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    "string" == typeof callback && (func = function () {
      return this[callback]()
    }), token && (formatTokenFunctions[token] = func), padded && (formatTokenFunctions[padded[0]] = function () {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2])
    }), ordinal && (formatTokenFunctions[ordinal] = function () {
      return this.localeData().ordinal(func.apply(this, arguments), token)
    })
  }

  function removeFormattingTokens(input) {
    return input.match(/\[[\s\S]/) ? input.replace(/^\[|\]$/g, "") : input.replace(/\\/g, "")
  }

  function makeFormatFunction(format) {
    var i, length, array = format.match(formattingTokens);
    for (i = 0, length = array.length; i < length; i++) formatTokenFunctions[array[i]] ? array[i] = formatTokenFunctions[array[i]] : array[i] = removeFormattingTokens(array[i]);
    return function (mom) {
      var output = "";
      for (i = 0; i < length; i++) output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
      return output
    }
  }

  function formatMoment(m, format) {
    return m.isValid() ? (format = expandFormat(format, m.localeData()), formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format), formatFunctions[format](m)) : m.localeData().invalidDate()
  }

  function expandFormat(format, locale) {
    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input
    }

    var i = 5;
    for (localFormattingTokens.lastIndex = 0; i >= 0 && localFormattingTokens.test(format);) format = format.replace(localFormattingTokens, replaceLongDateFormatTokens), localFormattingTokens.lastIndex = 0, i -= 1;
    return format
  }

  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
      return isStrict && strictRegex ? strictRegex : regex
    }
  }

  function getParseRegexForToken(token, config) {
    return hasOwnProp(regexes, token) ? regexes[token](config._strict, config._locale) : new RegExp(unescapeFormat(token))
  }

  function unescapeFormat(s) {
    return regexEscape(s.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4
    }))
  }

  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
  }

  function addParseToken(token, callback) {
    var i, func = callback;
    for ("string" == typeof token && (token = [token]), "number" == typeof callback && (func = function (input, array) {
      array[callback] = toInt(input)
    }), i = 0; i < token.length; i++) tokens[token[i]] = func
  }

  function addWeekParseToken(token, callback) {
    addParseToken(token, function (input, array, config, token) {
      config._w = config._w || {}, callback(input, config._w, config, token)
    })
  }

  function addTimeToArrayFromToken(token, input, config) {
    null != input && hasOwnProp(tokens, token) && tokens[token](input, config._a, config, token)
  }

  function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate()
  }

  function localeMonths(m, format) {
    return isArray(this._months) ? this._months[m.month()] : this._months[MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"][m.month()]
  }

  function localeMonthsShort(m, format) {
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"][m.month()]
  }

  function localeMonthsParse(monthName, format, strict) {
    var i, mom, regex;
    for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), i = 0; i < 12; i++) {
      if (mom = create_utc__createUTC([2e3, i]), strict && !this._longMonthsParse[i] && (this._longMonthsParse[i] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i"), this._shortMonthsParse[i] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i")),
        strict || this._monthsParse[i] || (regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, ""), this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i")), strict && "MMMM" === format && this._longMonthsParse[i].test(monthName)) return i;
      if (strict && "MMM" === format && this._shortMonthsParse[i].test(monthName)) return i;
      if (!strict && this._monthsParse[i].test(monthName)) return i
    }
  }

  function setMonth(mom, value) {
    var dayOfMonth;
    if (!mom.isValid()) return mom;
    if ("string" == typeof value) if (/^\d+$/.test(value)) value = toInt(value); else if ("number" != typeof(value = mom.localeData().monthsParse(value))) return mom;
    return dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value)), mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth), mom
  }

  function getSetMonth(value) {
    return null != value ? (setMonth(this, value), utils_hooks__hooks.updateOffset(this, !0), this) : get_set__get(this, "Month")
  }

  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month())
  }

  function monthsShortRegex(isStrict) {
    return this._monthsParseExact ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex) : this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex
  }

  function monthsRegex(isStrict) {
    return this._monthsParseExact ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), isStrict ? this._monthsStrictRegex : this._monthsRegex) : this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex
  }

  function computeMonthsParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length
    }

    var i, mom, shortPieces = [], longPieces = [], mixedPieces = [];
    for (i = 0; i < 12; i++) mom = create_utc__createUTC([2e3, i]), shortPieces.push(this.monthsShort(mom, "")), longPieces.push(this.months(mom, "")), mixedPieces.push(this.months(mom, "")), mixedPieces.push(this.monthsShort(mom, ""));
    for (shortPieces.sort(cmpLenRev), longPieces.sort(cmpLenRev), mixedPieces.sort(cmpLenRev), i = 0; i < 12; i++) shortPieces[i] = regexEscape(shortPieces[i]), longPieces[i] = regexEscape(longPieces[i]), mixedPieces[i] = regexEscape(mixedPieces[i]);
    this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")$", "i"), this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")$", "i")
  }

  function checkOverflow(m) {
    var overflow, a = m._a;
    return a && -2 === getParsingFlags(m).overflow && (overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || 24 === a[HOUR] && (0 !== a[MINUTE] || 0 !== a[SECOND] || 0 !== a[MILLISECOND]) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1, getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE) && (overflow = DATE), getParsingFlags(m)._overflowWeeks && -1 === overflow && (overflow = WEEK), getParsingFlags(m)._overflowWeekday && -1 === overflow && (overflow = WEEKDAY), getParsingFlags(m).overflow = overflow), m
  }

  function configFromISO(config) {
    var i, l, allowTime, dateFormat, timeFormat, tzFormat, string = config._i,
        match                                                     = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string);
    if (match) {
      for (getParsingFlags(config).iso = !0, i = 0, l = isoDates.length; i < l; i++) if (isoDates[i][1].exec(match[1])) {
        dateFormat = isoDates[i][0], allowTime = !1 !== isoDates[i][2];
        break
      }
      if (null == dateFormat) return void(config._isValid = !1);
      if (match[3]) {
        for (i = 0, l = isoTimes.length; i < l; i++) if (isoTimes[i][1].exec(match[3])) {
          timeFormat = (match[2] || " ") + isoTimes[i][0];
          break
        }
        if (null == timeFormat) return void(config._isValid = !1)
      }
      if (!allowTime && null != timeFormat) return void(config._isValid = !1);
      if (match[4]) {
        if (!tzRegex.exec(match[4])) return void(config._isValid = !1);
        tzFormat = "Z"
      }
      config._f = dateFormat + (timeFormat || "") + (tzFormat || ""), configFromStringAndFormat(config)
    } else config._isValid = !1
  }

  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);
    if (null !== matched) return void(config._d = new Date(+matched[1]));
    configFromISO(config), !1 === config._isValid && (delete config._isValid, utils_hooks__hooks.createFromInputFallback(config))
  }

  function createDate(y, m, d, h, M, s, ms) {
    var date = new Date(y, m, d, h, M, s, ms);
    return y < 100 && y >= 0 && isFinite(date.getFullYear()) && date.setFullYear(y), date
  }

  function createUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    return y < 100 && y >= 0 && isFinite(date.getUTCFullYear()) && date.setUTCFullYear(y), date
  }

  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365
  }

  function isLeapYear(year) {
    return year % 4 == 0 && year % 100 != 0 || year % 400 == 0
  }

  function getIsLeapYear() {
    return isLeapYear(this.year())
  }

  function firstWeekOffset(year, dow, doy) {
    var fwd = 7 + dow - doy;
    return -(7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7 + fwd - 1
  }

  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var resYear, resDayOfYear, localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear                                                                 = 1 + 7 * (week - 1) + localWeekday + weekOffset;
    return dayOfYear <= 0 ? (resYear = year - 1, resDayOfYear = daysInYear(resYear) + dayOfYear) : dayOfYear > daysInYear(year) ? (resYear = year + 1, resDayOfYear = dayOfYear - daysInYear(year)) : (resYear = year, resDayOfYear = dayOfYear), {
      year:      resYear,
      dayOfYear: resDayOfYear
    }
  }

  function weekOfYear(mom, dow, doy) {
    var resWeek, resYear, weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week                         = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1;
    return week < 1 ? (resYear = mom.year() - 1, resWeek = week + weeksInYear(resYear, dow, doy)) : week > weeksInYear(mom.year(), dow, doy) ? (resWeek = week - weeksInYear(mom.year(), dow, doy), resYear = mom.year() + 1) : (resYear = mom.year(), resWeek = week), {
      week: resWeek,
      year: resYear
    }
  }

  function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7
  }

  function defaults(a, b, c) {
    return null != a ? a : null != b ? b : c
  }

  function currentDateArray(config) {
    var nowValue = new Date(utils_hooks__hooks.now());
    return config._useUTC ? [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()] : [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()]
  }

  function configFromArray(config) {
    var i, date, currentDate, yearToUse, input = [];
    if (!config._d) {
      for (currentDate = currentDateArray(config), config._w && null == config._a[DATE] && null == config._a[MONTH] && dayOfYearFromWeekInfo(config), config._dayOfYear && (yearToUse = defaults(config._a[YEAR], currentDate[YEAR]), config._dayOfYear > daysInYear(yearToUse) && (getParsingFlags(config)._overflowDayOfYear = !0), date = createUTCDate(yearToUse, 0, config._dayOfYear), config._a[MONTH] = date.getUTCMonth(), config._a[DATE] = date.getUTCDate()), i = 0; i < 3 && null == config._a[i]; ++i) config._a[i] = input[i] = currentDate[i];
      for (; i < 7; i++) config._a[i] = input[i] = null == config._a[i] ? 2 === i ? 1 : 0 : config._a[i];
      24 === config._a[HOUR] && 0 === config._a[MINUTE] && 0 === config._a[SECOND] && 0 === config._a[MILLISECOND] && (config._nextDay = !0, config._a[HOUR] = 0), config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input), null != config._tzm && config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm), config._nextDay && (config._a[HOUR] = 24)
    }
  }

  function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
    w = config._w, null != w.GG || null != w.W || null != w.E ? (dow = 1, doy = 4, weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year), week = defaults(w.W, 1), ((weekday = defaults(w.E, 1)) < 1 || weekday > 7) && (weekdayOverflow = !0)) : (dow = config._locale._week.dow, doy = config._locale._week.doy, weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year), week = defaults(w.w, 1), null != w.d ? ((weekday = w.d) < 0 || weekday > 6) && (weekdayOverflow = !0) : null != w.e ? (weekday = w.e + dow, (w.e < 0 || w.e > 6) && (weekdayOverflow = !0)) : weekday = dow), week < 1 || week > weeksInYear(weekYear, dow, doy) ? getParsingFlags(config)._overflowWeeks = !0 : null != weekdayOverflow ? getParsingFlags(config)._overflowWeekday = !0 : (temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), config._a[YEAR] = temp.year, config._dayOfYear = temp.dayOfYear)
  }

  function configFromStringAndFormat(config) {
    if (config._f === utils_hooks__hooks.ISO_8601) return void configFromISO(config);
    config._a = [], getParsingFlags(config).empty = !0;
    var i, parsedInput, tokens, token, skipped, string = "" + config._i, stringLength = string.length,
        totalParsedInputLength                                                        = 0;
    for (tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [], i = 0; i < tokens.length; i++) token = tokens[i], parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0], parsedInput && (skipped = string.substr(0, string.indexOf(parsedInput)), skipped.length > 0 && getParsingFlags(config).unusedInput.push(skipped), string = string.slice(string.indexOf(parsedInput) + parsedInput.length), totalParsedInputLength += parsedInput.length), formatTokenFunctions[token] ? (parsedInput ? getParsingFlags(config).empty = !1 : getParsingFlags(config).unusedTokens.push(token), addTimeToArrayFromToken(token, parsedInput, config)) : config._strict && !parsedInput && getParsingFlags(config).unusedTokens.push(token);
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength, string.length > 0 && getParsingFlags(config).unusedInput.push(string), !0 === getParsingFlags(config).bigHour && config._a[HOUR] <= 12 && config._a[HOUR] > 0 && (getParsingFlags(config).bigHour = void 0), config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem), configFromArray(config), checkOverflow(config)
  }

  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;
    return null == meridiem ? hour : null != locale.meridiemHour ? locale.meridiemHour(hour, meridiem) : null != locale.isPM ? (isPm = locale.isPM(meridiem), isPm && hour < 12 && (hour += 12), isPm || 12 !== hour || (hour = 0), hour) : hour
  }

  function configFromStringAndArray(config) {
    var tempConfig, bestMoment, scoreToBeat, i, currentScore;
    if (0 === config._f.length) return getParsingFlags(config).invalidFormat = !0, void(config._d = new Date(NaN));
    for (i = 0; i < config._f.length; i++) currentScore = 0, tempConfig = copyConfig({}, config), null != config._useUTC && (tempConfig._useUTC = config._useUTC), tempConfig._f = config._f[i], configFromStringAndFormat(tempConfig), valid__isValid(tempConfig) && (currentScore += getParsingFlags(tempConfig).charsLeftOver, currentScore += 10 * getParsingFlags(tempConfig).unusedTokens.length, getParsingFlags(tempConfig).score = currentScore, (null == scoreToBeat || currentScore < scoreToBeat) && (scoreToBeat = currentScore, bestMoment = tempConfig));
    extend(config, bestMoment || tempConfig)
  }

  function configFromObject(config) {
    if (!config._d) {
      var i = normalizeObjectUnits(config._i);
      config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10)
      }), configFromArray(config)
    }
  }

  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    return res._nextDay && (res.add(1, "d"), res._nextDay = void 0), res
  }

  function prepareConfig(config) {
    var input = config._i, format = config._f;
    return config._locale = config._locale || locale_locales__getLocale(config._l), null === input || void 0 === format && "" === input ? valid__createInvalid({nullInput: !0}) : ("string" == typeof input && (config._i = input = config._locale.preparse(input)), isMoment(input) ? new Moment(checkOverflow(input)) : (isArray(format) ? configFromStringAndArray(config) : format ? configFromStringAndFormat(config) : isDate(input) ? config._d = input : configFromInput(config), valid__isValid(config) || (config._d = null), config))
  }

  function configFromInput(config) {
    var input = config._i;
    void 0 === input ? config._d = new Date(utils_hooks__hooks.now()) : isDate(input) ? config._d = new Date(+input) : "string" == typeof input ? configFromString(config) : isArray(input) ? (config._a = map(input.slice(0), function (obj) {
      return parseInt(obj, 10)
    }), configFromArray(config)) : "object" == typeof input ? configFromObject(config) : "number" == typeof input ? config._d = new Date(input) : utils_hooks__hooks.createFromInputFallback(config)
  }

  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};
    return "boolean" == typeof locale && (strict = locale, locale = void 0), c._isAMomentObject = !0, c._useUTC = c._isUTC = isUTC, c._l = locale, c._i = input, c._f = format, c._strict = strict, createFromConfig(c)
  }

  function local__createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, !1)
  }

  function pickBy(fn, moments) {
    var res, i;
    if (1 === moments.length && isArray(moments[0]) && (moments = moments[0]), !moments.length) return local__createLocal();
    for (res = moments[0], i = 1; i < moments.length; ++i) moments[i].isValid() && !moments[i][fn](res) || (res = moments[i]);
    return res
  }

  function min() {
    return pickBy("isBefore", [].slice.call(arguments, 0))
  }

  function max() {
    return pickBy("isAfter", [].slice.call(arguments, 0))
  }

  function Duration(duration) {
    var normalizedInput                                                           = normalizeObjectUnits(duration), years = normalizedInput.year || 0,
        quarters                                                                  = normalizedInput.quarter || 0, months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0, days = normalizedInput.day || 0, hours = normalizedInput.hour || 0,
        minutes                                                                   = normalizedInput.minute || 0, seconds = normalizedInput.second || 0,
        milliseconds                                                              = normalizedInput.millisecond || 0;
    this._milliseconds = +milliseconds + 1e3 * seconds + 6e4 * minutes + 36e5 * hours, this._days = +days + 7 * weeks, this._months = +months + 3 * quarters + 12 * years, this._data = {}, this._locale = locale_locales__getLocale(), this._bubble()
  }

  function isDuration(obj) {
    return obj instanceof Duration
  }

  function offset(token, separator) {
    addFormatToken(token, 0, 0, function () {
      var offset = this.utcOffset(), sign = "+";
      return offset < 0 && (offset = -offset, sign = "-"), sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2)
    })
  }

  function offsetFromString(matcher, string) {
    var matches                                                         = (string || "").match(matcher) || [], chunk = matches[matches.length - 1] || [],
        parts = (chunk + "").match(chunkOffset) || ["-", 0, 0], minutes = 60 * parts[1] + toInt(parts[2]);
    return "+" === parts[0] ? minutes : -minutes
  }

  function cloneWithOffset(input, model) {
    var res, diff;
    return model._isUTC ? (res = model.clone(), diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - +res, res._d.setTime(+res._d + diff), utils_hooks__hooks.updateOffset(res, !1), res) : local__createLocal(input).local()
  }

  function getDateOffset(m) {
    return 15 * -Math.round(m._d.getTimezoneOffset() / 15)
  }

  function getSetOffset(input, keepLocalTime) {
    var localAdjust, offset = this._offset || 0;
    return this.isValid() ? null != input ? ("string" == typeof input ? input = offsetFromString(matchShortOffset, input) : Math.abs(input) < 16 && (input *= 60), !this._isUTC && keepLocalTime && (localAdjust = getDateOffset(this)), this._offset = input, this._isUTC = !0, null != localAdjust && this.add(localAdjust, "m"), offset !== input && (!keepLocalTime || this._changeInProgress ? add_subtract__addSubtract(this, create__createDuration(input - offset, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, utils_hooks__hooks.updateOffset(this, !0), this._changeInProgress = null)), this) : this._isUTC ? offset : getDateOffset(this) : null != input ? this : NaN
  }

  function getSetZone(input, keepLocalTime) {
    return null != input ? ("string" != typeof input && (input = -input), this.utcOffset(input, keepLocalTime), this) : -this.utcOffset()
  }

  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime)
  }

  function setOffsetToLocal(keepLocalTime) {
    return this._isUTC && (this.utcOffset(0, keepLocalTime), this._isUTC = !1, keepLocalTime && this.subtract(getDateOffset(this), "m")), this
  }

  function setOffsetToParsedOffset() {
    return this._tzm ? this.utcOffset(this._tzm) : "string" == typeof this._i && this.utcOffset(offsetFromString(matchOffset, this._i)), this
  }

  function hasAlignedHourOffset(input) {
    return !!this.isValid() && (input = input ? local__createLocal(input).utcOffset() : 0, (this.utcOffset() - input) % 60 == 0)
  }

  function isDaylightSavingTime() {
    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
  }

  function isDaylightSavingTimeShifted() {
    if (!isUndefined(this._isDSTShifted)) return this._isDSTShifted;
    var c = {};
    if (copyConfig(c, this), c = prepareConfig(c), c._a) {
      var other          = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0
    } else this._isDSTShifted = !1;
    return this._isDSTShifted
  }

  function isLocal() {
    return !!this.isValid() && !this._isUTC
  }

  function isUtcOffset() {
    return !!this.isValid() && this._isUTC
  }

  function isUtc() {
    return !!this.isValid() && (this._isUTC && 0 === this._offset)
  }

  function create__createDuration(input, key) {
    var sign, ret, diffRes, duration = input, match = null;
    return isDuration(input) ? duration = {
      ms: input._milliseconds,
      d:  input._days,
      M:  input._months
    } : "number" == typeof input ? (duration = {}, key ? duration[key] = input : duration.milliseconds = input) : (match = aspNetRegex.exec(input)) ? (sign = "-" === match[1] ? -1 : 1, duration = {
      y:  0,
      d:  toInt(match[DATE]) * sign,
      h:  toInt(match[HOUR]) * sign,
      m:  toInt(match[MINUTE]) * sign,
      s:  toInt(match[SECOND]) * sign,
      ms: toInt(match[MILLISECOND]) * sign
    }) : (match = isoRegex.exec(input)) ? (sign = "-" === match[1] ? -1 : 1, duration = {
      y: parseIso(match[2], sign),
      M: parseIso(match[3], sign),
      w: parseIso(match[4], sign),
      d: parseIso(match[5], sign),
      h: parseIso(match[6], sign),
      m: parseIso(match[7], sign),
      s: parseIso(match[8], sign)
    }) : null == duration ? duration = {} : "object" == typeof duration && ("from" in duration || "to" in duration) && (diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to)), duration = {}, duration.ms = diffRes.milliseconds, duration.M = diffRes.months), ret = new Duration(duration), isDuration(input) && hasOwnProp(input, "_locale") && (ret._locale = input._locale), ret
  }

  function parseIso(inp, sign) {
    var res = inp && parseFloat(inp.replace(",", "."));
    return (isNaN(res) ? 0 : res) * sign
  }

  function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};
    return res.months = other.month() - base.month() + 12 * (other.year() - base.year()), base.clone().add(res.months, "M").isAfter(other) && --res.months, res.milliseconds = +other - +base.clone().add(res.months, "M"), res
  }

  function momentsDifference(base, other) {
    var res;
    return base.isValid() && other.isValid() ? (other = cloneWithOffset(other, base), base.isBefore(other) ? res = positiveMomentsDifference(base, other) : (res = positiveMomentsDifference(other, base), res.milliseconds = -res.milliseconds, res.months = -res.months), res) : {
      milliseconds: 0,
      months:       0
    }
  }

  function absRound(number) {
    return number < 0 ? -1 * Math.round(-1 * number) : Math.round(number)
  }

  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp;
      return null === period || isNaN(+period) || (deprecateSimple(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period)."), tmp = val, val = period, period = tmp), val = "string" == typeof val ? +val : val, dur = create__createDuration(val, period), add_subtract__addSubtract(this, dur, direction), this
    }
  }

  function add_subtract__addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds, days = absRound(duration._days), months = absRound(duration._months);
    mom.isValid() && (updateOffset = null == updateOffset || updateOffset, milliseconds && mom._d.setTime(+mom._d + milliseconds * isAdding), days && get_set__set(mom, "Date", get_set__get(mom, "Date") + days * isAdding), months && setMonth(mom, get_set__get(mom, "Month") + months * isAdding), updateOffset && utils_hooks__hooks.updateOffset(mom, days || months))
  }

  function moment_calendar__calendar(time, formats) {
    var now = time || local__createLocal(), sod = cloneWithOffset(now, this).startOf("day"),
        diff                                    = this.diff(sod, "days", !0),
        format                                  = diff < -6 ? "sameElse" : diff < -1 ? "lastWeek" : diff < 0 ? "lastDay" : diff < 1 ? "sameDay" : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse",
        output                                  = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);
    return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)))
  }

  function clone() {
    return new Moment(this)
  }

  function isAfter(input, units) {
    var localInput = isMoment(input) ? input : local__createLocal(input);
    return !(!this.isValid() || !localInput.isValid()) && (units = normalizeUnits(isUndefined(units) ? "millisecond" : units), "millisecond" === units ? +this > +localInput : +localInput < +this.clone().startOf(units))
  }

  function isBefore(input, units) {
    var localInput = isMoment(input) ? input : local__createLocal(input);
    return !(!this.isValid() || !localInput.isValid()) && (units = normalizeUnits(isUndefined(units) ? "millisecond" : units), "millisecond" === units ? +this < +localInput : +this.clone().endOf(units) < +localInput)
  }

  function isBetween(from, to, units) {
    return this.isAfter(from, units) && this.isBefore(to, units)
  }

  function isSame(input, units) {
    var inputMs, localInput = isMoment(input) ? input : local__createLocal(input);
    return !(!this.isValid() || !localInput.isValid()) && (units = normalizeUnits(units || "millisecond"), "millisecond" === units ? +this == +localInput : (inputMs = +localInput, +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units)))
  }

  function isSameOrAfter(input, units) {
    return this.isSame(input, units) || this.isAfter(input, units)
  }

  function isSameOrBefore(input, units) {
    return this.isSame(input, units) || this.isBefore(input, units)
  }

  function diff(input, units, asFloat) {
    var that, zoneDelta, delta, output;
    return this.isValid() ? (that = cloneWithOffset(input, this), that.isValid() ? (zoneDelta = 6e4 * (that.utcOffset() - this.utcOffset()), units = normalizeUnits(units), "year" === units || "month" === units || "quarter" === units ? (output = monthDiff(this, that), "quarter" === units ? output /= 3 : "year" === units && (output /= 12)) : (delta = this - that, output = "second" === units ? delta / 1e3 : "minute" === units ? delta / 6e4 : "hour" === units ? delta / 36e5 : "day" === units ? (delta - zoneDelta) / 864e5 : "week" === units ? (delta - zoneDelta) / 6048e5 : delta), asFloat ? output : absFloor(output)) : NaN) : NaN
  }

  function monthDiff(a, b) {
    var anchor2, adjust, wholeMonthDiff = 12 * (b.year() - a.year()) + (b.month() - a.month()),
        anchor                          = a.clone().add(wholeMonthDiff, "months");
    return b - anchor < 0 ? (anchor2 = a.clone().add(wholeMonthDiff - 1, "months"), adjust = (b - anchor) / (anchor - anchor2)) : (anchor2 = a.clone().add(wholeMonthDiff + 1, "months"), adjust = (b - anchor) / (anchor2 - anchor)), -(wholeMonthDiff + adjust)
  }

  function toString() {
    return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
  }

  function moment_format__toISOString() {
    var m = this.clone().utc();
    return 0 < m.year() && m.year() <= 9999 ? isFunction(Date.prototype.toISOString) ? this.toDate().toISOString() : formatMoment(m, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : formatMoment(m, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
  }

  function format(inputString) {
    var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
    return this.localeData().postformat(output)
  }

  function from(time, withoutSuffix) {
    return this.isValid() && (isMoment(time) && time.isValid() || local__createLocal(time).isValid()) ? create__createDuration({
      to:   this,
      from: time
    }).locale(this.locale()).humanize(!withoutSuffix) : this.localeData().invalidDate()
  }

  function fromNow(withoutSuffix) {
    return this.from(local__createLocal(), withoutSuffix)
  }

  function to(time, withoutSuffix) {
    return this.isValid() && (isMoment(time) && time.isValid() || local__createLocal(time).isValid()) ? create__createDuration({
      from: this,
      to:   time
    }).locale(this.locale()).humanize(!withoutSuffix) : this.localeData().invalidDate()
  }

  function toNow(withoutSuffix) {
    return this.to(local__createLocal(), withoutSuffix)
  }

  function locale(key) {
    var newLocaleData;
    return void 0 === key ? this._locale._abbr : (newLocaleData = locale_locales__getLocale(key), null != newLocaleData && (this._locale = newLocaleData), this)
  }

  function localeData() {
    return this._locale
  }

  function startOf(units) {
    switch (units = normalizeUnits(units)) {
      case"year":
        this.month(0);
      case"quarter":
      case"month":
        this.date(1);
      case"week":
      case"isoWeek":
      case"day":
        this.hours(0);
      case"hour":
        this.minutes(0);
      case"minute":
        this.seconds(0);
      case"second":
        this.milliseconds(0)
    }
    return "week" === units && this.weekday(0), "isoWeek" === units && this.isoWeekday(1), "quarter" === units && this.month(3 * Math.floor(this.month() / 3)), this
  }

  function endOf(units) {
    return units = normalizeUnits(units), void 0 === units || "millisecond" === units ? this : this.startOf(units).add(1, "isoWeek" === units ? "week" : units).subtract(1, "ms")
  }

  function to_type__valueOf() {
    return +this._d - 6e4 * (this._offset || 0)
  }

  function unix() {
    return Math.floor(+this / 1e3)
  }

  function toDate() {
    return this._offset ? new Date(+this) : this._d
  }

  function toArray() {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()]
  }

  function toObject() {
    var m = this;
    return {
      years:        m.year(),
      months:       m.month(),
      date:         m.date(),
      hours:        m.hours(),
      minutes:      m.minutes(),
      seconds:      m.seconds(),
      milliseconds: m.milliseconds()
    }
  }

  function toJSON() {
    return this.isValid() ? this.toISOString() : null
  }

  function moment_valid__isValid() {
    return valid__isValid(this)
  }

  function parsingFlags() {
    return extend({}, getParsingFlags(this))
  }

  function invalidAt() {
    return getParsingFlags(this).overflow
  }

  function creationData() {
    return {input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict}
  }

  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter)
  }

  function getSetWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
  }

  function getSetISOWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4)
  }

  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4)
  }

  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy)
  }

  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    return null == input ? weekOfYear(this, dow, doy).year : (weeksTarget = weeksInYear(input, dow, doy), week > weeksTarget && (week = weeksTarget), setWeekAll.call(this, input, week, weekday, dow, doy))
  }

  function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date          = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
    return this.year(date.getUTCFullYear()), this.month(date.getUTCMonth()), this.date(date.getUTCDate()), this
  }

  function getSetQuarter(input) {
    return null == input ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (input - 1) + this.month() % 3)
  }

  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week
  }

  function localeFirstDayOfWeek() {
    return this._week.dow
  }

  function localeFirstDayOfYear() {
    return this._week.doy
  }

  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return null == input ? week : this.add(7 * (input - week), "d")
  }

  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return null == input ? week : this.add(7 * (input - week), "d")
  }

  function parseWeekday(input, locale) {
    return "string" != typeof input ? input : isNaN(input) ? (input = locale.weekdaysParse(input), "number" == typeof input ? input : null) : parseInt(input, 10)
  }

  function localeWeekdays(m, format) {
    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? "format" : "standalone"][m.day()]
  }

  function localeWeekdaysShort(m) {
    return this._weekdaysShort[m.day()]
  }

  function localeWeekdaysMin(m) {
    return this._weekdaysMin[m.day()]
  }

  function localeWeekdaysParse(weekdayName, format, strict) {
    var i, mom, regex;
    for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), i = 0; i < 7; i++) {
      if (mom = local__createLocal([2e3, 1]).day(i), strict && !this._fullWeekdaysParse[i] && (this._fullWeekdaysParse[i] = new RegExp("^" + this.weekdays(mom, "").replace(".", ".?") + "$", "i"), this._shortWeekdaysParse[i] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", ".?") + "$", "i"), this._minWeekdaysParse[i] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", ".?") + "$", "i")), this._weekdaysParse[i] || (regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, ""), this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i")), strict && "dddd" === format && this._fullWeekdaysParse[i].test(weekdayName)) return i;
      if (strict && "ddd" === format && this._shortWeekdaysParse[i].test(weekdayName)) return i;
      if (strict && "dd" === format && this._minWeekdaysParse[i].test(weekdayName)) return i;
      if (!strict && this._weekdaysParse[i].test(weekdayName)) return i
    }
  }

  function getSetDayOfWeek(input) {
    if (!this.isValid()) return null != input ? this : NaN;
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    return null != input ? (input = parseWeekday(input, this.localeData()), this.add(input - day, "d")) : day
  }

  function getSetLocaleDayOfWeek(input) {
    if (!this.isValid()) return null != input ? this : NaN;
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return null == input ? weekday : this.add(input - weekday, "d")
  }

  function getSetISODayOfWeek(input) {
    return this.isValid() ? null == input ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7) : null != input ? this : NaN
  }

  function getSetDayOfYear(input) {
    var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
    return null == input ? dayOfYear : this.add(input - dayOfYear, "d")
  }

  function hFormat() {
    return this.hours() % 12 || 12
  }

  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function () {
      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase)
    })
  }

  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse
  }

  function localeIsPM(input) {
    return "p" === (input + "").toLowerCase().charAt(0)
  }

  function localeMeridiem(hours, minutes, isLower) {
    return hours > 11 ? isLower ? "pm" : "PM" : isLower ? "am" : "AM"
  }

  function parseMs(input, array) {
    array[MILLISECOND] = toInt(1e3 * ("0." + input))
  }

  function getZoneAbbr() {
    return this._isUTC ? "UTC" : ""
  }

  function getZoneName() {
    return this._isUTC ? "Coordinated Universal Time" : ""
  }

  function moment__createUnix(input) {
    return local__createLocal(1e3 * input)
  }

  function moment__createInZone() {
    return local__createLocal.apply(null, arguments).parseZone()
  }

  function locale_calendar__calendar(key, mom, now) {
    var output = this._calendar[key];
    return isFunction(output) ? output.call(mom, now) : output
  }

  function longDateFormat(key) {
    var format = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
    return format || !formatUpper ? format : (this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
      return val.slice(1)
    }), this._longDateFormat[key])
  }

  function invalidDate() {
    return this._invalidDate
  }

  function ordinal(number) {
    return this._ordinal.replace("%d", number)
  }

  function preParsePostFormat(string) {
    return string
  }

  function relative__relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number)
  }

  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? "future" : "past"];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output)
  }

  function lists__get(format, index, field, setter) {
    var locale = locale_locales__getLocale(), utc = create_utc__createUTC().set(setter, index);
    return locale[field](utc, format)
  }

  function list(format, index, field, count, setter) {
    if ("number" == typeof format && (index = format, format = void 0), format = format || "", null != index) return lists__get(format, index, field, setter);
    var i, out = [];
    for (i = 0; i < count; i++) out[i] = lists__get(format, i, field, setter);
    return out
  }

  function lists__listMonths(format, index) {
    return list(format, index, "months", 12, "month")
  }

  function lists__listMonthsShort(format, index) {
    return list(format, index, "monthsShort", 12, "month")
  }

  function lists__listWeekdays(format, index) {
    return list(format, index, "weekdays", 7, "day")
  }

  function lists__listWeekdaysShort(format, index) {
    return list(format, index, "weekdaysShort", 7, "day")
  }

  function lists__listWeekdaysMin(format, index) {
    return list(format, index, "weekdaysMin", 7, "day")
  }

  function duration_abs__abs() {
    var data = this._data;
    return this._milliseconds = mathAbs(this._milliseconds), this._days = mathAbs(this._days), this._months = mathAbs(this._months), data.milliseconds = mathAbs(data.milliseconds), data.seconds = mathAbs(data.seconds), data.minutes = mathAbs(data.minutes), data.hours = mathAbs(data.hours), data.months = mathAbs(data.months), data.years = mathAbs(data.years), this
  }

  function duration_add_subtract__addSubtract(duration, input, value, direction) {
    var other = create__createDuration(input, value);
    return duration._milliseconds += direction * other._milliseconds, duration._days += direction * other._days, duration._months += direction * other._months, duration._bubble()
  }

  function duration_add_subtract__add(input, value) {
    return duration_add_subtract__addSubtract(this, input, value, 1)
  }

  function duration_add_subtract__subtract(input, value) {
    return duration_add_subtract__addSubtract(this, input, value, -1)
  }

  function absCeil(number) {
    return number < 0 ? Math.floor(number) : Math.ceil(number)
  }

  function bubble() {
    var seconds, minutes, hours, years, monthsFromDays, milliseconds = this._milliseconds, days = this._days,
        months                                                                                  = this._months, data                                                             = this._data;
    return milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0 || (milliseconds += 864e5 * absCeil(monthsToDays(months) + days), days = 0, months = 0), data.milliseconds = milliseconds % 1e3, seconds = absFloor(milliseconds / 1e3), data.seconds = seconds % 60,
      minutes = absFloor(seconds / 60), data.minutes = minutes % 60, hours = absFloor(minutes / 60), data.hours = hours % 24, days += absFloor(hours / 24), monthsFromDays = absFloor(daysToMonths(days)), months += monthsFromDays, days -= absCeil(monthsToDays(monthsFromDays)), years = absFloor(months / 12), months %= 12, data.days = days, data.months = months, data.years = years, this
  }

  function daysToMonths(days) {
    return 4800 * days / 146097
  }

  function monthsToDays(months) {
    return 146097 * months / 4800
  }

  function as(units) {
    var days, months, milliseconds = this._milliseconds;
    if ("month" === (units = normalizeUnits(units)) || "year" === units) return days = this._days + milliseconds / 864e5, months = this._months + daysToMonths(days), "month" === units ? months : months / 12;
    switch (days = this._days + Math.round(monthsToDays(this._months)), units) {
      case"week":
        return days / 7 + milliseconds / 6048e5;
      case"day":
        return days + milliseconds / 864e5;
      case"hour":
        return 24 * days + milliseconds / 36e5;
      case"minute":
        return 1440 * days + milliseconds / 6e4;
      case"second":
        return 86400 * days + milliseconds / 1e3;
      case"millisecond":
        return Math.floor(864e5 * days) + milliseconds;
      default:
        throw new Error("Unknown unit " + units)
    }
  }

  function duration_as__valueOf() {
    return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * toInt(this._months / 12)
  }

  function makeAs(alias) {
    return function () {
      return this.as(alias)
    }
  }

  function duration_get__get(units) {
    return units = normalizeUnits(units), this[units + "s"]()
  }

  function makeGetter(name) {
    return function () {
      return this._data[name]
    }
  }

  function weeks() {
    return absFloor(this.days() / 7)
  }

  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture)
  }

  function duration_humanize__relativeTime(posNegDuration, withoutSuffix, locale) {
    var duration                                                                 = create__createDuration(posNegDuration).abs(), seconds         = round(duration.as("s")),
        minutes = round(duration.as("m")), hours = round(duration.as("h")), days = round(duration.as("d")),
        months                                                                   = round(duration.as("M")), years                                  = round(duration.as("y")),
        a                                                                        = seconds < thresholds.s && ["s", seconds] || minutes <= 1 && ["m"] || minutes < thresholds.m && ["mm", minutes] || hours <= 1 && ["h"] || hours < thresholds.h && ["hh", hours] || days <= 1 && ["d"] || days < thresholds.d && ["dd", days] || months <= 1 && ["M"] || months < thresholds.M && ["MM", months] || years <= 1 && ["y"] || ["yy", years];
    return a[2] = withoutSuffix, a[3] = +posNegDuration > 0, a[4] = locale, substituteTimeAgo.apply(null, a)
  }

  function duration_humanize__getSetRelativeTimeThreshold(threshold, limit) {
    return void 0 !== thresholds[threshold] && (void 0 === limit ? thresholds[threshold] : (thresholds[threshold] = limit, !0))
  }

  function humanize(withSuffix) {
    var locale = this.localeData(), output = duration_humanize__relativeTime(this, !withSuffix, locale);
    return withSuffix && (output = locale.pastFuture(+this, output)), locale.postformat(output)
  }

  function iso_string__toISOString() {
    var minutes, hours, years, seconds = iso_string__abs(this._milliseconds) / 1e3, days = iso_string__abs(this._days),
        months                                                                           = iso_string__abs(this._months);
    minutes = absFloor(seconds / 60), hours = absFloor(minutes / 60), seconds %= 60, minutes %= 60, years = absFloor(months / 12), months %= 12;
    var Y = years, M = months, D = days, h = hours, m = minutes, s = seconds, total = this.asSeconds();
    return total ? (total < 0 ? "-" : "") + "P" + (Y ? Y + "Y" : "") + (M ? M + "M" : "") + (D ? D + "D" : "") + (h || m || s ? "T" : "") + (h ? h + "H" : "") + (m ? m + "M" : "") + (s ? s + "S" : "") : "P0D"
  }

  var hookCallback, momentProperties = utils_hooks__hooks.momentProperties = [], updateInProgress = !1,
      deprecations                                                                                = {};
  utils_hooks__hooks.suppressDeprecationWarnings                                                  = !1;
  var globalLocale, locales                                                                       = {}, aliases = {},
      formattingTokens                                                                            = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
      localFormattingTokens                                                                       = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
      formatFunctions                                                                             = {},
      formatTokenFunctions                                                                        = {}, match1                                                           = /\d/,
      match2                                                                                      = /\d\d/,
      match3                                                                                      = /\d{3}/,
      match4                                                                                      = /\d{4}/,
      match6                                                                                      = /[+-]?\d{6}/,
      match1to2                                                                                   = /\d\d?/,
      match3to4                                                                                   = /\d\d\d\d?/,
      match5to6                                                                                   = /\d\d\d\d\d\d?/,
      match1to3                                                                                   = /\d{1,3}/,
      match1to4                                                                                   = /\d{1,4}/,
      match1to6                                                                                   = /[+-]?\d{1,6}/,
      matchUnsigned                                                                               = /\d+/,
      matchSigned                                                                                 = /[+-]?\d+/,
      matchOffset                                                                                 = /Z|[+-]\d\d:?\d\d/gi,
      matchShortOffset                                                                            = /Z|[+-]\d\d(?::?\d\d)?/gi,
      matchTimestamp                                                                              = /[+-]?\d+(\.\d{1,3})?/,
      matchWord                                                                                   = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
      regexes                                                                                     = {}, tokens = {},
      YEAR                                                                                        = 0, MONTH = 1,
      DATE                                                                                        = 2, HOUR = 3,
      MINUTE                                                                                      = 4, SECOND                                                                          = 5,
      MILLISECOND                                                                                 = 6, WEEK                                                                       = 7,
      WEEKDAY                                                                                     = 8;
  addFormatToken("M", ["MM", 2], "Mo", function () {
    return this.month() + 1
  }), addFormatToken("MMM", 0, 0, function (format) {
    return this.localeData().monthsShort(this, format)
  }), addFormatToken("MMMM", 0, 0, function (format) {
    return this.localeData().months(this, format)
  }), addUnitAlias("month", "M"), addRegexToken("M", match1to2), addRegexToken("MM", match1to2, match2), addRegexToken("MMM", function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict)
  }), addRegexToken("MMMM", function (isStrict, locale) {
    return locale.monthsRegex(isStrict)
  }), addParseToken(["M", "MM"], function (input, array) {
    array[MONTH] = toInt(input) - 1
  }), addParseToken(["MMM", "MMMM"], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    null != month ? array[MONTH] = month : getParsingFlags(config).invalidMonth = input
  });
  var MONTHS_IN_FORMAT                                        = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/,
      defaultLocaleMonths                                     = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
      defaultLocaleMonthsShort                                = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
      defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord,
      extendedIsoRegex                                        = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,
      basicIsoRegex                                           = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,
      tzRegex                                                 = /Z|[+-]\d\d(?::?\d\d)?/,
      isoDates                                                = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/]],
      isoTimes                                                = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]],
      aspNetJsonRegex                                         = /^\/?Date\((\-?\d+)/i;
  utils_hooks__hooks.createFromInputFallback = deprecate("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function (config) {
    config._d = new Date(config._i + (config._useUTC ? " UTC" : ""))
  }), addFormatToken("Y", 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? "" + y : "+" + y
  }), addFormatToken(0, ["YY", 2], 0, function () {
    return this.year() % 100
  }), addFormatToken(0, ["YYYY", 4], 0, "year"), addFormatToken(0, ["YYYYY", 5], 0, "year"), addFormatToken(0, ["YYYYYY", 6, !0], 0, "year"), addUnitAlias("year", "y"), addRegexToken("Y", matchSigned), addRegexToken("YY", match1to2, match2), addRegexToken("YYYY", match1to4, match4), addRegexToken("YYYYY", match1to6, match6), addRegexToken("YYYYYY", match1to6, match6), addParseToken(["YYYYY", "YYYYYY"], YEAR), addParseToken("YYYY", function (input, array) {
    array[YEAR] = 2 === input.length ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input)
  }), addParseToken("YY", function (input, array) {
    array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input)
  }), addParseToken("Y", function (input, array) {
    array[YEAR] = parseInt(input, 10)
  }), utils_hooks__hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3)
  };
  var getSetYear              = makeGetSet("FullYear", !1);
  utils_hooks__hooks.ISO_8601 = function () {
  };
  var prototypeMin            = deprecate("moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function () {
        var other = local__createLocal.apply(null, arguments);
        return this.isValid() && other.isValid() ? other < this ? this : other : valid__createInvalid()
      }),
      prototypeMax            = deprecate("moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function () {
        var other = local__createLocal.apply(null, arguments);
        return this.isValid() && other.isValid() ? other > this ? this : other : valid__createInvalid()
      }), now                 = function () {
        return Date.now ? Date.now() : +new Date
      };
  offset("Z", ":"), offset("ZZ", ""), addRegexToken("Z", matchShortOffset), addRegexToken("ZZ", matchShortOffset), addParseToken(["Z", "ZZ"], function (input, array, config) {
    config._useUTC = !0, config._tzm = offsetFromString(matchShortOffset, input)
  });
  var chunkOffset                                                       = /([\+\-]|\d\d)/gi;
  utils_hooks__hooks.updateOffset                                       = function () {
  };
  var aspNetRegex                                                       = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/,
      isoRegex                                                          = /^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/;
  create__createDuration.fn                                             = Duration.prototype;
  var add_subtract__add = createAdder(1, "add"), add_subtract__subtract = createAdder(-1, "subtract");
  utils_hooks__hooks.defaultFormat                                      = "YYYY-MM-DDTHH:mm:ssZ";
  var lang                                                              = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (key) {
    return void 0 === key ? this.localeData() : this.locale(key)
  });
  addFormatToken(0, ["gg", 2], 0, function () {
    return this.weekYear() % 100
  }), addFormatToken(0, ["GG", 2], 0, function () {
    return this.isoWeekYear() % 100
  }), addWeekYearFormatToken("gggg", "weekYear"), addWeekYearFormatToken("ggggg", "weekYear"), addWeekYearFormatToken("GGGG", "isoWeekYear"), addWeekYearFormatToken("GGGGG", "isoWeekYear"), addUnitAlias("weekYear", "gg"), addUnitAlias("isoWeekYear", "GG"), addRegexToken("G", matchSigned), addRegexToken("g", matchSigned), addRegexToken("GG", match1to2, match2), addRegexToken("gg", match1to2, match2), addRegexToken("GGGG", match1to4, match4), addRegexToken("gggg", match1to4, match4), addRegexToken("GGGGG", match1to6, match6), addRegexToken("ggggg", match1to6, match6), addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input)
  }), addWeekParseToken(["gg", "GG"], function (input, week, config, token) {
    week[token] = utils_hooks__hooks.parseTwoDigitYear(input)
  }), addFormatToken("Q", 0, "Qo", "quarter"), addUnitAlias("quarter", "Q"), addRegexToken("Q", match1), addParseToken("Q", function (input, array) {
    array[MONTH] = 3 * (toInt(input) - 1)
  }), addFormatToken("w", ["ww", 2], "wo", "week"), addFormatToken("W", ["WW", 2], "Wo", "isoWeek"), addUnitAlias("week", "w"), addUnitAlias("isoWeek", "W"), addRegexToken("w", match1to2), addRegexToken("ww", match1to2, match2), addRegexToken("W", match1to2), addRegexToken("WW", match1to2, match2), addWeekParseToken(["w", "ww", "W", "WW"], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input)
  });
  var defaultLocaleWeek = {dow: 0, doy: 6};
  addFormatToken("D", ["DD", 2], "Do", "date"), addUnitAlias("date", "D"), addRegexToken("D", match1to2), addRegexToken("DD", match1to2, match2), addRegexToken("Do", function (isStrict, locale) {
    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient
  }), addParseToken(["D", "DD"], DATE), addParseToken("Do", function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10)
  });
  var getSetDayOfMonth = makeGetSet("Date", !0);
  addFormatToken("d", 0, "do", "day"), addFormatToken("dd", 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format)
  }), addFormatToken("ddd", 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format)
  }), addFormatToken("dddd", 0, 0, function (format) {
    return this.localeData().weekdays(this, format)
  }), addFormatToken("e", 0, 0, "weekday"), addFormatToken("E", 0, 0, "isoWeekday"), addUnitAlias("day", "d"), addUnitAlias("weekday", "e"), addUnitAlias("isoWeekday", "E"), addRegexToken("d", match1to2), addRegexToken("e", match1to2), addRegexToken("E", match1to2), addRegexToken("dd", matchWord), addRegexToken("ddd", matchWord), addRegexToken("dddd", matchWord), addWeekParseToken(["dd", "ddd", "dddd"], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    null != weekday ? week.d = weekday : getParsingFlags(config).invalidWeekday = input
  }), addWeekParseToken(["d", "e", "E"], function (input, week, config, token) {
    week[token] = toInt(input)
  });
  var defaultLocaleWeekdays      = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
      defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
      defaultLocaleWeekdaysMin   = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
  addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), addUnitAlias("dayOfYear", "DDD"), addRegexToken("DDD", match1to3), addRegexToken("DDDD", match3), addParseToken(["DDD", "DDDD"], function (input, array, config) {
    config._dayOfYear = toInt(input)
  }), addFormatToken("H", ["HH", 2], 0, "hour"), addFormatToken("h", ["hh", 2], 0, hFormat), addFormatToken("hmm", 0, 0, function () {
    return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2)
  }), addFormatToken("hmmss", 0, 0, function () {
    return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)
  }), addFormatToken("Hmm", 0, 0, function () {
    return "" + this.hours() + zeroFill(this.minutes(), 2)
  }), addFormatToken("Hmmss", 0, 0, function () {
    return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)
  }), meridiem("a", !0), meridiem("A", !1), addUnitAlias("hour", "h"), addRegexToken("a", matchMeridiem), addRegexToken("A", matchMeridiem), addRegexToken("H", match1to2), addRegexToken("h", match1to2), addRegexToken("HH", match1to2, match2), addRegexToken("hh", match1to2, match2), addRegexToken("hmm", match3to4), addRegexToken("hmmss", match5to6), addRegexToken("Hmm", match3to4), addRegexToken("Hmmss", match5to6), addParseToken(["H", "HH"], HOUR), addParseToken(["a", "A"], function (input, array, config) {
    config._isPm = config._locale.isPM(input), config._meridiem = input
  }), addParseToken(["h", "hh"], function (input, array, config) {
    array[HOUR] = toInt(input), getParsingFlags(config).bigHour = !0
  }), addParseToken("hmm", function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos)), array[MINUTE] = toInt(input.substr(pos)), getParsingFlags(config).bigHour = !0
  }), addParseToken("hmmss", function (input, array, config) {
    var pos1 = input.length - 4, pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1)), array[MINUTE] = toInt(input.substr(pos1, 2)), array[SECOND] = toInt(input.substr(pos2)), getParsingFlags(config).bigHour = !0
  }), addParseToken("Hmm", function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos)), array[MINUTE] = toInt(input.substr(pos))
  }), addParseToken("Hmmss", function (input, array, config) {
    var pos1 = input.length - 4, pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1)), array[MINUTE] = toInt(input.substr(pos1, 2)), array[SECOND] = toInt(input.substr(pos2))
  });
  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", !0);
  addFormatToken("m", ["mm", 2], 0, "minute"), addUnitAlias("minute", "m"), addRegexToken("m", match1to2), addRegexToken("mm", match1to2, match2), addParseToken(["m", "mm"], MINUTE);
  var getSetMinute = makeGetSet("Minutes", !1);
  addFormatToken("s", ["ss", 2], 0, "second"), addUnitAlias("second", "s"), addRegexToken("s", match1to2), addRegexToken("ss", match1to2, match2), addParseToken(["s", "ss"], SECOND);
  var getSetSecond = makeGetSet("Seconds", !1);
  addFormatToken("S", 0, 0, function () {
    return ~~(this.millisecond() / 100)
  }), addFormatToken(0, ["SS", 2], 0, function () {
    return ~~(this.millisecond() / 10)
  }), addFormatToken(0, ["SSS", 3], 0, "millisecond"), addFormatToken(0, ["SSSS", 4], 0, function () {
    return 10 * this.millisecond()
  }), addFormatToken(0, ["SSSSS", 5], 0, function () {
    return 100 * this.millisecond()
  }), addFormatToken(0, ["SSSSSS", 6], 0, function () {
    return 1e3 * this.millisecond()
  }), addFormatToken(0, ["SSSSSSS", 7], 0, function () {
    return 1e4 * this.millisecond()
  }), addFormatToken(0, ["SSSSSSSS", 8], 0, function () {
    return 1e5 * this.millisecond()
  }), addFormatToken(0, ["SSSSSSSSS", 9], 0, function () {
    return 1e6 * this.millisecond()
  }), addUnitAlias("millisecond", "ms"), addRegexToken("S", match1to3, match1), addRegexToken("SS", match1to3, match2), addRegexToken("SSS", match1to3, match3);
  var token;
  for (token = "SSSS"; token.length <= 9; token += "S") addRegexToken(token, matchUnsigned);
  for (token = "S"; token.length <= 9; token += "S") addParseToken(token, parseMs);
  var getSetMillisecond = makeGetSet("Milliseconds", !1);
  addFormatToken("z", 0, 0, "zoneAbbr"), addFormatToken("zz", 0, 0, "zoneName");
  var momentPrototype__proto = Moment.prototype;
  momentPrototype__proto.add = add_subtract__add, momentPrototype__proto.calendar = moment_calendar__calendar, momentPrototype__proto.clone = clone, momentPrototype__proto.diff = diff, momentPrototype__proto.endOf = endOf, momentPrototype__proto.format = format, momentPrototype__proto.from = from, momentPrototype__proto.fromNow = fromNow, momentPrototype__proto.to = to, momentPrototype__proto.toNow = toNow, momentPrototype__proto.get = getSet, momentPrototype__proto.invalidAt = invalidAt, momentPrototype__proto.isAfter = isAfter, momentPrototype__proto.isBefore = isBefore, momentPrototype__proto.isBetween = isBetween, momentPrototype__proto.isSame = isSame, momentPrototype__proto.isSameOrAfter = isSameOrAfter, momentPrototype__proto.isSameOrBefore = isSameOrBefore, momentPrototype__proto.isValid = moment_valid__isValid, momentPrototype__proto.lang = lang, momentPrototype__proto.locale = locale, momentPrototype__proto.localeData = localeData, momentPrototype__proto.max = prototypeMax, momentPrototype__proto.min = prototypeMin, momentPrototype__proto.parsingFlags = parsingFlags, momentPrototype__proto.set = getSet, momentPrototype__proto.startOf = startOf, momentPrototype__proto.subtract = add_subtract__subtract, momentPrototype__proto.toArray = toArray, momentPrototype__proto.toObject = toObject, momentPrototype__proto.toDate = toDate, momentPrototype__proto.toISOString = moment_format__toISOString, momentPrototype__proto.toJSON = toJSON, momentPrototype__proto.toString = toString, momentPrototype__proto.unix = unix, momentPrototype__proto.valueOf = to_type__valueOf, momentPrototype__proto.creationData = creationData, momentPrototype__proto.year = getSetYear, momentPrototype__proto.isLeapYear = getIsLeapYear, momentPrototype__proto.weekYear = getSetWeekYear, momentPrototype__proto.isoWeekYear = getSetISOWeekYear, momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter, momentPrototype__proto.month = getSetMonth, momentPrototype__proto.daysInMonth = getDaysInMonth, momentPrototype__proto.week = momentPrototype__proto.weeks = getSetWeek, momentPrototype__proto.isoWeek = momentPrototype__proto.isoWeeks = getSetISOWeek, momentPrototype__proto.weeksInYear = getWeeksInYear, momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear, momentPrototype__proto.date = getSetDayOfMonth, momentPrototype__proto.day = momentPrototype__proto.days = getSetDayOfWeek, momentPrototype__proto.weekday = getSetLocaleDayOfWeek, momentPrototype__proto.isoWeekday = getSetISODayOfWeek, momentPrototype__proto.dayOfYear = getSetDayOfYear, momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour, momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute, momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond, momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond, momentPrototype__proto.utcOffset = getSetOffset, momentPrototype__proto.utc = setOffsetToUTC, momentPrototype__proto.local = setOffsetToLocal, momentPrototype__proto.parseZone = setOffsetToParsedOffset, momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset, momentPrototype__proto.isDST = isDaylightSavingTime, momentPrototype__proto.isDSTShifted = isDaylightSavingTimeShifted, momentPrototype__proto.isLocal = isLocal, momentPrototype__proto.isUtcOffset = isUtcOffset, momentPrototype__proto.isUtc = isUtc, momentPrototype__proto.isUTC = isUtc, momentPrototype__proto.zoneAbbr = getZoneAbbr, momentPrototype__proto.zoneName = getZoneName, momentPrototype__proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth), momentPrototype__proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth), momentPrototype__proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear), momentPrototype__proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", getSetZone);
  var momentPrototype      = momentPrototype__proto, defaultCalendar = {
    sameDay:  "[Today at] LT",
    nextDay:  "[Tomorrow at] LT",
    nextWeek: "dddd [at] LT",
    lastDay:  "[Yesterday at] LT",
    lastWeek: "[Last] dddd [at] LT",
    sameElse: "L"
  }, defaultLongDateFormat = {
    LTS:  "h:mm:ss A",
    LT:   "h:mm A",
    L:    "MM/DD/YYYY",
    LL:   "MMMM D, YYYY",
    LLL:  "MMMM D, YYYY h:mm A",
    LLLL: "dddd, MMMM D, YYYY h:mm A"
  }, defaultOrdinalParse   = /\d{1,2}/, defaultRelativeTime = {
    future: "in %s",
    past:   "%s ago",
    s:      "a few seconds",
    m:      "a minute",
    mm:     "%d minutes",
    h:      "an hour",
    hh:     "%d hours",
    d:      "a day",
    dd:     "%d days",
    M:      "a month",
    MM:     "%d months",
    y:      "a year",
    yy:     "%d years"
  }, prototype__proto      = Locale.prototype;
  prototype__proto._calendar = defaultCalendar, prototype__proto.calendar = locale_calendar__calendar, prototype__proto._longDateFormat = defaultLongDateFormat, prototype__proto.longDateFormat = longDateFormat, prototype__proto._invalidDate = "Invalid date", prototype__proto.invalidDate = invalidDate, prototype__proto._ordinal = "%d", prototype__proto.ordinal = ordinal, prototype__proto._ordinalParse = defaultOrdinalParse, prototype__proto.preparse = preParsePostFormat, prototype__proto.postformat = preParsePostFormat, prototype__proto._relativeTime = defaultRelativeTime, prototype__proto.relativeTime = relative__relativeTime, prototype__proto.pastFuture = pastFuture, prototype__proto.set = locale_set__set, prototype__proto.months = localeMonths, prototype__proto._months = defaultLocaleMonths, prototype__proto.monthsShort = localeMonthsShort, prototype__proto._monthsShort = defaultLocaleMonthsShort, prototype__proto.monthsParse = localeMonthsParse, prototype__proto._monthsRegex = defaultMonthsRegex, prototype__proto.monthsRegex = monthsRegex, prototype__proto._monthsShortRegex = defaultMonthsShortRegex, prototype__proto.monthsShortRegex = monthsShortRegex, prototype__proto.week = localeWeek, prototype__proto._week = defaultLocaleWeek, prototype__proto.firstDayOfYear = localeFirstDayOfYear, prototype__proto.firstDayOfWeek = localeFirstDayOfWeek, prototype__proto.weekdays = localeWeekdays, prototype__proto._weekdays = defaultLocaleWeekdays, prototype__proto.weekdaysMin = localeWeekdaysMin, prototype__proto._weekdaysMin = defaultLocaleWeekdaysMin, prototype__proto.weekdaysShort = localeWeekdaysShort, prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort, prototype__proto.weekdaysParse = localeWeekdaysParse, prototype__proto.isPM = localeIsPM, prototype__proto._meridiemParse = defaultLocaleMeridiemParse, prototype__proto.meridiem = localeMeridiem, locale_locales__getSetGlobalLocale("en", {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal:      function (number) {
      var b = number % 10;
      return number + (1 === toInt(number % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
    }
  }), utils_hooks__hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", locale_locales__getSetGlobalLocale), utils_hooks__hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", locale_locales__getLocale);
  var mathAbs                                                                       = Math.abs, asMilliseconds                                            = makeAs("ms"), asSeconds = makeAs("s"),
      asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"),
      asMonths                                                                      = makeAs("M"), asYears = makeAs("y"), milliseconds                   = makeGetter("milliseconds"),
      seconds                                                                       = makeGetter("seconds"), minutes                                      = makeGetter("minutes"), hours = makeGetter("hours"),
      days                                                                          = makeGetter("days"), months                                             = makeGetter("months"), years = makeGetter("years"),
      round                                                                         = Math.round, thresholds                                                = {s: 45, m: 45, h: 22, d: 26, M: 11},
      iso_string__abs                                                               = Math.abs, duration_prototype__proto = Duration.prototype;
  return duration_prototype__proto.abs = duration_abs__abs, duration_prototype__proto.add = duration_add_subtract__add, duration_prototype__proto.subtract = duration_add_subtract__subtract, duration_prototype__proto.as = as, duration_prototype__proto.asMilliseconds = asMilliseconds, duration_prototype__proto.asSeconds = asSeconds, duration_prototype__proto.asMinutes = asMinutes, duration_prototype__proto.asHours = asHours, duration_prototype__proto.asDays = asDays, duration_prototype__proto.asWeeks = asWeeks, duration_prototype__proto.asMonths = asMonths, duration_prototype__proto.asYears = asYears, duration_prototype__proto.valueOf = duration_as__valueOf, duration_prototype__proto._bubble = bubble, duration_prototype__proto.get = duration_get__get, duration_prototype__proto.milliseconds = milliseconds, duration_prototype__proto.seconds = seconds, duration_prototype__proto.minutes = minutes, duration_prototype__proto.hours = hours, duration_prototype__proto.days = days, duration_prototype__proto.weeks = weeks, duration_prototype__proto.months = months, duration_prototype__proto.years = years, duration_prototype__proto.humanize = humanize, duration_prototype__proto.toISOString = iso_string__toISOString, duration_prototype__proto.toString = iso_string__toISOString, duration_prototype__proto.toJSON = iso_string__toISOString, duration_prototype__proto.locale = locale, duration_prototype__proto.localeData = localeData, duration_prototype__proto.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", iso_string__toISOString), duration_prototype__proto.lang = lang, addFormatToken("X", 0, 0, "unix"), addFormatToken("x", 0, 0, "valueOf"), addRegexToken("x", matchSigned), addRegexToken("X", matchTimestamp), addParseToken("X", function (input, array, config) {
    config._d = new Date(1e3 * parseFloat(input, 10))
  }), addParseToken("x", function (input, array, config) {
    config._d = new Date(toInt(input))
  }), utils_hooks__hooks.version = "2.12.0", function (callback) {
    hookCallback = callback
  }(local__createLocal), utils_hooks__hooks.fn = momentPrototype, utils_hooks__hooks.min = min, utils_hooks__hooks.max = max, utils_hooks__hooks.now = now, utils_hooks__hooks.utc = create_utc__createUTC, utils_hooks__hooks.unix = moment__createUnix, utils_hooks__hooks.months = lists__listMonths, utils_hooks__hooks.isDate = isDate, utils_hooks__hooks.locale = locale_locales__getSetGlobalLocale, utils_hooks__hooks.invalid = valid__createInvalid, utils_hooks__hooks.duration = create__createDuration, utils_hooks__hooks.isMoment = isMoment, utils_hooks__hooks.weekdays = lists__listWeekdays, utils_hooks__hooks.parseZone = moment__createInZone, utils_hooks__hooks.localeData = locale_locales__getLocale, utils_hooks__hooks.isDuration = isDuration, utils_hooks__hooks.monthsShort = lists__listMonthsShort, utils_hooks__hooks.weekdaysMin = lists__listWeekdaysMin, utils_hooks__hooks.defineLocale = defineLocale, utils_hooks__hooks.updateLocale = updateLocale, utils_hooks__hooks.locales = locale_locales__listLocales, utils_hooks__hooks.weekdaysShort = lists__listWeekdaysShort, utils_hooks__hooks.normalizeUnits = normalizeUnits, utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold, utils_hooks__hooks.prototype = momentPrototype, utils_hooks__hooks
});
var CountUp = function (a, b, c, d, e, f) {
  for (var g = 0, h = ["webkit", "moz", "ms", "o"], i = 0; i < h.length && !window.requestAnimationFrame; ++i) window.requestAnimationFrame = window[h[i] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[h[i] + "CancelAnimationFrame"] || window[h[i] + "CancelRequestAnimationFrame"];
  window.requestAnimationFrame || (window.requestAnimationFrame = function (a) {
    var c = (new Date).getTime(), d = Math.max(0, 16 - (c - g)), e = window.setTimeout(function () {
      a(c + d)
    }, d);
    return g = c + d, e
  }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function (a) {
    clearTimeout(a)
  }), this.options = {useEasing: !0, useGrouping: !0, separator: ",", decimal: "."};
  for (var j in f) f.hasOwnProperty(j) && (this.options[j] = f[j]);
  "" === this.options.separator && (this.options.useGrouping = !1), this.options.prefix || (this.options.prefix = ""), this.options.suffix || (this.options.suffix = ""), this.d = "string" == typeof a ? document.getElementById(a) : a, this.startVal = Number(b), isNaN(b) && (this.startVal = Number(b.match(/[\d]+/g).join(""))), this.endVal = Number(c), isNaN(c) && (this.endVal = Number(c.match(/[\d]+/g).join(""))), this.countDown = this.startVal > this.endVal, this.frameVal = this.startVal, this.decimals = Math.max(0, d || 0), this.dec = Math.pow(10, this.decimals), this.duration = 1e3 * Number(e) || 2e3;
  var k = this;
  this.version = function () {
    return "1.5.3"
  }, this.printValue = function (a) {
    var b = isNaN(a) ? "--" : k.formatNumber(a);
    "INPUT" == k.d.tagName ? this.d.value = b : "text" == k.d.tagName ? this.d.textContent = b : this.d.innerHTML = b
  }, this.easeOutExpo = function (a, b, c, d) {
    return 1024 * c * (1 - Math.pow(2, -10 * a / d)) / 1023 + b
  }, this.count = function (a) {
    k.startTime || (k.startTime = a), k.timestamp = a;
    var b = a - k.startTime;
    k.remaining = k.duration - b, k.frameVal = k.options.useEasing ? k.countDown ? k.startVal - k.easeOutExpo(b, 0, k.startVal - k.endVal, k.duration) : k.easeOutExpo(b, k.startVal, k.endVal - k.startVal, k.duration) : k.countDown ? k.startVal - (k.startVal - k.endVal) * (b / k.duration) : k.startVal + (k.endVal - k.startVal) * (b / k.duration), k.frameVal = k.countDown ? k.frameVal < k.endVal ? k.endVal : k.frameVal : k.frameVal > k.endVal ? k.endVal : k.frameVal, k.frameVal = Math.round(k.frameVal * k.dec) / k.dec, k.printValue(k.frameVal), b < k.duration ? k.rAF = requestAnimationFrame(k.count) : k.callback && k.callback()
  }, this.start = function (a) {
    return k.callback = a, isNaN(k.endVal) || isNaN(k.startVal) || k.startVal === k.endVal ? k.printValue(c) : k.rAF = requestAnimationFrame(k.count), !1
  }, this.pauseResume = function () {
    k.paused ? (k.paused = !1, delete k.startTime, k.duration = k.remaining, k.startVal = k.frameVal, requestAnimationFrame(k.count)) : (k.paused = !0, cancelAnimationFrame(k.rAF))
  }, this.reset = function () {
    k.paused = !1, delete k.startTime, k.startVal = b, cancelAnimationFrame(k.rAF), k.printValue(k.startVal)
  }, this.update = function (a) {
    cancelAnimationFrame(k.rAF), k.paused = !1, delete k.startTime, k.startVal = k.frameVal, k.endVal = Number(a), k.countDown = k.startVal > k.endVal, k.rAF = requestAnimationFrame(k.count)
  }, this.formatNumber = function (a) {
    a = a.toFixed(k.decimals), a += "";
    var b, c, d, e;
    if (b = a.split("."), c = b[0], d = b.length > 1 ? k.options.decimal + b[1] : "", e = /(\d+)(\d{3})/, k.options.useGrouping) for (; e.test(c);) c = c.replace(e, "$1" + k.options.separator + "$2");
    return k.options.prefix + c + d + k.options.suffix
  }, k.printValue(k.startVal)
};
!function (root, factory) {
  "function" == typeof define && define.amd ? define([], function () {
    return factory()
  }) : "object" == typeof exports ? module.exports = factory() : factory()
}(0, function () {
  function runTranslate($translate) {
    "use strict";
    var key = $translate.storageKey(), storage = $translate.storage(), fallbackFromIncorrectStorageValue = function () {
      var preferred = $translate.preferredLanguage();
      angular.isString(preferred) ? $translate.use(preferred) : storage.put(key, $translate.use())
    };
    fallbackFromIncorrectStorageValue.displayName = "fallbackFromIncorrectStorageValue", storage ? storage.get(key) ? $translate.use(storage.get(key)).catch(fallbackFromIncorrectStorageValue) : fallbackFromIncorrectStorageValue() : angular.isString($translate.preferredLanguage()) && $translate.use($translate.preferredLanguage())
  }

  function $translateSanitizationProvider() {
    "use strict";
    var $sanitize, strategies, currentStrategy = null, hasConfiguredStrategy = !1,
        hasShownNoStrategyConfiguredWarning                                  = !1;
    strategies = {
      sanitize:              function (value, mode) {
        return "text" === mode && (value = htmlSanitizeValue(value)), value
      }, escape:             function (value, mode) {
        return "text" === mode && (value = htmlEscapeValue(value)), value
      }, sanitizeParameters: function (value, mode) {
        return "params" === mode && (value = mapInterpolationParameters(value, htmlSanitizeValue)), value
      }, escapeParameters:   function (value, mode) {
        return "params" === mode && (value = mapInterpolationParameters(value, htmlEscapeValue)), value
      }
    }, strategies.escaped = strategies.escapeParameters, this.addStrategy = function (strategyName, strategyFunction) {
      return strategies[strategyName] = strategyFunction, this
    }, this.removeStrategy = function (strategyName) {
      return delete strategies[strategyName], this
    }, this.useStrategy = function (strategy) {
      return hasConfiguredStrategy = !0, currentStrategy = strategy, this
    }, this.$get = ["$injector", "$log", function ($injector, $log) {
      var cachedStrategyMap              = {}, applyStrategies = function (value, mode, selectedStrategies) {
        return angular.forEach(selectedStrategies, function (selectedStrategy) {
          if (angular.isFunction(selectedStrategy)) value = selectedStrategy(value, mode); else if (angular.isFunction(strategies[selectedStrategy])) value = strategies[selectedStrategy](value, mode); else {
            if (!angular.isString(strategies[selectedStrategy])) throw new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '" + selectedStrategy + "'");
            if (!cachedStrategyMap[strategies[selectedStrategy]]) try {
              cachedStrategyMap[strategies[selectedStrategy]] = $injector.get(strategies[selectedStrategy])
            } catch (e) {
              throw cachedStrategyMap[strategies[selectedStrategy]] = function () {
              }, new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '" + selectedStrategy + "'")
            }
            value = cachedStrategyMap[strategies[selectedStrategy]](value, mode)
          }
        }), value
      }, showNoStrategyConfiguredWarning = function () {
        hasConfiguredStrategy || hasShownNoStrategyConfiguredWarning || ($log.warn("pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details."), hasShownNoStrategyConfiguredWarning = !0)
      };
      return $injector.has("$sanitize") && ($sanitize = $injector.get("$sanitize")), {
        useStrategy: function (self) {
          return function (strategy) {
            self.useStrategy(strategy)
          }
        }(this),
        sanitize:    function (value, mode, strategy) {
          if (currentStrategy || showNoStrategyConfiguredWarning(), arguments.length < 3 && (strategy = currentStrategy), !strategy) return value;
          var selectedStrategies = angular.isArray(strategy) ? strategy : [strategy];
          return applyStrategies(value, mode, selectedStrategies)
        }
      }
    }];
    var htmlEscapeValue           = function (value) {
      var element = angular.element("<div></div>");
      return element.text(value), element.html()
    }, htmlSanitizeValue          = function (value) {
      if (!$sanitize) throw new Error("pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api2/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as 'escape'.");
      return $sanitize(value)
    }, mapInterpolationParameters = function (value, iteratee, stack) {
      if (angular.isObject(value)) {
        var result = angular.isArray(value) ? [] : {};
        if (stack) {
          if (stack.indexOf(value) > -1) throw new Error("pascalprecht.translate.$translateSanitization: Error cannot interpolate parameter due recursive object")
        } else stack = [];
        return stack.push(value), angular.forEach(value, function (propertyValue, propertyKey) {
          result[propertyKey] = mapInterpolationParameters(propertyValue, iteratee, stack)
        }), stack.splice(-1, 1), result
      }
      return angular.isNumber(value) ? value : iteratee(value)
    }
  }

  function $translate($STORAGE_KEY, $windowProvider, $translateSanitizationProvider, pascalprechtTranslateOverrider) {
    "use strict";
    var $preferredLanguage, $languageKeyAliases, $fallbackLanguage, $fallbackWasString, $uses, $nextLang,
        $storageFactory, $storagePrefix, $missingTranslationHandlerFactory, $interpolationFactory, $loaderFactory,
        $loaderOptions, $notFoundIndicatorLeft, $notFoundIndicatorRight, loaderCache, postProcessFn,
        $translationTable                                                                             = {}, $availableLanguageKeys = [], $storageKey = $STORAGE_KEY,
        $interpolatorFactories                                                                        = [], $cloakClassName                                                  = "translate-cloak", $postCompilingEnabled = !1,
        $forceAsyncReloadEnabled = !1, $nestedObjectDelimeter = ".", $isReady = !1, directivePriority = 0,
        statefulFilter                                                                                = !0, uniformLanguageTagResolver = "default", languageTagResolver = {
          default:       function (tag) {
            return (tag || "").split("-").join("_")
          }, java:       function (tag) {
            var temp = (tag || "").split("-").join("_"), parts = temp.split("_");
            return parts.length > 1 ? parts[0].toLowerCase() + "_" + parts[1].toUpperCase() : temp
          }, bcp47:      function (tag) {
            var temp = (tag || "").split("_").join("-"), parts = temp.split("-");
            return parts.length > 1 ? parts[0].toLowerCase() + "-" + parts[1].toUpperCase() : temp
          }, "iso639-1": function (tag) {
            return (tag || "").split("_").join("-").split("-")[0].toLowerCase()
          }
        }, getFirstBrowserLanguage                                                                    = function () {
          if (angular.isFunction(pascalprechtTranslateOverrider.getLocale)) return pascalprechtTranslateOverrider.getLocale();
          var i, language, nav            = $windowProvider.$get().navigator,
              browserLanguagePropertyKeys = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
          if (angular.isArray(nav.languages)) for (i = 0; i < nav.languages.length; i++) if ((language = nav.languages[i]) && language.length) return language;
          for (i = 0; i < browserLanguagePropertyKeys.length; i++) if ((language = nav[browserLanguagePropertyKeys[i]]) && language.length) return language;
          return null
        };
    getFirstBrowserLanguage.displayName                                                               = "angular-translate/service: getFirstBrowserLanguage";
    var getLocale                                                                                     = function () {
      var locale = getFirstBrowserLanguage() || "";
      return languageTagResolver[uniformLanguageTagResolver] && (locale = languageTagResolver[uniformLanguageTagResolver](locale)), locale
    };
    getLocale.displayName                                                                             = "angular-translate/service: getLocale";
    var indexOf                                                                                       = function (array, searchElement) {
      for (var i = 0, len = array.length; i < len; i++) if (array[i] === searchElement) return i;
      return -1
    }, trim                                                                                           = function () {
      return this.toString().replace(/^\s+|\s+$/g, "")
    }, negotiateLocale                                                                                = function (preferred) {
      if (preferred) {
        for (var avail = [], locale = angular.lowercase(preferred), i = 0, n = $availableLanguageKeys.length; i < n; i++) avail.push(angular.lowercase($availableLanguageKeys[i]));
        if (indexOf(avail, locale) > -1) return preferred;
        if ($languageKeyAliases) {
          var alias;
          for (var langKeyAlias in $languageKeyAliases) if ($languageKeyAliases.hasOwnProperty(langKeyAlias)) {
            var hasWildcardKey = !1,
                hasExactKey    = Object.prototype.hasOwnProperty.call($languageKeyAliases, langKeyAlias) && angular.lowercase(langKeyAlias) === angular.lowercase(preferred);
            if ("*" === langKeyAlias.slice(-1) && (hasWildcardKey = langKeyAlias.slice(0, -1) === preferred.slice(0, langKeyAlias.length - 1)), (hasExactKey || hasWildcardKey) && (alias = $languageKeyAliases[langKeyAlias], indexOf(avail, angular.lowercase(alias)) > -1)) return alias
          }
        }
        var parts = preferred.split("_");
        return parts.length > 1 && indexOf(avail, angular.lowercase(parts[0])) > -1 ? parts[0] : void 0
      }
    }, translations                                                                                   = function (langKey, translationTable) {
      if (!langKey && !translationTable) return $translationTable;
      if (langKey && !translationTable) {
        if (angular.isString(langKey)) return $translationTable[langKey]
      } else angular.isObject($translationTable[langKey]) || ($translationTable[langKey] = {}), angular.extend($translationTable[langKey], flatObject(translationTable));
      return this
    };
    this.translations = translations, this.cloakClassName = function (name) {
      return name ? ($cloakClassName = name, this) : $cloakClassName
    }, this.nestedObjectDelimeter = function (delimiter) {
      return delimiter ? ($nestedObjectDelimeter = delimiter, this) : $nestedObjectDelimeter
    };
    var flatObject = function (data, path, result, prevKey) {
      var key, keyWithPath, keyWithShortPath, val;
      path || (path = []), result || (result = {});
      for (key in data) Object.prototype.hasOwnProperty.call(data, key) && (val = data[key], angular.isObject(val) ? flatObject(val, path.concat(key), result, key) : (keyWithPath = path.length ? "" + path.join($nestedObjectDelimeter) + $nestedObjectDelimeter + key : key, path.length && key === prevKey && (keyWithShortPath = "" + path.join($nestedObjectDelimeter), result[keyWithShortPath] = "@:" + keyWithPath), result[keyWithPath] = val));
      return result
    };
    flatObject.displayName = "flatObject", this.addInterpolation = function (factory) {
      return $interpolatorFactories.push(factory), this
    }, this.useMessageFormatInterpolation = function () {
      return this.useInterpolation("$translateMessageFormatInterpolation")
    }, this.useInterpolation = function (factory) {
      return $interpolationFactory = factory, this
    }, this.useSanitizeValueStrategy = function (value) {
      return $translateSanitizationProvider.useStrategy(value), this
    }, this.preferredLanguage = function (langKey) {
      return langKey ? (setupPreferredLanguage(langKey), this) : $preferredLanguage
    };
    var setupPreferredLanguage = function (langKey) {
      return langKey && ($preferredLanguage = langKey), $preferredLanguage
    };
    this.translationNotFoundIndicator = function (indicator) {
      return this.translationNotFoundIndicatorLeft(indicator), this.translationNotFoundIndicatorRight(indicator), this
    }, this.translationNotFoundIndicatorLeft = function (indicator) {
      return indicator ? ($notFoundIndicatorLeft = indicator, this) : $notFoundIndicatorLeft
    }, this.translationNotFoundIndicatorRight = function (indicator) {
      return indicator ? ($notFoundIndicatorRight = indicator, this) : $notFoundIndicatorRight
    }, this.fallbackLanguage = function (langKey) {
      return fallbackStack(langKey), this
    };
    var fallbackStack = function (langKey) {
      return langKey ? (angular.isString(langKey) ? ($fallbackWasString = !0, $fallbackLanguage = [langKey]) : angular.isArray(langKey) && ($fallbackWasString = !1, $fallbackLanguage = langKey), angular.isString($preferredLanguage) && indexOf($fallbackLanguage, $preferredLanguage) < 0 && $fallbackLanguage.push($preferredLanguage), this) : $fallbackWasString ? $fallbackLanguage[0] : $fallbackLanguage
    };
    this.use = function (langKey) {
      if (langKey) {
        if (!$translationTable[langKey] && !$loaderFactory) throw new Error("$translateProvider couldn't find translationTable for langKey: '" + langKey + "'");
        return $uses = langKey, this
      }
      return $uses
    }, this.resolveClientLocale = function () {
      return getLocale()
    };
    var storageKey = function (key) {
      return key ? ($storageKey = key, this) : $storagePrefix ? $storagePrefix + $storageKey : $storageKey
    };
    this.storageKey = storageKey, this.useUrlLoader = function (url, options) {
      return this.useLoader("$translateUrlLoader", angular.extend({url: url}, options))
    }, this.useStaticFilesLoader = function (options) {
      return this.useLoader("$translateStaticFilesLoader", options)
    }, this.useLoader = function (loaderFactory, options) {
      return $loaderFactory = loaderFactory, $loaderOptions = options || {}, this
    }, this.useLocalStorage = function () {
      return this.useStorage("$translateLocalStorage")
    }, this.useCookieStorage = function () {
      return this.useStorage("$translateCookieStorage")
    }, this.useStorage = function (storageFactory) {
      return $storageFactory = storageFactory, this
    }, this.storagePrefix = function (prefix) {
      return prefix ? ($storagePrefix = prefix, this) : prefix
    }, this.useMissingTranslationHandlerLog = function () {
      return this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")
    }, this.useMissingTranslationHandler = function (factory) {
      return $missingTranslationHandlerFactory = factory, this
    }, this.usePostCompiling = function (value) {
      return $postCompilingEnabled = !!value, this
    }, this.forceAsyncReload = function (value) {
      return $forceAsyncReloadEnabled = !!value, this
    }, this.uniformLanguageTag = function (options) {
      return options ? angular.isString(options) && (options = {standard: options}) : options = {}, uniformLanguageTagResolver = options.standard, this
    }, this.determinePreferredLanguage = function (fn) {
      var locale = fn && angular.isFunction(fn) ? fn() : getLocale();
      return $preferredLanguage = $availableLanguageKeys.length ? negotiateLocale(locale) || locale : locale, this
    }, this.registerAvailableLanguageKeys = function (languageKeys, aliases) {
      return languageKeys ? ($availableLanguageKeys = languageKeys, aliases && ($languageKeyAliases = aliases), this) : $availableLanguageKeys
    }, this.useLoaderCache = function (cache) {
      return !1 === cache ? loaderCache = void 0 : !0 === cache ? loaderCache = !0 : void 0 === cache ? loaderCache = "$translationCache" : cache && (loaderCache = cache), this
    }, this.directivePriority = function (priority) {
      return void 0 === priority ? directivePriority : (directivePriority = priority, this)
    }, this.statefulFilter = function (state) {
      return void 0 === state ? statefulFilter : (statefulFilter = state, this)
    }, this.postProcess = function (fn) {
      return postProcessFn = fn || void 0, this
    }, this.$get = ["$log", "$injector", "$rootScope", "$q", function ($log, $injector, $rootScope, $q) {
      var Storage, fallbackIndex, startFallbackIteration,
          defaultInterpolator                                        = $injector.get($interpolationFactory || "$translateDefaultInterpolation"),
          pendingLoader = !1, interpolatorHashMap = {}, langPromises = {},
          $translate                                                 = function (translationId, interpolateParams, interpolationId, defaultTranslationText, forceLanguage) {
            !$uses && $preferredLanguage && ($uses = $preferredLanguage);
            var uses = forceLanguage && forceLanguage !== $uses ? negotiateLocale(forceLanguage) || forceLanguage : $uses;
            if (forceLanguage && loadTranslationsIfMissing(forceLanguage), angular.isArray(translationId)) {
              return function (translationIds) {
                for (var results = {}, promises = [], i = 0, c = translationIds.length; i < c; i++) promises.push(function (translationId) {
                  var deferred = $q.defer(), regardless = function (value) {
                    results[translationId] = value, deferred.resolve([translationId, value])
                  };
                  return $translate(translationId, interpolateParams, interpolationId, defaultTranslationText, forceLanguage).then(regardless, regardless), deferred.promise
                }(translationIds[i]));
                return $q.all(promises).then(function () {
                  return results
                })
              }(translationId)
            }
            var deferred = $q.defer();
            translationId && (translationId = trim.apply(translationId));
            var promiseToWaitFor = function () {
              var promise = $preferredLanguage ? langPromises[$preferredLanguage] : langPromises[uses];
              if (fallbackIndex = 0, $storageFactory && !promise) {
                var langKey = Storage.get($storageKey);
                if (promise = langPromises[langKey], $fallbackLanguage && $fallbackLanguage.length) {
                  var index = indexOf($fallbackLanguage, langKey);
                  fallbackIndex = 0 === index ? 1 : 0, indexOf($fallbackLanguage, $preferredLanguage) < 0 && $fallbackLanguage.push($preferredLanguage)
                }
              }
              return promise
            }();
            if (promiseToWaitFor) {
              var promiseResolved = function () {
                forceLanguage || (uses = $uses), determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText, uses).then(deferred.resolve, deferred.reject)
              };
              promiseResolved.displayName = "promiseResolved", promiseToWaitFor.finally(promiseResolved)
            } else determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText, uses).then(deferred.resolve, deferred.reject);
            return deferred.promise
          }, applyNotFoundIndicators                                 = function (translationId) {
            return $notFoundIndicatorLeft && (translationId = [$notFoundIndicatorLeft, translationId].join(" ")), $notFoundIndicatorRight && (translationId = [translationId, $notFoundIndicatorRight].join(" ")), translationId
          }, useLanguage                                             = function (key) {
            $uses = key, $storageFactory && Storage.put($translate.storageKey(), $uses), $rootScope.$emit("$translateChangeSuccess", {language: key}), defaultInterpolator.setLocale($uses);
            var eachInterpolator = function (interpolator, id) {
              interpolatorHashMap[id].setLocale($uses)
            };
            eachInterpolator.displayName = "eachInterpolatorLocaleSetter", angular.forEach(interpolatorHashMap, eachInterpolator), $rootScope.$emit("$translateChangeEnd", {language: key})
          }, loadAsync                                               = function (key) {
            if (!key) throw"No language key specified for loading.";
            var deferred = $q.defer();
            $rootScope.$emit("$translateLoadingStart", {language: key}), pendingLoader = !0;
            var cache = loaderCache;
            "string" == typeof cache && (cache = $injector.get(cache));
            var loaderOptions           = angular.extend({}, $loaderOptions, {
              key:   key,
              $http: angular.extend({}, {cache: cache}, $loaderOptions.$http)
            }), onLoaderSuccess         = function (data) {
              var translationTable = {};
              $rootScope.$emit("$translateLoadingSuccess", {language: key}), angular.isArray(data) ? angular.forEach(data, function (table) {
                angular.extend(translationTable, flatObject(table))
              }) : angular.extend(translationTable, flatObject(data)), pendingLoader = !1, deferred.resolve({
                key:   key,
                table: translationTable
              }), $rootScope.$emit("$translateLoadingEnd", {language: key})
            };
            onLoaderSuccess.displayName = "onLoaderSuccess";
            var onLoaderError           = function (key) {
              $rootScope.$emit("$translateLoadingError", {language: key}), deferred.reject(key), $rootScope.$emit("$translateLoadingEnd", {language: key})
            };
            return onLoaderError.displayName = "onLoaderError", $injector.get($loaderFactory)(loaderOptions).then(onLoaderSuccess, onLoaderError), deferred.promise
          };
      if ($storageFactory && (Storage = $injector.get($storageFactory), !Storage.get || !Storage.put)) throw new Error("Couldn't use storage '" + $storageFactory + "', missing get() or put() method!");
      if ($interpolatorFactories.length) {
        var eachInterpolationFactory = function (interpolatorFactory) {
          var interpolator = $injector.get(interpolatorFactory);
          interpolator.setLocale($preferredLanguage || $uses), interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator
        };
        eachInterpolationFactory.displayName = "interpolationFactoryAdder", angular.forEach($interpolatorFactories, eachInterpolationFactory)
      }
      var getTranslationTable               = function (langKey) {
            var deferred = $q.defer();
            if (Object.prototype.hasOwnProperty.call($translationTable, langKey)) deferred.resolve($translationTable[langKey]); else if (langPromises[langKey]) {
              var onResolve = function (data) {
                translations(data.key, data.table), deferred.resolve(data.table)
              };
              onResolve.displayName = "translationTableResolver", langPromises[langKey].then(onResolve, deferred.reject)
            } else deferred.reject();
            return deferred.promise
          }, getFallbackTranslation         = function (langKey, translationId, interpolateParams, Interpolator) {
            var deferred = $q.defer(), onResolve = function (translationTable) {
              if (Object.prototype.hasOwnProperty.call(translationTable, translationId)) {
                Interpolator.setLocale(langKey);
                var translation = translationTable[translationId];
                if ("@:" === translation.substr(0, 2)) getFallbackTranslation(langKey, translation.substr(2), interpolateParams, Interpolator).then(deferred.resolve, deferred.reject); else {
                  var interpolatedValue = Interpolator.interpolate(translationTable[translationId], interpolateParams);
                  interpolatedValue = applyPostProcessing(translationId, translationTable[translationId], interpolatedValue, interpolateParams, langKey), deferred.resolve(interpolatedValue)
                }
                Interpolator.setLocale($uses)
              } else deferred.reject()
            };
            return onResolve.displayName = "fallbackTranslationResolver", getTranslationTable(langKey).then(onResolve, deferred.reject), deferred.promise
          }, getFallbackTranslationInstant  = function (langKey, translationId, interpolateParams, Interpolator) {
            var result, translationTable = $translationTable[langKey];
            if (translationTable && Object.prototype.hasOwnProperty.call(translationTable, translationId)) {
              if (Interpolator.setLocale(langKey), result = Interpolator.interpolate(translationTable[translationId], interpolateParams), "@:" === result.substr(0, 2)) return getFallbackTranslationInstant(langKey, result.substr(2), interpolateParams, Interpolator);
              Interpolator.setLocale($uses)
            }
            return result
          }, translateByHandler             = function (translationId, interpolateParams, defaultTranslationText) {
            if ($missingTranslationHandlerFactory) {
              var resultString = $injector.get($missingTranslationHandlerFactory)(translationId, $uses, interpolateParams, defaultTranslationText);
              return void 0 !== resultString ? resultString : translationId
            }
            return translationId
          },
          resolveForFallbackLanguage        = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator, defaultTranslationText) {
            var deferred = $q.defer();
            if (fallbackLanguageIndex < $fallbackLanguage.length) {
              var langKey = $fallbackLanguage[fallbackLanguageIndex];
              getFallbackTranslation(langKey, translationId, interpolateParams, Interpolator).then(function (data) {
                deferred.resolve(data)
              }, function () {
                return resolveForFallbackLanguage(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator, defaultTranslationText).then(deferred.resolve, deferred.reject)
              })
            } else defaultTranslationText ? deferred.resolve(defaultTranslationText) : $missingTranslationHandlerFactory ? deferred.resolve(translateByHandler(translationId, interpolateParams)) : deferred.reject(translateByHandler(translationId, interpolateParams));
            return deferred.promise
          },
          resolveForFallbackLanguageInstant = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator) {
            var result;
            if (fallbackLanguageIndex < $fallbackLanguage.length) {
              var langKey = $fallbackLanguage[fallbackLanguageIndex];
              result = getFallbackTranslationInstant(langKey, translationId, interpolateParams, Interpolator), result || (result = resolveForFallbackLanguageInstant(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator))
            }
            return result
          },
          fallbackTranslation               = function (translationId, interpolateParams, Interpolator, defaultTranslationText) {
            return resolveForFallbackLanguage(startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex, translationId, interpolateParams, Interpolator, defaultTranslationText)
          }, fallbackTranslationInstant     = function (translationId, interpolateParams, Interpolator) {
            return resolveForFallbackLanguageInstant(startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex, translationId, interpolateParams, Interpolator)
          },
          determineTranslation              = function (translationId, interpolateParams, interpolationId, defaultTranslationText, uses) {
            var deferred = $q.defer(), table = uses ? $translationTable[uses] : $translationTable,
                Interpolator                 = interpolationId ? interpolatorHashMap[interpolationId] : defaultInterpolator;
            if (table && Object.prototype.hasOwnProperty.call(table, translationId)) {
              var translation = table[translationId];
              if ("@:" === translation.substr(0, 2)) $translate(translation.substr(2), interpolateParams, interpolationId, defaultTranslationText, uses).then(deferred.resolve, deferred.reject); else {
                var resolvedTranslation = Interpolator.interpolate(translation, interpolateParams);
                resolvedTranslation = applyPostProcessing(translationId, translation, resolvedTranslation, interpolateParams, uses), deferred.resolve(resolvedTranslation)
              }
            } else {
              var missingTranslationHandlerTranslation;
              $missingTranslationHandlerFactory && !pendingLoader && (missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, defaultTranslationText)), uses && $fallbackLanguage && $fallbackLanguage.length ? fallbackTranslation(translationId, interpolateParams, Interpolator, defaultTranslationText).then(function (translation) {
                deferred.resolve(translation)
              }, function (_translationId) {
                deferred.reject(applyNotFoundIndicators(_translationId))
              }) : $missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation ? defaultTranslationText ? deferred.resolve(defaultTranslationText) : deferred.resolve(missingTranslationHandlerTranslation) : defaultTranslationText ? deferred.resolve(defaultTranslationText) : deferred.reject(applyNotFoundIndicators(translationId))
            }
            return deferred.promise
          }, determineTranslationInstant    = function (translationId, interpolateParams, interpolationId, uses) {
            var result, table = uses ? $translationTable[uses] : $translationTable, Interpolator = defaultInterpolator;
            if (interpolatorHashMap && Object.prototype.hasOwnProperty.call(interpolatorHashMap, interpolationId) && (Interpolator = interpolatorHashMap[interpolationId]), table && Object.prototype.hasOwnProperty.call(table, translationId)) {
              var translation = table[translationId];
              result          = "@:" === translation.substr(0, 2) ? determineTranslationInstant(translation.substr(2), interpolateParams, interpolationId, uses) : Interpolator.interpolate(translation, interpolateParams)
            } else {
              var missingTranslationHandlerTranslation;
              $missingTranslationHandlerFactory && !pendingLoader && (missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams)), uses && $fallbackLanguage && $fallbackLanguage.length ? (fallbackIndex = 0, result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator)) : result = $missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation ? missingTranslationHandlerTranslation : applyNotFoundIndicators(translationId)
            }
            return result
          }, clearNextLangAndPromise        = function (key) {
            $nextLang === key && ($nextLang = void 0), langPromises[key] = void 0
          },
          applyPostProcessing               = function (translationId, translation, resolvedTranslation, interpolateParams, uses) {
            var fn = postProcessFn;
            return fn && ("string" == typeof fn && (fn = $injector.get(fn)), fn) ? fn(translationId, translation, resolvedTranslation, interpolateParams, uses) : resolvedTranslation
          }, loadTranslationsIfMissing      = function (key) {
            $translationTable[key] || !$loaderFactory || langPromises[key] || (langPromises[key] = loadAsync(key).then(function (translation) {
              translations(translation.key, translation.table)
            }))
          };
      $translate.preferredLanguage = function (langKey) {
        return langKey && setupPreferredLanguage(langKey), $preferredLanguage
      }, $translate.cloakClassName = function () {
        return $cloakClassName
      }, $translate.nestedObjectDelimeter = function () {
        return $nestedObjectDelimeter
      }, $translate.fallbackLanguage = function (langKey) {
        if (void 0 !== langKey && null !== langKey) {
          if (fallbackStack(langKey), $loaderFactory && $fallbackLanguage && $fallbackLanguage.length) for (var i = 0, len = $fallbackLanguage.length; i < len; i++) langPromises[$fallbackLanguage[i]] || (langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]));
          $translate.use($translate.use())
        }
        return $fallbackWasString ? $fallbackLanguage[0] : $fallbackLanguage
      }, $translate.useFallbackLanguage = function (langKey) {
        if (void 0 !== langKey && null !== langKey) if (langKey) {
          var langKeyPosition = indexOf($fallbackLanguage, langKey);
          langKeyPosition > -1 && (startFallbackIteration = langKeyPosition)
        } else startFallbackIteration = 0
      }, $translate.proposedLanguage = function () {
        return $nextLang
      }, $translate.storage = function () {
        return Storage
      }, $translate.negotiateLocale = negotiateLocale, $translate.use = function (key) {
        if (!key) return $uses;
        var deferred = $q.defer();
        $rootScope.$emit("$translateChangeStart", {language: key});
        var aliasedKey = negotiateLocale(key);
        return $availableLanguageKeys.length > 0 && !aliasedKey ? $q.reject(key) : (aliasedKey && (key = aliasedKey), $nextLang = key, !$forceAsyncReloadEnabled && $translationTable[key] || !$loaderFactory || langPromises[key] ? langPromises[key] ? langPromises[key].then(function (translation) {
          return $nextLang === translation.key && useLanguage(translation.key), deferred.resolve(translation.key), translation
        }, function (key) {
          return !$uses && $fallbackLanguage && $fallbackLanguage.length > 0 ? $translate.use($fallbackLanguage[0]).then(deferred.resolve, deferred.reject) : deferred.reject(key)
        }) : (deferred.resolve(key), useLanguage(key)) : (langPromises[key] = loadAsync(key).then(function (translation) {
          return translations(translation.key, translation.table), deferred.resolve(translation.key), $nextLang === key && useLanguage(translation.key), translation
        }, function (key) {
          return $rootScope.$emit("$translateChangeError", {language: key}), deferred.reject(key), $rootScope.$emit("$translateChangeEnd", {language: key}), $q.reject(key)
        }), langPromises[key].finally(function () {
          clearNextLangAndPromise(key)
        })), deferred.promise)
      }, $translate.resolveClientLocale = function () {
        return getLocale()
      }, $translate.storageKey = function () {
        return storageKey()
      }, $translate.isPostCompilingEnabled = function () {
        return $postCompilingEnabled
      }, $translate.isForceAsyncReloadEnabled = function () {
        return $forceAsyncReloadEnabled
      }, $translate.refresh = function (langKey) {
        function resolve() {
          deferred.resolve(), $rootScope.$emit("$translateRefreshEnd", {language: langKey})
        }

        function reject() {
          deferred.reject(), $rootScope.$emit("$translateRefreshEnd", {language: langKey})
        }

        if (!$loaderFactory) throw new Error("Couldn't refresh translation table, no loader registered!");
        var deferred = $q.defer();
        if ($rootScope.$emit("$translateRefreshStart", {language: langKey}), langKey) if ($translationTable[langKey]) {
          var oneTranslationsLoaded = function (data) {
            translations(data.key, data.table), langKey === $uses && useLanguage($uses), resolve()
          };
          oneTranslationsLoaded.displayName = "refreshPostProcessor", loadAsync(langKey).then(oneTranslationsLoaded, reject)
        } else reject(); else {
          var tables = [], loadingKeys = {};
          if ($fallbackLanguage && $fallbackLanguage.length) for (var i = 0, len = $fallbackLanguage.length; i < len; i++) tables.push(loadAsync($fallbackLanguage[i])), loadingKeys[$fallbackLanguage[i]] = !0;
          $uses && !loadingKeys[$uses] && tables.push(loadAsync($uses));
          var allTranslationsLoaded = function (tableData) {
            $translationTable = {}, angular.forEach(tableData, function (data) {
              translations(data.key, data.table)
            }), $uses && useLanguage($uses), resolve()
          };
          allTranslationsLoaded.displayName = "refreshPostProcessor", $q.all(tables).then(allTranslationsLoaded, reject)
        }
        return deferred.promise
      }, $translate.instant = function (translationId, interpolateParams, interpolationId, forceLanguage) {
        var uses = forceLanguage && forceLanguage !== $uses ? negotiateLocale(forceLanguage) || forceLanguage : $uses;
        if (null === translationId || angular.isUndefined(translationId)) return translationId;
        if (forceLanguage && loadTranslationsIfMissing(forceLanguage), angular.isArray(translationId)) {
          for (var results = {}, i = 0, c = translationId.length; i < c; i++) results[translationId[i]] = $translate.instant(translationId[i], interpolateParams, interpolationId, forceLanguage);
          return results
        }
        if (angular.isString(translationId) && translationId.length < 1) return translationId;
        translationId && (translationId = trim.apply(translationId));
        var result, possibleLangKeys = [];
        $preferredLanguage && possibleLangKeys.push($preferredLanguage), uses && possibleLangKeys.push(uses), $fallbackLanguage && $fallbackLanguage.length && (possibleLangKeys = possibleLangKeys.concat($fallbackLanguage));
        for (var j = 0, d = possibleLangKeys.length; j < d; j++) {
          var possibleLangKey = possibleLangKeys[j];
          if ($translationTable[possibleLangKey] && void 0 !== $translationTable[possibleLangKey][translationId] && (result = determineTranslationInstant(translationId, interpolateParams, interpolationId, uses)), void 0 !== result) break
        }
        return result || "" === result || ($notFoundIndicatorLeft || $notFoundIndicatorRight ? result = applyNotFoundIndicators(translationId) : (result = defaultInterpolator.interpolate(translationId, interpolateParams), $missingTranslationHandlerFactory && !pendingLoader && (result = translateByHandler(translationId, interpolateParams)))), result
      }, $translate.versionInfo = function () {
        return "2.11.0"
      }, $translate.loaderCache = function () {
        return loaderCache
      }, $translate.directivePriority = function () {
        return directivePriority
      }, $translate.statefulFilter = function () {
        return statefulFilter
      }, $translate.isReady = function () {
        return $isReady
      };
      var $onReadyDeferred = $q.defer();
      $onReadyDeferred.promise.then(function () {
        $isReady = !0
      }), $translate.onReady = function (fn) {
        var deferred = $q.defer();
        return angular.isFunction(fn) && deferred.promise.then(fn), $isReady ? deferred.resolve() : $onReadyDeferred.promise.then(deferred.resolve), deferred.promise
      }, $translate.getAvailableLanguageKeys = function () {
        return $availableLanguageKeys.length > 0 ? $availableLanguageKeys : null
      };
      var globalOnReadyListener  = $rootScope.$on("$translateReady", function () {
        $onReadyDeferred.resolve(), globalOnReadyListener(), globalOnReadyListener = null
      }), globalOnChangeListener = $rootScope.$on("$translateChangeEnd", function () {
        $onReadyDeferred.resolve(), globalOnChangeListener(), globalOnChangeListener = null
      });
      if ($loaderFactory) {
        if (angular.equals($translationTable, {}) && $translate.use() && $translate.use($translate.use()), $fallbackLanguage && $fallbackLanguage.length) for (var processAsyncResult = function (translation) {
          return translations(translation.key, translation.table), $rootScope.$emit("$translateChangeEnd", {language: translation.key}), translation
        }, i                                                                                                                                                                          = 0, len = $fallbackLanguage.length; i < len; i++) {
          var fallbackLanguageId = $fallbackLanguage[i];
          !$forceAsyncReloadEnabled && $translationTable[fallbackLanguageId] || (langPromises[fallbackLanguageId] = loadAsync(fallbackLanguageId).then(processAsyncResult))
        }
      } else $rootScope.$emit("$translateReady", {language: $translate.use()});
      return $translate
    }]
  }

  function $translateDefaultInterpolation($interpolate, $translateSanitization) {
    "use strict";
    var $locale, $translateInterpolator = {};
    return $translateInterpolator.setLocale = function (locale) {
      $locale = locale
    }, $translateInterpolator.getInterpolationIdentifier = function () {
      return "default"
    }, $translateInterpolator.useSanitizeValueStrategy = function (value) {
      return $translateSanitization.useStrategy(value), this
    }, $translateInterpolator.interpolate = function (string, interpolationParams) {
      interpolationParams = interpolationParams || {}, interpolationParams = $translateSanitization.sanitize(interpolationParams, "params");
      var interpolatedText = $interpolate(string)(interpolationParams);
      return interpolatedText = $translateSanitization.sanitize(interpolatedText, "text")
    }, $translateInterpolator
  }

  function translateDirective($translate, $q, $interpolate, $compile, $parse, $rootScope) {
    "use strict";
    var trim = function () {
      return this.toString().replace(/^\s+|\s+$/g, "")
    };
    return {
      restrict: "AE", scope: !0, priority: $translate.directivePriority(), compile: function (tElement, tAttr) {
        var translateValuesExist   = tAttr.translateValues ? tAttr.translateValues : void 0,
            translateInterpolation = tAttr.translateInterpolation ? tAttr.translateInterpolation : void 0,
            translateValueExist    = tElement[0].outerHTML.match(/translate-value-+/i),
            interpolateRegExp      = "^(.*)(" + $interpolate.startSymbol() + ".*" + $interpolate.endSymbol() + ")(.*)",
            watcherRegExp          = "^(.*)" + $interpolate.startSymbol() + "(.*)" + $interpolate.endSymbol() + "(.*)";
        return function (scope, iElement, iAttr) {
          scope.interpolateParams = {}, scope.preText = "", scope.postText = "", scope.translateNamespace = getTranslateNamespace(scope);
          var translationIds = {}, observeElementTranslation = function (translationId) {
            if (angular.isFunction(observeElementTranslation._unwatchOld) && (observeElementTranslation._unwatchOld(), observeElementTranslation._unwatchOld = void 0), angular.equals(translationId, "") || !angular.isDefined(translationId)) {
              var iElementText       = trim.apply(iElement.text()),
                  interpolateMatches = iElementText.match(interpolateRegExp);
              if (angular.isArray(interpolateMatches)) {
                scope.preText = interpolateMatches[1], scope.postText = interpolateMatches[3], translationIds.translate = $interpolate(interpolateMatches[2])(scope.$parent);
                var watcherMatches = iElementText.match(watcherRegExp)
                ;angular.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length && (observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {
                  translationIds.translate = newValue, updateTranslations()
                }))
              } else translationIds.translate = iElementText || void 0
            } else translationIds.translate = translationId;
            updateTranslations()
          };
          !function (interpolateParams, iAttr, tAttr) {
            if (iAttr.translateValues && angular.extend(interpolateParams, $parse(iAttr.translateValues)(scope.$parent)), translateValueExist) for (var attr in tAttr) if (Object.prototype.hasOwnProperty.call(iAttr, attr) && "translateValue" === attr.substr(0, 14) && "translateValues" !== attr) {
              var attributeName                = angular.lowercase(attr.substr(14, 1)) + attr.substr(15);
              interpolateParams[attributeName] = tAttr[attr]
            }
          }(scope.interpolateParams, iAttr, tAttr);
          var firstAttributeChangedEvent = !0;
          iAttr.$observe("translate", function (translationId) {
            void 0 === translationId ? observeElementTranslation("") : "" === translationId && firstAttributeChangedEvent || (translationIds.translate = translationId, updateTranslations()), firstAttributeChangedEvent = !1
          });
          for (var translateAttr in iAttr) iAttr.hasOwnProperty(translateAttr) && "translateAttr" === translateAttr.substr(0, 13) && function (translateAttr) {
            iAttr.$observe(translateAttr, function (translationId) {
              translationIds[translateAttr] = translationId, updateTranslations()
            })
          }(translateAttr);
          if (iAttr.$observe("translateDefault", function (value) {
              scope.defaultText = value, updateTranslations()
            }), translateValuesExist && iAttr.$observe("translateValues", function (interpolateParams) {
              interpolateParams && scope.$parent.$watch(function () {
                angular.extend(scope.interpolateParams, $parse(interpolateParams)(scope.$parent))
              })
            }), translateValueExist) {
            for (var attr in iAttr) Object.prototype.hasOwnProperty.call(iAttr, attr) && "translateValue" === attr.substr(0, 14) && "translateValues" !== attr && function (attrName) {
              iAttr.$observe(attrName, function (value) {
                var attributeName                      = angular.lowercase(attrName.substr(14, 1)) + attrName.substr(15);
                scope.interpolateParams[attributeName] = value
              })
            }(attr)
          }
          var updateTranslations  = function () {
                for (var key in translationIds) translationIds.hasOwnProperty(key) && void 0 !== translationIds[key] && updateTranslation(key, translationIds[key], scope, scope.interpolateParams, scope.defaultText, scope.translateNamespace)
              },
              updateTranslation   = function (translateAttr, translationId, scope, interpolateParams, defaultTranslationText, translateNamespace) {
                translationId ? (translateNamespace && "." === translationId.charAt(0) && (translationId = translateNamespace + translationId), $translate(translationId, interpolateParams, translateInterpolation, defaultTranslationText, scope.translateLanguage).then(function (translation) {
                  applyTranslation(translation, scope, !0, translateAttr)
                }, function (translationId) {
                  applyTranslation(translationId, scope, !1, translateAttr)
                })) : applyTranslation(translationId, scope, !1, translateAttr)
              }, applyTranslation = function (value, scope, successful, translateAttr) {
                if (successful || void 0 !== scope.defaultText && (value = scope.defaultText), "translate" === translateAttr) {
                  (successful || !successful && void 0 === iAttr.translateKeepContent) && iElement.empty().append(scope.preText + value + scope.postText);
                  var globallyEnabled = $translate.isPostCompilingEnabled(),
                      locallyDefined  = void 0 !== tAttr.translateCompile,
                      locallyEnabled  = locallyDefined && "false" !== tAttr.translateCompile;
                  (globallyEnabled && !locallyDefined || locallyEnabled) && $compile(iElement.contents())(scope)
                } else {
                  var attributeName = iAttr.$attr[translateAttr];
                  "data-" === attributeName.substr(0, 5) && (attributeName = attributeName.substr(5)), attributeName = attributeName.substr(15), iElement.attr(attributeName, value)
                }
              };
          (translateValuesExist || translateValueExist || iAttr.translateDefault) && scope.$watch("interpolateParams", updateTranslations, !0);
          var unbindTranslateLanguage = scope.$on("translateLanguageChanged", updateTranslations),
              unbind                  = $rootScope.$on("$translateChangeSuccess", updateTranslations);
          iElement.text().length ? observeElementTranslation(iAttr.translate ? iAttr.translate : "") : iAttr.translate && observeElementTranslation(iAttr.translate), updateTranslations(), scope.$on("$destroy", function () {
            unbindTranslateLanguage(), unbind()
          })
        }
      }
    }
  }

  function getTranslateNamespace(scope) {
    "use strict";
    return scope.translateNamespace ? scope.translateNamespace : scope.$parent ? getTranslateNamespace(scope.$parent) : void 0
  }

  function translateCloakDirective($translate, $rootScope) {
    "use strict";
    return {
      compile: function (tElement) {
        var applyCloak = function () {
          tElement.addClass($translate.cloakClassName())
        }, removeCloak = function () {
          tElement.removeClass($translate.cloakClassName())
        };
        return $translate.onReady(function () {
          removeCloak()
        }), applyCloak(), function (scope, iElement, iAttr) {
          iAttr.translateCloak && iAttr.translateCloak.length && (iAttr.$observe("translateCloak", function (translationId) {
            $translate(translationId).then(removeCloak, applyCloak)
          }), $rootScope.$on("$translateChangeSuccess", function () {
            $translate(iAttr.translateCloak).then(removeCloak, applyCloak)
          }))
        }
      }
    }
  }

  function translateNamespaceDirective() {
    "use strict";
    return {
      restrict: "A", scope: !0, compile: function () {
        return {
          pre: function (scope, iElement, iAttrs) {
            scope.translateNamespace = getTranslateNamespace(scope), scope.translateNamespace && "." === iAttrs.translateNamespace.charAt(0) ? scope.translateNamespace += iAttrs.translateNamespace : scope.translateNamespace = iAttrs.translateNamespace
          }
        }
      }
    }
  }

  function getTranslateNamespace(scope) {
    "use strict";
    return scope.translateNamespace ? scope.translateNamespace : scope.$parent ? getTranslateNamespace(scope.$parent) : void 0
  }

  function translateLanguageDirective() {
    "use strict";
    return {
      restrict: "A", scope: !0, compile: function () {
        return function (scope, iElement, iAttrs) {
          iAttrs.$observe("translateLanguage", function (newTranslateLanguage) {
            scope.translateLanguage = newTranslateLanguage
          }), scope.$watch("translateLanguage", function () {
            scope.$broadcast("translateLanguageChanged")
          })
        }
      }
    }
  }

  function translateFilterFactory($parse, $translate) {
    "use strict";
    var translateFilter = function (translationId, interpolateParams, interpolation, forceLanguage) {
      return angular.isObject(interpolateParams) || (interpolateParams = $parse(interpolateParams)(this)), $translate.instant(translationId, interpolateParams, interpolation, forceLanguage)
    };
    return $translate.statefulFilter() && (translateFilter.$stateful = !0), translateFilter
  }

  function $translationCache($cacheFactory) {
    "use strict";
    return $cacheFactory("translations")
  }

  return runTranslate.$inject = ["$translate"], $translate.$inject = ["$STORAGE_KEY", "$windowProvider", "$translateSanitizationProvider", "pascalprechtTranslateOverrider"], $translateDefaultInterpolation.$inject = ["$interpolate", "$translateSanitization"], translateDirective.$inject = ["$translate", "$q", "$interpolate", "$compile", "$parse", "$rootScope"], translateCloakDirective.$inject = ["$translate", "$rootScope"], translateFilterFactory.$inject = ["$parse", "$translate"], $translationCache.$inject = ["$cacheFactory"], angular.module("pascalprecht.translate", ["ng"]).run(runTranslate), runTranslate.displayName = "runTranslate", angular.module("pascalprecht.translate").provider("$translateSanitization", $translateSanitizationProvider), angular.module("pascalprecht.translate").constant("pascalprechtTranslateOverrider", {}).provider("$translate", $translate), $translate.displayName = "displayName", angular.module("pascalprecht.translate").factory("$translateDefaultInterpolation", $translateDefaultInterpolation), $translateDefaultInterpolation.displayName = "$translateDefaultInterpolation", angular.module("pascalprecht.translate").constant("$STORAGE_KEY", "NG_TRANSLATE_LANG_KEY"), angular.module("pascalprecht.translate").directive("translate", translateDirective), translateDirective.displayName = "translateDirective", angular.module("pascalprecht.translate").directive("translateCloak", translateCloakDirective), translateCloakDirective.displayName = "translateCloakDirective", angular.module("pascalprecht.translate").directive("translateNamespace", translateNamespaceDirective), translateNamespaceDirective.displayName = "translateNamespaceDirective", angular.module("pascalprecht.translate").directive("translateLanguage", translateLanguageDirective), translateLanguageDirective.displayName = "translateLanguageDirective", angular.module("pascalprecht.translate").filter("translate", translateFilterFactory), translateFilterFactory.displayName = "translateFilterFactory", angular.module("pascalprecht.translate").factory("$translationCache", $translationCache), $translationCache.displayName = "$translationCache", "pascalprecht.translate"
}), function (root, factory) {
  "function" == typeof define && define.amd ? define([], function () {
    return factory()
  }) : "object" == typeof exports ? module.exports = factory() : factory()
}(0, function () {
  function $translateStaticFilesLoader($q, $http) {
    "use strict";
    return function (options) {
      if (!(options && (angular.isArray(options.files) || angular.isString(options.prefix) && angular.isString(options.suffix)))) throw new Error("Couldn't load static files, no files and prefix or suffix specified!");
      options.files || (options.files = [{prefix: options.prefix, suffix: options.suffix}]);
      for (var promises = [], length = options.files.length, i = 0; i < length; i++) promises.push(function (file) {
        if (!file || !angular.isString(file.prefix) || !angular.isString(file.suffix)) throw new Error("Couldn't load static file, no prefix or suffix specified!");
        return $http(angular.extend({
          url:    [file.prefix, options.key, file.suffix].join(""),
          method: "GET",
          params: ""
        }, options.$http)).then(function (result) {
          return result.data
        }, function () {
          return $q.reject(options.key)
        })
      }({prefix: options.files[i].prefix, key: options.key, suffix: options.files[i].suffix}));
      return $q.all(promises).then(function (data) {
        for (var length = data.length, mergedData = {}, i = 0; i < length; i++) for (var key in data[i]) mergedData[key] = data[i][key];
        return mergedData
      })
    }
  }

  return $translateStaticFilesLoader.$inject = ["$q", "$http"], angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader", $translateStaticFilesLoader), $translateStaticFilesLoader.displayName = "$translateStaticFilesLoader", "pascalprecht.translate"
}), function (window, angular) {
  "use strict";

  function $SanitizeProvider() {
    var svgEnabled = !1;
    this.$get = ["$$sanitizeUri", function ($$sanitizeUri) {
      return svgEnabled && angular.extend(validElements, svgElements), function (html) {
        var buf = [];
        return htmlParser(html, htmlSanitizeWriter(buf, function (uri, isImage) {
          return !/^unsafe:/.test($$sanitizeUri(uri, isImage))
        })), buf.join("")
      }
    }], this.enableSvg = function (enableSvg) {
      return angular.isDefined(enableSvg) ? (svgEnabled = enableSvg, this) : svgEnabled
    }
  }

  function sanitizeText(chars) {
    var buf = [];
    return htmlSanitizeWriter(buf, angular.noop).chars(chars), buf.join("")
  }

  function toMap(str, lowercaseKeys) {
    var i, obj = {}, items = str.split(",");
    for (i = 0; i < items.length; i++) obj[lowercaseKeys ? angular.lowercase(items[i]) : items[i]] = !0;
    return obj
  }

  function htmlParser(html, handler) {
    null === html || void 0 === html ? html = "" : "string" != typeof html && (html = "" + html), inertBodyElement.innerHTML = html;
    var mXSSAttempts = 5;
    do {
      if (0 === mXSSAttempts) throw $sanitizeMinErr("uinput", "Failed to sanitize html because the input is unstable");
      mXSSAttempts--, window.document.documentMode && stripCustomNsAttrs(inertBodyElement), html = inertBodyElement.innerHTML, inertBodyElement.innerHTML = html
    } while (html !== inertBodyElement.innerHTML);
    for (var node = inertBodyElement.firstChild; node;) {
      switch (node.nodeType) {
        case 1:
          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));
          break;
        case 3:
          handler.chars(node.textContent)
      }
      var nextNode;
      if (!((nextNode = node.firstChild) || (1 == node.nodeType && handler.end(node.nodeName.toLowerCase()), nextNode = node.nextSibling))) for (; null == nextNode && (node = node.parentNode) !== inertBodyElement;) nextNode = node.nextSibling, 1 == node.nodeType && handler.end(node.nodeName.toLowerCase());
      node = nextNode
    }
    for (; node = inertBodyElement.firstChild;) inertBodyElement.removeChild(node)
  }

  function attrToMap(attrs) {
    for (var map = {}, i = 0, ii = attrs.length; i < ii; i++) {
      var attr       = attrs[i];
      map[attr.name] = attr.value
    }
    return map
  }

  function encodeEntities(value) {
    return value.replace(/&/g, "&amp;").replace(SURROGATE_PAIR_REGEXP, function (value) {
      return "&#" + (1024 * (value.charCodeAt(0) - 55296) + (value.charCodeAt(1) - 56320) + 65536) + ";"
    }).replace(NON_ALPHANUMERIC_REGEXP, function (value) {
      return "&#" + value.charCodeAt(0) + ";"
    }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
  }

  function htmlSanitizeWriter(buf, uriValidator) {
    var ignoreCurrentElement = !1, out = angular.bind(buf, buf.push);
    return {
      start:    function (tag, attrs) {
        tag = angular.lowercase(tag), !ignoreCurrentElement && blockedElements[tag] && (ignoreCurrentElement = tag), ignoreCurrentElement || !0 !== validElements[tag] || (out("<"), out(tag), angular.forEach(attrs, function (value, key) {
          var lkey = angular.lowercase(key), isImage = "img" === tag && "src" === lkey || "background" === lkey;
          !0 !== validAttrs[lkey] || !0 === uriAttrs[lkey] && !uriValidator(value, isImage) || (out(" "), out(key), out('="'), out(encodeEntities(value)), out('"'))
        }), out(">"))
      }, end:   function (tag) {
        tag = angular.lowercase(tag), ignoreCurrentElement || !0 !== validElements[tag] || !0 === voidElements[tag] || (out("</"), out(tag), out(">")), tag == ignoreCurrentElement && (ignoreCurrentElement = !1)
      }, chars: function (chars) {
        ignoreCurrentElement || out(encodeEntities(chars))
      }
    }
  }

  function stripCustomNsAttrs(node) {
    if (node.nodeType === window.Node.ELEMENT_NODE) for (var attrs = node.attributes, i = 0, l = attrs.length; i < l; i++) {
      var attrNode = attrs[i], attrName = attrNode.name.toLowerCase();
      "xmlns:ns1" !== attrName && 0 !== attrName.indexOf("ns1:") || (node.removeAttributeNode(attrNode), i--, l--)
    }
    var nextNode = node.firstChild;
    nextNode && stripCustomNsAttrs(nextNode), (nextNode = node.nextSibling) && stripCustomNsAttrs(nextNode)
  }

  var inertBodyElement, $sanitizeMinErr                                                  = angular.$$minErr("$sanitize"),
      SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, NON_ALPHANUMERIC_REGEXP = /([^\#-~ |!])/g,
      voidElements                                                                       = toMap("area,br,col,hr,img,wbr"),
      optionalEndTagBlockElements                                                        = toMap("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
      optionalEndTagInlineElements                                                       = toMap("rp,rt"),
      optionalEndTagElements                                                             = angular.extend({}, optionalEndTagInlineElements, optionalEndTagBlockElements),
      blockElements                                                                      = angular.extend({}, optionalEndTagBlockElements, toMap("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul")),
      inlineElements                                                                     = angular.extend({}, optionalEndTagInlineElements, toMap("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
      svgElements                                                                        = toMap("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan"),
      blockedElements                                                                    = toMap("script,style"),
      validElements                                                                      = angular.extend({}, voidElements, blockElements, inlineElements, optionalEndTagElements),
      uriAttrs                                                                           = toMap("background,cite,href,longdesc,src,xlink:href"),
      htmlAttrs                                                                          = toMap("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"),
      svgAttrs                                                                           = toMap("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan", !0),
      validAttrs                                                                         = angular.extend({}, uriAttrs, svgAttrs, htmlAttrs);
  !function (window) {
    var doc;
    if (!window.document || !window.document.implementation) throw $sanitizeMinErr("noinert", "Can't create an inert html document");
    doc              = window.document.implementation.createHTMLDocument("inert");
    var docElement   = doc.documentElement || doc.getDocumentElement(),
        bodyElements = docElement.getElementsByTagName("body");
    if (1 === bodyElements.length) inertBodyElement = bodyElements[0]; else {
      var html = doc.createElement("html");
      inertBodyElement = doc.createElement("body"), html.appendChild(inertBodyElement), doc.appendChild(html)
    }
  }(window), angular.module("ngSanitize", []).provider("$sanitize", $SanitizeProvider), angular.module("ngSanitize").filter("linky", ["$sanitize", function ($sanitize) {
    var LINKY_URL_REGEXP                                                               = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
        MAILTO_REGEXP = /^mailto:/i, linkyMinErr = angular.$$minErr("linky"), isString = angular.isString;
    return function (text, target, attributes) {
      function addText(text) {
        text && html.push(sanitizeText(text))
      }

      if (null == text || "" === text) return text;
      if (!isString(text)) throw linkyMinErr("notstring", "Expected string but received: {0}", text);
      for (var match, url, i, raw = text, html = []; match = raw.match(LINKY_URL_REGEXP);) url = match[0], match[2] || match[4] || (url = (match[3] ? "http://" : "mailto:") + url), i = match.index, addText(raw.substr(0, i)), function (url, text) {
        var key;
        if (html.push("<a "), angular.isFunction(attributes) && (attributes = attributes(url)), angular.isObject(attributes)) for (key in attributes) html.push(key + '="' + attributes[key] + '" '); else attributes = {};
        !angular.isDefined(target) || "target" in attributes || html.push('target="', target, '" '), html.push('href="', url.replace(/"/g, "&quot;"), '">'), addText(text), html.push("</a>")
      }(url, match[0].replace(MAILTO_REGEXP, "")), raw = raw.substring(i + match[0].length);
      return addText(raw), $sanitize(html.join(""))
    }
  }])
}(window, window.angular), function () {
  function n(n) {
    function t(t, r, e, u, i, o) {
      for (; i >= 0 && o > i; i += n) {
        var a = u ? u[i] : i;
        e     = r(e, t[a], a, t)
      }
      return e
    }

    return function (r, e, u, i) {
      e     = b(e, i, 4);
      var o = !k(r) && m.keys(r), a = (o || r).length, c = n > 0 ? 0 : a - 1;
      return arguments.length < 3 && (u = r[o ? o[c] : c], c += n), t(r, e, u, o, c, a)
    }
  }

  function t(n) {
    return function (t, r, e) {
      r = x(r, e);
      for (var u = O(t), i = n > 0 ? 0 : u - 1; i >= 0 && u > i; i += n) if (r(t[i], i, t)) return i;
      return -1
    }
  }

  function r(n, t, r) {
    return function (e, u, i) {
      var o = 0, a = O(e);
      if ("number" == typeof i) n > 0 ? o = i >= 0 ? i : Math.max(i + a, o) : a = i >= 0 ? Math.min(i + 1, a) : i + a + 1; else if (r && i && a) return i = r(e, u), e[i] === u ? i : -1;
      if (u !== u) return i = t(l.call(e, o, a), m.isNaN), i >= 0 ? i + o : -1;
      for (i = n > 0 ? o : a - 1; i >= 0 && a > i; i += n) if (e[i] === u) return i;
      return -1
    }
  }

  function e(n, t) {
    var r = I.length, e = n.constructor, u = m.isFunction(e) && e.prototype || a, i = "constructor";
    for (m.has(n, i) && !m.contains(t, i) && t.push(i); r--;) (i = I[r]) in n && n[i] !== u[i] && !m.contains(t, i) && t.push(i)
  }

  var u = this, i = u._, o = Array.prototype, a = Object.prototype, c = Function.prototype, f = o.push, l = o.slice,
      s                                                                                                   = a.toString, p = a.hasOwnProperty, h                                                             = Array.isArray, v = Object.keys, g = c.bind, y = Object.create,
      d                                                                                                   = function () {
      }, m                                                                                                = function (n) {
        return n instanceof m ? n : this instanceof m ? void(this._wrapped = n) : new m(n)
      };
  "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = m), exports._ = m) : u._ = m, m.VERSION = "1.8.3";
  var b      = function (n, t, r) {
    if (void 0 === t) return n;
    switch (null == r ? 3 : r) {
      case 1:
        return function (r) {
          return n.call(t, r)
        };
      case 2:
        return function (r, e) {
          return n.call(t, r, e)
        };
      case 3:
        return function (r, e, u) {
          return n.call(t, r, e, u)
        };
      case 4:
        return function (r, e, u, i) {
          return n.call(t, r, e, u, i)
        }
    }
    return function () {
      return n.apply(t, arguments)
    }
  }, x       = function (n, t, r) {
    return null == n ? m.identity : m.isFunction(n) ? b(n, t, r) : m.isObject(n) ? m.matcher(n) : m.property(n)
  };
  m.iteratee = function (n, t) {
    return x(n, t, 1 / 0)
  };
  var _      = function (n, t) {
    return function (r) {
      var e = arguments.length;
      if (2 > e || null == r) return r;
      for (var u = 1; e > u; u++) for (var i = arguments[u], o = n(i), a = o.length, c = 0; a > c; c++) {
        var f = o[c];
        t && void 0 !== r[f] || (r[f] = i[f])
      }
      return r
    }
  }, j       = function (n) {
    if (!m.isObject(n)) return {};
    if (y) return y(n);
    d.prototype = n;
    var t       = new d;
    return d.prototype = null, t
  }, w       = function (n) {
    return function (t) {
      return null == t ? void 0 : t[n]
    }
  }, A       = Math.pow(2, 53) - 1, O = w("length"), k = function (n) {
    var t = O(n);
    return "number" == typeof t && t >= 0 && A >= t
  };
  m.each = m.forEach = function (n, t, r) {
    t = b(t, r);
    var e, u;
    if (k(n)) for (e = 0, u = n.length; u > e; e++) t(n[e], e, n); else {
      var i = m.keys(n);
      for (e = 0, u = i.length; u > e; e++) t(n[i[e]], i[e], n)
    }
    return n
  }, m.map = m.collect = function (n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n), u = (e || n).length, i = Array(u), o = 0; u > o; o++) {
      var a = e ? e[o] : o;
      i[o]  = t(n[a], a, n)
    }
    return i
  }, m.reduce = m.foldl = m.inject = n(1), m.reduceRight = m.foldr = n(-1), m.find = m.detect = function (n, t, r) {
    var e;
    return e = k(n) ? m.findIndex(n, t, r) : m.findKey(n, t, r), void 0 !== e && -1 !== e ? n[e] : void 0
  }, m.filter = m.select = function (n, t, r) {
    var e = [];
    return t = x(t, r), m.each(n, function (n, r, u) {
      t(n, r, u) && e.push(n)
    }), e
  }, m.reject = function (n, t, r) {
    return m.filter(n, m.negate(x(t)), r)
  }, m.every = m.all = function (n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n), u = (e || n).length, i = 0; u > i; i++) {
      var o = e ? e[i] : i;
      if (!t(n[o], o, n)) return !1
    }
    return !0
  }, m.some = m.any = function (n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n), u = (e || n).length, i = 0; u > i; i++) {
      var o = e ? e[i] : i;
      if (t(n[o], o, n)) return !0
    }
    return !1
  }, m.contains = m.includes = m.include = function (n, t, r, e) {
    return k(n) || (n = m.values(n)), ("number" != typeof r || e) && (r = 0), m.indexOf(n, t, r) >= 0
  }, m.invoke = function (n, t) {
    var r = l.call(arguments, 2), e = m.isFunction(t);
    return m.map(n, function (n) {
      var u = e ? t : n[t];
      return null == u ? u : u.apply(n, r)
    })
  }, m.pluck = function (n, t) {
    return m.map(n, m.property(t))
  }, m.where = function (n, t) {
    return m.filter(n, m.matcher(t))
  }, m.findWhere = function (n, t) {
    return m.find(n, m.matcher(t))
  }, m.max = function (n, t, r) {
    var e, u, i = -1 / 0, o = -1 / 0;
    if (null == t && null != n) {
      n = k(n) ? n : m.values(n);
      for (var a = 0, c = n.length; c > a; a++) (e = n[a]) > i && (i = e)
    } else t = x(t, r), m.each(n, function (n, r, e) {
      ((u = t(n, r, e)) > o || u === -1 / 0 && i === -1 / 0) && (i = n, o = u)
    });
    return i
  }, m.min = function (n, t, r) {
    var e, u, i = 1 / 0, o = 1 / 0;
    if (null == t && null != n) {
      n = k(n) ? n : m.values(n);
      for (var a = 0, c = n.length; c > a; a++) e = n[a], i > e && (i = e)
    } else t = x(t, r), m.each(n, function (n, r, e) {
      u = t(n, r, e), (o > u || 1 / 0 === u && 1 / 0 === i) && (i = n, o = u)
    });
    return i
  }, m.shuffle = function (n) {
    for (var t, r = k(n) ? n : m.values(n), e = r.length, u = Array(e), i = 0; e > i; i++) t = m.random(0, i), t !== i && (u[i] = u[t]), u[t] = r[i];
    return u
  }, m.sample = function (n, t, r) {
    return null == t || r ? (k(n) || (n = m.values(n)), n[m.random(n.length - 1)]) : m.shuffle(n).slice(0, Math.max(0, t))
  }, m.sortBy = function (n, t, r) {
    return t = x(t, r), m.pluck(m.map(n, function (n, r, e) {
      return {value: n, index: r, criteria: t(n, r, e)}
    }).sort(function (n, t) {
      var r = n.criteria, e = t.criteria;
      if (r !== e) {
        if (r > e || void 0 === r) return 1;
        if (e > r || void 0 === e) return -1
      }
      return n.index - t.index
    }), "value")
  };
  var F = function (n) {
    return function (t, r, e) {
      var u = {};
      return r = x(r, e), m.each(t, function (e, i) {
        var o = r(e, i, t);
        n(u, e, o)
      }), u
    }
  };
  m.groupBy = F(function (n, t, r) {
    m.has(n, r) ? n[r].push(t) : n[r] = [t]
  }), m.indexBy = F(function (n, t, r) {
    n[r] = t
  }), m.countBy = F(function (n, t, r) {
    m.has(n, r) ? n[r]++ : n[r] = 1
  }), m.toArray = function (n) {
    return n ? m.isArray(n) ? l.call(n) : k(n) ? m.map(n, m.identity) : m.values(n) : []
  }, m.size = function (n) {
    return null == n ? 0 : k(n) ? n.length : m.keys(n).length
  }, m.partition = function (n, t, r) {
    t     = x(t, r);
    var e = [], u = [];
    return m.each(n, function (n, r, i) {
      (t(n, r, i) ? e : u).push(n)
    }), [e, u]
  }, m.first = m.head = m.take = function (n, t, r) {
    return null == n ? void 0 : null == t || r ? n[0] : m.initial(n, n.length - t)
  }, m.initial = function (n, t, r) {
    return l.call(n, 0, Math.max(0, n.length - (null == t || r ? 1 : t)))
  }, m.last = function (n, t, r) {
    return null == n ? void 0 : null == t || r ? n[n.length - 1] : m.rest(n, Math.max(0, n.length - t))
  }, m.rest = m.tail = m.drop = function (n, t, r) {
    return l.call(n, null == t || r ? 1 : t)
  }, m.compact = function (n) {
    return m.filter(n, m.identity)
  };
  var S = function (n, t, r, e) {
    for (var u = [], i = 0, o = e || 0, a = O(n); a > o; o++) {
      var c = n[o];
      if (k(c) && (m.isArray(c) || m.isArguments(c))) {
        t || (c = S(c, t, r));
        var f = 0, l = c.length;
        for (u.length += l; l > f;) u[i++] = c[f++]
      } else r || (u[i++] = c)
    }
    return u
  };
  m.flatten = function (n, t) {
    return S(n, t, !1)
  }, m.without = function (n) {
    return m.difference(n, l.call(arguments, 1))
  }, m.uniq = m.unique = function (n, t, r, e) {
    m.isBoolean(t) || (e = r, r = t, t = !1), null != r && (r = x(r, e));
    for (var u = [], i = [], o = 0, a = O(n); a > o; o++) {
      var c = n[o], f = r ? r(c, o, n) : c;
      t ? (o && i === f || u.push(c), i = f) : r ? m.contains(i, f) || (i.push(f), u.push(c)) : m.contains(u, c) || u.push(c)
    }
    return u
  }, m.union = function () {
    return m.uniq(S(arguments, !0, !0))
  }, m.intersection = function (n) {
    for (var t = [], r = arguments.length, e = 0, u = O(n); u > e; e++) {
      var i = n[e];
      if (!m.contains(t, i)) {
        for (var o = 1; r > o && m.contains(arguments[o], i); o++) ;
        o === r && t.push(i)
      }
    }
    return t
  }, m.difference = function (n) {
    var t = S(arguments, !0, !0, 1);
    return m.filter(n, function (n) {
      return !m.contains(t, n)
    })
  }, m.zip = function () {
    return m.unzip(arguments)
  }, m.unzip = function (n) {
    for (var t = n && m.max(n, O).length || 0, r = Array(t), e = 0; t > e; e++) r[e] = m.pluck(n, e);
    return r
  }, m.object = function (n, t) {
    for (var r = {}, e = 0, u = O(n); u > e; e++) t ? r[n[e]] = t[e] : r[n[e][0]] = n[e][1];
    return r
  }, m.findIndex = t(1), m.findLastIndex = t(-1), m.sortedIndex = function (n, t, r, e) {
    r = x(r, e, 1);
    for (var u = r(t), i = 0, o = O(n); o > i;) {
      var a = Math.floor((i + o) / 2);
      r(n[a]) < u ? i = a + 1 : o = a
    }
    return i
  }, m.indexOf = r(1, m.findIndex, m.sortedIndex), m.lastIndexOf = r(-1, m.findLastIndex), m.range = function (n, t, r) {
    null == t && (t = n || 0, n = 0), r = r || 1;
    for (var e = Math.max(Math.ceil((t - n) / r), 0), u = Array(e), i = 0; e > i; i++, n += r) u[i] = n;
    return u
  };
  var E = function (n, t, r, e, u) {
    if (!(e instanceof t)) return n.apply(r, u);
    var i = j(n.prototype), o = n.apply(i, u);
    return m.isObject(o) ? o : i
  };
  m.bind = function (n, t) {
    if (g && n.bind === g) return g.apply(n, l.call(arguments, 1));
    if (!m.isFunction(n)) throw new TypeError("Bind must be called on a function");
    var r = l.call(arguments, 2), e = function () {
      return E(n, e, t, this, r.concat(l.call(arguments)))
    };
    return e
  }, m.partial = function (n) {
    var t = l.call(arguments, 1), r = function () {
      for (var e = 0, u = t.length, i = Array(u), o = 0; u > o; o++) i[o] = t[o] === m ? arguments[e++] : t[o];
      for (; e < arguments.length;) i.push(arguments[e++]);
      return E(n, r, this, this, i)
    };
    return r
  }, m.bindAll = function (n) {
    var t, r, e = arguments.length;
    if (1 >= e) throw new Error("bindAll must be passed function names");
    for (t = 1; e > t; t++) r = arguments[t], n[r] = m.bind(n[r], n);
    return n
  }, m.memoize = function (n, t) {
    var r = function (e) {
      var u = r.cache, i = "" + (t ? t.apply(this, arguments) : e);
      return m.has(u, i) || (u[i] = n.apply(this, arguments)), u[i]
    };
    return r.cache = {}, r
  }, m.delay = function (n, t) {
    var r = l.call(arguments, 2);
    return setTimeout(function () {
      return n.apply(null, r)
    }, t)
  }, m.defer = m.partial(m.delay, m, 1), m.throttle = function (n, t, r) {
    var e, u, i, o = null, a = 0;
    r || (r = {});
    var c = function () {
      a = !1 === r.leading ? 0 : m.now(), o = null, i = n.apply(e, u), o || (e = u = null)
    };
    return function () {
      var f = m.now();
      a || !1 !== r.leading || (a = f);
      var l = t - (f - a);
      return e = this, u = arguments, 0 >= l || l > t ? (o && (clearTimeout(o), o = null), a = f, i = n.apply(e, u), o || (e = u = null)) : o || !1 === r.trailing || (o = setTimeout(c, l)), i
    }
  }, m.debounce = function (n, t, r) {
    var e, u, i, o, a, c = function () {
      var f = m.now() - o;
      t > f && f >= 0 ? e = setTimeout(c, t - f) : (e = null, r || (a = n.apply(i, u), e || (i = u = null)))
    };
    return function () {
      i = this, u = arguments, o = m.now();
      var f = r && !e;
      return e || (e = setTimeout(c, t)), f && (a = n.apply(i, u), i = u = null), a
    }
  }, m.wrap = function (n, t) {
    return m.partial(t, n)
  }, m.negate = function (n) {
    return function () {
      return !n.apply(this, arguments)
    }
  }, m.compose = function () {
    var n = arguments, t = n.length - 1;
    return function () {
      for (var r = t, e = n[t].apply(this, arguments); r--;) e = n[r].call(this, e);
      return e
    }
  }, m.after = function (n, t) {
    return function () {
      return --n < 1 ? t.apply(this, arguments) : void 0
    }
  }, m.before = function (n, t) {
    var r;
    return function () {
      return --n > 0 && (r = t.apply(this, arguments)), 1 >= n && (t = null), r
    }
  }, m.once = m.partial(m.before, 2);
  var M = !{toString: null}.propertyIsEnumerable("toString"),
      I = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
  m.keys = function (n) {
    if (!m.isObject(n)) return [];
    if (v) return v(n);
    var t = [];
    for (var r in n) m.has(n, r) && t.push(r);
    return M && e(n, t), t
  }, m.allKeys = function (n) {
    if (!m.isObject(n)) return [];
    var t = [];
    for (var r in n) t.push(r);
    return M && e(n, t), t
  }, m.values = function (n) {
    for (var t = m.keys(n), r = t.length, e = Array(r), u = 0; r > u; u++) e[u] = n[t[u]];
    return e
  }, m.mapObject = function (n, t, r) {
    t = x(t, r);
    for (var e, u = m.keys(n), i = u.length, o = {}, a = 0; i > a; a++) e = u[a], o[e] = t(n[e], e, n);
    return o
  }, m.pairs = function (n) {
    for (var t = m.keys(n), r = t.length, e = Array(r), u = 0; r > u; u++) e[u] = [t[u], n[t[u]]];
    return e
  }, m.invert = function (n) {
    for (var t = {}, r = m.keys(n), e = 0, u = r.length; u > e; e++) t[n[r[e]]] = r[e];
    return t
  }, m.functions = m.methods = function (n) {
    var t = [];
    for (var r in n) m.isFunction(n[r]) && t.push(r);
    return t.sort()
  }, m.extend = _(m.allKeys), m.extendOwn = m.assign = _(m.keys), m.findKey = function (n, t, r) {
    t = x(t, r);
    for (var e, u = m.keys(n), i = 0, o = u.length; o > i; i++) if (e = u[i], t(n[e], e, n)) return e
  }, m.pick = function (n, t, r) {
    var e, u, i = {}, o = n;
    if (null == o) return i;
    m.isFunction(t) ? (u = m.allKeys(o), e = b(t, r)) : (u = S(arguments, !1, !1, 1), e = function (n, t, r) {
      return t in r
    }, o = Object(o));
    for (var a = 0, c = u.length; c > a; a++) {
      var f = u[a], l = o[f];
      e(l, f, o) && (i[f] = l)
    }
    return i
  }, m.omit = function (n, t, r) {
    if (m.isFunction(t)) t = m.negate(t); else {
      var e = m.map(S(arguments, !1, !1, 1), String);
      t     = function (n, t) {
        return !m.contains(e, t)
      }
    }
    return m.pick(n, t, r)
  }, m.defaults = _(m.allKeys, !0), m.create = function (n, t) {
    var r = j(n);
    return t && m.extendOwn(r, t), r
  }, m.clone = function (n) {
    return m.isObject(n) ? m.isArray(n) ? n.slice() : m.extend({}, n) : n
  }, m.tap = function (n, t) {
    return t(n), n
  }, m.isMatch = function (n, t) {
    var r = m.keys(t), e = r.length;
    if (null == n) return !e;
    for (var u = Object(n), i = 0; e > i; i++) {
      var o = r[i];
      if (t[o] !== u[o] || !(o in u)) return !1
    }
    return !0
  };
  var N = function (n, t, r, e) {
    if (n === t) return 0 !== n || 1 / n == 1 / t;
    if (null == n || null == t) return n === t;
    n instanceof m && (n = n._wrapped), t instanceof m && (t = t._wrapped);
    var u = s.call(n);
    if (u !== s.call(t)) return !1;
    switch (u) {
      case"[object RegExp]":
      case"[object String]":
        return "" + n == "" + t;
      case"[object Number]":
        return +n != +n ? +t != +t : 0 == +n ? 1 / +n == 1 / t : +n == +t;
      case"[object Date]":
      case"[object Boolean]":
        return +n == +t
    }
    var i = "[object Array]" === u;
    if (!i) {
      if ("object" != typeof n || "object" != typeof t) return !1;
      var o = n.constructor, a = t.constructor;
      if (o !== a && !(m.isFunction(o) && o instanceof o && m.isFunction(a) && a instanceof a) && "constructor" in n && "constructor" in t) return !1
    }
    r = r || [], e = e || [];
    for (var c = r.length; c--;) if (r[c] === n) return e[c] === t;
    if (r.push(n), e.push(t), i) {
      if ((c = n.length) !== t.length) return !1;
      for (; c--;) if (!N(n[c], t[c], r, e)) return !1
    } else {
      var f, l = m.keys(n);
      if (c = l.length, m.keys(t).length !== c) return !1;
      for (; c--;) if (f = l[c], !m.has(t, f) || !N(n[f], t[f], r, e)) return !1
    }
    return r.pop(), e.pop(), !0
  };
  m.isEqual = function (n, t) {
    return N(n, t)
  }, m.isEmpty = function (n) {
    return null == n || (k(n) && (m.isArray(n) || m.isString(n) || m.isArguments(n)) ? 0 === n.length : 0 === m.keys(n).length)
  }, m.isElement = function (n) {
    return !(!n || 1 !== n.nodeType)
  }, m.isArray = h || function (n) {
    return "[object Array]" === s.call(n)
  }, m.isObject = function (n) {
    var t = typeof n;
    return "function" === t || "object" === t && !!n
  }, m.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function (n) {
    m["is" + n] = function (t) {
      return s.call(t) === "[object " + n + "]"
    }
  }), m.isArguments(arguments) || (m.isArguments = function (n) {
    return m.has(n, "callee")
  }), "function" != typeof/./ && "object" != typeof Int8Array && (m.isFunction = function (n) {
    return "function" == typeof n || !1
  }), m.isFinite = function (n) {
    return isFinite(n) && !isNaN(parseFloat(n))
  }, m.isNaN = function (n) {
    return m.isNumber(n) && n !== +n
  }, m.isBoolean = function (n) {
    return !0 === n || !1 === n || "[object Boolean]" === s.call(n)
  }, m.isNull = function (n) {
    return null === n
  }, m.isUndefined = function (n) {
    return void 0 === n
  }, m.has = function (n, t) {
    return null != n && p.call(n, t)
  }, m.noConflict = function () {
    return u._ = i, this
  }, m.identity = function (n) {
    return n
  }, m.constant = function (n) {
    return function () {
      return n
    }
  }, m.noop = function () {
  }, m.property = w, m.propertyOf = function (n) {
    return null == n ? function () {
    } : function (t) {
      return n[t]
    }
  }, m.matcher = m.matches = function (n) {
    return n = m.extendOwn({}, n), function (t) {
      return m.isMatch(t, n)
    }
  }, m.times = function (n, t, r) {
    var e = Array(Math.max(0, n));
    t     = b(t, r, 1);
    for (var u = 0; n > u; u++) e[u] = t(u);
    return e
  }, m.random = function (n, t) {
    return null == t && (t = n, n = 0), n + Math.floor(Math.random() * (t - n + 1))
  }, m.now = Date.now || function () {
    return (new Date).getTime()
  }
  ;var B = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;"}, T = m.invert(B),
       R                                                                                            = function (n) {
         var t                                                      = function (t) {
           return n[t]
         }, r = "(?:" + m.keys(n).join("|") + ")", e = RegExp(r), u = RegExp(r, "g");
         return function (n) {
           return n = null == n ? "" : "" + n, e.test(n) ? n.replace(u, t) : n
         }
       };
  m.escape = R(B), m.unescape = R(T), m.result = function (n, t, r) {
    var e = null == n ? void 0 : n[t];
    return void 0 === e && (e = r), m.isFunction(e) ? e.call(n) : e
  };
  var q = 0;
  m.uniqueId = function (n) {
    var t = ++q + "";
    return n ? n + t : t
  }, m.templateSettings = {evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g};
  var K                                  = /(.)^/, z                      = {"'": "'", "\\": "\\", "\r": "r", "\n": "n", "\u2028": "u2028", "\u2029": "u2029"},
      D = /\\|'|\r|\n|\u2028|\u2029/g, L = function (n) {
        return "\\" + z[n]
      };
  m.template = function (n, t, r) {
    !t && r && (t = r), t = m.defaults({}, t, m.templateSettings);
    var e        = RegExp([(t.escape || K).source, (t.interpolate || K).source, (t.evaluate || K).source].join("|") + "|$", "g"),
        u = 0, i = "__p+='";
    n.replace(e, function (t, r, e, o, a) {
      return i += n.slice(u, a).replace(D, L), u = a + t.length, r ? i += "'+\n((__t=(" + r + "))==null?'':_.escape(__t))+\n'" : e ? i += "'+\n((__t=(" + e + "))==null?'':__t)+\n'" : o && (i += "';\n" + o + "\n__p+='"), t
    }), i += "';\n", t.variable || (i = "with(obj||{}){\n" + i + "}\n"), i = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + i + "return __p;\n";
    try {
      var o = new Function(t.variable || "obj", "_", i)
    } catch (a) {
      throw a.source = i, a
    }
    var c = function (n) {
      return o.call(this, n, m)
    };
    return c.source = "function(" + (t.variable || "obj") + "){\n" + i + "}", c
  }, m.chain = function (n) {
    var t = m(n);
    return t._chain = !0, t
  };
  var P = function (n, t) {
    return n._chain ? m(t).chain() : t
  };
  m.mixin = function (n) {
    m.each(m.functions(n), function (t) {
      var r = m[t] = n[t];
      m.prototype[t] = function () {
        var n = [this._wrapped];
        return f.apply(n, arguments), P(this, r.apply(m, n))
      }
    })
  }, m.mixin(m), m.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (n) {
    var t          = o[n];
    m.prototype[n] = function () {
      var r = this._wrapped;
      return t.apply(r, arguments), "shift" !== n && "splice" !== n || 0 !== r.length || delete r[0], P(this, r)
    }
  }), m.each(["concat", "join", "slice"], function (n) {
    var t          = o[n];
    m.prototype[n] = function () {
      return P(this, t.apply(this._wrapped, arguments))
    }
  }), m.prototype.value = function () {
    return this._wrapped
  }, m.prototype.valueOf = m.prototype.toJSON = m.prototype.value, m.prototype.toString = function () {
    return "" + this._wrapped
  }, "function" == typeof define && define.amd && define("underscore", [], function () {
    return m
  })
}.call(this), Easing = {
  Linear:      {},
  Quadratic:   {},
  Cubic:       {},
  Quartic:     {},
  Quintic:     {},
  Sinusoidal:  {},
  Exponential: {},
  Circular:    {},
  Elastic:     {},
  Back:        {},
  Bounce:      {}
}, Easing.Linear.EaseNone = function (k) {
  return k
}, Easing.Quadratic.EaseIn = function (k) {
  return k * k
}, Easing.Quadratic.EaseOut = function (k) {
  return -k * (k - 2)
}, Easing.Quadratic.EaseInOut = function (k) {
  return (k *= 2) < 1 ? .5 * k * k : -.5 * (--k * (k - 2) - 1)
}, Easing.Cubic.EaseIn = function (k) {
  return k * k * k
}, Easing.Cubic.EaseOut = function (k) {
  return --k * k * k + 1
}, Easing.Cubic.EaseInOut = function (k) {
  return (k *= 2) < 1 ? .5 * k * k * k : .5 * ((k -= 2) * k * k + 2)
}, Easing.Quartic.EaseIn = function (k) {
  return k * k * k * k
}, Easing.Quartic.EaseOut = function (k) {
  return -(--k * k * k * k - 1)
}, Easing.Quartic.EaseInOut = function (k) {
  return (k *= 2) < 1 ? .5 * k * k * k * k : -.5 * ((k -= 2) * k * k * k - 2)
}, Easing.Quintic.EaseIn = function (k) {
  return k * k * k * k * k
}, Easing.Quintic.EaseOut = function (k) {
  return (k -= 1) * k * k * k * k + 1
}, Easing.Quintic.EaseInOut = function (k) {
  return (k *= 2) < 1 ? .5 * k * k * k * k * k : .5 * ((k -= 2) * k * k * k * k + 2)
}, Easing.Sinusoidal.EaseIn = function (k) {
  return 1 - Math.cos(k * Math.PI / 2)
}, Easing.Sinusoidal.EaseOut = function (k) {
  return Math.sin(k * Math.PI / 2)
}, Easing.Sinusoidal.EaseInOut = function (k) {
  return -.5 * (Math.cos(Math.PI * k) - 1)
}, Easing.Exponential.EaseIn = function (k) {
  return 0 == k ? 0 : Math.pow(2, 10 * (k - 1))
}, Easing.Exponential.EaseOut = function (k) {
  return 1 == k ? 1 : 1 - Math.pow(2, -10 * k)
}, Easing.Exponential.EaseInOut = function (k) {
  return 0 == k ? 0 : 1 == k ? 1 : (k *= 2) < 1 ? .5 * Math.pow(2, 10 * (k - 1)) : .5 * (2 - Math.pow(2, -10 * (k - 1)))
}, Easing.Circular.EaseIn = function (k) {
  return -(Math.sqrt(1 - k * k) - 1)
}, Easing.Circular.EaseOut = function (k) {
  return Math.sqrt(1 - --k * k)
}, Easing.Circular.EaseInOut = function (k) {
  return (k /= .5) < 1 ? -.5 * (Math.sqrt(1 - k * k) - 1) : .5 * (Math.sqrt(1 - (k -= 2) * k) + 1)
}, Easing.Elastic.EaseIn = function (k) {
  var s, a = .1, p = .4;
  return 0 == k ? 0 : 1 == k ? 1 : (p || (p = .3), !a || a < 1 ? (a = 1, s = p / 4) : s = p / (2 * Math.PI) * Math.asin(1 / a), -a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p))
}, Easing.Elastic.EaseOut = function (k) {
  var s, a = .1, p = .4;
  return 0 == k ? 0 : 1 == k ? 1 : (p || (p = .3), !a || a < 1 ? (a = 1, s = p / 4) : s = p / (2 * Math.PI) * Math.asin(1 / a), a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1)
}, Easing.Elastic.EaseInOut = function (k) {
  var s, a = .1, p = .4;
  return 0 == k ? 0 : 1 == k ? 1 : (p || (p = .3), !a || a < 1 ? (a = 1, s = p / 4) : s = p / (2 * Math.PI) * Math.asin(1 / a), (k *= 2) < 1 ? a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * -.5 : a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * .5 + 1)
}, Easing.Back.EaseIn = function (k) {
  var s = 1.70158;
  return k * k * ((s + 1) * k - s)
}, Easing.Back.EaseOut = function (k) {
  var s = 1.70158;
  return (k -= 1) * k * ((s + 1) * k + s) + 1
}, Easing.Back.EaseInOut = function (k) {
  var s = 2.5949095;
  return (k *= 2) < 1 ? k * k * ((s + 1) * k - s) * .5 : .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2)
}, Easing.Bounce.EaseIn = function (k) {
  return 1 - Easing.Bounce.EaseOut(1 - k)
}, Easing.Bounce.EaseOut = function (k) {
  return (k /= 1) < 1 / 2.75 ? 7.5625 * k * k : k < 2 / 2.75 ? 7.5625 * (k -= 1.5 / 2.75) * k + .75 : k < 2.5 / 2.75 ? 7.5625 * (k -= 2.25 / 2.75) * k + .9375 : 7.5625 * (k -= 2.625 / 2.75) * k + .984375
}, Easing.Bounce.EaseInOut = function (k) {
  return k < .5 ? .5 * Easing.Bounce.EaseIn(2 * k) : .5 * Easing.Bounce.EaseOut(2 * k - 1) + .5
};
var Sprite3D = Sprite3D || {
  isSupported:           function () {
    return this._isInit || this._init(), this._isSupported
  },
  stage:                 function (element) {
    this._isInit || this._init();
    var c, s;
    return element ? (c = element, s = element.style, "static" === s.position && (s.position = "relative")) : (c = document.createElement("div"), s = c.style, s[this._browserPrefix + "PerspectiveOrigin"] = "0 0", s[this._browserPrefix + "TransformOrigin"] = "0 0", s.position = "absolute", s.top = "50%", s.left = "50%", s.margin = "0px", s.padding = "0px", document.body.appendChild(c)), s[this._browserPrefix + "Perspective"] = "800px", s[this._browserPrefix + "Transform"] = "translateZ(0px)", c = this.create(c), s[this._browserPrefix + "TransformStyle"] = "flat", c
  },
  create:                function (element) {
    if (this._isInit || this._init(), 0 === arguments.length) element = document.createElement("div"), element.style.margin = "0px", element.style.padding = "0px", element.style.position = "absolute"; else if ("string" == typeof element) {
      var str = element;
      element = document.createElement("div"), element.style.margin = "0px", element.style.padding = "0px", element.style.position = "absolute", this._handleStringArgument(element, str)
    } else "static" == element.style.position && (element.style.position = "relative");
    element.style[this._browserPrefix + "TransformStyle"] = "preserve-3d", element.style[this._transformProperty] = "translateZ(0px)";
    for (var prop in this._props) this._props.hasOwnProperty(prop) && (element[prop] = this._props[prop]);
    return element._string = ["translate3d(", 0, "px,", 0, "px,", 0, "px) ", "rotateX(", 0, "deg) ", "rotateY(", 0, "deg) ", "rotateZ(", 0, "deg) ", "scale3d(", 1, ", ", 1, ", ", 1, ") "], element._positions = [1, 3, 5, 8, 11, 14, 17, 19, 21], element._ox = 0, element._oy = 0, element._oz = 0, element
  },
  box:                   function (width, height, depth, idOrClassName) {
    this._isInit || this._init();
    var box = this.create();
    1 === arguments.length ? (height = width, depth = width) : 2 === arguments.length && "string" == typeof arguments[1] ? (this._handleStringArgument(box, arguments[1]), height = width, depth = width) : idOrClassName && "string" == typeof idOrClassName && this._handleStringArgument(box, idOrClassName);
    var hwidth = .5 * width, hheight = .5 * height, hdepth = .5 * depth;
    return box.appendChild(Sprite3D.create(".front").position(-hwidth, -hheight, hdepth).size(width, height).update()), box.appendChild(Sprite3D.create(".back").position(-hwidth, -hheight, -hdepth).size(width, height).rotationY(180).update()), box.appendChild(Sprite3D.create(".left").position(-hwidth - hdepth, -hheight, 0).size(depth, height).rotationY(-90).update()), box.appendChild(Sprite3D.create(".right").position(hwidth - hdepth, -hheight, 0).size(depth, height).rotationY(90).update()), box.appendChild(Sprite3D.create(".bottom").position(-hwidth, hheight - hdepth, 0).size(width, depth).rotationX(-90).update()), box.appendChild(Sprite3D.create(".top").position(-hwidth, -hheight - hdepth, 0).size(width, depth).rotationX(90).update()), box
  },
  prefix:                function (cssPropertyName) {
    return Sprite3D._browserPrefix + cssPropertyName
  },
  _isInit:               !1,
  _isSupported:          !1,
  _browserPrefix:        "webkit",
  _transformProperty:    "webkitTransform",
  _init:                 function () {
    var i, d = document.createElement("div"), prefixes = ["", "webkit", "Moz", "O", "ms"], n = prefixes.length;
    for (Sprite3D._isInit = !0, i = 0; i < n; i++) if (prefixes[i] + "Perspective" in d.style) return Sprite3D._transformProperty = prefixes[i] + "Transform", Sprite3D._isSupported = !0, Sprite3D._browserPrefix = prefixes[i], 2 == i && (Sprite3D._props.update = Sprite3D._props.updateJoin), !0;
    return !1
  },
  _handleStringArgument: function (element, str) {
    switch (str[0]) {
      case".":
        element.className = str.substr(1);
        break;
      case"#":
        element.id = str.substr(1);
        break;
      default:
        element.id = str
    }
  },
  _props:                {
    x:                  function (px) {
      return arguments.length ? (this._string[this._positions[0]] = px - this._ox, this) : this._string[this._positions[0]] + this._ox
    }, y:               function (py) {
      return arguments.length ? (this._string[this._positions[1]] = py - this._oy, this) : this._string[this._positions[1]] + this._oy
    }, z:               function (pz) {
      return arguments.length ? (this._string[this._positions[2]] = pz - this._oz, this) : this._string[this._positions[2]] + this._oz
    }, position:        function (px, py, pz) {
      return this._string[this._positions[0]] = px - this._ox, this._string[this._positions[1]] = py - this._oy, arguments.length >= 3 && (this._string[this._positions[2]] = pz - this._oz), this
    }, move:            function (px, py, pz) {
      return this._string[this._positions[0]] += px, this._string[this._positions[1]] += py, arguments.length >= 3 && (this._string[this._positions[2]] += pz), this
    }, rotationX:       function (rx) {
      return arguments.length ? (this._string[this._positions[3]] = rx, this) : this._string[this._positions[3]]
    }, rotationY:       function (ry) {
      return arguments.length ? (this._string[this._positions[4]] = ry, this) : this._string[this._positions[4]]
    }, rotationZ:       function (rz) {
      return arguments.length ? (this._string[this._positions[5]] = rz, this) : this._string[this._positions[5]]
    }, rotation:        function (rx, ry, rz) {
      return this._string[this._positions[3]] = rx, this._string[this._positions[4]] = ry, this._string[this._positions[5]] = rz, this
    }, rotate:          function (rx, ry, rz) {
      return this._string[this._positions[3]] += rx, this._string[this._positions[4]] += ry, this._string[this._positions[5]] += rz, this
    }, scaleX:          function (sx) {
      return arguments.length ? (this._string[this._positions[6]] = sx, this) : this._string[this._positions[6]]
    }, scaleY:          function (sy) {
      return arguments.length ? (this._string[this._positions[7]] = sy, this) : this._string[this._positions[7]]
    }, scaleZ:          function (sz) {
      return arguments.length ? (this._string[this._positions[8]] = sz, this) : this._string[this._positions[8]]
    }, scale:           function (sx, sy, sz) {
      switch (arguments.length) {
        case 0:
          return this._string[this._positions[6]];
        case 1:
          return this._string[this._positions[6]] = sx, this._string[this._positions[7]] = sx, this._string[this._positions[8]] = sx, this;
        case 2:
          return this._string[this._positions[6]] = sx, this._string[this._positions[7]] = sy, this;
        case 3:
          return this._string[this._positions[6]] = sx, this._string[this._positions[7]] = sy, this._string[this._positions[8]] = sz, this
      }
      return this
    }, origin:          function (ox, oy, oz) {
      if ("string" == typeof ox) {
        window.getComputedStyle(this, null)
      } else arguments.length < 3 && (oz = 0), this._string[this._positions[0]] += this._ox - ox, this._string[this._positions[1]] += this._oy - oy, this._string[this._positions[2]] += this._oz - oz, this._ox = ox, this._oy = oy, this._oz = oz;
      return this
    }, transformOrigin: function (tx, ty) {
      return this.style[Sprite3D._browserPrefix + "TransformOrigin"] = (Number(tx) ? tx + "px" : tx) + " " + (Number(ty) ? ty + "px" : ty), this
    }, transformString: function (s) {
      var parts = s.toLowerCase().split(" "), numParts = parts.length, i = 0, strings = [],
          positions                                                                   = [0, 0, 0, 0, 0, 0, 0, 0, 0], n = 0;
      for (i; i < numParts; i++) switch (parts[i]) {
        case"p":
        case"position":
        case"translate":
          n = strings.push("translate3d(", this._string[this._positions[0]], "px,", this._string[this._positions[1]], "px,", this._string[this._positions[2]], "px) "), positions[0] = n - 6, positions[1] = n - 4, positions[2] = n - 2;
          break;
        case"rx":
        case"rotatex":
        case"rotationx":
          n = strings.push("rotateX(", this._string[this._positions[3]], "deg) "), positions[3] = n - 2;
          break;
        case"ry":
        case"rotatey":
        case"rotationy":
          n = strings.push("rotateY(", this._string[this._positions[4]], "deg) "), positions[4] = n - 2;
          break;
        case"rz":
        case"rotatez":
        case"rotationz":
          n = strings.push("rotateZ(", this._string[this._positions[5]], "deg) "), positions[5] = n - 2;
          break;
        case"s":
        case"scale":
          n = strings.push("scale3d(", this._string[this._positions[6]], ",", this._string[this._positions[7]], ",", this._string[this._positions[8]], ") "), positions[6] = n - 6, positions[7] = n - 4, positions[8] = n - 2
      }
      return this._string = strings, this._positions = positions, this
    }, updateJoin:      function () {
      return this.style[Sprite3D._transformProperty] = this._string.join(""), this
    }, update:          function () {
      var s = "";
      return this._string.every(function (value) {
        return s += value, !0
      }), this.style[Sprite3D._transformProperty] = s, this
    }, perspective:     function (value) {
      switch (arguments.length) {
        case 0:
          return this.style[Sprite3D._browserPrefix + "Perspective"];
        case 1:
          return this.style[Sprite3D._browserPrefix + "Perspective"] = "string" == typeof value ? value : value + "px", this
      }
    }, css:             function (name, value) {
      switch (arguments.length) {
        case 0:
          return this.style;
        case 1:
          return this.style[name];
        case 2:
          return this.style[name] = value, this;
        case 3:
          return this.style[Sprite3D._browserPrefix + name] = value, this
      }
    }, addClass:        function (name) {
      return this.classList.add(name), this
    }, removeClass:     function (name) {
      return this.classList.remove(name), this
    }, html:            function (value) {
      return arguments.length ? (this.innerHTML = value, this) : this.innerHTML
    }, size:            function (width, height) {
      return this.style.width = Number(width) ? width + "px" : width, this.style.height = Number(height) ? height + "px" : height, this
    }, bind:            function (events) {
      if ("object" == typeof events) for (var i in events) this.addEventListener(i, events[i], !1); else 2 === arguments.length ? this.addEventListener(arguments[0], arguments[1], !1) : 3 === arguments.length && this.addEventListener(arguments[0], arguments[1], arguments[2]);
      return this
    }, unbind:          function (events) {
      if ("object" == typeof events) for (var i in events) this.removeEventListener(i, events[i], !1); else 2 === arguments.length && this.removeEventListener(arguments[0], arguments[1], !1);
      return this
    }, tileWidth:       0, tileHeight: 0, tileSize: function (width, height) {
      return this.tileWidth = width, this.tileHeight = height, this
    }, tilePosition:    function (tilePosX, tilePosY) {
      return this.style.backgroundPosition = "-" + tilePosX * this.tileWidth + "px -" + tilePosY * this.tileHeight + "px", this
    }, set:             function (name, value) {
      return this[name] = value, this
    }
  }
};
angular.module("admin.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.admin", {
    url:         "/admin",
    templateUrl: "admin/views/admin.tpl.html",
    controller:  "admin.controller",
    scope:       {}
  })
}]), angular.module("admin.controller", []).controller("admin.controller", ["$scope", "$q", "$http", "$filter", "$location", "$rootScope", "$interval", "$timeout", "glob", function ($scope, $q, $http, $filter, $location, $rootScope, $interval, $timeout, glob) {
  function getData() {
    $http({method: "GET", url: "/steamBot/getItemValues"}).then(function (response) {
      $timeout(function () {
        $scope.bots = response.data, $rootScope.loading = !1, $scope.servers = [];
        for (var i = 0; i < $scope.bots.length; i++) -1 == $.inArray($scope.bots[i].server, $scope.servers) && $scope.servers.push($scope.bots[i].server)
      })
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }

  function getPaintPricing() {
    glob.get("/system/getCustomPaintIndexPrices", null, function (resp) {
      $scope.paintPricings = [], resp.customPaintIndexPrices.forEach(function (item) {
        $.each(item.customPaintPrices, function (key, val) {
          var parsed = $.extend({}, item);
          parsed.paintIndex = key, parsed.depositPrice = val.depositPrice, parsed.withdrawPrice = val.withdrawPrice, $scope.paintPricings.push(parsed)
        })
      })
    })
  }

  function calcStat(statType) {
    function calcPeriod(start, end) {
      for (var val = 0, i = start; i < end; i++) $scope.bankData[i] && $scope.bankData[i][statType] && (val += $scope.bankData[i][statType]);
      return val
    }

    return [{name: "Last Hour", val: calcPeriod(0, 2)}, {
      name: "Last 24 Hours",
      val:  calcPeriod(0, 48)
    }, {name: "Yesterday", val: calcPeriod(48, 96)}, {name: "Week", val: calcPeriod(0, 336)}, {
      name: "Month",
      val:  calcPeriod(0, 1440)
    }]
  }

  function calcStats() {
    $scope.stats = [{name: "Bust Bets", data: calcStat("bustBets")}, {
      name: "Bust Profits",
      data: calcStat("bustProfit")
    }, {name: "Wheel Bets", data: calcStat("wheelBets")}, {
      name: "Wheel Profits",
      data: calcStat("wheelProfit")
    }, {name: "Dice Bets", data: calcStat("diceBets")}, {
      name: "Dice Profits",
      data: calcStat("diceProfit")
    }, {name: "Withdraw", data: calcStat("withdrawal")}, {
      name: "Refunds",
      data: calcStat("refunds")
    }, {name: "New User Bonuses", data: calcStat("startingCredits")}, {
      name: "First Deposit Bonuses",
      data: calcStat("firstDepositBonus")
    }, {name: "Affiliate Earnings", data: calcStat("affiliateEarnings")}, {
      name: "Faucet",
      data: calcStat("faucet")
    }, {name: "Promo", data: calcStat("promo")}, {name: "Trivia", data: calcStat("trivia")}, {
      name: "Total Bet",
      data: calcStat("totalBets")
    }, {name: "Total Profit", data: calcStat("totalProfit")}]
  }

  function getSuspect() {
    $http({method: "GET", url: "/system/getSuspectTradeOffers?page=" + $scope.suspectCurrentHour}).then(function (res) {
      $scope.suspectOffers = res.data
    })
  }

  function getPendingWithdrawals() {
    glob.get("/tradeOffer/getPendingWithdrawals", null, function (resp) {
      $scope.withdrawals = resp.pendingWithdrawals, conf.dummy_data && ($scope.withdrawals = testPendingWithdrawals)
    })
  }

  function getAffiliates() {
    glob.get("/system/getTopAffiliates", null, function (resp) {
      $scope.affiliates = resp
    })
  }

  $rootScope.title = "Admin Panel | Bolt.gg", $scope.hidden = !0, "admin" == $rootScope.user.role ? $scope.hidden = !1 : $timeout(function () {
    $location.path("/bust")
  }), $rootScope.loading = !0, $scope.bots = [], $scope.whiteBots = [], $scope.sell = {whiteUsers: ""}, $scope.root = "/";
  var myChartSign, myChartRefund, myChartStorage, myChartMain, myChartDep;
  $scope.$on("$destroy", function () {
    myChartSign.destroy(), myChartRefund.destroy(), myChartStorage.destroy(), myChartMain.destroy(), myChartDep.destroy()
  }), $scope.blacklist = ["test"], $scope.updateBlacklist = function (remove) {
    remove && $rootScope.sendMessage("/unblacklist " + remove), $timeout(function () {
      $http({method: "GET", url: "/system/getBlacklist"}).then(function (res) {
        $scope.blacklist = res.data
      })
    }, 500)
  }, $scope.updateBlacklist(), $scope.pair = {}, $scope.updateKey = function () {
    $http({
      method: "POST",
      url:    "system/updateUser",
      data:   {
        pin:    $scope.admin.pin,
        values: JSON.parse($scope.pair.keyVal),
        userID: $scope.admin.user.originalObject.id
      }
    }).then(function () {
      $rootScope.growl.success("Saved!")
    }, function (res) {
      $rootScope.growl.warning(res.data)
    })
  }, $scope.sellTotal = 0, getData(), $scope.whitelist = function () {
    if ($scope.whiteBots.length > 0 && $scope.sell.whiteUsers.length > 0) {
      for (var whitebots = [], i = 0; i < $scope.whiteBots.length; i++) whitebots.push($scope.whiteBots[i].id);
      $http({
        method: "POST",
        url:    "/storageBotWhitelist/create",
        data:   {botIDs: whitebots, steamIDs: $scope.sell.whiteUsers.split(","), pin: $scope.admin.pin}
      }).then(function (response) {
        $rootScope.growl.success("Success!"), $scope.sell.whiteUsers = "", getData()
      }, function (response) {
        $rootScope.growl.warning(response.data)
      })
    } else $rootScope.growl.warning("You didn't enter something..")
  }, $scope.clearBot = function (id) {
    $http({method: "POST", url: "/storageBotWhitelist/clear", data: {botID: id}}).then(function () {
      getData()
    })
  }, $scope.toggleBot = function (bot) {
    for (var found = !1, i = 0; i < $scope.whiteBots.length; i++) bot.id == $scope.whiteBots[i].id && ($scope.whiteBots.splice(i, 1), found = !0);
    found || $scope.whiteBots.push(bot)
  }, $scope.isAdded = function (bot) {
    for (var found = !1, i = 0; i < $scope.whiteBots.length; i++) bot.id == $scope.whiteBots[i].id && (found = !0);
    return found
  }, $scope.orderTotal = function () {
    for (var total = 0, i = 0; i < $scope.whiteBots.length; i++) total += $scope.whiteBots[i].totalItemValue;
    return total
  }, $scope.changeTab = function (t) {
    $scope.tab = t, "withdrawals" == t ? getPendingWithdrawals() : "affiliates" == t ? getAffiliates() : "paintPricing" == t && getPaintPricing()
  }, $scope.getBotData = function () {
    for (var active = 0, inactive = 0, i = 0; i < $scope.bots.length; i++) null != $scope.bots[i].error ? inactive++ : active++;
    return {active: active, inactive: inactive}
  }, $scope.admin = {user: null}, $scope.toggleMute = function (userID) {
    userID ? $http({method: "POST", url: "/system/toggleUserMute", data: {userID: userID}}).then(function (response) {
      $rootScope.growl.success(response.data.result)
    }, function (response) {
      $rootScope.growl.warning(response.data)
    }) : $rootScope.growl.warning("No user selected!")
  }, $scope.toggleBan = function (userID) {
    userID ? $http({method: "POST", url: "/system/toggleUserBan", data: {userID: userID}}).then(function (response) {
      $rootScope.growl.success(response.data.result)
    }, function (response) {
      $rootScope.growl.warning(response.data)
    }) : $rootScope.growl.warning("No user selected!")
  }, $scope.bannedList = [], $scope.mutedList = [], $http({
    method: "GET",
    url:    "/system/getBannedUsers"
  }).then(function (response) {
    $scope.bannedList = response.data
  }, function (response) {
    $rootScope.growl.warning(response.data)
  }), $http({method: "GET", url: "/system/getPermMutedUsers"}).then(function (response) {
    $scope.mutedList = response.data
  }, function (response) {
    $rootScope.growl.warning(response.data)
  }), $scope.retryBot = function (botID) {
    $http({method: "POST", url: "/steambot/retry", data: {botID: botID}}).then(function (response) {
      response.data.result && $rootScope.growl.success("Restarted Bot!")
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.fundAccount = function () {
    $scope.admin.user && $scope.admin.amount ? $http({
      method: "POST",
      url:    "/system/addCredits",
      data:   {
        userID: $scope.admin.user.originalObject.id,
        amount: $scope.admin.amount,
        pin:    $scope.admin.pin
      }
    }).then(function () {
      $rootScope.growl.success("Sucessfully funded account.")
    }, function () {
      $rootScope.growl.warning("Error funding account.")
    }) : $rootScope.growl.warning("Account & Amount must be defined.")
  }, $scope.$watch("admin.user", function () {
    $scope.admin.user && $scope.admin.user.originalObject && ($scope.userTrades(), $scope.userTrans())
  }), $scope.userTrans = function () {
    $http({
      method: "GET",
      url:    "/system/getUserTransactionHistory",
      params: {userID: $scope.admin.user.originalObject.id}
    }).then(function (response) {
      $scope.userTransArray = response.data
    }, function (response) {
    })
  }, $scope.userTrades = function () {
    $http({
      method: "GET",
      url:    "/system/getUserTradeOfferHistory",
      params: {userID: $scope.admin.user.originalObject.id}
    }).then(function (response) {
      $scope.userTradesArray = response.data
    }, function (response) {
    })
  }, $scope.pricing = {
    market_hash_name: null,
    amount:           null,
    datasource:       "custom"
  }, $scope.modifyPrice = function (name, price, appId) {
    name && price && (price = parseFloat(price), $http({
      method: "POST",
      url:    "/marketdata/customPrice",
      data:   {
        market_hash_name: name,
        price:            price,
        datasource:       "custom",
        pin:              $scope.admin.pin,
        appId:            appId
      }
    }).then(function (response) {
      $rootScope.growl.success("Successfully modified price!")
    }, function (response) {
      $rootScope.growl.warning("Error")
    }))
  }, $scope.lookupItem = function (name, appId) {
    name && $http({
      method: "GET",
      url:    "/marketdata/lookup",
      params: {market_hash_name: name, appId: appId}
    }).then(function (response) {
      $rootScope.growl.success("Successfully grabbed item!"), $scope.pricing.market_hash_name = response.data.market_hash_name, $scope.pricing.amount = response.data.price
    }, function (response) {
      $rootScope.growl.warning("Error")
    })
  }, $scope.setPaintPricing = function (name, index, iurl, dep, wit, remove) {
    if (!iurl && !index) return glob.printwarning("Supply Paint Index or Inspect URL");
    glob.post("/system/setCustomPaintIndexPrice", {
      pin:            $scope.admin.pin,
      inspectURL:     iurl,
      paintindex:     index,
      depositPrice:   dep,
      withdrawPrice:  wit,
      marketHashName: name,
      remove:         remove
    }, function (resp) {
      glob.printsuccess("success"), getPaintPricing()
    })
  }, $scope.ref = {}, $scope.overrideRef = function (userID, code) {
    userID && code && $http({
      method: "POST",
      url:    "/system/updateUserRef",
      data:   {userID: userID, code: code, pin: $scope.admin.pin}
    }).then(function (response) {
      $rootScope.growl.success("Successfully overrode referral code!")
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.lookupRef = function (code) {
    code && $http({method: "GET", url: "/system/lookupUserRef?code" + code}).then(function (response) {
      $scope.ref.result = response.data
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.promo = {}, $scope.lookupCodes = function () {
    $http({method: "GET", url: "/system/getPromos"}).then(function (response) {
      $scope.promo.result = response.data
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.addCode = function (code, reward, count) {
    code && reward && count && $http({
      method: "POST",
      url:    "/system/addPromo",
      data:   {pin: $scope.admin.pin, code: code, reward: reward, count: count}
    }).then(function (response) {
      $rootScope.growl.success("Successfully added promo code")
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.delCode = function (code) {
    code && $http({method: "POST", url: "/system/delPromo", data: {code: code}}).then(function (response) {
      $rootScope.growl.success("Successfully deleted promo code: " + response.data.deleted)
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.markInactive = function (code) {
    code && $http({method: "POST", url: "/system/deactivatePromo", data: {code: code}}).then(function (response) {
      $rootScope.growl.success("Successfully deactivated promo code: " + response.data.deactivated)
    }, function (response) {
      $rootScope.growl.warning(response.data)
    })
  }, $scope.bankData = [];
  var dataPoints = [];
  $http({method: "GET", url: "/system/getBankroll"}).then(function (response) {
    for (var bankData = response.data, depPoints = [], wedPoints = [], storage = [], refunds = [], startingCredits = [], i = 0; i < bankData.length; i++) bankData[i].bustProfit && ($scope.bankData.push(bankData[i]), dataPoints.push({y: bankData[i].itemValue})), bankData[i].storageItemValue && storage.push({y: bankData[i].storageItemValue}), bankData[i].startingCredits && startingCredits.push({y: bankData[i].startingCredits}), bankData[i].refunds && refunds.push({y: bankData[i].refunds}), bankData[i].deposit && bankData[i].withdrawal && (depPoints.push({y: bankData[i].deposit}), wedPoints.push({y: bankData[i].withdrawal}));
    calcStats();
    var plotColor = $.Color("rgb(255, 202, 82)"), ctx = document.getElementById("signups").getContext("2d"),
        gradient                                      = ctx.createLinearGradient(0, 0, 0, 450);
    gradient.addColorStop(0, plotColor.toRgbaString()), gradient.addColorStop(1, plotColor.alpha(0).toRgbaString()), Chart.defaults.global.defaultFontColor = "transparent", myChartSign = new Chart(ctx, {
      type:      "line",
      showScale: !1,
      data:      {
        labels
        datasets: [{data: startingCredits.reverse(), backgroundColor: gradient, borderWidth: 1}]
      },
      options:   {
        title:               {display: !1},
        scaleShowLabels:     !1,
        legend:              {display: !1},
        responsive:          !0,
        maintainAspectRatio: !1
      }
    });
    var ctx = document.getElementById("refunds").getContext("2d"), gradient = ctx.createLinearGradient(0, 0, 0, 450);
    gradient.addColorStop(0, plotColor.toRgbaString()), gradient.addColorStop(1, plotColor.alpha(0).toRgbaString()), Chart.defaults.global.defaultFontColor = "transparent", myChartRefund = new Chart(ctx, {
      type:      "line",
      showScale: !1,
      data:      {
        labels
        datasets: [{data: refunds.reverse(), backgroundColor: gradient, borderWidth: 1}]
      },
      options:   {
        title:               {display: !1},
        scaleShowLabels:     !1,
        legend:              {display: !1},
        responsive:          !0,
        maintainAspectRatio: !1
      }
    });
    var ctx = document.getElementById("storage").getContext("2d"), gradient = ctx.createLinearGradient(0, 0, 0, 450);
    gradient.addColorStop(0, plotColor.toRgbaString()), gradient.addColorStop(1, plotColor.alpha(0).toRgbaString()), Chart.defaults.global.defaultFontColor = "transparent", myChartStorage = new Chart(ctx, {
      type:      "line",
      showScale: !1,
      data:      {
        labels
        datasets: [{data: storage.reverse(), backgroundColor: gradient, borderWidth: 1}]
      },
      options:   {
        title:               {display: !1},
        scaleShowLabels:     !1,
        legend:              {display: !1},
        responsive:          !0,
        maintainAspectRatio: !1
      }
    });
    var ctx = document.getElementById("bankroll").getContext("2d"), gradient = ctx.createLinearGradient(0, 0, 0, 450);
    gradient.addColorStop(0, plotColor.toRgbaString()), gradient.addColorStop(1, plotColor.alpha(0).toRgbaString()), myChartMain = new Chart(ctx, {
      type:      "line",
      showScale: !1,
      data:      {
        labels
        datasets: [{data: dataPoints.reverse(), backgroundColor: gradient, borderWidth: 1}]
      },
      options:   {
        title:               {display: !1},
        scaleShowLabels:     !1,
        legend:              {display: !1},
        responsive:          !0,
        maintainAspectRatio: !1
      }
    });
    var ctx = document.getElementById("depwed").getContext("2d"), gradient = ctx.createLinearGradient(0, 0, 0, 450);
    gradient.addColorStop(0, plotColor.toRgbaString()), gradient.addColorStop(1, plotColor.alpha(0).toRgbaString()), myChartDep = new Chart(ctx, {
      type:      "line",
      showScale: !1,
      data:      {
        labels
        datasets: [{
          data:            depPoints.reverse(),
          backgroundColor: gradient,
          borderWidth:     1,
          label:           "Deposits"
        }, {data: wedPoints.reverse(), backgroundColor: "rgba(230, 126, 34, .5)", borderWidth: 1, label: "Withdrawals"}]
      },
      options:   {
        title:               {display: !1},
        scaleShowLabels:     !1,
        legend:              {display: !0, labels: {fontColor: "#ffffff"}},
        responsive:          !0,
        maintainAspectRatio: !1
      }
    })
  }), $scope.trivia = {
    question:      null,
    category:      null,
    answersArray:  null,
    numWinners:    null,
    winningAmount: null,
    delay:         30
  }, $scope.endTrivia = function () {
    $http({method: "POST", url: "/system/closeTrivia"}).then(function () {
      $rootScope.growl.success("Trivia Ended!")
    })
  }, $scope.startTrivia = function () {
    $scope.trivia.question && $scope.trivia.category && $scope.trivia.answersArray && $scope.trivia.numWinners && $scope.trivia.winningAmount ? $http({
      method: "POST", url: "/system/makeTrivia", data: {
        question:      $scope.trivia.question,
        category:      $scope.trivia.category,
        answersArray:  $scope.trivia.answersArray.split(","),
        numWinners:    parseFloat($scope.trivia.numWinners),
        winningAmount: parseFloat($scope.trivia.winningAmount),
        delay:         parseInt($scope.trivia.delay),
        nameOnly:      $scope.trivia.nameOnly ? "1" : ""
      }
    }).then(function () {
      $rootScope.growl.success("Successfully started trivia!")
    }) : $rootScope.growl.warning("You forgot something?")
  }, $scope.suspectOffers = [], $scope.suspectCurrentHour = 1, getSuspect(), $scope.changeSuspectHour = function (change) {
    change + $scope.suspectCurrentHour <= 0 ? $rootScope.growl.warning("Cannot go below one hour!") : ($scope.suspectCurrentHour += change, getSuspect())
  }, $scope.withdrawalAction = function (offer, approve) {
    var endpoint = approve ? "/tradeOffer/acceptPendingWithdrawal" : "/tradeOffer/rejectPendingWithdrawal";
    glob.post(endpoint, {id: offer.id, pin: $scope.admin.pin}, function (resp) {
      var str = approve ? "approved" : "rejected";
      glob.printsuccess("Withdrawal " + str), $scope.withdrawals = $.grep($scope.withdrawals, function (wi) {
        return wi.id !== offer.id
      })
    })
  }, $scope.tab = "stats"
}]), angular.module("admin", ["admin.config", "admin.controller"]), angular.module("affiliate.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.affiliate", {
    url:         "/affiliate",
    templateUrl: "affiliate/views/affiliate.tpl.html",
    controller:  "affiliate.controller",
    scope:       {}
  })
}]), angular.module("affiliate.controller", []).controller("affiliate.controller", ["$scope", "$rootScope", "$http", "$filter", "$timeout", "settingsService", function ($scope, $rootScope, $http, $filter, $timeout, settingsService) {
  $scope.settings = settingsService.settings, settingsService.saveData({viewedRefs: !0}, !0), $scope.reflink = "https://bolt.gg/#/bust?ref=" + $rootScope.user.referralcode, $scope.referralcode = $rootScope.user.referralcode, $scope.dateLimit = new Date(Date.now() - 864e5), $scope.save = function () {
    if ($rootScope.user.referrerID) return $rootScope.growl.warning("You already have a referrer");
    $scope.affiliateCode ? ($scope.referralSave = !0, $http({
      method: "POST",
      url:    "/account/setReferringUser",
      data:   {code: $scope.affiliateCode}
    }).then(function () {
      $timeout(function () {
        $scope.referralSave = !1, $rootScope.growl.success("Affiliate linked successfully")
      })
    }, function (response) {
      $scope.referralSave = !1, $rootScope.growl.warning(response.data)
    })) : $rootScope.growl.warning("Enter an affiliate code")
  }, $scope.update = function (form) {
    $scope.referralcode != $rootScope.user.referralcode ? ($scope.codeUpdate = !0, $http({
      method: "POST",
      url:    "/account/setReferralCode",
      data:   {code: $scope.referralcode}
    }).then(function () {
      $timeout(function () {
        form.$setPristine(), $scope.codeUpdate = !1, $rootScope.user.referralcode = $scope.referralcode, $scope.reflink = "https://bolt.gg/#/bust?ref=" + $scope.referralcode, $rootScope.growl.success("Referral Code Changed Successfully.")
      })
    }, function (response) {
      $rootScope.growl.warning(response.data), $scope.codeUpdate = !1
    })) : (form.$setPristine(), $rootScope.growl.warning("New code is same as current"))
  }, $scope.redeemAffiliate = function () {
    $scope.redeemInProg = !0, $http({
      method: "POST",
      url:    "/account/redeemReferralCredits",
      data:   {amount: $rootScope.user.referralCredits}
    }).then(function () {
      $scope.redeemInProg = !1, $rootScope.user.referralCredits = 0, $timeout(function () {
        $rootScope.growl.success("Bonus bananas redeemed.")
      })
    }, function (response) {
      $scope.redeemInProg = !1, $rootScope.growl.warning(response.data)
    })
  }
}]), angular.module("affiliate", ["affiliate.controller", "affiliate.config"]), function (root, factory) {
  "use strict";
  "undefined" != typeof module && module.exports ? module.exports = factory(require("angular")) : "function" == typeof define && define.amd ? define(["angular"], factory) : factory(root.angular)
}(window, function (angular) {
  "use strict";
  angular.module("angucomplete-alt", []).directive("angucompleteAlt", ["$q", "$parse", "$http", "$sce", "$timeout", "$templateCache", "$interpolate", function ($q, $parse, $http, $sce, $timeout, $templateCache, $interpolate) {
    function link(scope, elem, attrs, ctrl) {
      function handleInputChange(newval, initial) {
        newval && ("object" == typeof newval ? (scope.searchStr = extractTitle(newval), callOrAssign({originalObject: newval})) : "string" == typeof newval && newval.length > 0 ? scope.searchStr = newval : console && console.error, handleRequired(!0))
      }

      function clickoutHandlerForDropdown(event) {
        mousedownOn = null, scope.hideResults(event), document.body.removeEventListener("click", clickoutHandlerForDropdown)
      }

      function ie8EventNormalizer(event) {
        return event.which ? event.which : event.keyCode
      }

      function callOrAssign(value) {
        "function" == typeof scope.selectedObject ? scope.selectedObject(value) : scope.selectedObject = value, handleRequired(value ? !0 : !1)
      }

      function setInputString(str) {
        callOrAssign({originalObject: str}), scope.clearSelected && (scope.searchStr = null), clearResults()
      }

      function extractTitle(data) {
        return scope.titleField.split(",").map(function (field) {
          return extractValue(data, field)
        }).join(" ")
      }

      function extractValue(obj, key) {
        var keys, result;
        if (key) {
          keys = key.split("."), result = obj;
          for (var i = 0; i < keys.length; i++) result = result[keys[i]]
        } else result = obj;
        return result
      }

      function findMatchString(target, str) {
        var result, matches, re;
        if (re = new RegExp(str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "i"), target) return target.match && target.replace || (target = target.toString()), matches = target.match(re), result = matches ? target.replace(re, '<span class="' + scope.matchClass + '">' + matches[0] + "</span>") : target, $sce.trustAsHtml(result)
      }

      function handleRequired(valid) {
        scope.notEmpty = valid, validState = scope.searchStr, scope.fieldRequired && ctrl && scope.inputName && ctrl[scope.inputName].$setValidity(requiredClassName, valid)
      }

      function keyupHandler(event) {
        var which = ie8EventNormalizer(event);
        if (which !== KEY_LF && which !== KEY_RT) if (which === KEY_UP || which === KEY_EN) event.preventDefault(); else if (which === KEY_DW) event.preventDefault(), !scope.showDropdown && scope.searchStr && scope.searchStr.length >= minlength && (initResults(), scope.searching = !0, searchTimerComplete(scope.searchStr)); else if (which === KEY_ES) clearResults(), scope.$apply(function () {
          inputField.val(scope.searchStr)
        }); else {
          if (0 === minlength && !scope.searchStr) return;
          scope.searchStr && "" !== scope.searchStr ? scope.searchStr.length >= minlength && (initResults(), searchTimer && $timeout.cancel(searchTimer), scope.searching = !0, searchTimer = $timeout(function () {
            searchTimerComplete(scope.searchStr)
          }, scope.pause)) : scope.showDropdown = !1, validState && validState !== scope.searchStr && !scope.clearSelected && scope.$apply(function () {
            callOrAssign()
          })
        }
      }

      function handleOverrideSuggestions(event) {
        !scope.overrideSuggestions || scope.selectedObject && scope.selectedObject.originalObject === scope.searchStr || (event && event.preventDefault(), $timeout.cancel(searchTimer), cancelHttpRequest(), setInputString(scope.searchStr))
      }

      function dropdownRowOffsetHeight(row) {
        var css = getComputedStyle(row);
        return row.offsetHeight + parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10)
      }

      function dropdownHeight() {
        return dd.getBoundingClientRect().top + parseInt(getComputedStyle(dd).maxHeight, 10)
      }

      function dropdownRow() {
        return elem[0].querySelectorAll(".angucomplete-row")[scope.currentIndex]
      }

      function dropdownRowTop() {
        return dropdownRow().getBoundingClientRect().top - (dd.getBoundingClientRect().top + parseInt(getComputedStyle(dd).paddingTop, 10))
      }

      function dropdownScrollTopTo(offset) {
        dd.scrollTop = dd.scrollTop + offset
      }

      function updateInputField() {
        var current = scope.results[scope.currentIndex];
        scope.matchClass ? inputField.val(extractTitle(current.originalObject)) : inputField.val(current.title)
      }

      function keydownHandler(event) {
        var which = ie8EventNormalizer(event), row = null, rowTop = null;
        which === KEY_EN && scope.results ? (scope.currentIndex >= 0 && scope.currentIndex < scope.results.length ? (event.preventDefault(), scope.selectResult(scope.results[scope.currentIndex])) : (handleOverrideSuggestions(event), clearResults()), scope.$apply()) : which === KEY_DW && scope.results ? (event.preventDefault(), scope.currentIndex + 1 < scope.results.length && scope.showDropdown && (scope.$apply(function () {
          scope.currentIndex++, updateInputField()
        }), isScrollOn && (row = dropdownRow(), dropdownHeight() < row.getBoundingClientRect().bottom && dropdownScrollTopTo(dropdownRowOffsetHeight(row))))) : which === KEY_UP && scope.results ? (event.preventDefault(), scope.currentIndex >= 1 ? (scope.$apply(function () {
          scope.currentIndex--, updateInputField()
        }), isScrollOn && (rowTop = dropdownRowTop()) < 0 && dropdownScrollTopTo(rowTop - 1)) : 0 === scope.currentIndex && scope.$apply(function () {
          scope.currentIndex = -1, inputField.val(scope.searchStr)
        })) : which === KEY_TAB ? scope.results && scope.results.length > 0 && scope.showDropdown ? -1 === scope.currentIndex && scope.overrideSuggestions ? handleOverrideSuggestions() : (-1 === scope.currentIndex && (scope.currentIndex = 0), scope.selectResult(scope.results[scope.currentIndex]), scope.$digest()) : scope.searchStr && scope.searchStr.length > 0 && handleOverrideSuggestions() : which === KEY_ES && event.preventDefault()
      }

      function httpSuccessCallbackGen(str) {
        return function (responseData, status, headers, config) {
          status || headers || config || !responseData.data || (responseData = responseData.data), scope.searching = !1, processResults(extractValue(responseFormatter(responseData), scope.remoteUrlDataField), str)
        }
      }

      function httpErrorCallback(errorRes, status, headers, config) {
        0 !== status && -1 !== status && (status || headers || config || (status = errorRes.status), scope.remoteUrlErrorCallback ? scope.remoteUrlErrorCallback(errorRes, status, headers, config) : console && console.error)
      }

      function cancelHttpRequest() {
        httpCanceller && httpCanceller.resolve()
      }

      function getRemoteResults(str) {
        var params = {}, url = scope.remoteUrl + encodeURIComponent(str);
        scope.remoteUrlRequestFormatter && (params = {params: scope.remoteUrlRequestFormatter(str)}, url = scope.remoteUrl), scope.remoteUrlRequestWithCredentials && (params.withCredentials = !0), cancelHttpRequest(), httpCanceller = $q.defer(), params.timeout = httpCanceller.promise, $http.get(url, params).success(httpSuccessCallbackGen(str)).error(httpErrorCallback)
      }

      function getRemoteResultsWithCustomHandler(str) {
        cancelHttpRequest(), httpCanceller = $q.defer(), scope.remoteApiHandler(str, httpCanceller.promise).then(httpSuccessCallbackGen(str)).catch(httpErrorCallback)
      }

      function clearResults() {
        scope.showDropdown = !1, scope.results = [], dd && (dd.scrollTop = 0)
      }

      function initResults() {
        scope.showDropdown = displaySearching, scope.currentIndex = scope.focusFirst ? 0 : -1, scope.results = []
      }

      function getLocalResults(str) {
        var i, match, s, value, searchFields = scope.searchFields.split(","), matches = [];
        for (void 0 !== scope.parseInput() && (str = scope.parseInput()(str)), i = 0; i < scope.localData.length; i++) {
          for (match = !1, s = 0; s < searchFields.length; s++) value = extractValue(scope.localData[i], searchFields[s]) || "", match = match || value.toString().toLowerCase().indexOf(str.toString().toLowerCase()) >= 0;
          match && (matches[matches.length] = scope.localData[i])
        }
        return matches
      }

      function checkExactMatch(result, obj, str) {
        if (!str) return !1;
        for (var key in obj) if (obj[key].toLowerCase() === str.toLowerCase()) return scope.selectResult(result), !0;
        return !1
      }

      function searchTimerComplete(str) {
        !str || str.length < minlength || (scope.localData ? scope.$apply(function () {
          var matches;
          matches = void 0 !== scope.localSearch() ? scope.localSearch()(str) : getLocalResults(str), scope.searching = !1, processResults(matches, str)
        }) : scope.remoteApiHandler ? getRemoteResultsWithCustomHandler(str) : getRemoteResults(str))
      }

      function processResults(responseData, str) {
        var i, description, image, text, formattedText, formattedDesc;
        if (responseData && responseData.length > 0) for (scope.results = [], i = 0; i < responseData.length; i++) scope.titleField && "" !== scope.titleField && (text = formattedText = extractTitle(responseData[i])), description = "", scope.descriptionField && (description = formattedDesc = extractValue(responseData[i], scope.descriptionField)), image = "", scope.imageField && (image = extractValue(responseData[i], scope.imageField)), scope.matchClass && (formattedText = findMatchString(text, str), formattedDesc = findMatchString(description, str)), scope.results[scope.results.length] = {
          title:          formattedText,
          description:    formattedDesc,
          image:          image,
          originalObject: responseData[i]
        }; else scope.results = [];
        scope.autoMatch && 1 === scope.results.length && checkExactMatch(scope.results[0], {
          title: text,
          desc:  description || ""
        }, scope.searchStr) ? scope.showDropdown = !1 : 0 !== scope.results.length || displayNoResults ? scope.showDropdown = !0 : scope.showDropdown = !1
      }

      function showAll() {
        scope.localData ? processResults(scope.localData, "") : scope.remoteApiHandler ? getRemoteResultsWithCustomHandler("") : getRemoteResults("")
      }

      var hideTimer, responseFormatter, unbindInitialValue, displaySearching, displayNoResults,
          inputField                                                                         = elem.find("input"), minlength = MIN_LENGTH, searchTimer               = null,
          requiredClassName                                                                  = REQUIRED_CLASS, validState                                     = null, httpCanceller = null,
          dd = elem[0].querySelector(".angucomplete-dropdown"), isScrollOn = !1, mousedownOn = null;
      elem.on("mousedown", function (event) {
        event.target.id ? (mousedownOn = event.target.id) === scope.id + "_dropdown" && document.body.addEventListener("click", clickoutHandlerForDropdown) : mousedownOn = event.target.className
      }), scope.currentIndex = scope.focusFirst ? 0 : null, scope.searching = !1, unbindInitialValue = scope.$watch("initialValue", function (newval) {
        newval && (unbindInitialValue(), handleInputChange(newval, !0))
      }), scope.$watch("fieldRequired", function (newval, oldval) {
        newval !== oldval && (newval ? handleRequired(validState && -1 !== scope.currentIndex ? !0 : !1) : ctrl[scope.inputName].$setValidity(requiredClassName, !0))
      }), scope.$on("angucomplete-alt:clearInput", function (event, elementId) {
        elementId && elementId !== scope.id || (scope.searchStr = null, callOrAssign(), handleRequired(!1), clearResults())
      }), scope.$on("angucomplete-alt:changeInput", function (event, elementId, newval) {
        elementId && elementId === scope.id && handleInputChange(newval)
      }), scope.onFocusHandler = function () {
        scope.focusIn && scope.focusIn(), 0 !== minlength || scope.searchStr && 0 !== scope.searchStr.length || (scope.currentIndex = scope.focusFirst ? 0 : scope.currentIndex, scope.showDropdown = !0, showAll())
      }, scope.hideResults = function () {
        mousedownOn && (mousedownOn === scope.id + "_dropdown" || mousedownOn.indexOf("angucomplete") >= 0) ? mousedownOn = null : (hideTimer = $timeout(function () {
          clearResults(), scope.$apply(function () {
            scope.searchStr && scope.searchStr.length > 0 && inputField.val(scope.searchStr)
          })
        }, BLUR_TIMEOUT), cancelHttpRequest(), scope.focusOut && scope.focusOut(), scope.overrideSuggestions && scope.searchStr && scope.searchStr.length > 0 && -1 === scope.currentIndex && handleOverrideSuggestions())
      }, scope.resetHideResults = function () {
        hideTimer && $timeout.cancel(hideTimer)
      }, scope.hoverRow = function (index) {
        scope.currentIndex = index
      }, scope.selectResult = function (result) {
        scope.matchClass && (result.title = extractTitle(result.originalObject), result.description = extractValue(result.originalObject, scope.descriptionField)), scope.clearSelected ? scope.searchStr = null : scope.searchStr = result.title, callOrAssign(result), clearResults()
      }, scope.inputChangeHandler = function (str) {
        return str.length < minlength ? (cancelHttpRequest(), clearResults()) : 0 === str.length && 0 === minlength && (scope.searching = !1, showAll()), scope.inputChanged && (str = scope.inputChanged(str)), str
      }, scope.fieldRequiredClass && "" !== scope.fieldRequiredClass && (requiredClassName = scope.fieldRequiredClass), scope.minlength && "" !== scope.minlength && (minlength = parseInt(scope.minlength, 10)), scope.pause || (scope.pause = PAUSE), scope.clearSelected || (scope.clearSelected = !1), scope.overrideSuggestions || (scope.overrideSuggestions = !1), scope.fieldRequired && ctrl && handleRequired(scope.initialValue ? !0 : !1), scope.inputType = attrs.type ? attrs.type : "text", scope.textSearching = attrs.textSearching ? attrs.textSearching : TEXT_SEARCHING, scope.textNoResults = attrs.textNoResults ? attrs.textNoResults : TEXT_NORESULTS, displaySearching = "false" !== scope.textSearching, displayNoResults = "false" !== scope.textNoResults, scope.maxlength = attrs.maxlength ? attrs.maxlength : MAX_LENGTH, inputField.on("keydown", keydownHandler), inputField.on("keyup", keyupHandler), responseFormatter = function (fn) {
        return function (data) {
          return scope[fn] ? scope[fn](data) : data
        }
      }("remoteUrlResponseFormatter"), $timeout(function () {
        var css    = getComputedStyle(dd);
        isScrollOn = css.maxHeight && "auto" === css.overflowY
      })
    }

    var KEY_DW                                                                                    = 40, KEY_RT                                                                       = 39, KEY_UP = 38, KEY_LF                                             = 37, KEY_ES = 27, KEY_EN                   = 13, KEY_TAB = 9,
        MIN_LENGTH                                                                                = 3, MAX_LENGTH                                                                = 524288, PAUSE = 500, BLUR_TIMEOUT                            = 200,
        REQUIRED_CLASS = "autocomplete-required", TEXT_SEARCHING = "Searching...", TEXT_NORESULTS = "No results found";
    return $templateCache.put("/angucomplete-alt/index.html", '<div class="angucomplete-holder" ng-class="{\'angucomplete-dropdown-visible\': showDropdown}">  <input id="{{id}}_value" name="{{inputName}}" tabindex="{{fieldTabindex}}" ng-class="{\'angucomplete-input-not-empty\': notEmpty}" ng-model="searchStr" ng-disabled="disableInput" type="{{inputType}}" placeholder="{{placeholder}}" maxlength="{{maxlength}}" ng-focus="onFocusHandler()" class="{{inputClass}}" ng-focus="resetHideResults()" ng-blur="hideResults($event)" autocapitalize="off" autocorrect="off" autocomplete="off" ng-change="inputChangeHandler(searchStr)"/>  <div id="{{id}}_dropdown" class="angucomplete-dropdown" ng-show="showDropdown">    <div class="angucomplete-searching" ng-show="searching" ng-bind="textSearching"></div>    <div class="angucomplete-searching" ng-show="!searching && (!results || results.length == 0)" ng-bind="textNoResults"></div>    <div class="angucomplete-row" ng-repeat="result in results" ng-click="selectResult(result)" ng-mouseenter="hoverRow($index)" ng-class="{\'angucomplete-selected-row\': $index == currentIndex}">      <div ng-if="imageField" class="angucomplete-image-holder">        <img ng-if="result.image && result.image != \'\'" ng-src="{{result.image}}" class="angucomplete-image"/>        <div ng-if="!result.image && result.image != \'\'" class="angucomplete-image-default"></div>      </div>      <div class="angucomplete-title" ng-if="matchClass" ng-bind-html="result.title"></div>      <div class="angucomplete-title" ng-if="!matchClass">{{ result.title }}</div>      <div ng-if="matchClass && result.description && result.description != \'\'" class="angucomplete-description" ng-bind-html="result.description"></div>      <div ng-if="!matchClass && result.description && result.description != \'\'" class="angucomplete-description">{{result.description}}</div>    </div>  </div></div>'), {
      restrict: "EA",
      require:  "^?form",
      scope:    {
        selectedObject:                  "=",
        disableInput:                    "=",
        initialValue:                    "=",
        localData:                       "=",
        localSearch:                     "&",
        remoteUrlRequestFormatter:       "=",
        remoteUrlRequestWithCredentials: "@",
        remoteUrlResponseFormatter:      "=",
        remoteUrlErrorCallback:          "=",
        remoteApiHandler:                "=",
        id:                              "@",
        type:                            "@",
        placeholder:                     "@",
        remoteUrl:                       "@",
        remoteUrlDataField:              "@",
        titleField:                      "@",
        descriptionField:                "@",
        imageField:                      "@",
        inputClass:                      "@",
        pause:                           "@",
        searchFields:                    "@",
        minlength:                       "@",
        matchClass:                      "@",
        clearSelected:                   "@",
        overrideSuggestions:             "@",
        fieldRequired:                   "=",
        fieldRequiredClass:              "@",
        inputChanged:                    "=",
        autoMatch:                       "@",
        focusOut:                        "&",
        focusIn:                         "&",
        fieldTabindex:                   "@",
        inputName:                       "@",
        focusFirst:                      "@",
        parseInput:                      "&"
      },
      template: function (element, attrs) {
        return $templateCache.get(attrs.templateUrl || "/angucomplete-alt/index.html")
      },
      compile:  function (tElement) {
        var startSym = $interpolate.startSymbol(), endSym = $interpolate.endSymbol();
        if ("{{" !== startSym || "}}" !== endSym) {
          var interpolatedHtml = tElement.html().replace(/\{\{/g, startSym).replace(/\}\}/g, endSym);
          tElement.html(interpolatedHtml)
        }
        return link
      }
    }
  }])
}), function (window, angular) {
  "use strict";

  function assertArg(arg, name, reason) {
    if (!arg) throw ngMinErr("areq", "Argument '{0}' is {1}", name || "?", reason || "required");
    return arg
  }

  function mergeClasses(a, b) {
    return a || b ? a ? b ? (isArray(a) && (a = a.join(" ")), isArray(b) && (b = b.join(" ")), a + " " + b) : a : b : ""
  }

  function packageStyles(options) {
    var styles = {};
    return options && (options.to || options.from) && (styles.to = options.to, styles.from = options.from), styles
  }

  function pendClasses(classes, fix, isPrefix) {
    var className = "";
    return classes = isArray(classes) ? classes : classes && isString(classes) && classes.length ? classes.split(/\s+/) : [], forEach(classes, function (klass, i) {
      klass && klass.length > 0 && (className += i > 0 ? " " : "", className += isPrefix ? fix + klass : klass + fix)
    }), className
  }

  function removeFromArray(arr, val) {
    var index = arr.indexOf(val);
    val >= 0 && arr.splice(index, 1)
  }

  function stripCommentsFromElement(element) {
    if (element instanceof jqLite) switch (element.length) {
      case 0:
        return element;
      case 1:
        if (element[0].nodeType === ELEMENT_NODE) return element;
        break;
      default:
        return jqLite(extractElementNode(element))
    }
    if (element.nodeType === ELEMENT_NODE) return jqLite(element)
  }

  function extractElementNode(element) {
    if (!element[0]) return element;
    for (var i = 0; i < element.length; i++) {
      var elm = element[i];
      if (elm.nodeType == ELEMENT_NODE) return elm
    }
  }

  function $$addClass($$jqLite, element, className) {
    forEach(element, function (elm) {
      $$jqLite.addClass(elm, className)
    })
  }

  function $$removeClass($$jqLite, element, className) {
    forEach(element, function (elm) {
      $$jqLite.removeClass(elm, className)
    })
  }

  function applyAnimationClassesFactory($$jqLite) {
    return function (element, options) {
      options.addClass && ($$addClass($$jqLite, element, options.addClass), options.addClass = null), options.removeClass && ($$removeClass($$jqLite, element, options.removeClass), options.removeClass = null)
    }
  }

  function prepareAnimationOptions(options) {
    if (options = options || {}, !options.$$prepared) {
      var domOperation = options.domOperation || noop;
      options.domOperation = function () {
        options.$$domOperationFired = !0, domOperation(), domOperation = noop
      }, options.$$prepared = !0
    }
    return options
  }

  function applyAnimationStyles(element, options) {
    applyAnimationFromStyles(element, options), applyAnimationToStyles(element, options)
  }

  function applyAnimationFromStyles(element, options) {
    options.from && (element.css(options.from), options.from = null)
  }

  function applyAnimationToStyles(element, options) {
    options.to && (element.css(options.to), options.to = null)
  }

  function mergeAnimationDetails(element, oldAnimation, newAnimation) {
    var target = oldAnimation.options || {}, newOptions = newAnimation.options || {},
        toAdd                                           = (target.addClass || "") + " " + (newOptions.addClass || ""),
        toRemove                                        = (target.removeClass || "") + " " + (newOptions.removeClass || ""),
        classes                                         = resolveElementClasses(element.attr("class"), toAdd, toRemove);
    newOptions.preparationClasses && (target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses), delete newOptions.preparationClasses);
    var realDomOperation = target.domOperation !== noop ? target.domOperation : null;
    return extend(target, newOptions), realDomOperation && (target.domOperation = realDomOperation), classes.addClass ? target.addClass = classes.addClass : target.addClass = null, classes.removeClass ? target.removeClass = classes.removeClass : target.removeClass = null, oldAnimation.addClass = target.addClass, oldAnimation.removeClass = target.removeClass, target
  }

  function resolveElementClasses(existing, toAdd, toRemove) {
    function splitClassesToLookup(classes) {
      isString(classes) && (classes = classes.split(" "));
      var obj = {};
      return forEach(classes, function (klass) {
        klass.length && (obj[klass] = !0)
      }), obj
    }

    var flags = {};
    existing = splitClassesToLookup(existing), toAdd = splitClassesToLookup(toAdd), forEach(toAdd, function (value, key) {
      flags[key] = 1
    }), toRemove = splitClassesToLookup(toRemove), forEach(toRemove, function (value, key) {
      flags[key] = 1 === flags[key] ? null : -1
    });
    var classes = {addClass: "", removeClass: ""};
    return forEach(flags, function (val, klass) {
      var prop, allow;
      1 === val ? (prop = "addClass", allow = !existing[klass]) : -1 === val && (prop = "removeClass", allow = existing[klass]), allow && (classes[prop].length && (classes[prop] += " "), classes[prop] += klass)
    }), classes
  }

  function getDomNode(element) {
    return element instanceof angular.element ? element[0] : element
  }

  function applyGeneratedPreparationClasses(element, event, options) {
    var classes = "";
    event && (classes = pendClasses(event, EVENT_CLASS_PREFIX, !0)), options.addClass && (classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX))), options.removeClass && (classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX))), classes.length && (options.preparationClasses = classes, element.addClass(classes))
  }

  function clearGeneratedClasses(element, options) {
    options.preparationClasses && (element.removeClass(options.preparationClasses), options.preparationClasses = null), options.activeClasses && (element.removeClass(options.activeClasses), options.activeClasses = null)
  }

  function blockTransitions(node, duration) {
    var value = duration ? "-" + duration + "s" : "";
    return applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]), [TRANSITION_DELAY_PROP, value]
  }

  function blockKeyframeAnimations(node, applyBlock) {
    var value = applyBlock ? "paused" : "", key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;
    return applyInlineStyle(node, [key, value]), [key, value]
  }

  function applyInlineStyle(node, styleTuple) {
    var prop         = styleTuple[0], value = styleTuple[1];
    node.style[prop] = value
  }

  function concatWithSpace(a, b) {
    return a ? b ? a + " " + b : a : b
  }

  function getCssKeyframeDurationStyle(duration) {
    return [ANIMATION_DURATION_PROP, duration + "s"]
  }

  function getCssDelayStyle(delay, isKeyframeAnimation) {
    return [isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP, delay + "s"]
  }

  function computeCssStyles($window, element, properties) {
    var styles = Object.create(null), detectedStyles = $window.getComputedStyle(element) || {};
    return forEach(properties, function (formalStyleName, actualStyleName) {
      var val = detectedStyles[formalStyleName];
      if (val) {
        var c = val.charAt(0);
        ("-" === c || "+" === c || c >= 0) && (val = parseMaxTime(val)), 0 === val && (val = null), styles[actualStyleName] = val
      }
    }), styles
  }

  function parseMaxTime(str) {
    var maxValue = 0, values = str.split(/\s*,\s*/);
    return forEach(values, function (value) {
      "s" == value.charAt(value.length - 1) && (value = value.substring(0, value.length - 1)), value = parseFloat(value) || 0, maxValue = maxValue ? Math.max(value, maxValue) : value
    }), maxValue
  }

  function truthyTimingValue(val) {
    return 0 === val || null != val
  }

  function getCssTransitionDurationStyle(duration, applyOnlyDuration) {
    var style = TRANSITION_PROP, value = duration + "s";
    return applyOnlyDuration ? style += DURATION_KEY : value += " linear all", [style, value]
  }

  function createLocalCacheLookup() {
    var cache = Object.create(null);
    return {
      flush:    function () {
        cache = Object.create(null)
      }, count: function (key) {
        var entry = cache[key];
        return entry ? entry.total : 0
      }, get:   function (key) {
        var entry = cache[key];
        return entry && entry.value
      }, put:   function (key, value) {
        cache[key] ? cache[key].total++ : cache[key] = {total: 1, value: value}
      }
    }
  }

  function registerRestorableStyles(backup, node, properties) {
    forEach(properties, function (prop) {
      backup[prop] = isDefined(backup[prop]) ? backup[prop] : node.style.getPropertyValue(prop)
    })
  }

  var TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT, noop = angular.noop,
      copy                                                                           = angular.copy,
      extend                                                                         = angular.extend,
      jqLite                                                                         = angular.element,
      forEach                                                                        = angular.forEach,
      isArray                                                                        = angular.isArray,
      isString                                                                       = angular.isString,
      isObject                                                                       = angular.isObject,
      isUndefined                                                                    = angular.isUndefined,
      isDefined                                                                      = angular.isDefined,
      isFunction                                                                     = angular.isFunction,
      isElement                                                                      = angular.isElement,
      ELEMENT_NODE                                                                   = 1, ADD_CLASS_SUFFIX = "-add",
      REMOVE_CLASS_SUFFIX                                                            = "-remove",
      EVENT_CLASS_PREFIX                                                             = "ng-",
      NG_ANIMATE_CLASSNAME                                                           = "ng-animate",
      NG_ANIMATE_CHILDREN_DATA                                                       = "$$ngAnimateChildren";
  isUndefined(window.ontransitionend) && isDefined(window.onwebkittransitionend) ? ("-webkit-", TRANSITION_PROP = "WebkitTransition", TRANSITIONEND_EVENT = "webkitTransitionEnd transitionend") : (TRANSITION_PROP = "transition", TRANSITIONEND_EVENT = "transitionend"), isUndefined(window.onanimationend) && isDefined(window.onwebkitanimationend) ? ("-webkit-", ANIMATION_PROP = "WebkitAnimation", ANIMATIONEND_EVENT = "webkitAnimationEnd animationend") : (ANIMATION_PROP = "animation", ANIMATIONEND_EVENT = "animationend");
  var DURATION_KEY                                                                              = "Duration", TIMING_KEY                                                     = "TimingFunction", ANIMATION_PLAYSTATE_KEY = "PlayState",
      ANIMATION_DELAY_PROP                                                                      = ANIMATION_PROP + "Delay",
      ANIMATION_DURATION_PROP                                                                   = ANIMATION_PROP + DURATION_KEY, TRANSITION_DELAY_PROP            = TRANSITION_PROP + "Delay",
      TRANSITION_DURATION_PROP                                                                  = TRANSITION_PROP + DURATION_KEY, ngMinErr = angular.$$minErr("ng"),
      $$rAFSchedulerFactory                                                                     = ["$$rAF", function ($$rAF) {
        function scheduler(tasks) {
          queue = queue.concat(tasks), nextTick()
        }

        function nextTick() {
          if (queue.length) {
            for (var items = queue.shift(), i = 0; i < items.length; i++) items[i]();
            cancelFn || $$rAF(function () {
              cancelFn || nextTick()
            })
          }
        }

        var queue, cancelFn;
        return queue = scheduler.queue = [], scheduler.waitUntilQuiet = function (fn) {
          cancelFn && cancelFn(), cancelFn = $$rAF(function () {
            cancelFn = null, fn(), nextTick()
          })
        }, scheduler
      }], $$AnimateChildrenDirective                                                            = ["$interpolate", function ($interpolate) {
        return {
          link: function (scope, element, attrs) {
            function setData(value) {
              value = "on" === value || "true" === value, element.data(NG_ANIMATE_CHILDREN_DATA, value)
            }

            var val = attrs.ngAnimateChildren;
            angular.isString(val) && 0 === val.length ? element.data(NG_ANIMATE_CHILDREN_DATA, !0) : (setData($interpolate(val)(scope)), attrs.$observe("ngAnimateChildren", setData))
          }
        }
      }], ANIMATE_TIMER_KEY = "$$animateCss", ONE_SECOND = 1e3, ELAPSED_TIME_MAX_DECIMAL_PLACES = 3,
      CLOSING_TIME_BUFFER                                                                       = 1.5, DETECT_CSS_PROPERTIES = {
        transitionDuration:      TRANSITION_DURATION_PROP,
        transitionDelay:         TRANSITION_DELAY_PROP,
        transitionProperty:      TRANSITION_PROP + "Property",
        animationDuration:       ANIMATION_DURATION_PROP,
        animationDelay:          ANIMATION_DELAY_PROP,
        animationIterationCount: ANIMATION_PROP + "IterationCount"
      }, DETECT_STAGGER_CSS_PROPERTIES                                                          = {
        transitionDuration: TRANSITION_DURATION_PROP,
        transitionDelay:    TRANSITION_DELAY_PROP,
        animationDuration:  ANIMATION_DURATION_PROP,
        animationDelay:     ANIMATION_DELAY_PROP
      }, $AnimateCssProvider                                                                    = ["$animateProvider", function ($animateProvider) {
        var gcsLookup = createLocalCacheLookup(), gcsStaggerLookup = createLocalCacheLookup();
        this.$get                                                  = ["$window", "$$jqLite", "$$AnimateRunner", "$timeout", "$$forceReflow", "$sniffer", "$$rAFScheduler", "$$animateQueue", function ($window, $$jqLite, $$AnimateRunner, $timeout, $$forceReflow, $sniffer, $$rAFScheduler, $$animateQueue) {
          function gcsHashFn(node, extraClasses) {
            var KEY = "$$ngAnimateParentKey", parentNode = node.parentNode;
            return (parentNode[KEY] || (parentNode[KEY] = ++parentCounter)) + "-" + node.getAttribute("class") + "-" + extraClasses
          }

          function computeCachedCssStyles(node, className, cacheKey, properties) {
            var timings = gcsLookup.get(cacheKey);
            return timings || (timings = computeCssStyles($window, node, properties), "infinite" === timings.animationIterationCount && (timings.animationIterationCount = 1)), gcsLookup.put(cacheKey, timings), timings
          }

          function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {
            var stagger;
            if (gcsLookup.count(cacheKey) > 0 && !(stagger = gcsStaggerLookup.get(cacheKey))) {
              var staggerClassName = pendClasses(className, "-stagger");
              $$jqLite.addClass(node, staggerClassName), stagger = computeCssStyles($window, node, properties), stagger.animationDuration = Math.max(stagger.animationDuration, 0), stagger.transitionDuration = Math.max(stagger.transitionDuration, 0), $$jqLite.removeClass(node, staggerClassName), gcsStaggerLookup.put(cacheKey, stagger)
            }
            return stagger || {}
          }

          function waitUntilQuiet(callback) {
            rafWaitQueue.push(callback), $$rAFScheduler.waitUntilQuiet(function () {
              gcsLookup.flush(), gcsStaggerLookup.flush();
              for (var pageWidth = $$forceReflow(), i = 0; i < rafWaitQueue.length; i++) rafWaitQueue[i](pageWidth);
              rafWaitQueue.length = 0
            })
          }

          function computeTimings(node, className, cacheKey) {
            var timings                         = computeCachedCssStyles(node, className, cacheKey, DETECT_CSS_PROPERTIES),
                aD = timings.animationDelay, tD = timings.transitionDelay;
            return timings.maxDelay = aD && tD ? Math.max(aD, tD) : aD || tD, timings.maxDuration = Math.max(timings.animationDuration * timings.animationIterationCount, timings.transitionDuration), timings
          }

          var applyAnimationClasses = applyAnimationClassesFactory($$jqLite), parentCounter = 0, rafWaitQueue = [];
          return function (element, initialOptions) {
            function endFn() {
              close()
            }

            function cancelFn() {
              close(!0)
            }

            function close(rejected) {
              if (!(animationClosed || animationCompleted && animationPaused)) {
                animationClosed = !0, animationPaused = !1, options.$$skipPreparationClasses || $$jqLite.removeClass(element, preparationClasses), $$jqLite.removeClass(element, activeClasses), blockKeyframeAnimations(node, !1), blockTransitions(node, !1), forEach(temporaryStyles, function (entry) {
                  node.style[entry[0]] = ""
                }), applyAnimationClasses(element, options), applyAnimationStyles(element, options), Object.keys(restoreStyles).length && forEach(restoreStyles, function (value, prop) {
                  value ? node.style.setProperty(prop, value) : node.style.removeProperty(prop)
                }), options.onDone && options.onDone(), events && events.length && element.off(events.join(" "), onAnimationProgress);
                var animationTimerData = element.data(ANIMATE_TIMER_KEY);
                animationTimerData && ($timeout.cancel(animationTimerData[0].timer), element.removeData(ANIMATE_TIMER_KEY)), runner && runner.complete(!rejected)
              }
            }

            function applyBlocking(duration) {
              flags.blockTransition && blockTransitions(node, duration), flags.blockKeyframeAnimation && blockKeyframeAnimations(node, !!duration)
            }

            function closeAndReturnNoopAnimator() {
              return runner = new $$AnimateRunner({
                end:    endFn,
                cancel: cancelFn
              }), waitUntilQuiet(noop), close(), {
                $$willAnimate: !1, start: function () {
                  return runner
                }, end:        endFn
              }
            }

            function onAnimationProgress(event) {
              event.stopPropagation();
              var ev = event.originalEvent || event, timeStamp = ev.$manualTimeStamp || Date.now(),
                  elapsedTime                                  = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));
              Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration && (animationCompleted = !0, close())
            }

            function start() {
              function triggerAnimationStart() {
                if (!animationClosed) {
                  if (applyBlocking(!1), forEach(temporaryStyles, function (entry) {
                      var key = entry[0], value = entry[1];
                      node.style[key]           = value
                    }), applyAnimationClasses(element, options), $$jqLite.addClass(element, activeClasses), flags.recalculateTimingStyles) {
                    if (fullClassName = node.className + " " + preparationClasses, cacheKey = gcsHashFn(node, fullClassName), timings = computeTimings(node, fullClassName, cacheKey), relativeDelay = timings.maxDelay, maxDelay = Math.max(relativeDelay, 0), 0 === (maxDuration = timings.maxDuration)) return void close();
                    flags.hasTransitions = timings.transitionDuration > 0, flags.hasAnimations = timings.animationDuration > 0
                  }
                  if (flags.applyAnimationDelay && (relativeDelay = "boolean" != typeof options.delay && truthyTimingValue(options.delay) ? parseFloat(options.delay) : relativeDelay, maxDelay = Math.max(relativeDelay, 0), timings.animationDelay = relativeDelay, delayStyle = getCssDelayStyle(relativeDelay, !0), temporaryStyles.push(delayStyle), node.style[delayStyle[0]] = delayStyle[1]), maxDelayTime = maxDelay * ONE_SECOND, maxDurationTime = maxDuration * ONE_SECOND, options.easing) {
                    var easeProp, easeVal = options.easing;
                    flags.hasTransitions && (easeProp = TRANSITION_PROP + TIMING_KEY, temporaryStyles.push([easeProp, easeVal]), node.style[easeProp] = easeVal), flags.hasAnimations && (easeProp = ANIMATION_PROP + TIMING_KEY, temporaryStyles.push([easeProp, easeVal]), node.style[easeProp] = easeVal)
                  }
                  timings.transitionDuration && events.push(TRANSITIONEND_EVENT), timings.animationDuration && events.push(ANIMATIONEND_EVENT), startTime = Date.now();
                  var timerTime                                       = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime,
                      endTime = startTime + timerTime, animationsData = element.data(ANIMATE_TIMER_KEY) || [],
                      setupFallbackTimer                              = !0;
                  if (animationsData.length) {
                    var currentTimerData = animationsData[0];
                    setupFallbackTimer = endTime > currentTimerData.expectedEndTime, setupFallbackTimer ? $timeout.cancel(currentTimerData.timer) : animationsData.push(close)
                  }
                  if (setupFallbackTimer) {
                    var timer = $timeout(onAnimationExpired, timerTime, !1);
                    animationsData[0] = {
                      timer:           timer,
                      expectedEndTime: endTime
                    }, animationsData.push(close), element.data(ANIMATE_TIMER_KEY, animationsData)
                  }
                  events.length && element.on(events.join(" "), onAnimationProgress), options.to && (options.cleanupStyles && registerRestorableStyles(restoreStyles, node, Object.keys(options.to)), applyAnimationToStyles(element, options))
                }
              }

              function onAnimationExpired() {
                var animationsData = element.data(ANIMATE_TIMER_KEY);
                if (animationsData) {
                  for (var i = 1; i < animationsData.length; i++) animationsData[i]();
                  element.removeData(ANIMATE_TIMER_KEY)
                }
              }

              if (!animationClosed) {
                if (!node.parentNode) return void close();
                var playPause  = function (playAnimation) {
                      if (animationCompleted) animationPaused && playAnimation && (animationPaused = !1, close()); else if (animationPaused = !playAnimation, timings.animationDuration) {
                        var value = blockKeyframeAnimations(node, animationPaused);
                        animationPaused ? temporaryStyles.push(value) : removeFromArray(temporaryStyles, value)
                      }
                    },
                    maxStagger = itemIndex > 0 && (timings.transitionDuration && 0 === stagger.transitionDuration || timings.animationDuration && 0 === stagger.animationDuration) && Math.max(stagger.animationDelay, stagger.transitionDelay);
                maxStagger ? $timeout(triggerAnimationStart, Math.floor(maxStagger * itemIndex * ONE_SECOND), !1) : triggerAnimationStart(), runnerHost.resume = function () {
                  playPause(!0)
                }, runnerHost.pause = function () {
                  playPause(!1)
                }
              }
            }

            var options = initialOptions || {};
            options.$$prepared || (options = prepareAnimationOptions(copy(options)));
            var restoreStyles = {}, node = getDomNode(element);
            if (!node || !node.parentNode || !$$animateQueue.enabled()) return closeAndReturnNoopAnimator();
            var animationClosed, animationPaused, animationCompleted, runner, runnerHost, maxDelay, maxDelayTime,
                maxDuration, maxDurationTime, startTime, temporaryStyles = [], classes = element.attr("class"),
                styles                                                                 = packageStyles(options), events                                = [];
            if (0 === options.duration || !$sniffer.animations && !$sniffer.transitions) return closeAndReturnNoopAnimator();
            var method                                                                                    = options.event && isArray(options.event) ? options.event.join(" ") : options.event,
                isStructural = method && options.structural, structuralClassName = "", addRemoveClassName = "";
            isStructural ? structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, !0) : method && (structuralClassName = method), options.addClass && (addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX)), options.removeClass && (addRemoveClassName.length && (addRemoveClassName += " "), addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX)), options.applyClassesEarly && addRemoveClassName.length && applyAnimationClasses(element, options);
            var preparationClasses = [structuralClassName, addRemoveClassName].join(" ").trim(),
                fullClassName      = classes + " " + preparationClasses,
                activeClasses      = pendClasses(preparationClasses, "-active"),
                hasToStyles        = styles.to && Object.keys(styles.to).length > 0;
            if (!((options.keyframeStyle || "").length > 0 || hasToStyles || preparationClasses)) return closeAndReturnNoopAnimator();
            var cacheKey, stagger;
            if (options.stagger > 0) {
              var staggerVal = parseFloat(options.stagger);
              stagger        = {
                transitionDelay:    staggerVal,
                animationDelay:     staggerVal,
                transitionDuration: 0,
                animationDuration:  0
              }
            } else cacheKey = gcsHashFn(node, fullClassName), stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);
            options.$$skipPreparationClasses || $$jqLite.addClass(element, preparationClasses);
            var applyOnlyDuration;
            if (options.transitionStyle) {
              var transitionStyle = [TRANSITION_PROP, options.transitionStyle];
              applyInlineStyle(node, transitionStyle), temporaryStyles.push(transitionStyle)
            }
            if (options.duration >= 0) {
              applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;
              var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);
              applyInlineStyle(node, durationStyle), temporaryStyles.push(durationStyle)
            }
            if (options.keyframeStyle) {
              var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];
              applyInlineStyle(node, keyframeStyle), temporaryStyles.push(keyframeStyle)
            }
            var itemIndex = stagger ? options.staggerIndex >= 0 ? options.staggerIndex : gcsLookup.count(cacheKey) : 0,
                isFirst   = 0 === itemIndex;
            isFirst && !options.skipBlocking && blockTransitions(node, 9999);
            var timings = computeTimings(node, fullClassName, cacheKey), relativeDelay = timings.maxDelay;
            maxDelay = Math.max(relativeDelay, 0), maxDuration = timings.maxDuration;
            var flags = {};
            if (flags.hasTransitions = timings.transitionDuration > 0, flags.hasAnimations = timings.animationDuration > 0, flags.hasTransitionAll = flags.hasTransitions && "all" == timings.transitionProperty, flags.applyTransitionDuration = hasToStyles && (flags.hasTransitions && !flags.hasTransitionAll || flags.hasAnimations && !flags.hasTransitions), flags.applyAnimationDuration = options.duration && flags.hasAnimations, flags.applyTransitionDelay = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions), flags.applyAnimationDelay = truthyTimingValue(options.delay) && flags.hasAnimations, flags.recalculateTimingStyles = addRemoveClassName.length > 0, (flags.applyTransitionDuration || flags.applyAnimationDuration) && (maxDuration = options.duration ? parseFloat(options.duration) : maxDuration, flags.applyTransitionDuration && (flags.hasTransitions = !0, timings.transitionDuration = maxDuration, applyOnlyDuration = node.style[TRANSITION_PROP + "Property"].length > 0, temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration))), flags.applyAnimationDuration && (flags.hasAnimations = !0, timings.animationDuration = maxDuration, temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration)))), 0 === maxDuration && !flags.recalculateTimingStyles) return closeAndReturnNoopAnimator();
            if (null != options.delay) {
              var delayStyle;
              "boolean" != typeof options.delay && (delayStyle = parseFloat(options.delay), maxDelay = Math.max(delayStyle, 0)), flags.applyTransitionDelay && temporaryStyles.push(getCssDelayStyle(delayStyle)), flags.applyAnimationDelay && temporaryStyles.push(getCssDelayStyle(delayStyle, !0))
            }
            return null == options.duration && timings.transitionDuration > 0 && (flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst), maxDelayTime = maxDelay * ONE_SECOND, maxDurationTime = maxDuration * ONE_SECOND, options.skipBlocking || (flags.blockTransition = timings.transitionDuration > 0, flags.blockKeyframeAnimation = timings.animationDuration > 0 && stagger.animationDelay > 0 && 0 === stagger.animationDuration), options.from && (options.cleanupStyles && registerRestorableStyles(restoreStyles, node, Object.keys(options.from)), applyAnimationFromStyles(element, options)), flags.blockTransition || flags.blockKeyframeAnimation ? applyBlocking(maxDuration) : options.skipBlocking || blockTransitions(node, !1), {
              $$willAnimate: !0,
              end:           endFn,
              start:         function () {
                if (!animationClosed) return runnerHost = {
                  end:    endFn,
                  cancel: cancelFn,
                  resume: null,
                  pause:  null
                }, runner = new $$AnimateRunner(runnerHost), waitUntilQuiet(start), runner
              }
            }
          }
        }]
      }], $$AnimateCssDriverProvider                                                            = ["$$animationProvider", function ($$animationProvider) {
        function isDocumentFragment(node) {
          return node.parentNode && 11 === node.parentNode.nodeType
        }

        $$animationProvider.drivers.push("$$animateCssDriver");
        var NG_ANIMATE_SHIM_CLASS_NAME = "ng-animate-shim", NG_OUT_ANCHOR_CLASS_NAME = "ng-anchor-out";
        this.$get                                                                    = ["$animateCss", "$rootScope", "$$AnimateRunner", "$rootElement", "$sniffer", "$$jqLite", "$document", function ($animateCss, $rootScope, $$AnimateRunner, $rootElement, $sniffer, $$jqLite, $document) {
          function filterCssClasses(classes) {
            return classes.replace(/\bng-\S+\b/g, "")
          }

          function getUniqueValues(a, b) {
            return isString(a) && (a = a.split(" ")), isString(b) && (b = b.split(" ")), a.filter(function (val) {
              return -1 === b.indexOf(val)
            }).join(" ")
          }

          function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {
            function calculateAnchorStyles(anchor) {
              var styles = {}, coords = getDomNode(anchor).getBoundingClientRect();
              return forEach(["width", "height", "top", "left"], function (key) {
                var value = coords[key];
                switch (key) {
                  case"top":
                    value += bodyNode.scrollTop;
                    break;
                  case"left":
                    value += bodyNode.scrollLeft
                }
                styles[key] = Math.floor(value) + "px"
              }), styles
            }

            function getClassVal(element) {
              return element.attr("class") || ""
            }

            function prepareInAnimation() {
              var endingClasses                                                        = filterCssClasses(getClassVal(inAnchor)),
                  toAdd                                                                = getUniqueValues(endingClasses, startingClasses),
                  toRemove = getUniqueValues(startingClasses, endingClasses), animator = $animateCss(clone, {
                    to:          calculateAnchorStyles(inAnchor),
                    addClass:    "ng-anchor-in " + toAdd,
                    removeClass: NG_OUT_ANCHOR_CLASS_NAME + " " + toRemove,
                    delay:       !0
                  });
              return animator.$$willAnimate ? animator : null
            }

            function end() {
              clone.remove(), outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME), inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME)
            }

            var clone = jqLite(getDomNode(outAnchor).cloneNode(!0)), startingClasses = filterCssClasses(getClassVal(clone));
            outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME), inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME), clone.addClass("ng-anchor"), rootBodyElement.append(clone);
            var animatorIn, animatorOut = function () {
              var animator = $animateCss(clone, {
                addClass: NG_OUT_ANCHOR_CLASS_NAME,
                delay:    !0,
                from:     calculateAnchorStyles(outAnchor)
              });
              return animator.$$willAnimate ? animator : null
            }();
            if (!animatorOut && !(animatorIn = prepareInAnimation())) return end();
            var startingAnimator = animatorOut || animatorIn;
            return {
              start: function () {
                function endFn() {
                  currentAnimation && currentAnimation.end()
                }

                var runner, currentAnimation = startingAnimator.start();
                return currentAnimation.done(function () {
                  if (currentAnimation = null, !animatorIn && (animatorIn = prepareInAnimation())) return currentAnimation = animatorIn.start(), currentAnimation.done(function () {
                    currentAnimation = null, end(), runner.complete()
                  }), currentAnimation;
                  end(), runner.complete()
                }), runner = new $$AnimateRunner({end: endFn, cancel: endFn})
              }
            }
          }

          function prepareFromToAnchorAnimation(from, to, classes, anchors) {
            var fromAnimation = prepareRegularAnimation(from), toAnimation = prepareRegularAnimation(to),
                anchorAnimations                                           = [];
            if (forEach(anchors, function (anchor) {
                var outElement = anchor.out, inElement = anchor.in,
                    animator                           = prepareAnchoredAnimation(classes, outElement, inElement);
                animator && anchorAnimations.push(animator)
              }), fromAnimation || toAnimation || 0 !== anchorAnimations.length) return {
              start: function () {
                function endFn() {
                  forEach(animationRunners, function (runner) {
                    runner.end()
                  })
                }

                var animationRunners = [];
                fromAnimation && animationRunners.push(fromAnimation.start()), toAnimation && animationRunners.push(toAnimation.start()), forEach(anchorAnimations, function (animation) {
                  animationRunners.push(animation.start())
                });
                var runner = new $$AnimateRunner({end: endFn, cancel: endFn});
                return $$AnimateRunner.all(animationRunners, function (status) {
                  runner.complete(status)
                }), runner
              }
            }
          }

          function prepareRegularAnimation(animationDetails) {
            var element = animationDetails.element, options = animationDetails.options || {};
            animationDetails.structural && (options.event = animationDetails.event, options.structural = !0, options.applyClassesEarly = !0, "leave" === animationDetails.event && (options.onDone = options.domOperation)), options.preparationClasses && (options.event = concatWithSpace(options.event, options.preparationClasses));
            var animator = $animateCss(element, options);
            return animator.$$willAnimate ? animator : null
          }

          if (!$sniffer.animations && !$sniffer.transitions) return noop;
          var bodyNode = $document[0].body, rootNode = getDomNode($rootElement),
              rootBodyElement                        = jqLite(isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode);
          return applyAnimationClassesFactory($$jqLite), function (animationDetails) {
            return animationDetails.from && animationDetails.to ? prepareFromToAnchorAnimation(animationDetails.from, animationDetails.to, animationDetails.classes, animationDetails.anchors) : prepareRegularAnimation(animationDetails)
          }
        }]
      }], $$AnimateJsProvider                                                                   = ["$animateProvider", function ($animateProvider) {
        this.$get = ["$injector", "$$AnimateRunner", "$$jqLite", function ($injector, $$AnimateRunner, $$jqLite) {
          function lookupAnimations(classes) {
            classes = isArray(classes) ? classes : classes.split(" ");
            for (var matches = [], flagMap = {}, i = 0; i < classes.length; i++) {
              var klass = classes[i], animationFactory = $animateProvider.$$registeredAnimations[klass];
              animationFactory && !flagMap[klass] && (matches.push($injector.get(animationFactory)), flagMap[klass] = !0)
            }
            return matches
          }

          var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
          return function (element, event, classes, options) {
            function applyOptions() {
              options.domOperation(), applyAnimationClasses(element, options)
            }

            function close() {
              animationClosed = !0, applyOptions(), applyAnimationStyles(element, options)
            }

            function executeAnimationFn(fn, element, event, options, onDone) {
              var args;
              switch (event) {
                case"animate":
                  args = [element, options.from, options.to, onDone];
                  break;
                case"setClass":
                  args = [element, classesToAdd, classesToRemove, onDone];
                  break;
                case"addClass":
                  args = [element, classesToAdd, onDone];
                  break;
                case"removeClass":
                  args = [element, classesToRemove, onDone];
                  break;
                default:
                  args = [element, onDone]
              }
              args.push(options);
              var value = fn.apply(fn, args);
              if (value) if (isFunction(value.start) && (value = value.start()), value instanceof $$AnimateRunner) value.done(onDone); else if (isFunction(value)) return value;
              return noop
            }

            function groupEventedAnimations(element, event, options, animations, fnName) {
              var operations = [];
              return forEach(animations, function (ani) {
                var animation = ani[fnName];
                animation && operations.push(function () {
                  var runner, endProgressCb, resolved = !1, onAnimationComplete = function (rejected) {
                    resolved || (resolved = !0, (endProgressCb || noop)(rejected), runner.complete(!rejected))
                  };
                  return runner = new $$AnimateRunner({
                    end:       function () {
                      onAnimationComplete()
                    }, cancel: function () {
                      onAnimationComplete(!0)
                    }
                  }), endProgressCb = executeAnimationFn(animation, element, event, options, function (result) {
                    onAnimationComplete(!1 === result)
                  }), runner
                })
              }), operations
            }

            function packageAnimations(element, event, options, animations, fnName) {
              var operations = groupEventedAnimations(element, event, options, animations, fnName);
              if (0 === operations.length) {
                var a, b;
                "beforeSetClass" === fnName ? (a = groupEventedAnimations(element, "removeClass", options, animations, "beforeRemoveClass"), b = groupEventedAnimations(element, "addClass", options, animations, "beforeAddClass")) : "setClass" === fnName && (a = groupEventedAnimations(element, "removeClass", options, animations, "removeClass"), b = groupEventedAnimations(element, "addClass", options, animations, "addClass")), a && (operations = operations.concat(a)), b && (operations = operations.concat(b))
              }
              if (0 !== operations.length) return function (callback) {
                var runners = [];
                return operations.length && forEach(operations, function (animateFn) {
                  runners.push(animateFn())
                }), runners.length ? $$AnimateRunner.all(runners, callback) : callback(), function (reject) {
                  forEach(runners, function (runner) {
                    reject ? runner.cancel() : runner.end()
                  })
                }
              }
            }

            var animationClosed = !1;
            3 === arguments.length && isObject(classes) && (options = classes, classes = null), options = prepareAnimationOptions(options), classes || (classes = element.attr("class") || "", options.addClass && (classes += " " + options.addClass), options.removeClass && (classes += " " + options.removeClass));
            var before, after, classesToAdd = options.addClass, classesToRemove = options.removeClass,
                animations                                                      = lookupAnimations(classes);
            if (animations.length) {
              var afterFn, beforeFn;
              "leave" == event ? (beforeFn = "leave", afterFn = "afterLeave") : (beforeFn = "before" + event.charAt(0).toUpperCase() + event.substr(1), afterFn = event), "enter" !== event && "move" !== event && (before = packageAnimations(element, event, options, animations, beforeFn)), after = packageAnimations(element, event, options, animations, afterFn)
            }
            if (before || after) {
              var runner;
              return {
                $$willAnimate: !0, end: function () {
                  return runner ? runner.end() : (close(), runner = new $$AnimateRunner, runner.complete(!0)), runner
                }, start:      function () {
                  function onComplete(success) {
                    close(success), runner.complete(success)
                  }

                  function endAnimations(cancelled) {
                    animationClosed || ((closeActiveAnimations || noop)(cancelled), onComplete(cancelled))
                  }

                  if (runner) return runner;
                  runner                           = new $$AnimateRunner;
                  var closeActiveAnimations, chain = [];
                  return before && chain.push(function (fn) {
                    closeActiveAnimations = before(fn)
                  }), chain.length ? chain.push(function (fn) {
                    applyOptions(), fn(!0)
                  }) : applyOptions(), after && chain.push(function (fn) {
                    closeActiveAnimations = after(fn)
                  }), runner.setHost({
                    end:       function () {
                      endAnimations()
                    }, cancel: function () {
                      endAnimations(!0)
                    }
                  }), $$AnimateRunner.chain(chain, onComplete), runner
                }
              }
            }
          }
        }]
      }], $$AnimateJsDriverProvider                                                             = ["$$animationProvider", function ($$animationProvider) {
        $$animationProvider.drivers.push("$$animateJsDriver"), this.$get = ["$$animateJs", "$$AnimateRunner", function ($$animateJs, $$AnimateRunner) {
          function prepareAnimation(animationDetails) {
            var element = animationDetails.element, event = animationDetails.event, options = animationDetails.options,
                classes                                                                     = animationDetails.classes;
            return $$animateJs(element, event, classes, options)
          }

          return function (animationDetails) {
            if (animationDetails.from && animationDetails.to) {
              var fromAnimation = prepareAnimation(animationDetails.from),
                  toAnimation   = prepareAnimation(animationDetails.to);
              if (!fromAnimation && !toAnimation) return;
              return {
                start: function () {
                  function endFnFactory() {
                    return function () {
                      forEach(animationRunners, function (runner) {
                        runner.end()
                      })
                    }
                  }

                  function done(status) {
                    runner.complete(status)
                  }

                  var animationRunners = [];
                  fromAnimation && animationRunners.push(fromAnimation.start()), toAnimation && animationRunners.push(toAnimation.start()), $$AnimateRunner.all(animationRunners, done);
                  var runner = new $$AnimateRunner({end: endFnFactory(), cancel: endFnFactory()});
                  return runner
                }
              }
            }
            return prepareAnimation(animationDetails)
          }
        }]
      }], NG_ANIMATE_ATTR_NAME                                                                  = "data-ng-animate", NG_ANIMATE_PIN_DATA = "$ngAnimatePin",
      $$AnimateQueueProvider                                                                    = ["$animateProvider", function ($animateProvider) {
        function makeTruthyCssClassMap(classString) {
          if (!classString) return null;
          var keys = classString.split(ONE_SPACE), map = Object.create(null);
          return forEach(keys, function (key) {
            map[key] = !0
          }), map
        }

        function hasMatchingClasses(newClassString, currentClassString) {
          if (newClassString && currentClassString) {
            var currentClassMap = makeTruthyCssClassMap(currentClassString);
            return newClassString.split(ONE_SPACE).some(function (className) {
              return currentClassMap[className]
            })
          }
        }

        function isAllowed(ruleType, element, currentAnimation, previousAnimation) {
          return rules[ruleType].some(function (fn) {
            return fn(element, currentAnimation, previousAnimation)
          })
        }

        function hasAnimationClasses(animation, and) {
          var a = (animation.addClass || "").length > 0, b = (animation.removeClass || "").length > 0;
          return and ? a && b : a || b
        }

        var PRE_DIGEST_STATE = 1, RUNNING_STATE = 2, ONE_SPACE = " ",
            rules                                              = this.rules = {skip: [], cancel: [], join: []};
        rules.join.push(function (element, newAnimation, currentAnimation) {
          return !newAnimation.structural && hasAnimationClasses(newAnimation)
        }), rules.skip.push(function (element, newAnimation, currentAnimation) {
          return !newAnimation.structural && !hasAnimationClasses(newAnimation)
        }), rules.skip.push(function (element, newAnimation, currentAnimation) {
          return "leave" == currentAnimation.event && newAnimation.structural
        }), rules.skip.push(function (element, newAnimation, currentAnimation) {
          return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural
        }), rules.cancel.push(function (element, newAnimation, currentAnimation) {
          return currentAnimation.structural && newAnimation.structural
        }), rules.cancel.push(function (element, newAnimation, currentAnimation) {
          return currentAnimation.state === RUNNING_STATE && newAnimation.structural
        }), rules.cancel.push(function (element, newAnimation, currentAnimation) {
          if (currentAnimation.structural) return !1;
          var nA = newAnimation.addClass, nR = newAnimation.removeClass, cA = currentAnimation.addClass,
              cR                                                            = currentAnimation.removeClass;
          return !(isUndefined(nA) && isUndefined(nR) || isUndefined(cA) && isUndefined(cR)) && (hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA))
        }), this.$get = ["$$rAF", "$rootScope", "$rootElement", "$document", "$$HashMap", "$$animation", "$$AnimateRunner", "$templateRequest", "$$jqLite", "$$forceReflow", function ($$rAF, $rootScope, $rootElement, $document, $$HashMap, $$animation, $$AnimateRunner, $templateRequest, $$jqLite, $$forceReflow) {
          function postDigestTaskFactory() {
            var postDigestCalled = !1;
            return function (fn) {
              postDigestCalled ? fn() : $rootScope.$$postDigest(function () {
                postDigestCalled = !0, fn()
              })
            }
          }

          function normalizeAnimationDetails(element, animation) {
            return mergeAnimationDetails(element, animation, {})
          }

          function findCallbacks(parent, element, event) {
            var targetNode = getDomNode(element), targetParentNode = getDomNode(parent), matches = [],
                entries                                                                          = callbackRegistry[event];
            return entries && forEach(entries, function (entry) {
              contains.call(entry.node, targetNode) ? matches.push(entry.callback) : "leave" === event && contains.call(entry.node, targetParentNode) && matches.push(entry.callback)
            }), matches
          }

          function filterFromRegistry(list, matchContainer, matchCallback) {
            var containerNode = extractElementNode(matchContainer);
            return list.filter(function (entry) {
              return !(entry.node === containerNode && (!matchCallback || entry.callback === matchCallback))
            })
          }

          function cleanupEventListeners(phase, element) {
            "close" !== phase || element[0].parentNode || $animate.off(element)
          }

          function queueAnimation(element, event, initialOptions) {
            function notifyProgress(runner, event, phase, data) {
              runInNextPostDigestOrNow(function () {
                var callbacks = findCallbacks(parent, element, event);
                callbacks.length ? $$rAF(function () {
                  forEach(callbacks, function (callback) {
                    callback(element, phase, data)
                  }), cleanupEventListeners(phase, element)
                }) : cleanupEventListeners(phase, element)
              }), runner.progress(event, phase, data)
            }

            function close(reject) {
              clearGeneratedClasses(element, options), applyAnimationClasses(element, options), applyAnimationStyles(element, options), options.domOperation(), runner.complete(!reject)
            }

            var node, parent, options = copy(initialOptions);
            element = stripCommentsFromElement(element), element && (node = getDomNode(element), parent = element.parent()), options = prepareAnimationOptions(options);
            var runner = new $$AnimateRunner, runInNextPostDigestOrNow = postDigestTaskFactory();
            if (isArray(options.addClass) && (options.addClass = options.addClass.join(" ")), options.addClass && !isString(options.addClass) && (options.addClass = null), isArray(options.removeClass) && (options.removeClass = options.removeClass.join(" ")), options.removeClass && !isString(options.removeClass) && (options.removeClass = null), options.from && !isObject(options.from) && (options.from = null), options.to && !isObject(options.to) && (options.to = null), !node) return close(), runner;
            var className = [node.className, options.addClass, options.removeClass].join(" ");
            if (!isAnimatableClassName(className)) return close(), runner;
            var isStructural         = ["enter", "move", "leave"].indexOf(event) >= 0,
                documentHidden       = $document[0].hidden,
                skipAnimations       = !animationsEnabled || documentHidden || disabledElementsLookup.get(node),
                existingAnimation    = !skipAnimations && activeAnimationsLookup.get(node) || {},
                hasExistingAnimation = !!existingAnimation.state;
            if (skipAnimations || hasExistingAnimation && existingAnimation.state == PRE_DIGEST_STATE || (skipAnimations = !areAnimationsAllowed(element, parent, event)), skipAnimations) return documentHidden && notifyProgress(runner, event, "start"), close(), documentHidden && notifyProgress(runner, event, "close"), runner;
            isStructural && closeChildAnimations(element);
            var newAnimation = {
              structural:  isStructural,
              element:     element,
              event:       event,
              addClass:    options.addClass,
              removeClass: options.removeClass,
              close:       close,
              options:     options,
              runner:      runner
            };
            if (hasExistingAnimation) {
              if (isAllowed("skip", element, newAnimation, existingAnimation)) return existingAnimation.state === RUNNING_STATE ? (close(), runner) : (mergeAnimationDetails(element, existingAnimation, newAnimation), existingAnimation.runner);
              if (isAllowed("cancel", element, newAnimation, existingAnimation)) if (existingAnimation.state === RUNNING_STATE) existingAnimation.runner.end(); else {
                if (!existingAnimation.structural) return mergeAnimationDetails(element, existingAnimation, newAnimation), existingAnimation.runner;
                existingAnimation.close()
              } else {
                if (isAllowed("join", element, newAnimation, existingAnimation)) {
                  if (existingAnimation.state !== RUNNING_STATE) return applyGeneratedPreparationClasses(element, isStructural ? event : null, options), event = newAnimation.event = existingAnimation.event, options = mergeAnimationDetails(element, existingAnimation, newAnimation), existingAnimation.runner;
                  normalizeAnimationDetails(element, newAnimation)
                }
              }
            } else normalizeAnimationDetails(element, newAnimation);
            var isValidAnimation = newAnimation.structural;
            if (isValidAnimation || (isValidAnimation = "animate" === newAnimation.event && Object.keys(newAnimation.options.to || {}).length > 0 || hasAnimationClasses(newAnimation)), !isValidAnimation) return close(), clearElementAnimationState(element), runner;
            var counter = (existingAnimation.counter || 0) + 1;
            return newAnimation.counter = counter, markElementAnimationState(element, PRE_DIGEST_STATE, newAnimation), $rootScope.$$postDigest(function () {
              var animationDetails = activeAnimationsLookup.get(node), animationCancelled = !animationDetails;
              animationDetails                                                            = animationDetails || {};
              var parentElement                                                           = element.parent() || [],
                  isValidAnimation                                                        = parentElement.length > 0 && ("animate" === animationDetails.event || animationDetails.structural || hasAnimationClasses(animationDetails));
              if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) return animationCancelled && (applyAnimationClasses(element, options), applyAnimationStyles(element, options)), (animationCancelled || isStructural && animationDetails.event !== event) && (options.domOperation(), runner.end()), void(isValidAnimation || clearElementAnimationState(element));
              event = !animationDetails.structural && hasAnimationClasses(animationDetails, !0) ? "setClass" : animationDetails.event, markElementAnimationState(element, RUNNING_STATE);
              var realRunner = $$animation(element, event, animationDetails.options);
              runner.setHost(realRunner), notifyProgress(runner, event, "start", {}), realRunner.done(function (status) {
                close(!status);
                var animationDetails = activeAnimationsLookup.get(node);
                animationDetails && animationDetails.counter === counter && clearElementAnimationState(getDomNode(element)), notifyProgress(runner, event, "close", {})
              })
            }), runner
          }

          function closeChildAnimations(element) {
            var node = getDomNode(element), children = node.querySelectorAll("[" + NG_ANIMATE_ATTR_NAME + "]");
            forEach(children, function (child) {
              var state            = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME)),
                  animationDetails = activeAnimationsLookup.get(child);
              if (animationDetails) switch (state) {
                case RUNNING_STATE:
                  animationDetails.runner.end();
                case PRE_DIGEST_STATE:
                  activeAnimationsLookup.remove(child)
              }
            })
          }

          function clearElementAnimationState(element) {
            var node = getDomNode(element);
            node.removeAttribute(NG_ANIMATE_ATTR_NAME), activeAnimationsLookup.remove(node)
          }

          function isMatchingElement(nodeOrElmA, nodeOrElmB) {
            return getDomNode(nodeOrElmA) === getDomNode(nodeOrElmB)
          }

          function areAnimationsAllowed(element, parentElement, event) {
            var animateChildren, bodyElement                                                            = jqLite($document[0].body),
                bodyElementDetected                                                                     = isMatchingElement(element, bodyElement) || "HTML" === element[0].nodeName,
                rootElementDetected = isMatchingElement(element, $rootElement), parentAnimationDetected = !1,
                elementDisabled                                                                         = disabledElementsLookup.get(getDomNode(element)),
                parentHost                                                                              = jqLite.data(element[0], NG_ANIMATE_PIN_DATA);
            for (parentHost && (parentElement = parentHost), parentElement = getDomNode(parentElement); parentElement && (rootElementDetected || (rootElementDetected = isMatchingElement(parentElement, $rootElement)), parentElement.nodeType === ELEMENT_NODE);) {
              var details = activeAnimationsLookup.get(parentElement) || {};
              if (!parentAnimationDetected) {
                var parentElementDisabled = disabledElementsLookup.get(parentElement);
                if (!0 === parentElementDisabled && !1 !== elementDisabled) {
                  elementDisabled = !0;
                  break
                }
                !1 === parentElementDisabled && (elementDisabled = !1), parentAnimationDetected = details.structural
              }
              if (isUndefined(animateChildren) || !0 === animateChildren) {
                var value = jqLite.data(parentElement, NG_ANIMATE_CHILDREN_DATA);
                isDefined(value) && (animateChildren = value)
              }
              if (parentAnimationDetected && !1 === animateChildren) break;
              if (bodyElementDetected || (bodyElementDetected = isMatchingElement(parentElement, bodyElement)), bodyElementDetected && rootElementDetected) break;
              parentElement = rootElementDetected || !(parentHost = jqLite.data(parentElement, NG_ANIMATE_PIN_DATA)) ? parentElement.parentNode : getDomNode(parentHost)
            }
            return (!parentAnimationDetected || animateChildren) && !0 !== elementDisabled && rootElementDetected && bodyElementDetected
          }

          function markElementAnimationState(element, state, details) {
            details = details || {}, details.state = state;
            var node = getDomNode(element);
            node.setAttribute(NG_ANIMATE_ATTR_NAME, state);
            var oldValue = activeAnimationsLookup.get(node), newValue = oldValue ? extend(oldValue, details) : details;
            activeAnimationsLookup.put(node, newValue)
          }

          var activeAnimationsLookup = new $$HashMap, disabledElementsLookup = new $$HashMap,
              animationsEnabled                                              = null, deregisterWatch = $rootScope.$watch(function () {
                return 0 === $templateRequest.totalPendingRequests
              }, function (isEmpty) {
                isEmpty && (deregisterWatch(), $rootScope.$$postDigest(function () {
                  $rootScope.$$postDigest(function () {
                    null === animationsEnabled && (animationsEnabled = !0)
                  })
                }))
              }), callbackRegistry                                           = {}, classNameFilter                     = $animateProvider.classNameFilter(),
              isAnimatableClassName                                          = classNameFilter ? function (className) {
                return classNameFilter.test(className)
              } : function () {
                return !0
              }, applyAnimationClasses                                       = applyAnimationClassesFactory($$jqLite),
              contains                                                       = window.Node.prototype.contains || function (arg) {
                return this === arg || !!(16 & this.compareDocumentPosition(arg))
              }, $animate                                                    = {
                on:         function (event, container, callback) {
                  var node = extractElementNode(container);
                  callbackRegistry[event] = callbackRegistry[event] || [], callbackRegistry[event].push({
                    node:     node,
                    callback: callback
                  }), jqLite(container).on("$destroy", function () {
                    activeAnimationsLookup.get(node) || $animate.off(event, container, callback)
                  })
                }, off:     function (event, container, callback) {
                  if (1 !== arguments.length || angular.isString(arguments[0])) {
                    var entries = callbackRegistry[event];
                    entries && (callbackRegistry[event] = 1 === arguments.length ? null : filterFromRegistry(entries, container, callback))
                  } else {
                    container = arguments[0];
                    for (var eventType in callbackRegistry) callbackRegistry[eventType] = filterFromRegistry(callbackRegistry[eventType], container)
                  }
                }, pin:     function (element, parentElement) {
                  assertArg(isElement(element), "element", "not an element"), assertArg(isElement(parentElement), "parentElement", "not an element"),
                    element.data(NG_ANIMATE_PIN_DATA, parentElement)
                }, push:    function (element, event, options, domOperation) {
                  return options = options || {}, options.domOperation = domOperation, queueAnimation(element, event, options)
                }, enabled: function (element, bool) {
                  var argCount = arguments.length;
                  if (0 === argCount) bool = !!animationsEnabled; else {
                    if (isElement(element)) {
                      var node = getDomNode(element), recordExists = disabledElementsLookup.get(node);
                      1 === argCount ? bool = !recordExists : disabledElementsLookup.put(node, !bool)
                    } else bool = animationsEnabled = !!element
                  }
                  return bool
                }
              };
          return $animate
        }]
      }], $$AnimationProvider                                                                   = ["$animateProvider", function ($animateProvider) {
        function setRunner(element, runner) {
          element.data(RUNNER_STORAGE_KEY, runner)
        }

        function removeRunner(element) {
          element.removeData(RUNNER_STORAGE_KEY)
        }

        function getRunner(element) {
          return element.data(RUNNER_STORAGE_KEY)
        }

        var NG_ANIMATE_REF_ATTR = "ng-animate-ref", drivers = this.drivers = [], RUNNER_STORAGE_KEY = "$$animationRunner";
        this.$get                                                                                   = ["$$jqLite", "$rootScope", "$injector", "$$AnimateRunner", "$$HashMap", "$$rAFScheduler", function ($$jqLite, $rootScope, $injector, $$AnimateRunner, $$HashMap, $$rAFScheduler) {
          function sortAnimations(animations) {
            function processNode(entry) {
              if (entry.processed) return entry;
              entry.processed                             = !0;
              var elementNode = entry.domNode, parentNode = elementNode.parentNode;
              lookup.put(elementNode, entry);
              for (var parentEntry; parentNode;) {
                if (parentEntry = lookup.get(parentNode)) {
                  parentEntry.processed || (parentEntry = processNode(parentEntry));
                  break
                }
                parentNode = parentNode.parentNode
              }
              return (parentEntry || tree).children.push(entry), entry
            }

            var i, tree = {children: []}, lookup = new $$HashMap;
            for (i = 0; i < animations.length; i++) {
              var animation = animations[i];
              lookup.put(animation.domNode, animations[i] = {domNode: animation.domNode, fn: animation.fn, children: []})
            }
            for (i = 0; i < animations.length; i++) processNode(animations[i]);
            return function (tree) {
              var i, result = [], queue = [];
              for (i = 0; i < tree.children.length; i++) queue.push(tree.children[i]);
              var remainingLevelEntries = queue.length, nextLevelEntries = 0, row = [];
              for (i = 0; i < queue.length; i++) {
                var entry = queue[i];
                remainingLevelEntries <= 0 && (remainingLevelEntries = nextLevelEntries, nextLevelEntries = 0, result.push(row), row = []), row.push(entry.fn), entry.children.forEach(function (childEntry) {
                  nextLevelEntries++, queue.push(childEntry)
                }), remainingLevelEntries--
              }
              return row.length && result.push(row), result
            }(tree)
          }

          var animationQueue = [], applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
          return function (element, event, options) {
            function getAnchorNodes(node) {
              var SELECTOR = "[" + NG_ANIMATE_REF_ATTR + "]",
                  items    = node.hasAttribute(NG_ANIMATE_REF_ATTR) ? [node] : node.querySelectorAll(SELECTOR),
                  anchors  = [];
              return forEach(items, function (node) {
                var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);
                attr && attr.length && anchors.push(node)
              }), anchors
            }

            function groupAnimations(animations) {
              var preparedAnimations = [], refLookup = {};
              forEach(animations, function (animation, index) {
                var element = animation.element, node = getDomNode(element), event = animation.event,
                    enterOrMove                                                    = ["enter", "move"].indexOf(event) >= 0,
                    anchorNodes                                                    = animation.structural ? getAnchorNodes(node) : [];
                if (anchorNodes.length) {
                  var direction = enterOrMove ? "to" : "from";
                  forEach(anchorNodes, function (anchor) {
                    var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);
                    refLookup[key] = refLookup[key] || {}, refLookup[key][direction] = {
                      animationID: index,
                      element:     jqLite(anchor)
                    }
                  })
                } else preparedAnimations.push(animation)
              });
              var usedIndicesLookup = {}, anchorGroups = {};
              return forEach(refLookup, function (operations, key) {
                var from = operations.from, to = operations.to;
                if (!from || !to) {
                  var index = from ? from.animationID : to.animationID, indexKey = index.toString();
                  return void(usedIndicesLookup[indexKey] || (usedIndicesLookup[indexKey] = !0, preparedAnimations.push(animations[index])))
                }
                var fromAnimation = animations[from.animationID], toAnimation = animations[to.animationID],
                    lookupKey                                                 = from.animationID.toString();
                if (!anchorGroups[lookupKey]) {
                  var group = anchorGroups[lookupKey] = {
                    structural:  !0,
                    beforeStart: function () {
                      fromAnimation.beforeStart(), toAnimation.beforeStart()
                    },
                    close:       function () {
                      fromAnimation.close(), toAnimation.close()
                    },
                    classes:     cssClassesIntersection(fromAnimation.classes, toAnimation.classes),
                    from:        fromAnimation,
                    to:          toAnimation,
                    anchors:     []
                  };
                  group.classes.length ? preparedAnimations.push(group) : (preparedAnimations.push(fromAnimation), preparedAnimations.push(toAnimation))
                }
                anchorGroups[lookupKey].anchors.push({out: from.element, in: to.element})
              }), preparedAnimations
            }

            function cssClassesIntersection(a, b) {
              a = a.split(" "), b = b.split(" ");
              for (var matches = [], i = 0; i < a.length; i++) {
                var aa = a[i];
                if ("ng-" !== aa.substring(0, 3)) for (var j = 0; j < b.length; j++) if (aa === b[j]) {
                  matches.push(aa);
                  break
                }
              }
              return matches.join(" ")
            }

            function invokeFirstDriver(animationDetails) {
              for (var i = drivers.length - 1; i >= 0; i--) {
                var driverName = drivers[i];
                if ($injector.has(driverName)) {
                  var factory = $injector.get(driverName), driver = factory(animationDetails);
                  if (driver) return driver
                }
              }
            }

            function beforeStart() {
              element.addClass(NG_ANIMATE_CLASSNAME), tempClasses && $$jqLite.addClass(element, tempClasses), prepareClassName && ($$jqLite.removeClass(element, prepareClassName), prepareClassName = null)
            }

            function updateAnimationRunners(animation, newRunner) {
              function update(element) {
                var runner = getRunner(element);
                runner && runner.setHost(newRunner)
              }

              animation.from && animation.to ? (update(animation.from.element), update(animation.to.element)) : update(animation.element)
            }

            function handleDestroyedElement() {
              var runner = getRunner(element);
              !runner || "leave" === event && options.$$domOperationFired || runner.end()
            }

            function close(rejected) {
              element.off("$destroy", handleDestroyedElement), removeRunner(element), applyAnimationClasses(element, options), applyAnimationStyles(element, options), options.domOperation(), tempClasses && $$jqLite.removeClass(element, tempClasses), element.removeClass(NG_ANIMATE_CLASSNAME), runner.complete(!rejected)
            }

            options                                                                   = prepareAnimationOptions(options);
            var isStructural = ["enter", "move", "leave"].indexOf(event) >= 0, runner = new $$AnimateRunner({
              end:       function () {
                close()
              }, cancel: function () {
                close(!0)
              }
            });
            if (!drivers.length) return close(), runner;
            setRunner(element, runner);
            var classes     = mergeClasses(element.attr("class"), mergeClasses(options.addClass, options.removeClass)),
                tempClasses = options.tempClasses;
            tempClasses && (classes += " " + tempClasses, options.tempClasses = null);
            var prepareClassName;
            return isStructural && (prepareClassName = "ng-" + event + "-prepare", $$jqLite.addClass(element, prepareClassName)), animationQueue.push({
              element:     element,
              classes:     classes,
              event:       event,
              structural:  isStructural,
              options:     options,
              beforeStart: beforeStart,
              close:       close
            }), element.on("$destroy", handleDestroyedElement), animationQueue.length > 1 ? runner : ($rootScope.$$postDigest(function () {
              var animations = [];
              forEach(animationQueue, function (entry) {
                getRunner(entry.element) ? animations.push(entry) : entry.close()
              }), animationQueue.length = 0;
              var groupedAnimations = groupAnimations(animations), toBeSortedAnimations = [];
              forEach(groupedAnimations, function (animationEntry) {
                toBeSortedAnimations.push({
                  domNode: getDomNode(animationEntry.from ? animationEntry.from.element : animationEntry.element),
                  fn:      function () {
                    animationEntry.beforeStart();
                    var startAnimationFn, closeFn = animationEntry.close;
                    if (getRunner(animationEntry.anchors ? animationEntry.from.element || animationEntry.to.element : animationEntry.element)) {
                      var operation = invokeFirstDriver(animationEntry);
                      operation && (startAnimationFn = operation.start)
                    }
                    if (startAnimationFn) {
                      var animationRunner = startAnimationFn();
                      animationRunner.done(function (status) {
                        closeFn(!status)
                      }), updateAnimationRunners(animationEntry, animationRunner)
                    } else closeFn()
                  }
                })
              }), $$rAFScheduler(sortAnimations(toBeSortedAnimations))
            }), runner)
          }
        }]
      }], ngAnimateSwapDirective                                                                = ["$animate", "$rootScope", function ($animate, $rootScope) {
        return {
          restrict:   "A",
          transclude: "element",
          terminal:   !0,
          priority:   600,
          link:       function (scope, $element, attrs, ctrl, $transclude) {
            var previousElement, previousScope;
            scope.$watchCollection(attrs.ngAnimateSwap || attrs.for, function (value) {
              previousElement && $animate.leave(previousElement), previousScope && (previousScope.$destroy(), previousScope = null), (value || 0 === value) && (previousScope = scope.$new(), $transclude(previousScope, function (element) {
                previousElement = element, $animate.enter(element, null, $element)
              }))
            })
          }
        }
      }];
  angular.module("ngAnimate", []).directive("ngAnimateSwap", ngAnimateSwapDirective).directive("ngAnimateChildren", $$AnimateChildrenDirective).factory("$$rAFScheduler", $$rAFSchedulerFactory).provider("$$animateQueue", $$AnimateQueueProvider).provider("$$animation", $$AnimationProvider).provider("$animateCss", $AnimateCssProvider).provider("$$animateCssDriver", $$AnimateCssDriverProvider).provider("$$animateJs", $$AnimateJsProvider).provider("$$animateJsDriver", $$AnimateJsDriverProvider)
}(window, window.angular), angular.module("app.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", "$translateProvider", "$compileProvider", "$httpProvider", function ($locationProvider, $urlRouterProvider, $stateProvider, $translateProvider, $compileProvider, $httpProvider) {
  $urlRouterProvider.otherwise("/"), $locationProvider.html5Mode(!0), $httpProvider.interceptors.push(["$q", function ($q) {
    return {
      request: function (config) {
        return "/" == config.url[0] && (config.url = prepareUrl(config.url)), config.withCredentials = !0, config || $q.when(config)
      }
    }
  }]), $stateProvider.state("app", {
    abstract:    !0,
    templateUrl: "app/views/app.tpl.html",
    controller:  "app.controller",
    resolve:     {
      user: ["userService", function (userService) {
        return userService.getBootupData()
      }]
    }
  }), $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|steam):/), $translateProvider.useStaticFilesLoader({
    prefix: "./locale/",
    suffix: ".json?bust=" + generateUUID()
  }), $translateProvider.useSanitizeValueStrategy("sanitizeParameters"), $translateProvider.preferredLanguage("en"), $translateProvider.fallbackLanguage("en")
}]);
var appControl = angular.module("app.controller", []);
angular.module("app.controller").run(["$rootScope", "glob", "$state", "$translate", function ($rootScope, glob, $state, $translate) {
}]), appControl.controller("app.controller", ["$http", "$scope", "$translate", "$timeout", "$filter", "$rootScope", "$location", "userService", "inventoryService", "growl", "glob", "user", "$interval", "$sanitize", "$state", function ($http, $scope, $translate, $timeout, $filter, $rootScope, $location, userService, inventoryService, growl, glob, user, $interval, $sanitize, $state) {
  function loadTheme(themeName) {
    function checkLoadingState() {
      Math.round($("#styles_state_mark").outerWidth()) == theme.index && (stylesLoaded = !0), imagesLoaded && stylesLoaded && ($timeout(function () {
        $rootScope.apploading = !1
      }, 500), $interval.cancel(checkInterval))
    }

    var theme = $rootScope.themes[themeName];
    if (theme) {
      $rootScope.apploading = !0;
      var imagesLoaded      = !1, stylesLoaded = !1, checkInterval = $interval(checkLoadingState, 100);
      theme.assets ? glob.preloadAssets(theme.assets, null, function () {
        imagesLoaded = !0
      }) : imagesLoaded = !0
    }
  }

  function handleTweetAnnounce(tweet) {
    "number" == typeof tweet.id && (tweet.id = tweet.id.toString()), $timeout(function () {
      $rootScope.app.twttrAnnounceRead != tweet.id && $rootScope.openTweetAnnounce({
        tweetId: tweet.id,
        gaUrl:   tweet.url
      })
    })
  }

  function handleOfferState(data) {
    function handle() {
      glob.nativeNotifs.spawn("/img/bolt_mascot.png", $translate.instant(nnote_title), $translate.instant(nnote_message), nnote_message, function (notif) {
        2 == data.steamState && window.open("https://steamcommunity.com/tradeoffer/" + data.tradeId + "/", "_blank"), 11 == data.steamState && window.open("https://support.steampowered.com/kb_article.php?ref=8078-TPHC-6195", "_blank"), notif.close()
      })
    }

    var nnote_title, nnote_message;
    2 == data.steamState ? (glob.printsuccess("notification_offer", data, !0), nnote_title = "native_note_offer_title", nnote_message = "native_note_offer_text", handle()) : 3 == data.steamState ? (glob.printsuccess("notification_offer_success", null, !0), nnote_title = "native_note_offer_success_title", nnote_message = "native_note_offer_success_text", handle()) : 6 == data.steamState || 10 == data.steamState ? (glob.printwarning("notification_offer_cancelled", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_cancelled_text", handle()) : 7 == data.steamState ? (glob.printwarning("notification_offer_declined", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_declined_text", handle()) : 8 == data.steamState ? (glob.printwarning("notification_offer_unavailable", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_unavailable_text", handle()) : 11 == data.steamState && (glob.printsuccess("notification_offer_hold", data, !0), nnote_title = "native_note_offer_hold_title", nnote_message = "native_note_offer_hold_text", handle())
  }

  function levelup(data) {
    glob.levelQ.run(function () {
      $rootScope.user.lastClaimedLevel >= data.level || ($rootScope.levelUp = data)
    })
  }

  function onresize() {
    $scope.win_width = $rootScope.win_width = window.innerWidth
  }

  function consoleDangerWarning() {

  }

  window.ga || (window.ga = function () {
  }), $rootScope.gameIds = conf.gameIds, $rootScope.idGames = {}, $.each($rootScope.gameIds, function (key, val) {
    $rootScope.idGames[val] = key
  }), $rootScope.filterGameIds = function () {
    if (!$rootScope.system || !$rootScope.system.enabledAppIds) return $rootScope.gameIds;
    var filtered = [];
    return $.each($rootScope.gameIds, function (key, val) {
      $rootScope.system.enabledAppIds[val] && filtered.push({id: val, name: key})
    }), filtered
  }, $scope.isIE = detectIE();
  var parsed_ua = UAParser();
  if (parsed_ua && parsed_ua.os && parsed_ua.engine && "Windows" == parsed_ua.os.name && "WebKit" !== parsed_ua.engine.name && ($rootScope.non_webkit = !0), $scope.glob = glob, $rootScope.$state = $scope.$state = $state, $rootScope.loading = !1, $rootScope.oldGames = [], $rootScope.warningBanner = null, $rootScope.isMobile = isMobile.phone || isMobile.tablet, $rootScope.hideRegularTheme = !1, $rootScope.currentVersion = $("#mainScript").attr("tag"), $rootScope.moment = moment, inventoryService.getItems(), $rootScope.userAuthed = userService.authed, $rootScope.user = user, $rootScope.user && !$rootScope.user.boltGgInTheName && $timeout(function () {
      $translate("notif_bolt_in_name").then(function (res) {
        glob.printsuccess(res, null, !0)
      })
    }), $rootScope.user && $timeout(function () {
      $translate("notif_staff_never_ask").then(function (res) {
        glob.printsuccess(res, null, !0)
      })
    }), $rootScope.user, window.cxApi ? $rootScope.abtest = {variation: cxApi.chooseVariation()} : $rootScope.abtest = {variation: 0}, $scope.$on("accountChange", function () {
      $rootScope.user = userService.user, $rootScope.$broadcast("accountDataSaved"), $scope.$$phase || $scope.$digest(), $rootScope.$$phase || $rootScope.$digest()
    }), $rootScope.signIn = function () {

      !$rootScope.user && $state.params.refCode && store.set("refCode", $state.params.refCode),

        //window.location = "http://b-o-l-t-g-g.com/auth/steam"
        onOpenAuth()
    }, $rootScope.user && !$state.params.refCode && store.get("refCode")) {
    var refCode = store.get("refCode");
    store.remove("refCode"), $state.go("app.ref", {refCode: refCode})
  }
  glob.nativeNotifs = new glob.nativeNotifsClass, $rootScope.app = {
    overunder:      !0,
    themesNote:     !0,
    chinyThemeNote: !0
  }, $rootScope.saveAppLocalStore = function () {
    store.set("app", $rootScope.app)
  }, store.get("app") && ($.extend($rootScope.app, store.get("app")), $rootScope.theme = $rootScope.app.theme), $rootScope.themes = {
    blue:  {
      index:  1,
      bar:    "#050b25",
      assets: ["/img/motion-default.gif"]
    },
    dark:  {
      index:  2,
      bar:    "#000000",
      assets: ["/img/motion-default.gif"]
    },
    light: {
      index:  4,
      bar:    "#CCCED6",
      assets: ["/img/motion-default.gif"]
    }
  }, $rootScope.switchTheme = function (theme, force, forget) {
    $rootScope.themes[theme] || (theme = "blue");
    var themeObj = $rootScope.themes[theme];
    ($rootScope.theme != theme || force) && ($rootScope.theme = theme, themeObj.hidden || forget || ($rootScope.app.theme = theme, $rootScope.saveAppLocalStore()), loadTheme(theme))
  }, $rootScope.switchTheme($rootScope.app.theme, !0), $rootScope.popLiveSupport = function () {
  }, $rootScope.sidebarOpen = !0, $rootScope.growl = glob.growl, $rootScope.addToBet = function (ibet, num) {
    var a = parseFloat(ibet), b = parseFloat(num);
    if ($rootScope.user.thousands) {
      var bet = a + b;
      ibet    = parseFloat(bet.toFixed(3))
    } else ibet = a + b;
    return ibet
  }, $rootScope.checkTradeUrl = function () {
    return !(!$rootScope.user.tradeUrl || 0 == $rootScope.user.tradeUrl.length) || (glob.printwarning("modals_setTrade"), "settings" !== glob.sidebarView && $timeout(function () {
      $("#settings").click()
    }), !1)
  }, socket.on("reload", function () {
    window.location.reload()
  }), socket.on("logout", function () {
    window.location = "/auth/logout"
  }), socket.on("game_newGame", function (data) {
    isMobile.phone || "on" != $rootScope.user.notify || ("coinflip" == data.type && "/coinflip" != $location.path() && $rootScope.growl.update('<img src="' + data.userImg + '"><span><b>' + data.username + "</b> just made a coinflip for <b>" + data.value.toFixed(2) + "</b> banana(s)."), "buriedTreasure" == data.type && "/treasure" != $location.path() && $rootScope.growl.update('<img src="' + data.userImg + '"><span><b>' + data.username + "</b> just made a treasure map for <b>" + data.value.toFixed(2) + "</b> banana(s)."))
  }), socket.on("game_newGame_bulk", function (bulkData) {
    bulkData.forEach(function (data) {
      isMobile.phone || "on" != $rootScope.user.notify || ("coinflip" == data.type && "/coinflip" != $location.path() && $rootScope.growl.update('<img src="' + data.userImg + '"><span><b>' + data.username + "</b> just made a coinflip for <b>" + data.value.toFixed(2) + "</b> banana(s)."), "buriedTreasure" == data.type && "/treasure" != $location.path() && $rootScope.growl.update('<img src="' + data.userImg + '"><span><b>' + data.username + "</b> just made a treasure map for <b>" + data.value.toFixed(2) + "</b> banana(s)."))
    })
  }), $rootScope.getLocation = function () {
    return $location.path()
  }, $rootScope.changeLocation = function (view) {
    $location.path(view)
  }, $rootScope.fromNow = function (timestamp) {
    var a = new moment;
    return moment(timestamp).from(a)
  }, $rootScope.displayTimeLocaleAware = function (date) {
    var lang, format;
    return lang = $rootScope.locale ? $rootScope.locale : "en", format = "en" == lang ? "h:mmA" : "H:mm", moment(date).format(format)
  }, $rootScope.userAuthed || $state.current.nologin ? $state.current.noanalytics || (ga("set", "page", $state.current.url), ga("send", "pageview"), fbq("track", "PageView")) : $state.go("app.home"), $rootScope.$on("$stateChangeStart", function (event, toState) {
    $rootScope.userAuthed || toState.nologin ? "/withdraw" == toState.url && "enabled" != $rootScope.system.withdrawStatus && "admin" != $rootScope.user.role ? (glob.printwarning("Withdrawals are currently disabled."), event.preventDefault()) : "/admin" == toState.url && "admin" != $rootScope.user.role ? event.preventDefault() : $rootScope.loading = !0 : (event.preventDefault(), $translate("error_not_logged_in").then(glob.printwarning), $state.go("app.home"))
  }), $rootScope.$on("$stateChangeSuccess", function (event, toState, toParams, fromState, fromParams) {
    $rootScope.loading = !1, toState.noanalytics || (ga("set", "page", toState.url), ga("send", "pageview"), fbq("track", "PageView")), window.Intercom && window.Intercom("update")
  }), $rootScope.$on("$stateChangeError", function () {
    $rootScope.loading = !1
  }), $rootScope.cacheBust = function (min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min
  }, $rootScope.changeLanguage = function (langKey) {
    $translate.use(langKey)
  };
  var ansocket = new glob.ansocket($scope);
  socket.on("faucet_faucetMeter", function (data) {
    $rootScope.faucetMeter = data, $rootScope.$$phase || $rootScope.$digest()
  }), ansocket.on("announce/twitter", handleTweetAnnounce), ansocket.on("trade/offerState", handleOfferState), glob.levelQ = new glob.delayedEx, socket.on("levelUp", function (data) {
    levelup(data)
  }), window.testLevelup = function () {
    levelup({level: 101}), $rootScope.user.lastClaimedLevel = 99, $scope.$apply()
  }, $rootScope.claimLevels = function () {
    glob.post("/account/claimLevels", null, function (resp) {
      glob.printsuccess("success"), $rootScope.levelUp = null, $rootScope.user.lastClaimedLevel = $rootScope.user.expLevel
    }, function (err) {
      $rootScope.levelUp = null
    })
  }, glob.getPossibleItems = function (appId) {
    glob.possibleItems || (glob.possibleItems = {}), glob.possibleItems[appId] || (glob.possibleItems[appId] = [{name: "AWP"}, {name: "AWP1"}, {name: "AWP2"}, {name: "Test"}, {name: "MLG"}])
  }, $location.search().error && $rootScope.growl.error($location.search().error), onresize(), $(window).on("resize", function () {
    onresize(), $scope.$apply()
  }), glob.preloadAssets(["/img/deposit-items-bg.png", "/img/deposit-payments-long.png", "/img/gift-card-bg.png"]), $rootScope.itemsValue = function (items) {
    if (items) {
      for (var total = 0, i = 0; i < items.length; i++) total += parseFloat(items[i].price);
      return total
    }
  }, $rootScope.splitName = function (item) {
    if (item && item.market_hash_name) return glob.splitName(item.market_hash_name)
  }, glob.sounds = {
    spin_buildup:         new Howl({src: ["/sounds/buildup.mp3"], volume: .7}),
    spin_resolve_success: new Howl({src: ["/sounds/winsound.mp3"], volume: .7}),
    spin_resolve_fail:    new Howl({src: ["/sounds/losssound.mp3"], volume: .7}),
    muted:                !1
  }, $scope.$watch("glob.sounds.muted", function (val) {
    Howler.mute(val)
  }), $timeout(consoleDangerWarning), $interval(consoleDangerWarning, 6e4), $timeout(function () {
    $rootScope.postInitialLoad = !0
  })
}]), appControl.config(["$animateProvider", function ($animateProvider) {
  $animateProvider.classNameFilter(/angular-animate/)
}]), appControl.config(["$compileProvider", function ($compileProvider) {
  $compileProvider.debugInfoEnabled(!1)
}]);
var QueryString           = function () {
      for (var query_string = {}, query = window.location.search.substring(1), vars = query.split("&"), i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");
        if (void 0 === query_string[pair[0]]) query_string[pair[0]] = decodeURIComponent(pair[1]); else if ("string" == typeof query_string[pair[0]]) {
          var arr               = [query_string[pair[0]], decodeURIComponent(pair[1])];
          query_string[pair[0]] = arr
        } else query_string[pair[0]].push(decodeURIComponent(pair[1]))
      }
      return query_string
    }(), socketURL        = window.location.host,
    socketSettings        = {path: "/socket/user", transports: ["websocket", "polling"]},
    useremotesocketsHosts = conf.remote_users_hosts;
if (~useremotesocketsHosts.indexOf(window.location.hostname)) {
  var r     = conf.remote_socket_url;
  socketURL = r
}
socketURL += "/user";
var socket = io(socketURL, socketSettings);
socket.on("connect_error", function (error) {
}), socket.on("connect_timeout", function (error) {
}), socket.on("reconnect", function (error) {
}), socket.on("reconnect_error", function (error) {
}), socket.on("reconnect_failed", function (error) {
}), function () {
  !function (a, b) {
    "function" == typeof define && define.amd ? define(function () {
      return b()
    }) : "object" == typeof exports ? module.exports = b() : a.ifvisible = b()
  }(this, function () {
    var a, b, c, e, f, g, h, i, j, k, l, m, n;
    return i = {}, c = document, k = !1, l = "active", g = 6e4, f = !1, b = function () {
      var a, b, c, d, f, g;
      return a = function () {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
      }, function () {
        return a() + a() + "-" + a() + "-" + a() + "-" + a() + "-" + a() + a() + a()
      }, f = {}, c = "__ceGUID", b = function (a, b, d) {
        return a[c] = void 0, a[c] || (a[c] = "ifvisible.object.event.identifier"), f[a[c]] || (f[a[c]] = {}), f[a[c]][b] || (f[a[c]][b] = []), f[a[c]][b].push(d)
      }, d = function (a, b, d) {
        var e, g, h, i, j;
        if (a[c] && f[a[c]] && f[a[c]][b]) {
          for (i = f[a[c]][b], j = [], g = 0, h = i.length; h > g; g++) e = i[g], j.push(e(d || {}));
          return j
        }
      }, g = function (a, b, d) {
        var e, g, h, i, j;
        if (d) {
          if (a[c] && f[a[c]] && f[a[c]][b]) for (j = f[a[c]][b], g = h = 0, i = j.length; i > h; g = ++h) if ((e = j[g]) === d) return f[a[c]][b].splice(g, 1), e
        } else if (a[c] && f[a[c]] && f[a[c]][b]) return delete f[a[c]][b]
      }, {add: b, remove: g, fire: d}
    }(), a = function () {
      var a;
      return a = !1, function (b, c, d) {
        return a || (a = b.addEventListener ? function (a, b, c) {
          return a.addEventListener(b, c, !1)
        } : b.attachEvent ? function (a, b, c) {
          return a.attachEvent("on" + b, c, !1)
        } : function (a, b, c) {
          return a["on" + b] = c
        }), a(b, c, d)
      }
    }(), function (a, b) {
      var d;
      return c.createEventObject ? a.fireEvent("on" + b, d) : (d = c.createEvent("HTMLEvents"), d.initEvent(b, !0, !0), !a.dispatchEvent(d))
    }, h = function () {
      var a, b, d, e, f;
      for (e = void 0, f = 3, d = c.createElement("div"), a = d.getElementsByTagName("i"), b = function () {
        return d.innerHTML = "\x3c!--[if gt IE " + ++f + "]><i></i><![endif]--\x3e", a[0]
      }; b();) ;
      return f > 4 ? f : e
    }(), e = !1, n = void 0, void 0 !== c.hidden ? (e = "hidden", n = "visibilitychange") : void 0 !== c.mozHidden ? (e = "mozHidden", n = "mozvisibilitychange") : void 0 !== c.msHidden ? (e = "msHidden", n = "msvisibilitychange") : void 0 !== c.webkitHidden && (e = "webkitHidden", n = "webkitvisibilitychange"), m = function () {
      var b, d;
      return b = !1, d = function () {
        return clearTimeout(b), "active" !== l && i.wakeup(), f = +new Date, b = setTimeout(function () {
          return "active" === l ? i.idle() : void 0
        }, g)
      }, d(), a(c, "mousemove", d), a(c, "keyup", d), a(c, "touchstart", d), a(window, "scroll", d), i.focus(d), i.wakeup(d)
    }, j = function () {
      var b;
      return !!k || (!1 === e ? (b = "blur", 9 > h && (b = "focusout"), a(window, b, function () {
        return i.blur()
      }), a(window, "focus", function () {
        return i.focus()
      })) : a(c, n, function () {
        return c[e] ? i.blur() : i.focus()
      }, !1), k = !0, m())
    }, i = {
      setIdleDuration:    function (a) {
        return g = 1e3 * a
      }, getIdleDuration: function () {
        return g
      }, getIdleInfo:     function () {
        var a, b;
        return a = +new Date, b = {}, "idle" === l ? (b.isIdle = !0, b.idleFor = a - f, b.timeLeft = 0, b.timeLeftPer = 100) : (b.isIdle = !1, b.idleFor = a - f, b.timeLeft = f + g - a, b.timeLeftPer = (100 - 100 * b.timeLeft / g).toFixed(2)), b
      }, focus:           function (a) {
        return "function" == typeof a ? this.on("focus", a) : (l = "active", b.fire(this, "focus"), b.fire(this, "wakeup"), b.fire(this, "statusChanged", {status: l})), this
      }, blur:            function (a) {
        return "function" == typeof a ? this.on("blur", a) : (l = "hidden", b.fire(this, "blur"), b.fire(this, "idle"), b.fire(this, "statusChanged", {status: l})), this
      }, idle:            function (a) {
        return "function" == typeof a ? this.on("idle", a) : (l = "idle", b.fire(this, "idle"), b.fire(this, "statusChanged", {status: l})), this
      }, wakeup:          function (a) {
        return "function" == typeof a ? this.on("wakeup", a) : (l = "active", b.fire(this, "wakeup"), b.fire(this, "statusChanged", {status: l})), this
      }, on:              function (a, c) {
        return j(), b.add(this, a, c), this
      }, off:             function (a, c) {
        return j(), b.remove(this, a, c), this
      }, onEvery:         function (a, b) {
        var c, d;
        return j(), c = !1, b && (d = setInterval(function () {
          return "active" === l && !1 === c ? b() : void 0
        }, 1e3 * a)), {
          stop:      function () {
            return clearInterval(d)
          }, pause:  function () {
            return c = !0
          }, resume: function () {
            return c = !1
          }, code:   d, callback: b
        }
      }, now:             function (a) {
        return j(), l === (a || "active")
      }
    }
  })
}.call(this), function (a) {
  var b                                                                                         = /iPhone/i, c = /iPod/i, d = /iPad/i, e = /(?=.*\bAndroid\b)(?=.*\bMobile\b)/i, f = /Android/i,
      g                                                                                         = /(?=.*\bAndroid\b)(?=.*\bSD4930UR\b)/i,
      h                                                                                         = /(?=.*\bAndroid\b)(?=.*\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\b)/i,
      i = /IEMobile/i, j = /(?=.*\bWindows\b)(?=.*\bARM\b)/i, k = /BlackBerry/i, l = /BB10/i, m = /Opera Mini/i,
      n                                                                                         = /(CriOS|Chrome)(?=.*\bMobile\b)/i, o = /(?=.*\bFirefox\b)(?=.*\bMobile\b)/i,
      p                                                                                         = new RegExp("(?:Nexus 7|BNTV250|Kindle Fire|Silk|GT-P1000)", "i"), q                   = function (a, b) {
        return a.test(b)
      }, r                                                                                      = function (a) {
        var r = a || navigator.userAgent, s = r.split("[FBAN");
        return void 0 !== s[1] && (r = s[0]), s = r.split("Twitter"), void 0 !== s[1] && (r = s[0]), this.apple = {
          phone:  q(b, r),
          ipod:   q(c, r),
          tablet: !q(b, r) && q(d, r),
          device: q(b, r) || q(c, r) || q(d, r)
        }, this.amazon = {
          phone:  q(g, r),
          tablet: !q(g, r) && q(h, r),
          device: q(g, r) || q(h, r)
        }, this.android = {
          phone:  q(g, r) || q(e, r),
          tablet: !q(g, r) && !q(e, r) && (q(h, r) || q(f, r)),
          device: q(g, r) || q(h, r) || q(e, r) || q(f, r)
        }, this.windows = {phone: q(i, r), tablet: q(j, r), device: q(i, r) || q(j, r)}, this.other = {
          blackberry:   q(k, r),
          blackberry10: q(l, r),
          opera:        q(m, r),
          firefox:      q(o, r),
          chrome:       q(n, r),
          device:       q(k, r) || q(l, r) || q(m, r) || q(o, r) || q(n, r)
        }, this.seven_inch = q(p, r), this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch, this.phone = this.apple.phone || this.android.phone || this.windows.phone, this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet, "undefined" == typeof window ? this : void 0
      }, s                                                                                      = function () {
        var a = new r;
        return a.Class = r, a
      };
  "undefined" != typeof module && module.exports && "undefined" == typeof window ? module.exports = r : "undefined" != typeof module && module.exports && "undefined" != typeof window ? module.exports = s() : "function" == typeof define && define.amd ? define("isMobile", [], a.isMobile = s()) : a.isMobile = s()
}(this), angular.module("app.controller").directive("rangeFillBefore", function () {
  return {
    scope: {rangeFillBefore: "=", rangeFillInverted: "="}, link: function (scope, elem, attr) {
      function fillIt() {
        var fraction, css = {}, max = elem.attr("max"), min = elem.attr("min"),
            fraction                                        = (currentval - min) / (max - min);
        inverted ? (fraction = 1 - fraction, css.right = 0, css.left = "auto") : (css.left = 0, css.right = "auto"), fraction > 1 && (fraction = 1), fraction < 0 && (fraction = 0), css.width = 100 * fraction + "%", fill.css(css)
      }

      var currentval, inverted, wrapper                = $("<div class='range_pre_fill_wrap'/>"),
          track = $("<div class='fake_track'/>"), fill = $("<div class='fake_fill'/>");
      elem.wrap(wrapper), elem.parent().prepend(track), track.append(fill), scope.$watch(function () {
        return elem.attr("max")
      }, function () {
        fillIt()
      }), scope.$watch(function () {
        return elem.attr("min")
      }, function () {
        fillIt()
      }), scope.$watch("rangeFillBefore", function (val) {
        currentval = val, currentval || (currentval = 0), fillIt()
      }), scope.$watch("rangeFillInverted", function (boo) {
        inverted = boo, fillIt()
      })
    }
  }
}).directive("svgIcon", ["$templateCache", "$compile", function ($templateCache, $compile) {
  return {
    restrict: "A", link: function (scope, el, attr) {
      function initIcon() {
        el.empty();
        var path = "app/partials/" + attr.svgIcon + ".tpl.html", template = $templateCache.get(path);
        if (template) {
          var templateEl = $compile(template)(scope);
          el.append(templateEl)
        }
      }

      attr.dynamic ? attr.$observe("svgIcon", function (newicon) {
        initIcon()
      }) : initIcon()
    }
  }
}]).directive("snowParticles", ["$templateCache", "$compile", function ($templateCache, $compile) {
  return {
    restrict: "A", link: function (scope, el, attr) {
      var w = el.outerWidth(), h = el.outerHeight();
      el.attr("id", "asdf"), particlesJS("asdf", {
        particles:     {
          number:      {
            value:   150,
            density: {enable: !0, value_area: Math.max(w, h)}
          },
          color:       {value: "#ffffff"},
          shape:       {
            type:    "circle",
            stroke:  {width: 0, color: "#000000"},
            polygon: {nb_sides: 0},
            image:   {src: "img/github.svg", width: 100, height: 100}
          },
          opacity:     {
            value:  .5,
            random: !1,
            anim:   {enable: !1, speed: 1, opacity_min: .1, sync: !1}
          },
          size:        {
            value:  3,
            random: !0,
            anim:   {enable: !1, speed: 40, size_min: .1, sync: !1}
          },
          line_linked: {
            enable:   !1,
            distance: 150,
            color:    "#ffffff",
            opacity:  .4,
            width:    1
          },
          move:        {
            enable:    !0,
            speed:     2,
            direction: "none",
            random:    !1,
            straight:  !1,
            out_mode:  "out",
            bounce:    !1,
            attract:   {enable: !1, rotateX: 600, rotateY: 1200}
          }
        },
        interactivity: {
          enable:    !1,
          detect_on: "canvas",
          modes:     {
            bubble: {distance: 400, size: 40, duration: 2, opacity: 8, speed: 3},
            push:   {particles_nb: 4},
            remove: {particles_nb: 2}
          }
        }
      })
    }
  }
}]).directive("jqRangeSlider", function () {
  return {
    require: "?ngModel", scope: {range: "="}, link: function (scope, elem, attr, ngModel) {
      function render() {
        var modelValue = ngModel.$modelValue || "";
        slider.range(modelValue.begin, modelValue.end)
      }

      function read() {
        ngModel.$setViewValue(currentRange)
      }

      var currentRange, slider = createJQDRangeslider(0, 100, elem);
      slider.onChange(function (newRange) {
        currentRange = newRange, read()
      }), scope.$watch("range", function (newrange) {
        var b, e;
        if (currentRange) if (0 == currentRange.begin) b = 0, e = b + newrange; else if (100 == currentRange.end) e = 100, b = e - newrange; else {
          var middle = (currentRange.end + currentRange.begin) / 2;
          if (b = middle - newrange / 2, e = middle + newrange / 2, b < 0) {
            var diff = 0 - b;
            b += diff, e += diff
          }
          if (e > 100) {
            var diff = e - 100;
            e -= diff, b -= diff
          }
        } else b = 0, e = b + newrange;
        slider.range(b, e)
      }), ngModel.$render = render
    }
  }
}).directive("fadeOutChildren", function () {
  return {
    scope: {fadeOutUpdate: "=", fadeOutLimit: "&", fadeOutFsize: "&"}, link: function (scope, elem, attr) {
      var limit = scope.fadeOutLimit(), fsizemin = scope.fadeOutFsize();
      scope.$watch("fadeOutUpdate", function (val) {
        elem.children().each(function (i) {
          $this   = $(this);
          var lim = limit + 1, frac = (lim - i) / lim;
          if (frac < 0 && (frac = 0), $this.css("opacity", frac), fsizemin) {
            var fsize = fsizemin + (1 - fsizemin) * frac;
            $this.css("font-size", fsize + "em")
          }
        })
      })
    }
  }
}).directive("batAnimated", ["glob", "$timeout", function (glob, $timeout) {
  return {
    scope: {active: "="}, link: function (scope, elem, attr) {
      function playSheet() {
        sheetAnimator || (sheetAnimator = new glob.animationThrottle(fps)), direction = "f", sheetAnimator.run(function () {
          sheetRunning || (elem.addClass("animation-running"), sheetRunning = !0), "f" == direction ? currentFrameIndex != frames - 1 ? (setFrame(currentFrameIndex), currentFrameIndex++) : (direction = "b", setFrame(currentFrameIndex), currentFrameIndex--) : "b" == direction && (0 != currentFrameIndex ? (setFrame(currentFrameIndex), currentFrameIndex--) : (direction = "f", setFrame(currentFrameIndex), currentFrameIndex++))
        })
      }

      function setFrame(frameN) {
        var sheetlast = frames - 1;
        frameN        = glob.clamp(frameN, 0, sheetlast);
        var margin    = 100 * frameN / (sheetlast + 1);
        glob.transform(sheetEl, "translate3d(" + -margin + "%,0,0)"), !active && sheetRunning && frameN == startingFrame && (sheetAnimator.stop(), wrap.stop(), sheetRunning = !1,
          elem.removeClass("animation-running"))
      }

      function startLoop() {
        var dir = Math.round(Math.random());
        0 == dir && (dir = -1);
        var start = 0, end = 360;
        lastAngle && (start = lastAngle, end = lastAngle + 360);
        var param = {dir: dir};
        1 == dir ? (param.start = start, param.end = end) : (param.start = end, param.end = start);
        var loop = function () {
          wrap.animate({path: new customArc(param)}, {
            duration: glob.randomRange(1500, 4e3),
            easing:   "linear",
            complete: loop
          })
        };
        loop()
      }

      elem.addClass("bat_animated");
      var active, frames = (elem.outerHeight(), 6), fps = 30, startingFrame = glob.randomRange(2, frames - 1),
          wrap                                                              = $("<div class='transform_wrap'/>"), $sheetEl               = $("<div/>").addClass("icon icon-bat_sheet");
      $sheetEl.css({width: 100 * frames + "%", height: "100%"}), wrap.append($sheetEl), elem.append(wrap);
      var sheetEl = $sheetEl[0];
      setFrame(startingFrame);
      var firstActivate = !0;
      scope.$watch("active", function (newactive, oldactive) {
        (firstActivate || !!newactive != !!oldactive) && (active = newactive, active && (playSheet(), startLoop()), firstActivate = !1)
      });
      var sheetAnimator, sheetRunning, direction, lastAngle, currentFrameIndex = startingFrame,
          customArc                                                            = function (param) {
            var par = {center: [0, 0], radius: 20, start: 0, end: 360, dir: 1, amp: 20, lean: -20};
            $.extend(par, param), this.css = function (p) {
              var a = (par.start * p + par.end * (1 - p)) * Math.PI / 180, css = {};
              this.x = Math.sin(a) * par.radius + par.center[0] + .5 | 0, this.y = Math.cos(a) * par.radius + par.center[1] + .5 | 0;
              var halfAngle, x = this.x / par.radius * par.amp, y = this.y / par.radius * par.amp,
                  angle                                           = lastAngle = a / (2 * Math.PI) * 360 % 360;
              halfAngle  = angle > 180 ? angle - 360 : angle;
              var quartAngle;
              quartAngle = Math.abs(halfAngle) > 90 ? halfAngle / Math.abs(halfAngle) * 180 - halfAngle : halfAngle;
              var lean   = quartAngle / 90 * par.lean;
              return glob.transform(wrap[0], "translate3d(" + x + "%," + y + "%,0) rotate(" + lean + "deg)"), css
            }
          };
      scope.$on("$destroy", function () {
        sheetAnimator && sheetAnimator.stop()
      })
    }
  }
}]).directive("tweet", ["glob", function (glob) {
  return {
    restrict: "A", scope: {tweet: "&"}, link: function (scope, el, attr) {
      var tweetId = scope.tweet();
      glob.fetchingTweet = !0, twttr.ready(function () {
        twttr.widgets.createTweet(tweetId, el[0]).then(function () {
          glob.fetchingTweet = !1, scope.$apply()
        })
      })
    }
  }
}]).directive("twitterFollow", ["glob", "$rootScope", function (glob, $rootScope) {
  return {
    restrict: "A", link: function (scope, el, attr) {
      twttr.ready(function () {
        twttr.widgets.createFollowButton("OfficialBoltgg", el[0], {
          size: "large",
          lang: $rootScope.user ? $rootScope.user.locale : null
        })
      })
    }
  }
}]).directive("itemThumb", ["$compile", function ($compile) {
  return {
    restrict: "A", scope: {itemThumb: "="}, link: function (scope, el, attr) {
      el.addClass("item_thumb"), scope.$watch("itemThumb", function (src) {
        src && el.css("background-image", "url(https://steamcommunity-a.akamaihd.net/economy/image/" + src + "/250/250)")
      })
    }
  }
}]).directive("steamColor", ["$compile", function ($compile) {
  return {
    restrict: "A", scope: {steamColor: "="}, link: function (scope, el, attr) {
      scope.$watch("steamColor", function (color) {
        if (!color) return el.css("color", "");
        ~color.indexOf("#") || (color = "#" + color), color = prettifySteamColor(color), el.css("color", color)
      })
    }
  }
}]).directive("steamColorBg", ["$compile", function ($compile) {
  return {
    restrict: "A", scope: {steamColorBg: "="}, link: function (scope, el, attr) {
      scope.$watch("steamColorBg", function (color) {
        if (!color) return el.css("background-color", "");
        ~color.indexOf("#") || (color = "#" + color), el.css("background-color", color)
      })
    }
  }
}]).directive("colorGlow", ["$compile", function ($compile) {
  return {
    restrict: "A", scope: {colorGlow: "="}, link: function (scope, el, attr) {
      el.addClass("color_glow"), scope.$watch("colorGlow", function (color) {
        if (color) {
          ~color.indexOf("#") || (color = "#" + color);
          var colorEnd = $.Color(color).alpha(0);
          color = $.Color(color).alpha(.7), el.css("background", "radial-gradient(circle closest-side at center," + color.toRgbaString() + "," + colorEnd.toRgbaString() + ")")
        } else el.css("background", "")
      })
    }
  }
}]).directive("avatar", function () {
  return {
    restrict: "A", scope: {avatar: "="}, link: function (scope, el, attr) {
      el.addClass("avatar"), scope.$watch("avatar", function (src) {
        src && el.css("background-image", "url(" + src + ")")
      })
    }
  }
}).directive("electroCircle", ["$templateCache", "$compile", "$timeout", "$interval", "glob", function ($templateCache, $compile, $timeout, $interval, glob) {
  return {
    restrict: "A", scope: {userColor: "="}, link: function (scope, el, attr) {
      el.addClass("electro_circle");
      var w1 = $("<div class='scale_wrap'></div>"), w2 = $("<div class='rotate_wrap'></div>"),
          template                                     = $templateCache.get("app/partials/electro_circle_wip1.tpl.html");
      if (!template) return warn("electro_circle template not found.");
      var templateEl = $compile(template)(scope);
      el.append(w1), w1.append(w2), w2.append(templateEl);
      var p1 = templateEl.find(".path-1"), p2 = templateEl.find(".path-3");
      p1.css("transform", "rotate(" + glob.randomRange(0, 360) + "deg)"), p2.css("transform", "rotate(" + glob.randomRange(0, 360) + "deg)"), scope.$watch("userColor", function (color) {
        color ? (~color.indexOf("#") || (color = "#" + color), templateEl.find("path").css("stroke", color)) : templateEl.find("path").css("stroke", "")
      })
    }
  }
}]).directive("electroCircles", ["$templateCache", "$compile", "$timeout", "$interval", "glob", function ($templateCache, $compile, $timeout, $interval, glob) {
  return {
    restrict: "A",
    scope:    {
      userColor:       "=",
      upgradeColor:    "=",
      userClasses:     "=",
      upgradeClasses:  "=",
      update:          "=",
      upgrading:       "=",
      skipAnimation:   "=",
      animationHandle: "&"
    },
    link:     function (scope, el, attr) {
      function warn(text) {
        console.warn
      }

      function electro_circle(opts) {
        function loopStep() {
          now       = (new Date).valueOf();
          var delta = (now - prev) / 1e3, inc = spinspeed * delta;
          reversed ? (p1.rot -= inc, p2.rot += inc * (1 / .75), p3.rot -= 2 * inc) : (p1.rot += inc, p2.rot -= inc * (1 / .75), p3.rot += 2 * inc), paths.forEach(function (p) {
            p.css("transform", "rotate(" + p.rot + "deg)")
          }), prev = now, requestAnimationFrame(loopStep)
        }

        var targetEl, target = opts.target, element = opts.element, classNames = opts.classNames,
            reversed                                                           = opts.reversed, circle = element || $("<div/>");
        circle.addClass("electro_circle"), circle.addClass(classNames);
        var w1                                                     = $("<div class='offset_wrap'></div>"), w2 = $("<div class='scale_wrap'></div>"),
            w3 = $("<div class='jsscale_wrap'></div>"), scale_wrap = w3,
            template                                               = $templateCache.get("app/partials/electro_circle_wip1.tpl.html");
        if (!template) return warn("electro_circle template not found.");
        var templateEl = $compile(template)(scope);
        element || el.append(circle), circle.append(w1), w1.append(w2), w2.append(w3), w3.append(templateEl), this.el = circle, this.findTarget = function () {
          if (!opts.notarget) {
            if (targetEl = upgrading && !scope.skipAnimation ? parent.find(".upgrade_middle .anim_holder") : parent.find(target), !targetEl.length) return warn("electro_circle target not found.");
            var subtarget = targetEl.find(".items_preview");
            subtarget.length && (targetEl = subtarget)
          }
        }, this.follow = function () {
          if (!opts.notarget) {
            var posIn = targetEl.position(), offOut = el.offsetParent().offset(),
                offIn                               = targetEl.offsetParent().offset(),
                pos                                 = {left: offIn.left - offOut.left + posIn.left, top: offIn.top - offOut.top + posIn.top},
                w                                   = targetEl.outerWidth(), h = targetEl.outerHeight();
            circle.css("transform", "translate3d(" + (pos.left + w / 2) + "px," + (pos.top + h / 2) + "px,0)")
          }
        }, this.update = function () {
          this.findTarget(), this.follow()
        }, this.changeColor = function (color) {
          color ? (~color.indexOf("#") || (color = "#" + color), circle.find("path").css("stroke", color)) : circle.find("path").css("stroke", "")
        }, this.updateClasses = function (newClasses, oldClasses) {
          oldClasses && $.each(oldClasses, function (key, val) {
            val && circle.removeClass(key)
          }), newClasses && $.each(newClasses, function (key, val) {
            val && circle.addClass(key)
          })
        }, this.update(), $timeout(function () {
          circle.addClass("alive")
        });
        var spinspeed = 18, prev = (new Date).valueOf(), p1 = circle.find(".path-1"), p2 = circle.find(".path-2"),
            p3                                                                           = circle.find(".path-3");
        p1.rot                                                                           = p2.rot = p3.rot = 0;
        var paths = [p1, p2, p3];
        loopStep(), this.startUpgrade = function (cb) {
          function resolveSound() {
            buildup_sound && glob.sounds.spin_buildup.fade(1, 0, 300, buildup_sound), success ? glob.sounds.spin_resolve_success.play() : glob.sounds.spin_resolve_fail.play()
          }

          function animateEnd() {
            this.animateHandle = $(targetState), this.animateHandle.animate(initialState, {
              duration: 2e3,
              step:     function () {
                step(this)
              },
              complete: function () {
                step(initialState), cb && cb()
              }
            })
          }

          function step(obj) {
            spinspeed = obj.speed, scale_wrap.css("transform", "scale3d(" + obj.scale + "," + obj.scale + ",1)");
            var flashState = obj.flashN % 1;
            flashState *= 2, flashState > 1 && (flashState = 2 - flashState), flashState = Math.abs(1 - flashState), fog.css("opacity", flashState)
          }

          var success;
          binding && (success = binding.success);
          var buildup_sound, targetState = {speed: 500, scale: .7, flashN: 0};
          ".upgrade_items_wrapper" == target && (targetState.scale = .65);
          var initialState = {speed: 18, scale: 1, flashN: 5}, fog = parent.find(".controls .fog");
          if (this.animationHandle && this.animationHandle.finish(), this.animateHandle = $($.extend({}, initialState)), scope.skipAnimation) return void(cb && (binding.status = "resolved", resolveSound(), cb()));
          cb && (binding.status = "running", $timeout(function () {
            buildup_sound = glob.sounds.spin_buildup.play()
          }, 2e3)), this.animateHandle.animate(targetState, {
            duration:    6e3, easing: "easeInCubic", step: function () {
              step(this)
            }, complete: function () {
              step(targetState), cb && (binding.status = "resolved", resolveSound(), scope.$apply()), animateEnd()
            }
          })
        }
      }

      function init() {
        el.empty(), passive ? user_circle = new electro_circle({
          element:    el,
          classNames: "user_electro",
          notarget:   !0
        }) : (user_circle = new electro_circle({
          target:     ".user_items_wrapper",
          classNames: "user_electro"
        }), upgrade_circle = new electro_circle({
          target:     ".upgrade_items_wrapper",
          classNames: "upgrade_electro",
          reversed:   !0
        })), circles = [user_circle, upgrade_circle], scope.$watch("userColor", user_circle.changeColor), scope.$watch("userClasses", user_circle.updateClasses), passive || (scope.$watch("upgradeColor", upgrade_circle.changeColor), scope.$watch("upgradeClasses", upgrade_circle.updateClasses), scope.$watch("update", function (upd) {
        }), intervalHandle = $interval(function () {
          upgrading || update()
        }, 500), binding = scope.animationHandle(), binding.start = function (cb) {
          upgrading = !0, update(), user_circle.startUpgrade(), upgrade_circle.startUpgrade(function () {
            var ms = scope.skipAnimation ? 2e3 : 1e3;
            $timeout(function () {
              upgrading = !1, update(), binding.status = null, cb && cb()
            }, ms)
          })
        }, $(window).resize(update))
      }

      function update() {
        $timeout(function () {
          user_circle.update(), upgrade_circle.update()
        })
      }

      var binding, user_circle, upgrade_circle, circles, upgrading, intervalHandle,
          parent = el.parents(".upgrade_visuals"), passive = attr.passive;
      $timeout(init), scope.$on("$destroy", function () {
        $interval.cancel(intervalHandle)
      })
    }
  }
}]).directive("awaitingLoader", function () {
  return {
    link: function (scope, elem, attr) {
      elem.addClass("awaiting");
      var s = $("<div class='spinner'/>"), b1 = $("<div class='double-bounce1'/>"),
          b2                                  = $("<div class='double-bounce2'/>");
      s.append(b1, b2), elem.append(s)
    }
  }
}).directive("ngLoading", ["$templateCache", "$compile", function ($templateCache, $compile) {
  return function (scope, element, attr) {
    var s = $("<div class='spinner'/>"), template = $templateCache.get("app/partials/loader.tpl.html"),
        loaderel_in                               = $compile(template)(scope);
    s.append(loaderel_in), scope.$watch(attr.ngLoading, function (newval) {
      newval ? (element.prepend(s), element.addClass("loading")) : (s.remove(), element.removeClass("loading"))
    })
  }
}]).directive("clickAway", function () {
  return {
    scope: {clickAway: "&"}, link: function (scope, elem, attr) {
      function clickHandler(event) {
        $(elem).has(event.target).length || scope.clickAway(scope)
      }

      $(document).on("click", clickHandler), scope.$on("$destroy", function () {
        $(document).off("click", clickHandler)
      })
    }
  }
}).directive("recaptcha", ["$timeout", function ($timeout) {
  return {
    priority: 10, require: "?ngModel", scope: {recaptchaCb: "&"}, link: function (scope, element, attr, ngModel) {
      if (!grecaptcha || !grecaptcha.render) return void element.text("Recaptcha Error - Please try again.");
      grecaptcha.render(element[0], {
        sitekey: conf.recaptcha_key, theme: "dark", callback: function (res) {
          $timeout(function () {
            ngModel.$setViewValue(res);
            var callback = scope.recaptchaCb();
            callback && callback(res)
          })
        }
      })
    }
  }
}]).directive("snowFlakes", ["$timeout", "glob", function ($timeout, glob) {
  return {
    scope: {particles: "&", active: "="}, link: function (scope, elem, attr) {
      function makeEmitters() {
        for (var points = scope.particles() || 15, i = 0; i < points; i++) new emmitter(glob.randomRange(0, 100), glob.randomRange(0, 100))
      }

      var flakes = ["icon-snowflake1", "icon-snowflake2", "icon-snowflake3"], destroyed = !0;
      if (elem.outerWidth()) {
        var emmitter = function (x, y) {
          var self = this, spawnPeriod = .7 + .7 * Math.random(), spawnIteration = -1, t = 0,
              prevTs                                                                     = (new Date).valueOf();
          this.loop = function () {
            if (!destroyed) {
              var now                   = (new Date).valueOf();
              t += (now - prevTs) / 1e3;
              var currentSpawnIteration = Math.round(t / spawnPeriod);
              currentSpawnIteration > spawnIteration && (self.spawn(glob.randomRange(0, 100), glob.randomRange(0, 100)), spawnIteration = currentSpawnIteration), prevTs = now, destroyed || requestAnimationFrame(self.loop)
            }
          }, this.spawn = function (x, y) {
            function remove() {
              removed || (foffset.remove(), removed = !0)
            }

            var removed = !1, foffset = $("<div class='flake_offset'/>"),
                ficon                 = $("<div class='icon'/>").addClass(flakes[glob.randomRange(0, flakes.length - 1)]);
            elem.append(foffset), foffset.append(ficon), foffset.css({
              left: x + "%",
              top:  y + "%"
            }), ficon.css({opacity: .5 + .5 * Math.random()}), foffset.bind("oanimationend animationend webkitAnimationEnd", function () {
              remove()
            }), $timeout(remove, 2500)
          }, this.loop()
        };
        scope.$watch("active", function (res) {
          destroyed != !res && (res ? (destroyed = !res, makeEmitters()) : destroyed = !res)
        }), scope.$on("$destroy", function () {
          destroyed = !0
        })
      }
    }
  }
}]).directive("focusMe", ["$timeout", function ($timeout) {
  return {
    link: function (scope, element, attr) {
      $timeout(function () {
        element.focus()
      })
    }
  }
}]).directive("glitterShapes", ["$timeout", "glob", function ($timeout, glob) {
  return {
    link: function (scope, element, attr) {
      var shapesParent = element.find("#Group-3"), shapesEls = shapesParent.children(), pauseMs = [0, 500],
          fadeMs                                                                                = [500, 2e3], shapes                                                           = [], shape = function (el) {
            function fade(cb) {
              var dur = glob.randomRange(fadeMs[0], fadeMs[1]);
              el.animate({opacity: 0}, dur).animate({opacity: 1}, {duration: dur, complete: cb})
            }

            function loop() {
              var timeout = glob.randomRange(pauseMs[0], pauseMs[1]);
              fade(function () {
                el.timer = $timeout(loop, timeout)
              })
            }

            el = $(el), loop(), this.destroy = function () {
              el.stop(), $timeout.cancel(el.timer)
            }
          };
      shapesEls.each(function () {
        shapes.push(new shape(this))
      }), scope.$on("$destroy", function () {
        shapes.forEach(function (shp) {
          shp.destroy()
        })
      })
    }
  }
}]).directive("ngRightClick", ["$parse", function ($parse) {
  return function (scope, element, attrs) {
    var fn = $parse(attrs.ngRightClick);
    element.bind("contextmenu", function (event) {
      scope.$apply(function () {
        event.preventDefault(), fn(scope, {$event: event})
      })
    })
  }
}]).directive("countUp", ["$filter", function ($filter) {
  return {
    restrict: "A", require: "ngModel", scope: {ngModel: "="}, link: function (scope, element, attrs) {
      return scope.$parent.$watch(attrs.ngModel, function (newVal, oldVal) {
        var opts;
        if (null != newVal && newVal !== oldVal) return opts = {decimal: "."}, null != attrs.prefix && (opts.prefix = attrs.prefix), null != attrs.suffix && (opts.suffix = attrs.suffix), 0, null != attrs.numDecimals && attrs.numDecimals >= 0 && attrs.numDecimals, null == newVal && (newVal = 0), null == oldVal && (oldVal = 0), new CountUp(attrs.id, Math.floor10(oldVal, -3), Math.floor10(newVal, -3), 3, 1.5, opts).start()
      })
    }
  }
}]).directive("ngEnter", function () {
  return function (scope, element, attrs) {
    element.bind("keydown keypress", function (event) {
      13 === event.which && (scope.$apply(function () {
        scope.$eval(attrs.ngEnter)
      }), event.preventDefault())
    })
  }
}), angular.module("app.filters", []).filter("toList", function () {
  return function (object) {
    return null == object ? [] : Object.keys(object).map(function (key) {
      return object[key]
    })
  }
}).filter("num", ["$filter", function ($filter) {
  return function (input, thousands) {
    return isNaN(input) ? input : thousands ? $filter("number")(Math.floor10(input, -3), 3) : $filter("number")(Math.floor10(1e3 * input, 0))
  }
}]).filter("capitalize", function () {
  return function (input, scope) {
    if (null != input) return capitalize(input)
  }
}).filter("htmlSafe", ["$sce", function ($sce) {
  return function (htmlCode) {
    return htmlCode
  }
}]).filter("itemName", ["glob", function (glob) {
  return function (name, part) {
    return glob.splitName(name, part)
  }
}]), angular.module("app.inventoryService", []).factory("inventoryService", ["$rootScope", "$http", "$q", "glob", function ($rootScope, $http, $q, glob) {
  var serv = (new glob.ansocket($rootScope), {messages: []});
  return serv.getItems = function (cb) {
    $rootScope.user && glob.get("/api2/v1/inventory", {}, function (res) {
      if ($rootScope.inventory = res.inventory, conf.dummy_data && (!$rootScope.inventory || !$rootScope.inventory.length)) {
        $rootScope.inventory = [];
        for (var i = 0; i < 5; i++) $rootScope.inventory = $rootScope.inventory.concat($.extend(!0, [], testItems))
      }
      cb && cb($rootScope.inventory)
    }, function (err) {
      return "auth" == err
    })
  }, serv
}]), angular.module("app", ["ui.router", "ngSanitize", "ngAnimate", "glob", "app.translateService", "pascalprecht.translate", "ui.bootstrap", "app.config", "app.controller", "app.templates", "app.filters", "app.userService", "app.inventoryService", "angucomplete-alt", "angular-growl", "settings.service", "infinite-scroll", "nav", "sidebar", "modals", "chat", "settings", "upgrade", "fair", "history", "mentio", "admin", "rewards", "giveaway", "faq", "affiliate"]), angular.module("app.templates", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("admin/views/admin.tpl.html", '<div class="admin padded_view" ng-if="!hidden">\r\n\t<h2 class="marged">The almighty admin panel</h2>\r\n\t<div class="lead">With great power comes great responsibility</div>\r\n\t\r\n\t\x3c!-- \t<blockquote>\r\n\t\t\t<p class="lead quote" ng-bind-html="quote"></p>\r\n\t</blockquote> --\x3e\r\n\t<div class="pin">\r\n\t\t<label>2fa pin: </label>\r\n\t\t<input type="text" ng-model="admin.pin" placeholder="Enter Your Pin">\r\n\t</div>\r\n\t<div class="tabs">\r\n\t\t<div class="tab" ng-click="changeTab(\'stats\')" ng-class="{\'active\':tab ===\'stats\'}">Stats</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'withdrawals\')" ng-class="{\'active\':tab ===\'withdrawals\'}">Withdrawals</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'offers\')" ng-class="{\'active\':tab ===\'offers\'}">Suspicious</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'affiliates\')" ng-class="{\'active\':tab ===\'affiliates\'}">Top Affiliates</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'blacklist\')" ng-class="{\'active\':tab ===\'blacklist\'}">Blacklisted</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'sell\')" ng-class="{\'active\':tab ===\'sell\'}">Sell</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'status\')" ng-class="{\'active\':tab ===\'status\'}">Bot Status</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'mutes\')" ng-class="{\'active\':tab === \'mutes\'}">Toggle Ban</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'userSearch\')" ng-class="{\'active\':tab === \'userSearch\'}">User Search</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'pricing\')" ng-class="{\'active\':tab === \'pricing\'}">Pricing</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'paintPricing\')" ng-class="{\'active\':tab === \'paintPricing\'}">Paint-wise Pricing</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'trivia\')" ng-class="{\'active\':tab ===\'trivia\'}">Trivia!</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'ref\')" ng-class="{\'active\':tab ===\'ref\'}">Ref</div>\r\n\t\t<div class="tab" ng-click="changeTab(\'promo\')" ng-class="{\'active\':tab ===\'promo\'}">Promo</div>\r\n\t</div>\r\n\t<div class="views">\r\n\t\t<div class="offers" ng-show="tab == \'offers\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Suspicious Offers</h2>\r\n\t\t\t</div>\r\n\t\t\t<p class="lead">Hours ago: {{suspectCurrentHour}} <span ng-click="changeSuspectHour(-1)">Prev</span><span ng-click="changeSuspectHour(1)">Next</span></p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li ng-repeat="offer in suspectOffers | orderBy:\'value\':true">\r\n\t\t\t\t\t<span class="highlight"><b>Timestamp:</b> {{offer.timestamp | date:\'dd-M-yyyy H:mm\'}}</span>\r\n\t\t\t\t\t<span class="highlight"><b>Total Value:</b> {{offer.value | currency}}</span>\r\n\t\t\t\t\t<span class="highlight"><b>Type:</b> {{offer.type}}</span>\r\n\t\t\t\t\t<span><b>BotID:</b> {{offer.botID}}</span>\r\n\t\t\t\t\t<span><b>Bot Username:</b> {{offer.botUsername}}</span>\r\n\t\t\t\t\t<span><b>ID:</b> {{offer.id}}</span>\r\n\t\t\t\t\t<span><b>Status:</b> {{offer.tradeStatus}}</span>\r\n\t\t\t\t\t<span><b>UserID:</b> {{offer.userID}}</span>\r\n\t\t\t\t\t<span><b># of Items: </b> {{offer.items.length}}</span>\r\n\t\t\t\t\t<span class="items">\r\n\t\t\t\t\t\t<div><i ng-repeat="item in offer.items">({{item.market_hash_name}} - <b>{{item.price}}</b>), </i></div>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<div class="withdrawals" ng-show="tab==\'withdrawals\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Withdrawals</h2>\r\n\t\t\t</div>\r\n\t\t\t<p class="lead">Pending for approval</p>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li ng-repeat="offer in withdrawals | orderBy:\'timestamp\':true">\r\n\t\t\t\t\t<span><b>ID:</b> {{offer.id}}</span>\t\r\n\t\t\t\t\t<span><b>Timestamp:</b> {{offer.timestamp | date:\'dd-M-yyyy H:mm\'}}</span>\r\n\t\t\t\t\t<span class="highlight"><b>Total Value:</b> {{offer.value | currency}}</span>\t\t\t\t\t\r\n\t\t\t\t\t<span><b>Bot Username:</b> {{offer.botUsername}}</span>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<span><b>User:</b>  <a ng-href=\'{{offer.user.profileurl}}\' target="_blank">{{offer.user.name}}</a> <b>Steam id:</b> {{offer.user.id}}</span>\r\n\t\t\t\t\t<span><b># of Items: </b> {{offer.items.length}}</span>\r\n\t\t\t\t\t<span class="items">\r\n\t\t\t\t\t\t<div><i ng-repeat="item in offer.items">({{item.market_hash_name}} - <b>{{item.price}}</b>), </i></div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<button class="button blue_button" ng-click="withdrawalAction(offer, true)" ng-loading="glob.acceptPendingWithdrawalInProgress" ng-disabled="glob.acceptPendingWithdrawalInProgress">Approve</button>\r\n\t\t\t\t\t\t<button class="button red_button" ng-click="withdrawalAction(offer, false)" ng-loading="glob.rejectPendingWithdrawalInProgress" ng-disabled="glob.rejectPendingWithdrawalInProgress">Reject</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<div class="affiliates" ng-show="tab==\'affiliates\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Top Affiliates</h2>\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li ng-repeat="aff in affiliates | orderBy:\'lifetimeReferralCredits\':true">\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<span><b>User:</b> <a ng-href=\'{{aff.profileurl}}\' target="_blank">{{aff.name}}</a> <b>Steam id:</b> {{aff.id}}</span>\r\n\t\t\t\t\t<span><b>Referrals amount:</b> {{aff.referralcodeuses}}</span>\r\n\t\t\t\t\t<span><b>Depositors amount:</b> {{aff.referralCodeDeposits}}</span>\r\n\t\t\t\t\t<span><b>Referrals Deposited:</b> {{aff.referralCodeDepositsAmount | currency}}</span>\r\n\t\t\t\t\t<span class="highlight"><b>Referral Credits Earned:</b> {{aff.lifetimeReferralCredits | currency}}</span>\r\n\t\t\t\t\t\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<div class="blacklist" ng-show="tab == \'blacklist\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Blacklisted Words</h2>\r\n\t\t\t</div>\r\n\t\t\t<p class="lead">These are the words/phrases that are blocked in chat!</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li ng-repeat="word in blacklist">\r\n\t\t\t\t\t<span class="remove" ng-click="updateBlacklist(word)">Remove</span> {{word}}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t<div class="stats" ng-show="tab == \'stats\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Items Value Graph <span>(Current {{bankData[0].itemValue | currency}})</span></h2>\r\n\t\t\t</div>\r\n\t\t\t<canvas id="bankroll" style="height: 300px; width: 100%;"></canvas>\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Storage Graph <span>(Current {{bankData[0].storageItemValue | currency}})</span></h2>\r\n\t\t\t</div>\r\n\t\t\t<canvas id="storage" style="height: 300px; width: 100%;"></canvas>\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>New User Bonus\'s</h2>\r\n\t\t\t</div>\r\n\t\t\t<canvas id="signups" style="height: 300px; width: 100%;"></canvas>\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Refunds</h2>\r\n\t\t\t</div>\r\n\t\t\t<canvas id="refunds" style="height: 300px; width: 100%;"></canvas>\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Deposits/Withdrawals</h2>\r\n\t\t\t</div>\r\n\t\t\t<canvas id="depwed" style="height: 300px; width: 100%;"></canvas>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div class="quick" ng-repeat="stat in stats">\r\n\t\t\t\t<h2>{{stat.name}}</h2>\r\n\t\t\t\t<div class="stat" ng-repeat="period in stat.data">\r\n\t\t\t\t\t<div class="number">{{period.val | currency}}</div>\r\n\t\t\t\t\t<div class="label">{{period.name}}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t<div class="available" ng-show="tab == \'sell\'">\r\n\t\t\t<h3>Available Storage: <b>(Current: {{bankData[0].storageItemValue | currency}})</b></h3>\r\n\t\t\t<p class="lead">Double click to add bots to order.</p>\r\n\t\t\t<div class="bots">\r\n\t\t\t\t<div class="bot" ng-dblclick="toggleBot(bot)" ng-if="bot.type == \'storage\'" ng-class="{\'isAdded\':isAdded(bot), \'isWhitelisted\':bot.isWhitelisted}"\r\n\t\t\t\t\tng-disabled="bot.isWhitelisted" ng-repeat="bot in bots | orderBy:\'totalItemValue\':true">\r\n\t\t\t\t\t<div>Tier: <span>{{bot.tier}}</span></div>\r\n\t\t\t\t\t<div>Item Count: <span>{{bot.itemCount}}</span></div>\r\n\t\t\t\t\t<div>Avg Item Value: <span>{{bot.averageItemValue | currency}}</span></div>\r\n\t\t\t\t\t<div>Total Value: <span>{{bot.totalItemValue | currency}}</span></div>\r\n\t\t\t\t\t<div><a target="_blank" href="{{bot.tradeUrl}}">Trade URL</a></div>\r\n\t\t\t\t\t<div ng-click="clearBot(bot.id)"><a>Clear Bot</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="tradeURLs" ng-if="whiteBots.length > 0">\r\n\t\t\t\t<h4>Trade URLs:</h4>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li ng-repeat="bot in whiteBots">{{bot.tradeUrl}}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class="steamIDs">\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>SteamID\'s: (s1,s2,s3)</label>\r\n\t\t\t\t\t<input type="text" ng-model="sell.whiteUsers">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="final">\r\n\t\t\t\t<div class="total">\r\n\t\t\t\t\tTotal: <span>{{orderTotal() | currency}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button class="submit" ng-click="whitelist()">Whitelist</button>\r\n\t\t</div>\r\n\t\t<div class="status" ng-show="tab == \'status\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<div class="active">\r\n\t\t\t\t\t{{getBotData().active}} Active\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="inactive">\r\n\t\t\t\t\t{{getBotData().inactive}} Inactive\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="bots">\r\n\t\t\t\t<div class="server" ng-repeat="server in servers">\r\n\t\t\t\t\t<h4>{{server}}</h4>\r\n\t\t\t\t\t<div class="bot" ng-if="server == bot.server" ng-class="{\'error\':bot.error}" ng-repeat="bot in bots">\r\n\t\t\t\t\t\t<div>Name: <span>{{bot.displayName}}</span></div>\r\n\t\t\t\t\t\t<div>Item Count: <span>{{bot.itemCount}}</span></div>\r\n\t\t\t\t\t\t<div ng-if="bot.error">Error: <span>{{bot.error}}</span></div>\r\n\t\t\t\t\t\t<div class="restart" ng-click="retryBot(bot.id)">\r\n\t\t\t\t\t\t\tRestart Bot\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="mutes" ng-show="tab == \'mutes\'">\r\n\t\t\t<div class="list">\r\n\t\t\t\t<div ng-if="bannedList.length > 0">\r\n\t\t\t\t\t<h3>Banned Users:</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li ng-repeat="user in bannedList | orderBy:\'user.name\':true">\r\n\t\t\t\t\t\t\t{{user.name}} - {{user.steamid}} - <span ng-click="toggleBan(user.id)">Un-Ban</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ng-if="mutedList.length > 0">\r\n\t\t\t\t\t<h3>Muted Users:</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li ng-repeat="user in mutedList | orderBy:\'user.name\':true">\r\n\t\t\t\t\t\t\t{{user.name}} - {{user.steamid}} - <span ng-click="toggleMute(user.id)">Un-Mute</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="userSearch" ng-show="tab == \'userSearch\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<div class="f-group" ng-if="!selectedAlready">\r\n\t\t\t\t\t<label>Search for user</label>\r\n\t\t\t\t\t<angucomplete-alt id="ex1" placeholder="Username.." pause="1000" selected-object="admin.user" remote-url="{{root}}account/searchAccounts?match="\r\n\t\t\t\t\t\tsearch-fields="name" title-field="name" image-field="img" description-field="steamid" minlength="1" input-class="search"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ng-if="admin.user">\r\n\t\t\t\t\t<div class="userTabs" ng-init="userTab = \'info\'">\r\n\t\t\t\t\t\t<div ng-class="{\'active\':userTab == \'info\'}" ng-click="userTab = \'info\'">Info</div>\r\n\t\t\t\t\t\t<div ng-class="{\'active\':userTab == \'trades\'}" ng-click="userTab = \'trades\'">Trade Offers</div>\r\n\t\t\t\t\t\t<div ng-class="{\'active\':userTab == \'trans\'}" ng-click="userTab = \'trans\'">Transactions</div>\r\n\t\t\t\t\t\t<div ng-class="{\'active\':userTab == \'modify\'}" ng-click="userTab = \'modify\'">Modify</div>\r\n\t\t\t\t\t\t<div ng-class="{\'active\':userTab == \'key\'}" ng-click="userTab = \'key\'">key/value</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="info" ng-if="userTab == \'info\'">\r\n\t\t\t\t\t\t<h2>User Info For {{admin.user.originalObject.name}}</h2>\r\n\t\t\t\t\t\t<p>User ID: {{admin.user.originalObject.id}}</p>\r\n\t\t\t\t\t\t<p>IP: {{admin.user.originalObject.ip}}</p>\r\n\t\t\t\t\t\t<p>Joined: {{admin.user.originalObject.joined | date}}</p>\r\n\t\t\t\t\t\t<p>Last Login: {{admin.user.originalObject.lastLogin | date}}</p>\r\n\t\t\t\t\t\t<p>Profile URL: <a href="{{admin.user.originalObject.profileurl}}">{{admin.user.originalObject.profileurl}}</a></p>\r\n\t\t\t\t\t\t<p>Referrals: {{admin.user.originalObject.referralcodeuses | number}}</p>\r\n\t\t\t\t\t\t<p>Steam ID: {{admin.user.originalObject.steamid}}</p>\r\n\t\t\t\t\t\t<p>Trade URL: <a href="{{admin.user.originalObject.tradeUrl}}">{{admin.user.originalObject.tradeUrl}}</a></p>\r\n\t\t\t\t\t\t<p>Credits: {{admin.user.originalObject.credits | number}}</p>\r\n\t\t\t\t\t\t<p># of Bets: {{admin.user.originalObject.totalBets | number}}</p>\r\n\t\t\t\t\t\t<p>Total Winnings: {{admin.user.originalObject.totalWinnings | currency}}</p>\r\n\t\t\t\t\t\t<p># of Deposits: {{admin.user.originalObject.totalDeposits | number}}</p>\r\n\t\t\t\t\t\t<p># of Withdrawals: {{admin.user.originalObject.totalWithdraws | number}}</p>\r\n\t\t\t\t\t\t<p>Reason: {{admin.user.originalObject.reason}}</p>\r\n\t\t\t\t\t\t<p>{{admin.user.originalObject}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div ng-if="userTab == \'modify\'">\r\n\t\t\t\t\t\t<h2>Modify Account For {{admin.user.originalObject.name}}</h2>\r\n\t\t\t\t\t\t<div class="space">\r\n\t\t\t\t\t\t\t<button ng-click="toggleBan(admin.user.originalObject.id)">Toggle Ban</button>\r\n\t\t\t\t\t\t\t<button ng-click="toggleMute(admin.user.originalObject.id)">UnMute</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t\t\t<label># of Bananas</label>\r\n\t\t\t\t\t\t\t<input type="text" ng-model="admin.amount">\r\n\t\t\t\t\t\t\t<button class="green" ng-click="fundAccount()">Fund Account</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div ng-if="userTab == \'key\'">\r\n\t\t\t\t\t\t<h2>Modify Account For {{admin.user.originalObject.name}}</h2>\r\n\t\t\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t\t\t<label>Key/Value</label>\r\n\t\t\t\t\t\t\t<input type="text" ng-model="pair.keyVal">\r\n\t\t\t\t\t\t\t<button class="green" ng-click="updateKey()">Update</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="trans arrayList" ng-if="userTab == \'trades\'">\r\n\t\t\t\t\t\t<h2>Trade Offers For {{admin.user.originalObject.name}}:</h2>\r\n\t\t\t\t\t\t<table border=1>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Time</td>\r\n\t\t\t\t\t\t\t\t<td>Bot</td>\r\n\t\t\t\t\t\t\t\t<td>Status</td>\r\n\t\t\t\t\t\t\t\t<td>type</td>\r\n\t\t\t\t\t\t\t\t<td>Steam ID</td>\r\n\t\t\t\t\t\t\t\t<td>Offer Code</td>\r\n\t\t\t\t\t\t\t\t<td># of items</td>\r\n\t\t\t\t\t\t\t\t<td>Total Value</td>\r\n\t\t\t\t\t\t\t\t<td>Items</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr ng-repeat="trade in userTradesArray | orderBy:\'timestamp\':true">\r\n\t\t\t\t\t\t\t\t<td>{{trade.timestamp | date:\'medium\'}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.botUsername}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.tradeStatus}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.type}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.id}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.offerID}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.items.length}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{trade.value | currency}}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div ng-repeat="item in trade.items">\r\n\t\t\t\t\t\t\t\t\t\t{{ item.market_hash_name }}, {{ item.price }}<br/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="trans arrayList" ng-if="userTab == \'trans\'">\r\n\t\t\t\t\t\t<h2>Transactions For {{admin.user.originalObject.name}}:</h2>\r\n\t\t\t\t\t\t<p>these go back 7 days</p>\r\n\t\t\t\t\t\t<table border=1>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Time</th>\r\n\t\t\t\t\t\t\t\t<th>Amount</th>\r\n\t\t\t\t\t\t\t\t<th>New Balance</th>\r\n\t\t\t\t\t\t\t\t<th>Transaction Type</th>\r\n\t\t\t\t\t\t\t\t<th>Meta Data</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr ng-repeat="tran in userTransArray | orderBy:\'timestamp\':true">\r\n\t\t\t\t\t\t\t\t<td>{{tran.timestamp | date:\'medium\'}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{tran.amount | number}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{tran.balance | number}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{tran.transactionType}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{tran.metadata}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="pricing" ng-show="tab == \'pricing\'">\r\n\t\t\t<div class="quickChange">\r\n\t\t\t\t<h2>Modify Price For Single Item</h2>\r\n\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t<label>Market Hash Name: </label>\r\n\t\t\t\t\t<input type="text" ng-model="pricing.market_hash_name">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>AppId: </label>\r\n\t\t\t\t\t<input type="text" ng-model="pricing.appId">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label># of Bananas: </label>\r\n\t\t\t\t\t<input type="number" ng-model="pricing.amount">\r\n\t\t\t\t\t<div class="btn-group">\r\n\t\t\t\t\t\t<button class="green" ng-click="modifyPrice(pricing.market_hash_name, pricing.amount, pricing.appId)" ng-disabled="pricing.amount.length === 0 || !pricing.amount">Modify Price</button>\r\n\t\t\t\t\t\t<button ng-click="lookupItem(pricing.market_hash_name, pricing.appId)" ng-disabled="pricing.market_hash_name.length === 0 || !pricing.market_hash_name">Lookup Item</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="pricingList" ng-if="pricingInfo == \'lookup\'">\r\n\t\t\t\t<h2>Modify Price For Single Item</h2>\r\n\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t<label>Market Hash Name: </label>\r\n\t\t\t\t\t<input type="text" ng-model="pricing.market_hash_name">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label># of Bananas: </label>\r\n\t\t\t\t\t<input type="number" ng-model="pricing.amount">\r\n\t\t\t\t\t<button class="green" ng-click="modifyPrice(pricing.market_hash_name, pricing.amount)">Modify Price</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{{pricing}}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="paintPricing" ng-show="tab==\'paintPricing\'">\r\n\t\t\t<div class="quick">\r\n\t\t\t\t<h2>Modify price paint-wise</h2>\r\n\t\t\t\t<p>Supply Paint Index or Inspect URL</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form ng-submit="setPaintPricing(name,index,iurl,dep,wit)">\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Market Hash Name</label>\r\n\t\t\t\t\t<input type="text" ng-model="name" required>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Paint Index</label>\r\n\t\t\t\t\t<input type="text" ng-model="index">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Inspect URL</label>\r\n\t\t\t\t\t<input type="text" ng-model="iurl">\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Deposit Price</label>\r\n\t\t\t\t\t<input type="number" ng-model="dep">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Withdraw Price</label>\r\n\t\t\t\t\t<input type="number" ng-model="wit">\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<button type="submit" class="button orange_button" ng-disabled="glob.setCustomPaintIndexPriceInProgress" ng-loading="glob.setCustomPaintIndexPriceInProgress">Override!</button>\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t\t<div class="table_wrap">\r\n\t\t\t    <hr>\r\n\t\t\t    <h4>Current price overrides</h4>\r\n\t\t\t    <table>\r\n\t\t\t      <tr>\r\n\t\t\t        <th>Market hash name</th>\r\n\t\t\t        <th>Paint index</th>          \r\n\t\t\t        <th>Deposit price</th>\r\n\t\t\t        <th>Withdraw price</th>\r\n\t\t\t      </tr>\r\n\t\t\t      <tr ng-repeat="item in paintPricings">\r\n\t\t\t        <td>{{item.market_hash_name}}</td>\r\n\t\t\t        <td>{{item.paintIndex}}</td>\r\n\t\t\t        <td>{{item.depositPrice | currency}}</td>\r\n\t\t\t        <td>\r\n\t\t\t        \t<span>{{item.withdrawPrice | currency}}</span>\r\n\t\t\t        \t<span class="icon icon-x" ng-click="setPaintPricing(item.market_hash_name,item.paintIndex,null,null,true)"></span>\r\n\t\t\t        </td>\t\t\t\t        \t        \r\n\t\t\t      </tr>\r\n\t\t\t    </table>\t\t\t    \r\n\t\t\t   \r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\r\n\t\t<div class="trivia" ng-show="tab == \'trivia\'">\r\n\t\t\t<h2>Start Trivia!</h2>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Question:</label>\r\n\t\t\t\t<input type="text" ng-model="trivia.question">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Category:</label>\r\n\t\t\t\t<input type="text" ng-model="trivia.category">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Answers (ans1,ans2,etc):</label>\r\n\t\t\t\t<input type="text" ng-model="trivia.answersArray">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label># of winnners:</label>\r\n\t\t\t\t<input type="number" ng-model="trivia.numWinners">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Winning Amount:</label>\r\n\t\t\t\t<input type="number" ng-model="trivia.winningAmount">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Delay:</label>\r\n\t\t\t\t<input type="number" ng-model="trivia.delay">\r\n\t\t\t</div>\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>Name Only: <input type="checkbox" ng-model="trivia.nameOnly"></label>\r\n\t\t\t</div>\r\n\t\t\t<button class="submit" ng-click="startTrivia()">Start Trivia</button>\r\n\t\t\t<button class="submit end" ng-click="endTrivia()">End Trivia</button>\r\n\t\t</div>\r\n\t\t<div class="pricing" ng-show="tab == \'ref\'">\r\n\t\t\t<div class="quickChange">\r\n\t\t\t\t<h2>Override user\'s referral code <span>(resets all existing)</span></h2>\r\n\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t<label>UserID (ID or Steam): </label>\r\n\t\t\t\t\t<input type="text" ng-model="ref.userID">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Ref Code: </label>\r\n\t\t\t\t\t<input type="text" ng-model="ref.code">\r\n\t\t\t\t\t<div class="btn-group">\r\n\t\t\t\t\t\t<button class="green" ng-click="overrideRef(ref.userID, ref.code)" ng-disabled="ref.userID.length === 0 || ref.code.length === 0">Override Code</button>\r\n\t\t\t\t\t\t<button ng-click="lookupRef(ref.code)" ng-disabled="ref.code.length === 0">Lookup Code</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<div class="info">\r\n\t\t\t\t\t\t{{ref.result}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="pricing" ng-show="tab == \'promo\'">\r\n\t\t\t<div class="quickChange">\r\n\t\t\t\t<h2>Add promo codes</h2>\r\n\t\t\t\t<div class="space f-group">\r\n\t\t\t\t\t<label>Promo code: </label>\r\n\t\t\t\t\t<input type="text" ng-model="promo.code">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Number of uses:</label>\r\n\t\t\t\t\t<input type="number" ng-model="promo.count">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<label>Reward:</label>\r\n\t\t\t\t\t<input type="number" ng-model="promo.reward">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="btn-group">\r\n\t\t\t\t\t<button ng-click="lookupCodes()">Currently Active</button>\r\n\t\t\t\t\t<button class="green" ng-click="addCode(promo.code, promo.reward, promo.count)" ng-disabled="promo.code.length === 0">Add Code</button>\r\n\t\t\t\t\t<button class="red" ng-click="delCode(promo.code)" ng-disabled="promo.code.length === 0">Delete Code</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="f-group">\r\n\t\t\t\t\t<div class="info" >\r\n\t\t\t\t\t\t<table border=1>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Time</th>\r\n\t\t\t\t\t\t\t\t<th>Code</th>\r\n\t\t\t\t\t\t\t\t<th>Reward</th>\r\n\t\t\t\t\t\t\t\t<th>Count</th>\r\n\t\t\t\t\t\t\t\t<th>Mark Inactive</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr ng-repeat="pro in promo.result | orderBy:\'timeAdded\':true">\r\n\t\t\t\t\t\t\t\t<td>{{pro.timeAdded | date:\'medium\'}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{pro.code}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{pro.reward | number }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{pro.users.length | number }} / {{pro.count | number }}</td>\r\n\t\t\t\t\t\t\t\t<td><a href="#" ng-click="markInactive(pro.code)">X</a></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n'), $templateCache.put("affiliate/views/affiliate.tpl.html", '<div class="affiliateSidebar">\r\n\t\r\n\t<div class="wrap">\r\n\t\t\r\n\r\n\t\t<div class="level_wrap">\r\n\t\t\t\t\t    \r\n\t\t    <svg class="donut_svg" width="160" height="160" xmlns="http://www.w3.org/2000/svg">\r\n\t\t     <g>\t\r\n\t\t     \t      \r\n\t\t      <circle id="circle" class="donut" r="77" cy="80" cx="80" ng-style="{\r\n\t\t      \t\'stroke-dashoffset\': 484 - (484*($root.user.referralcodeuses-$root.user.affiliateInfo.lowerRange)/($root.user.affiliateInfo.upperRange-$root.user.affiliateInfo.lowerRange))\r\n\t\t      }"/>\r\n\t\t     \r\n\t\t     </g>\r\n\t\t    </svg>\r\n\t\t\t\r\n\t\t\t<div class="center_data">\r\n\t\t\t\t<div class="refs">\r\n\t\t\t\t\t<div class="refs_num">\r\n\t\t\t\t\t\t{{$root.user.referralcodeuses || 0}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div ng-bind-html="\'referrals\' | translate | htmlSafe">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div class="commission">\r\n\t\t\t\t\t<div class="comm_num">\r\n\t\t\t\t\t\t<div>{{$root.user.affiliateInfo.betReward*100}}%</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div ng-bind-html="\'referral_commission\' | translate | htmlSafe"></div> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="note f-group">\r\n\t\t\t<any ng-bind-html="\'referral_only_added\' | translate | htmlSafe"></any>\r\n\t\t</div>\r\n\t\t\r\n\t\t\x3c!-- <hr> --\x3e\r\n\t\t<div class="next_level f-group">\t\t\t\r\n\t\t\t<label><any ng-bind-html="\'referral_next_level\' | translate | htmlSafe"></any>:</label>\r\n\t\t\t<div>\r\n\t\t\t\t{{$root.user.affiliateInfo.upperRange}} {{\'referrals\' | translate | lowercase}}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{{$root.user.affiliateInfo.nextLevelbetReward*100}}% {{\'referral_commission\' | translate | lowercase}}\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\r\n\t\t\r\n\t\t<form name="ref_code_form" ng-submit="update(ref_code_form)">\r\n\t\t\t<div class="f-group">\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<any ng-bind-html="\'referral_url\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t<span ng-bind-html="\'referral_change_url\' | translate | htmlSafe"></span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<textarea type="text" class="disabled" ng-model="reflink" onClick="this.setSelectionRange(0, this.value.length)" readonly></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div  class="f-group">\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<any ng-bind-html="\'referral_change_code\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t<span ng-bind-html="\'referral_save_copy\' | translate | htmlSafe"></span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div class="subm_input_wrapper">\r\n\t\t\t\t\t<input type="text" ng-model="referralcode" required/>\r\n\t\t\t\t\t<button type="submit" ng-disabled="ref_code_form.$pristine || codeUpdate">\r\n\t\t\t\t\t\t<div awaiting-loader ng-if="codeUpdate"></div>\r\n\t\t\t\t\t\t<div ng-if="!codeUpdate">\r\n\t\t\t\t\t\t\t<div class="bg"></div>\r\n\t\t\t\t\t\t\t<span class="icon icon-chmark"></span>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\t\t\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t\r\n\r\n\t\t<div class="ref_credits f-group">\r\n\t\t\t<div class="stat">\r\n\t\t\t\t<span><any ng-bind-html="\'referral_balance\' | translate | htmlSafe"></any>:</span>\r\n\t\t\t\t<span>{{$root.user.referralCredits || 0 | num:$root.user.thousands}}</span> \r\n\t\t\t\t<span class="icon-bananas_active"></span>\r\n\t\t\t</div>\r\n\t\t\t<button class="button orange_button" ng-click="redeemAffiliate()" ng-disabled="redeemInProg || !$root.user.referralCredits" ng-loading="redeemInProg">\r\n\t\t\t\t<span><any ng-bind-html="\'referral_claim\' | translate | htmlSafe"></any> {{$root.user.referralCredits || 0 | num:$root.user.thousands}}</span> \r\n\t\t\t\t<span class="icon-bananas"></span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t\x3c!-- <div class="f-group">\r\n\t\t\t<button class="submit" ng-click="update();">Change Code</button>\r\n\t\t</div> --\x3e\r\n\r\n\t\t<hr>\r\n\r\n\t\t<form name="af_code_form" ng-if="!$root.user.referrerID" class="f-group" ng-submit="$parent.save();">\r\n\r\n\t\t\t<h2 ng-bind-html="\'referral_become\' | translate | htmlSafe"></h2>\r\n\r\n\t\t\t<p ng-if="!$root.user.referrerID" ng-bind-html="\'referral_become_expl\' | translate | htmlSafe"></p>\r\n\r\n\t\t\t<label ng-bind-html="\'referral_input_code\' | translate | htmlSafe"></label>\r\n\t\t\t<div class="subm_input_wrapper">\r\n\t\t\t\t<input type="text" ng-model="$parent.affiliateCode" required/>\r\n\t\t\t\t<button type="submit" ng-disabled="af_code_form.$pristine || !$parent.affiliateCode">\t\t\t\r\n\t\t\t\t\t<div awaiting-loader ng-if="referralSave"></div>\r\n\t\t\t\t\t<div ng-if="!referralSave">\r\n\t\t\t\t\t\t<div class="bg"></div>\r\n\t\t\t\t\t\t<span class="icon icon-chmark"></span>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</button>\r\n\t\t\t</div>\t\t\r\n\t\t</form>\r\n\t\t\x3c!-- <div ng-if="!$root.user.referrerID" class="f-group">\r\n\t\t\t<button class="submit" ng-click="$parent.save();">Update Affiliate</button>\r\n\t\t</div> --\x3e\r\n\t</div>\r\n\t\r\n\t\r\n\t\r\n\t\r\n</div>'),
    $templateCache.put("app/partials/deposit-payments-shapes.tpl.html", '<?xml version="1.0" encoding="UTF-8"?>\r\n<svg width="350px" height="167px" viewBox="0 0 350 167" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\r\n    \x3c!-- Generator: Sketch 48.2 (47327) - http://www.bohemiancoding.com/sketch --\x3e\r\n    <title>Group 3</title>\r\n    <desc>Created with Sketch.</desc>\r\n    <defs></defs>\r\n    <g id="Giftcards-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate(-725.000000, -510.000000)" opacity="0.248131793">\r\n        <g id="Group-4" transform="translate(345.000000, 327.000000)" fill="#2042D0">\r\n            <g id="Group-12" transform="translate(380.000000, 90.000000)">\r\n                <g>\r\n                    <g id="Group-3" transform="translate(-16.000000, 89.000000)">\r\n                        <rect id="Rectangle-10" transform="translate(71.500000, 67.000000) rotate(-8.000000) translate(-71.500000, -67.000000) " x="43" y="48" width="57" height="38" rx="3"></rect>\r\n                        <rect id="Rectangle-10" transform="translate(288.083966, 183.155944) rotate(28.000000) translate(-288.083966, -183.155944) " x="259.583966" y="164.155944" width="57" height="38" rx="3"></rect>\r\n                        <rect id="Rectangle-10" transform="translate(356.083966, 62.000000) rotate(7.000000) translate(-356.083966, -62.000000) " x="327.583966" y="43" width="57" height="38" rx="3"></rect>\r\n                        <rect id="Rectangle-10" transform="translate(162.759015, 75.942860) rotate(28.000000) translate(-162.759015, -75.942860) " x="149.581795" y="67.1580466" width="26.3544405" height="17.569627" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy-3" transform="translate(15.759015, 13.942860) rotate(28.000000) translate(-15.759015, -13.942860) " x="2.58179477" y="5.15804661" width="26.3544405" height="17.569627" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy-2" transform="translate(195.169869, 26.253605) rotate(-17.000000) translate(-195.169869, -26.253605) " x="181.992649" y="17.4687918" width="26.3544405" height="17.569627" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy-5" x="177.992649" y="156.468792" width="26.3544405" height="17.569627" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy-4" transform="translate(25.169869, 165.253605) rotate(-17.000000) translate(-25.169869, -165.253605) " x="11.992649" y="156.468792" width="26.3544405" height="17.569627" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy" transform="translate(276.745777, 46.037669) rotate(-17.000000) translate(-276.745777, -46.037669) " x="257.499546" y="33.2068483" width="38.4924618" height="25.6616412" rx="3"></rect>\r\n                        <rect id="Rectangle-10-Copy" transform="translate(102.156631, 170.897228) rotate(-17.000000) translate(-102.156631, -170.897228) " x="82.9104001" y="158.066408" width="38.4924618" height="25.6616412" rx="3"></rect>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </g>\r\n</svg>'), $templateCache.put("app/partials/electro_circle.tpl.html", '<?xml version="1.0" encoding="UTF-8"?>\r\n<svg width="197.99" height="193.01" version="1.1" viewBox="0 0 197.98758 193.00653" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\r\n <metadata>\r\n  <rdf:RDF>\r\n   <cc:Work rdf:about="">\r\n    <dc:format>image/svg+xml</dc:format>\r\n    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>\r\n    <dc:title>electro-circle</dc:title>\r\n   </cc:Work>\r\n  </rdf:RDF>\r\n </metadata>\r\n\r\n \r\n <g transform="translate(-37.998 -38.998)" fill="none" stroke-width="2">\r\n  \r\n  <path class="path-3" d="m134.5 228.98c26.295 0 57.576-2.4599 74.707-19.791 16.871-17.067 19.793-48.807 19.793-74.7 0-21.655-2.5591-50.465-14.812-66.4-17.276-22.468-49.154-28.091-79.688-28.091-27.172 0-55.808 3.0922-73.047 21.451-15.873 16.903-21.453 48.024-21.453 73.04 0 28.671 6.2695 64.011 26.433 81.34 16.538 14.213 44.549 13.151 68.067 13.151z" stroke="#fff"/>  \r\n  <path class="path-2" d="m133.5 224.98c25.46 0 55.748-2.3818 72.336-19.162 16.335-16.526 19.164-47.258 19.164-72.329 0-20.967-2.4779-48.863-14.342-64.292-16.727-21.754-47.593-27.199-77.158-27.199-26.31 0-54.037 2.994-70.728 20.77-15.369 16.367-20.772 46.5-20.772 70.722 0 27.761 6.0705 61.979 25.594 78.758 16.013 13.762 43.135 12.733 65.906 12.733z" stroke="#fe9c00"/>\r\n  <g class="path-1">\r\n    <path  d="m133.16 230.53c25.19 0 64.103-3.8322 80.921-19.892 17.672-16.875 12.618-46.622 12.618-72.872 0-23.599 16.99-47.069 2.3548-63.44-17.136-19.17-68.03-29.324-95.893-29.324-27.573 0-65.923 0.88535-83.043 19.708-14.956 16.443-10.496 49.168-10.496 73.056 0 24.63 5.7779 62.6 21.57 79.209 17.056 17.939 45.145 13.555 71.969 13.555z" stroke="#c600e6"/>\r\n  </g>\r\n  \r\n </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/electro_circle_wip.tpl.html", '<?xml version="1.0" encoding="UTF-8"?>\r\n<svg width="354.83" height="354.83" version="1.1" viewBox="0 0 354.83302 354.8195" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\r\n <metadata>\r\n  <rdf:RDF>\r\n   <cc:Work rdf:about="">\r\n    <dc:format>image/svg+xml</dc:format>\r\n    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>\r\n    <dc:title/>\r\n   </cc:Work>\r\n  </rdf:RDF>\r\n </metadata>\r\n <defs>\r\n  <filter id="filter4975" x="-.12" y="-.12" width="1.24" height="1.24" color-interpolation-filters="sRGB">\r\n   <feGaussianBlur stdDeviation="9.4499984"/>\r\n  </filter>\r\n </defs>\r\n <g transform="translate(47.786 57.606)" fill="none" stroke="#fff" stroke-width="2">\r\n  <path class="path path-1" d="m125.8 212.34c25.19 0 64.103-3.8322 80.921-19.892 17.672-16.875 12.618-46.622 12.618-72.872 0-23.599 16.99-47.069 2.3548-63.44-17.136-19.17-68.03-29.324-95.893-29.324-27.573 0-65.923 0.88535-83.043 19.708-14.956 16.443-10.496 49.168-10.496 73.056 0 24.63 5.7779 62.6 21.57 79.209 17.056 17.939 45.145 13.555 71.969 13.555z"/>\r\n  <g class="path path-2">\r\n    <path d="m129.63 214.29c26.295 0 57.576-2.4599 74.707-19.791 16.871-17.067 19.793-48.807 19.793-74.7 0-21.655-2.5591-50.465-14.812-66.4-17.276-22.468-49.154-28.091-79.688-28.091-27.172 0-55.808 3.0922-73.047 21.451-15.873 16.903-21.453 48.024-21.453 73.04 0 28.671 6.2695 64.011 26.433 81.34 16.538 14.213 44.549 13.151 68.067 13.151z"/>\r\n    <path d="m129.63 214.29c26.295 0 57.576-2.4599 74.707-19.791 16.871-17.067 19.793-48.807 19.793-74.7 0-21.655-2.5591-50.465-14.812-66.4-17.276-22.468-49.154-28.091-79.688-28.091-27.172 0-55.808 3.0922-73.047 21.451-15.873 16.903-21.453 48.024-21.453 73.04 0 28.671 6.2695 64.011 26.433 81.34 16.538 14.213 44.549 13.151 68.067 13.151z" filter="url(#filter4975)"/>\r\n  </g>\r\n  <path class="path path-3" d="m129.63 211.29c25.46 0 55.748-2.3818 72.336-19.162 16.335-16.526 19.164-47.258 19.164-72.329 0-20.967-2.4779-48.863-14.342-64.292-16.727-21.754-47.593-27.199-77.158-27.199-26.31 0-54.037 2.994-70.728 20.77-15.369 16.367-20.772 46.5-20.772 70.722 0 27.761 6.0705 61.979 25.594 78.758 16.013 13.762 43.135 12.733 65.906 12.733z"/>\r\n </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/electro_circle_wip1.tpl.html", '<?xml version="1.0" encoding="UTF-8"?>\r\n<svg width="354.83" height="354.83" version="1.1" viewBox="0 0 354.83302 354.8195" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\r\n <metadata>\r\n  <rdf:RDF>\r\n   <cc:Work rdf:about="">\r\n    <dc:format>image/svg+xml</dc:format>\r\n    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>\r\n    <dc:title/>\r\n   </cc:Work>\r\n  </rdf:RDF>\r\n </metadata>\r\n <defs>\r\n  <filter id="filter4975" x="-.12" y="-.12" width="1.24" height="1.24" color-interpolation-filters="sRGB">\r\n   <feGaussianBlur stdDeviation="9.4499984"/>\r\n  </filter>\r\n </defs>\r\n <path class="path path-1" d="m173.59 269.95c25.19 0 64.103-3.8322 80.921-19.892 17.672-16.875 12.618-46.622 12.618-72.872 0-23.599 16.99-47.069 2.3548-63.44-17.136-19.17-68.03-29.324-95.893-29.324-27.573 0-65.923 0.88535-83.043 19.708-14.956 16.443-10.496 49.168-10.496 73.056 0 24.63 5.7779 62.6 21.57 79.209 17.056 17.939 45.145 13.555 71.969 13.555z" fill="none" stroke="#fff" stroke-width="2"/>\r\n <g class="path path-2" fill="none" stroke="#fff" stroke-width="2">\r\n  <path d="m177.42 271.9c26.295 0 57.576-2.4599 74.707-19.791 16.871-17.067 19.793-48.807 19.793-74.7 0-21.655-2.5591-50.465-14.812-66.4-17.276-22.468-49.154-28.091-79.688-28.091-27.172 0-55.808 3.0922-73.047 21.451-15.873 16.903-21.453 48.024-21.453 73.04 0 28.671 6.2695 64.011 26.433 81.34 16.538 14.213 44.549 13.151 68.067 13.151z"/>\r\n  <path class="blured_path" d="m177.42 271.9c26.295 0 57.576-2.4599 74.707-19.791 16.871-17.067 19.793-48.807 19.793-74.7 0-21.655-2.5591-50.465-14.812-66.4-17.276-22.468-49.154-28.091-79.688-28.091-27.172 0-55.808 3.0922-73.047 21.451-15.873 16.903-21.453 48.024-21.453 73.04 0 28.671 6.2695 64.011 26.433 81.34 16.538 14.213 44.549 13.151 68.067 13.151z" filter="url(#filter4975)"/>\r\n </g>\r\n <path class="path path-3" d="m177.42 268.9c25.46 0 55.748-2.3818 72.336-19.162 16.335-16.526 19.164-47.258 19.164-72.329 0-20.967-2.4779-48.863-14.342-64.292-16.727-21.754-47.593-27.199-77.158-27.199-26.31 0-54.037 2.994-70.728 20.77-15.369 16.367-20.772 46.5-20.772 70.722 0 27.761 6.0705 61.979 25.594 78.758 16.013 13.762 43.135 12.733 65.906 12.733z" fill="none" stroke="#fff" stroke-width="2"/>\r\n</svg>\r\n'), $templateCache.put("app/partials/gift-1.tpl.html", '<svg xmlns="http://www.w3.org/2000/svg" width="93" height="99" viewBox="0 0 93 99">\r\n  <g fill="none" fill-rule="evenodd" transform="translate(0 20)">\r\n    <g transform="translate(6 31)">\r\n      <path fill="#524350" d="M4,0 L77,0 L77,0 C79.209139,-4.05812251e-16 81,1.790861 81,4 L81,48 L0,48 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 Z"/>\r\n      <rect width="81" height="5" y="4" fill="#483946" class="gift_shadow"/>\r\n      <path fill="#483946" d="M40.5,16 L40.5,16 L40.5,16 C42.4329966,16 44,17.5670034 44,19.5 L44,48 L37,48 L37,32 L37,19.5 L37,19.5 C37,17.5670034 38.5670034,16 40.5,16 Z"/>\r\n      <path fill="#483946" d="M61.5 16L61.5 16 61.5 16C63.4329966 16 65 17.5670034 65 19.5L65 48 58 48 58 32 58 19.5 58 19.5C58 17.5670034 59.5670034 16 61.5 16zM19.5 16L19.5 16 19.5 16C21.4329966 16 23 17.5670034 23 19.5L23 48 16 48 16 32 16 19.5 16 19.5C16 17.5670034 17.5670034 16 19.5 16z" opacity=".5"/>\r\n    </g>\r\n    <g class="gift_cap">\r\n      <g transform="translate(20)">\r\n        <rect width="16" height="9" x="11.839" y="4.339" stroke="#C55556" stroke-width="2" rx="4.5" transform="rotate(45 19.839 8.839)"/>\r\n        <rect width="16" height="9" x="24.839" y="4.339" stroke="#C55556" stroke-width="2" rx="4.5" transform="scale(-1 1) rotate(45 0 -70.441)"/>\r\n        <rect width="24" height="8" y="10" fill="#A34F50" rx="4"/>\r\n        <rect width="24" height="8" x="29" y="10" fill="#A34F50" rx="4"/>\r\n        <circle cx="26.5" cy="14.5" r="7.5" fill="#C55556"/>\r\n      </g>\r\n      <rect width="93" height="19" y="16" fill="#675A65" rx="4"/>\r\n    </g>\r\n    \r\n  </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/gift-2.tpl.html", '<svg xmlns="http://www.w3.org/2000/svg" width="93" height="99" viewBox="0 0 93 99">\r\n  <g fill="none" fill-rule="evenodd" transform="translate(0 20)">\r\n    <g transform="translate(6 31)">\r\n      <path fill="#524350" d="M4,0 L77,0 L77,0 C79.209139,7.44262609e-15 81,1.790861 81,4 L81,48 L0,48 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 Z"/>\r\n      <rect width="81" height="5" y="4" fill="#483946" class="gift_shadow"/>\r\n      <path fill="#483946" d="M57.0354444,48 C57.2780593,46.3038529 58.736764,45 60.5,45 C62.263236,45 63.7219407,46.3038529 63.9645556,48 L57.0354444,48 Z M37.0354444,48 C37.2780593,46.3038529 38.736764,45 40.5,45 C42.263236,45 43.7219407,46.3038529 43.9645556,48 L37.0354444,48 Z M17.0354444,48 C17.2780593,46.3038529 18.736764,45 20.5,45 C22.263236,45 23.7219407,46.3038529 23.9645556,48 L17.0354444,48 Z M10.5,22 C8.56700338,22 7,20.4329966 7,18.5 C7,16.5670034 8.56700338,15 10.5,15 C12.4329966,15 14,16.5670034 14,18.5 C14,20.4329966 12.4329966,22 10.5,22 Z M20.5,32 C18.5670034,32 17,30.4329966 17,28.5 C17,26.5670034 18.5670034,25 20.5,25 C22.4329966,25 24,26.5670034 24,28.5 C24,30.4329966 22.4329966,32 20.5,32 Z M30.5,22 C28.5670034,22 27,20.4329966 27,18.5 C27,16.5670034 28.5670034,15 30.5,15 C32.4329966,15 34,16.5670034 34,18.5 C34,20.4329966 32.4329966,22 30.5,22 Z M40.5,32 C38.5670034,32 37,30.4329966 37,28.5 C37,26.5670034 38.5670034,25 40.5,25 C42.4329966,25 44,26.5670034 44,28.5 C44,30.4329966 42.4329966,32 40.5,32 Z M50.5,22 C48.5670034,22 47,20.4329966 47,18.5 C47,16.5670034 48.5670034,15 50.5,15 C52.4329966,15 54,16.5670034 54,18.5 C54,20.4329966 52.4329966,22 50.5,22 Z M60.5,32 C58.5670034,32 57,30.4329966 57,28.5 C57,26.5670034 58.5670034,25 60.5,25 C62.4329966,25 64,26.5670034 64,28.5 C64,30.4329966 62.4329966,32 60.5,32 Z M70.5,22 C68.5670034,22 67,20.4329966 67,18.5 C67,16.5670034 68.5670034,15 70.5,15 C72.4329966,15 74,16.5670034 74,18.5 C74,20.4329966 72.4329966,22 70.5,22 Z M10.5,42 C8.56700338,42 7,40.4329966 7,38.5 C7,36.5670034 8.56700338,35 10.5,35 C12.4329966,35 14,36.5670034 14,38.5 C14,40.4329966 12.4329966,42 10.5,42 Z M30.5,42 C28.5670034,42 27,40.4329966 27,38.5 C27,36.5670034 28.5670034,35 30.5,35 C32.4329966,35 34,36.5670034 34,38.5 C34,40.4329966 32.4329966,42 30.5,42 Z M50.5,42 C48.5670034,42 47,40.4329966 47,38.5 C47,36.5670034 48.5670034,35 50.5,35 C52.4329966,35 54,36.5670034 54,38.5 C54,40.4329966 52.4329966,42 50.5,42 Z M70.5,42 C68.5670034,42 67,40.4329966 67,38.5 C67,36.5670034 68.5670034,35 70.5,35 C72.4329966,35 74,36.5670034 74,38.5 C74,40.4329966 72.4329966,42 70.5,42 Z"/>\r\n    </g>\r\n    <g class="gift_cap">\r\n      <g transform="translate(20)">\r\n        <rect width="16" height="9" x="11.839" y="4.339" stroke="#FFB24E" stroke-width="2" rx="4.5" transform="rotate(45 19.839 8.839)"/>\r\n        <rect width="16" height="9" x="24.839" y="4.339" stroke="#FFB24E" stroke-width="2" rx="4.5" transform="scale(-1 1) rotate(45 0 -70.441)"/>\r\n        <rect width="24" height="8" y="10" fill="#B98D53" rx="4"/>\r\n        <rect width="24" height="8" x="29" y="10" fill="#B98D53" rx="4"/>\r\n        <circle cx="26.5" cy="14.5" r="7.5" fill="#FFB24E"/>\r\n      </g>\r\n      <rect width="93" height="19" y="16" fill="#675A65" rx="4"/>\r\n    </g>\r\n    \r\n  </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/gift-3.tpl.html", '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="93" height="99" viewBox="0 0 93 99">\r\n  <defs>\r\n    <path id="gift-3-a" d="M4,0 L77,0 L77,0 C79.209139,-4.05812251e-16 81,1.790861 81,4 L81,48 L0,48 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 Z"/>\r\n  </defs>\r\n  <g fill="none" fill-rule="evenodd" transform="translate(0 20)">\r\n\r\n    <g transform="translate(6 31)">\r\n      <mask id="gift-3-b" fill="#fff">\r\n        <use xlink:href="#gift-3-a"/>\r\n      </mask>\r\n      <use fill="#524350" xlink:href="#gift-3-a"/>\r\n      <path fill="#483946" fill-rule="nonzero" d="M9.25101051,6.66971431 C10.2273212,5.69340358 11.8102337,5.69340358 12.7865444,6.66971431 C13.7628551,7.64602504 13.7628551,9.22893748 12.7865444,10.2052482 L0.435627122,22.5561655 C-0.540683608,23.5324762 -2.12359605,23.5324762 -3.09990678,22.5561655 C-4.07621751,21.5798548 -4.07621751,19.9969423 -3.09990678,19.0206316 L9.25101051,6.66971431 Z M68.4356271,52.5561655 C67.4593164,53.5324762 65.8764039,53.5324762 64.9000932,52.5561655 C63.9237825,51.5798548 63.9237825,49.9969423 64.9000932,49.0206316 L81.882807,32.0379178 C82.8591177,31.0616071 84.4420302,31.0616071 85.4183409,32.0379178 C86.3946516,33.0142286 86.3946516,34.597141 85.4183409,35.5734517 L68.4356271,52.5561655 Z M23.2510105,6.66971431 C24.2273212,5.69340358 25.8102337,5.69340358 26.7865444,6.66971431 C27.7628551,7.64602504 27.7628551,9.22893748 26.7865444,10.2052482 L-7.58135964,44.5731523 C-8.55767037,45.549463 -10.1405828,45.549463 -11.1168935,44.5731523 C-12.0932043,43.5968415 -12.0932043,42.0139291 -11.1168935,41.0376184 L23.2510105,6.66971431 Z M86.2510105,13.6697143 C87.2273212,12.6934036 88.8102337,12.6934036 89.7865444,13.6697143 C90.7628551,14.646025 90.7628551,16.2289375 89.7865444,17.2052482 L55.4186404,51.5731523 C54.4423296,52.549463 52.8594172,52.549463 51.8831065,51.5731523 C50.9067957,50.5968415 50.9067957,49.0139291 51.8831065,48.0376184 L86.2510105,13.6697143 Z M37.2510105,6.66971431 C38.2273212,5.69340358 39.8102337,5.69340358 40.7865444,6.66971431 C41.7628551,7.64602504 41.7628551,9.22893748 40.7865444,10.2052482 L-2.56048181,53.5522744 C-3.53679254,54.5285852 -5.11970499,54.5285852 -6.09601572,53.5522744 C-7.07232645,52.5759637 -7.07232645,50.9930513 -6.09601572,50.0167405 L37.2510105,6.66971431 Z M51.2510105,6.66971431 C52.2273212,5.69340358 53.8102337,5.69340358 54.7865444,6.66971431 C55.7628551,7.64602504 55.7628551,9.22893748 54.7865444,10.2052482 L11.4395182,53.5522744 C10.4632075,54.5285852 8.88029501,54.5285852 7.90398428,53.5522744 C6.92767355,52.5759637 6.92767355,50.9930513 7.90398428,50.0167405 L51.2510105,6.66971431 Z M65.2510105,6.66971431 C66.2273212,5.69340358 67.8102337,5.69340358 68.7865444,6.66971431 C69.7628551,7.64602504 69.7628551,9.22893748 68.7865444,10.2052482 L25.4395182,53.5522744 C24.4632075,54.5285852 22.880295,54.5285852 21.9039843,53.5522744 C20.9276736,52.5759637 20.9276736,50.9930513 21.9039843,50.0167405 L65.2510105,6.66971431 Z M79.2510105,6.66971431 C80.2273212,5.69340358 81.8102337,5.69340358 82.7865444,6.66971431 C83.7628551,7.64602504 83.7628551,9.22893748 82.7865444,10.2052482 L39.4395182,53.5522744 C38.4632075,54.5285852 36.880295,54.5285852 35.9039843,53.5522744 C34.9276736,52.5759637 34.9276736,50.9930513 35.9039843,50.0167405 L79.2510105,6.66971431 Z" mask="url(#gift-3-b)"/>\r\n      <rect width="81" height="5" y="4" fill="#483946" mask="url(#gift-3-b)" class="gift_shadow"/>\r\n    </g>\r\n\r\n    <g class="gift_cap">\r\n      <g transform="translate(20)">\r\n        <rect width="16" height="9" x="11.839" y="4.339" stroke="#ABA0AA" stroke-width="2" rx="4.5" transform="rotate(45 19.839 8.839)"/>\r\n        <rect width="16" height="9" x="24.839" y="4.339" stroke="#ABA0AA" stroke-width="2" rx="4.5" transform="scale(-1 1) rotate(45 0 -70.441)"/>\r\n        <rect width="24" height="8" y="10" fill="#877E86" rx="4"/>\r\n        <rect width="24" height="8" x="29" y="10" fill="#877E86" rx="4"/>\r\n        <circle cx="26.5" cy="14.5" r="7.5" fill="#ABA0AA"/>\r\n      </g>\r\n      <rect width="93" height="19" y="16" fill="#675A65" rx="4"/>\r\n    </g>\r\n    \r\n  </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/gift-4.tpl.html", '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="93" height="99" viewBox="0 0 93 99">\r\n  <defs>\r\n    <path id="gift-4-a" d="M4,0 L77,0 L77,0 C79.209139,-4.05812251e-16 81,1.790861 81,4 L81,48 L0,48 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 Z"/>\r\n  </defs>\r\n  <g fill="none" fill-rule="evenodd" transform="translate(0 20)">\r\n    <g transform="translate(6 31)">\r\n      <mask id="gift-4-b" fill="#fff">\r\n        <use xlink:href="#gift-4-a"/>\r\n      </mask>\r\n      <use fill="#524350" xlink:href="#gift-4-a"/>\r\n      <path fill="#483946" fill-rule="nonzero" d="M40.5,83 C20.8938914,83 5,67.1061086 5,47.5 C5,27.8938914 20.8938914,12 40.5,12 C60.1061086,12 76,27.8938914 76,47.5 C76,67.1061086 60.1061086,83 40.5,83 Z M40.5,79 C57.8969696,79 72,64.8969696 72,47.5 C72,30.1030304 57.8969696,16 40.5,16 C23.1030304,16 9,30.1030304 9,47.5 C9,64.8969696 23.1030304,79 40.5,79 Z M40.5,75 C25.3121694,75 13,62.6878306 13,47.5 C13,32.3121694 25.3121694,20 40.5,20 C55.6878306,20 68,32.3121694 68,47.5 C68,62.6878306 55.6878306,75 40.5,75 Z M40.5,71 C53.4786916,71 64,60.4786916 64,47.5 C64,34.5213084 53.4786916,24 40.5,24 C27.5213084,24 17,34.5213084 17,47.5 C17,60.4786916 27.5213084,71 40.5,71 Z M40.5,67 C29.7304474,67 21,58.2695526 21,47.5 C21,36.7304474 29.7304474,28 40.5,28 C51.2695526,28 60,36.7304474 60,47.5 C60,58.2695526 51.2695526,67 40.5,67 Z M40.5,63 C49.0604136,63 56,56.0604136 56,47.5 C56,38.9395864 49.0604136,32 40.5,32 C31.9395864,32 25,38.9395864 25,47.5 C25,56.0604136 31.9395864,63 40.5,63 Z M40.5,59 C34.1487254,59 29,53.8512746 29,47.5 C29,41.1487254 34.1487254,36 40.5,36 C46.8512746,36 52,41.1487254 52,47.5 C52,53.8512746 46.8512746,59 40.5,59 Z M40.5,55 C44.6421356,55 48,51.6421356 48,47.5 C48,43.3578644 44.6421356,40 40.5,40 C36.3578644,40 33,43.3578644 33,47.5 C33,51.6421356 36.3578644,55 40.5,55 Z M40.5,51 C38.5670034,51 37,49.4329966 37,47.5 C37,45.5670034 38.5670034,44 40.5,44 C42.4329966,44 44,45.5670034 44,47.5 C44,49.4329966 42.4329966,51 40.5,51 Z" mask="url(#gift-4-b)"/>\r\n      <rect width="81" height="5" y="4" fill="#483946" mask="url(#gift-4-b)" class="gift_shadow"/>\r\n    </g>\r\n    <g class="gift_cap">\r\n      <g transform="translate(20)">\r\n        <rect width="16" height="9" x="11.839" y="4.339" stroke="#5A9EBF" stroke-width="2" rx="4.5" transform="rotate(45 19.839 8.839)"/>\r\n        <rect width="16" height="9" x="24.839" y="4.339" stroke="#5A9EBF" stroke-width="2" rx="4.5" transform="scale(-1 1) rotate(45 0 -70.441)"/>\r\n        <rect width="24" height="8" y="10" fill="#4C86A2" rx="4"/>\r\n        <rect width="24" height="8" x="29" y="10" fill="#4C86A2" rx="4"/>\r\n        <circle cx="26.5" cy="14.5" r="7.5" fill="#5A9EBF"/>\r\n      </g>\r\n      <rect width="93" height="19" y="16" fill="#675A65" rx="4"/>\r\n    </g>\r\n  </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/gift-5.tpl.html", '<svg xmlns="http://www.w3.org/2000/svg" width="93" height="99" viewBox="0 0 93 99">\r\n  <g fill="none" fill-rule="evenodd" transform="translate(0 20)">\r\n    <g transform="translate(6 31)">\r\n      <path fill="#524350" d="M4,0 L77,0 L77,0 C79.209139,-4.05812251e-16 81,1.790861 81,4 L81,48 L0,48 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 Z"/>\r\n      <rect width="81" height="5" y="4" fill="#483946" class="gift_shadow"/>\r\n      <polygon fill="#483946" points="32 32.571 37.714 32.571 32 44 48 23.429 42.286 23.429 48 12"/>\r\n    </g>\r\n    <g class="gift_cap">\r\n      <g transform="translate(20)">\r\n        <rect width="16" height="9" x="11.839" y="4.339" stroke="#60BD9A" stroke-width="2" rx="4.5" transform="rotate(45 19.839 8.839)"/>\r\n        <rect width="16" height="9" x="24.839" y="4.339" stroke="#60BD9A" stroke-width="2" rx="4.5" transform="scale(-1 1) rotate(45 0 -70.441)"/>\r\n        <rect width="24" height="8" y="10" fill="#4C9C7E" rx="4"/>\r\n        <rect width="24" height="8" x="29" y="10" fill="#4C9C7E" rx="4"/>\r\n        <circle cx="26.5" cy="14.5" r="7.5" fill="#60BD9A"/>\r\n      </g>\r\n      <rect width="93" height="19" y="16" fill="#675A65" rx="4"/>\r\n    </g>\r\n    \r\n  </g>\r\n</svg>\r\n'), $templateCache.put("app/partials/loader.tpl.html", '<div class="l_circle l_left"></div>\r\n<div class="l_circle l_center"></div>\r\n<div class="l_circle l_right"></div>'), $templateCache.put("app/partials/menu.tpl.html", '\r\n\t<li ui-sref="app.home" ui-sref-active="active" class="main_li">\r\n\t\t<span ng-bind-html="\'nav_home\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\t\r\n\r\n\t<li ng-click="$root.openDepositType()" class="main_li">\r\n\t\t<span ng-bind-html="\'nav_deposit\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\r\n\t<li ng-click="$root.openInventory(\'inventory\')" class="main_li">\r\n\t\t<span ng-bind-html="\'nav_withdraw\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\r\n\t<li ui-sref="app.fair" ui-sref-active="active" class="main_li">\r\n\t\t<span ng-bind-html="\'nav_fair\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\r\n\t\r\n\r\n\t<li ui-sref="app.history" ui-sref-active="active" class="secondary_li">\r\n\t\t<span ng-bind-html="\'nav_history\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\t\r\n\t\r\n\t<li ui-sref="app.faq" ui-sref-active="active"  class="main_li">\r\n\t\t<span ng-bind-html="\'nav_support\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li>\r\n\r\n\t\x3c!-- <li ui-sref="app.giveaway" ui-sref-active="active" class="main_li giveaway">\r\n\t\t<span>\r\n\t\t\tMarch Madness\r\n\t\t</span>\r\n\t</li> --\x3e\r\n\r\n\t\x3c!-- <li ui-sref="app.affiliate" ui-sref-active="active"  class="main_li">\r\n\t\t<span ng-bind-html="\'nav_affiliate\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\r\n\t</li> --\x3e\r\n\r\n\t<li ng-click="$root.openTradeURL()" class="secondary_li">\r\n\t\t<span ng-bind-html="\'sidebar_settings\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\t\t\r\n\t</li>\r\n\r\n\t<li ng-click="$root.logout()" class="secondary_li">\r\n\t\t<span ng-bind-html="\'nav_logout\' | translate | htmlSafe">\r\n\t\t\t\r\n\t\t</span>\t\t\r\n\t</li>\r\n'), $templateCache.put("app/partials/recent_upgrades.tpl.html", '\x3c!--///////////////////HISTORY/RECENT UPGRADES///////////////////////////////--\x3e\r\n\x3c!-- <div class="history_wrapper header_padded"> --\x3e\r\n\t<div class="head"><span>{{\'upg_recent\' | translate}}</span></div>\r\n\t\r\n\t<div class="entries">\r\n\t\t<div ng-repeat="upg in upgradeHistory | orderBy:\'timestamp\':true | limitTo:20" class="upgrade_entry angular-animate">\r\n\t\t\t\r\n\t\t\t<div class="user">\r\n\t\t\t\t<span avatar="upg.user.avatar"></span>\r\n\t\t\t\t<span class="name">{{::upg.user.displayName}}</span>\t\t\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="inline_data">\t\t\t\t\r\n\r\n\r\n\t\t\t\t<div class="left">\r\n\r\n\t\t\t\t\t<span class="price">${{$root.itemsValue(upg.from) | number:2}}</span>\r\n\r\n\t\t\t\t\t<div class="items_preview" ng-class="{manyItems:upg.from.length > 1}">\r\n\t\t\t\t\t\t\x3c!-- <span class="wear" title="{{$root.splitName(upg.from[0]).wear}}" ng-if="upg.from.length==1"> {{$root.splitName(upg.from[0]).short_wear}}</span> --\x3e\r\n\r\n\t\t\t\t\t\t<div class="item"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tng-repeat="item in upg.from | limitTo:(upg.from.length <= 4 ? 4 : 3)" \r\n\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="item" ng-if="upg.from.length > 4" >\r\n\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t<span>+{{upg.from.length-3}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="names" >\r\n\t\t\t\t\t\t<span ng-if="upg.from.length == 1">\r\n\t\t\t\t\t\t\t<div class="first">{{::upg.from[0].market_hash_name | itemName:\'fname\'}}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span class="last" steam-color="upg.from[0].name_color">{{::upg.from[0].market_hash_name | itemName:\'lname\'}}</span>\r\n\t\t\t\t\t\t\t\t<span class="wear" title="{{$root.splitName(upg.from[0]).wear}}"> {{$root.splitName(upg.from[0]).short_wear}}</span>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="items_amount" ng-if="upg.from.length > 1">\r\n\t\t\t\t\t\t\t<div class="first" steam-color="upg.from[0].name_color">\r\n\t\t\t\t\t\t\t\t<any translate="items_amount" translate-value-amount="{{upg.from.length}}"></any>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class="underline" steam-color-bg="upg.from[0].name_color"></div>\r\n\r\n\r\n\t\t\t\t</div>\t\r\n\r\n\t\t\t\t<div class="icon-upgrade_arrow"></div>\r\n\r\n\t\t\t\t<div class="right">\r\n\r\n\t\t\t\t\t<span class="price">${{$root.itemsValue(upg.to) | number:2}}</span>\r\n\r\n\t\t\t\t\t<div class="items_preview" ng-class="{manyItems:upg.to.length > 1}">\r\n\t\t\t\t\t\t\x3c!-- <span class="wear" title="{{$root.splitName(upg.to[0]).wear}}" ng-if="upg.to.length==1"> {{$root.splitName(upg.to[0]).short_wear}}</span>\r\n--\x3e\r\n\t\t\t\t\t\t<div class="item"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tng-repeat="item in upg.to | limitTo:(upg.to.length <= 4 ? 4 : 3)" \r\n\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="item" ng-if="upg.to.length > 4" >\r\n\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t<span>+{{upg.to.length-3}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="names" >\r\n\t\t\t\t\t\t<span ng-if="upg.to.length == 1">\r\n\t\t\t\t\t\t\t<div class="first">{{::upg.to[0].market_hash_name | itemName:\'fname\'}}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span class="last" steam-color="upg.to[0].name_color">{{::upg.to[0].market_hash_name | itemName:\'lname\'}}</span>\r\n\t\t\t\t\t\t\t\t<span class="wear" title="{{$root.splitName(upg.to[0]).wear}}"> {{$root.splitName(upg.to[0]).short_wear}}</span>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="items_amount" ng-if="upg.to.length > 1">\r\n\t\t\t\t\t\t\t<div class="first" steam-color="upg.to[0].name_color">\r\n\t\t\t\t\t\t\t\t<any translate="items_amount" translate-value-amount="{{upg.to.length}}"></any>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\t\t\r\n\r\n\t\t\t\t\t<div class="underline" steam-color-bg="upg.to[0].name_color"></div>\t\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n\x3c!-- </div> --\x3e\r\n\x3c!--//////////////////////////////////////////////////////////////////////////--\x3e'),
    $templateCache.put("app/views/app.tpl.html", '\x3c!-- <div ng-if="isIE" class="ie">\r\n\t<img src="img/logo.png" alt="">\r\n\t<span ng-bind-html="\'translate\' | translate | htmlSafe"></span>\r\n</div> --\x3e\r\n\r\n<div id="styles_state_mark"></div>\r\n\r\n<navbar></navbar>\r\n\r\n<div class="icon icon-spiderweb web_tl"></div>\r\n<div class="icon icon-spiderweb web_br"></div>\r\n\r\n<div class="main">\r\n\t\r\n\t<div class="icon icon-ga_bg" ng-if="$root.theme==\'xmas\'"></div>\r\n\t\r\n\t<div class="content">\t\t\r\n\t\t<div class="snow_bg" snow-particles ng-if="$root.theme==\'xmas\'"></div>\r\n\r\n\t\t<div class="chat_hider" ng-click="$root.sidebarView = ($root.sidebarView == \'none\' ? \'chat\':\'none\')">\r\n\t\t    <div class="icon icon-chat_bubble">\r\n\t\t    \t<div class="icon icon-arrow_right_blue"></div>\r\n\t\t    </div>\r\n\t\t    <div class="subtle_hider">\r\n\t\t    \t<div class="icon icon-arrow_right_blue"></div>\r\n\t\t    </div>\r\n\t\t    \r\n\t\t   \r\n\t\t    \x3c!-- <div class="icon icon-x when_shown"></div> --\x3e\r\n\t\t</div>\r\n\r\n\t\t<div class="uiv angular-animate noButton" ng-class="{\'noButton\':$root.sys.onlineUsers < 400,\'jukeboxOpen\': $root.jukeboxPlaying}" ui-view></div>\t\t\r\n\r\n\t\t\r\n\t\t\x3c!-- <div class="level_up_pop angular-animate" ng-if="$root.levelUp">\r\n\t\t\t<div class="icon-x" ng-click="$root.claimLevels();$root.levelUp=null"></div>\r\n\t\t\t<div class="top">\r\n\t\t\t\t<div class="level"><span>{{levelUp.level}}</span></div>\r\n\t\t\t\t<div class="text">\r\n\t\t\t\t\t<div class="up" ng-bind-html="\'level_up\' | translate | htmlSafe"></div>\r\n\t\t\t\t\t<div ng-bind-html="\'level_up_grats\' | translate | htmlSafe"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr>\r\n\r\n\t\t\t<div ng-bind-html="\'level_up_here_bananas\' | translate | htmlSafe"></div>\r\n\t\t\t<div class="bottom">\r\n\t\t\t\t<button ng-click="$root.claimLevels()" class="button orange_button" ng-disabled="glob.claimLevelsInProgress" ng-loading="glob.claimLevelsInProgress" ng-bind-html="\'claim_free_bananas\' | translate | htmlSafe"></button>\r\n\t\t\t</div>\t\t\t\r\n\t\t</div> --\x3e\r\n\r\n\r\n\r\n\r\n\t  \x3c!-- <footer></footer> --\x3e\r\n\t</div>\r\n\r\n\t<div class="recent_upgrades header_padded" ng-include="\'app/partials/recent_upgrades.tpl.html\'" ng-controller="recentUpgrades.controller" ng-if="$state.current.withRecentUpgrades">\r\n\t\t\r\n\t</div>\r\n\r\n\t\x3c!-- <jukebox></jukebox> --\x3e\x3c!--Jukebox now inside footer--\x3e\r\n\r\n\t\r\n</div>\r\n\r\n\x3c!-- <div class="sidebar_unfold" ng-if="$root.sidebarView == \'none\'" ng-click="glob.toggleSidebar(\'chat\')">\r\n\t<div class="icon icon-arrow_right"></div>\r\n</div> --\x3e\r\n\r\n\r\n\r\n\r\n<sidebar ng-show="$root.sidebarView != \'none\'" class="angular-animate"></sidebar>\r\n\r\n<div class="mobile_menu angular-animate" ng-if="$root.mobile_menu_expanded" ng-click="$root.mobile_menu_expanded=false">\r\n\t<ul ng-include="\'app/partials/menu.tpl.html\'">\r\n\t\t\t\t\t\r\n\t</ul>\r\n</div>\r\n\r\n<modals></modals>\r\n\r\n<div class="loading_screen angular-animate" ng-if="apploading">\r\n\t<div class="icon icon-logo"></div>\r\n\t<div class="spinner" ng-include="\'app/partials/loader.tpl.html\'"></div>\r\n</div>\r\n\r\n<div growl></div>\r\n<div growl reference="1" limit-messages="3" class="gameUpdate"></div>\r\n\x3c!-- <sign-in></sign-in>\r\n --\x3e'), $templateCache.put("chat/views/chat.tpl.html", '<div class="chat">\r\n  <div class="chat_hider" ng-click="$root.sidebarView = ($root.sidebarView == \'none\' ? \'chat\':\'none\')">\r\n      <div class="icon icon-chat_bubble">\r\n        <div class="icon icon-arrow_right_blue"></div>\r\n      </div>     \r\n      \r\n     \r\n      \x3c!-- <div class="icon icon-x when_shown"></div> --\x3e\r\n  </div>\r\n  \r\n  \x3c!--\r\n    If there is scrolling or hovering going on, show this overlay\r\n  --\x3e\r\n\t<div class="paused" ng-if="scrolled && hover"><span><any ng-bind-html="\'chat_paused\' | translate | htmlSafe"></any></span></div>\r\n  \r\n  \x3c!--\r\n    Display the messages\r\n  --\x3e\r\n\t<div class="messages">\r\n    \r\n    \x3c!--\r\n      For each message...\r\n    --\x3e\r\n    \r\n\t\t<div class="message angular-animate"\r\n         id="{{msg.timestamp}}"\r\n         ng-hide="msg.deleted || msg.action==\'remove\'"\r\n         ng-right-click="mainMenu(msg.userId, msg.id, msg.steamId, msg.avatar, msg.username, msg)"         \r\n         ng-repeat="msg in messages | orderBy:\'timestamp\':false | limitTo: -30"\r\n         ng-class="{\'announce\':msg.announcement, \'mod\':msg.mod, \'whisper\':msg.whisper, \'system\':msg.system, \'reward\':msg.type==\'reward\'}">\r\n      \r\n      <div class="wrap" ng-if="msg.type !== \'reward\'">  \r\n\r\n        <div class="top_part">        \r\n          <div class="left_side">\r\n            <img class="avatar" ng-src="{{msg.avatar}}" alt="">\r\n          </div>\r\n\r\n          <div class="right_side">\r\n            \r\n            <div class="message_header">\r\n              <div class="name_n_badges">\r\n                <a class="youtube" href="{{msg.youtube}}" target="_blank" ng-if="msg.youtube">\r\n                  <i class="fa fa-youtube-play" aria-hidden="true"></i>\r\n                </a>\r\n                \r\n                <span class="level" ng-if="msg.role && msg.role != \'user\'">\r\n                  {{msg.role}}\r\n                </span>\r\n                <span class="username">{{msg.username}}</span>\r\n                \r\n              </div>\r\n              \r\n\r\n              <div class="timestamp">\r\n                {{$root.displayTimeLocaleAware(msg.timestamp)}}\r\n              </div>\r\n            </div>\r\n            \r\n\r\n            <div class="text" ng-bind-html="msg.message"></div>\r\n            \r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <div class="wrap giveaway" ng-if="msg.type == \'reward\'">\r\n\r\n        <div class="top_part">\r\n          <div class="left_side">\r\n            <img class="avatar" ng-src="{{msg.createdBy.avatar}}" alt="">\r\n          </div>\r\n          <div class="right_side">\r\n            <div class="message_header">\r\n              <div class="name_n_badges">\r\n                <span class="topic">{{msg.topic}}</span><br>\r\n                <span class="name">{{msg.createdBy.username || msg.createdBy.name}}</span>                \r\n              </div>\r\n              <div class="timestamp">\r\n                {{$root.displayTimeLocaleAware(msg.timestamp)}}\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div class="bottom_part">\r\n\r\n          <div class="text_won">\r\n            <img class="avatar tiny" ng-src="{{msg.recipient.avatar}}" alt="">\r\n            <span class="name">{{msg.recipient.username || msg.recipient.name}}</span>\r\n            <span class="topic">{{msg.recipient.topic}}</span>\r\n            \r\n            \r\n            \r\n\r\n           \x3c!--  <span ng-if="msg.items.length <= 1" \r\n              translate="chat_giveaway_won_singular" \r\n              translate-value-item="{{msg.items[0].market_hash_name | itemName:\'fname\'}}"\r\n              translate-value-winner="{{msg.recipient.username || msg.recipient.name}}"\r\n              translate-value-price="{{$root.itemsValue(msg.items) | number:2}}"></span>\r\n\r\n            <span ng-if="msg.items.length > 1" \r\n              translate="chat_giveaway_won_plural" \r\n              translate-value-amount="{{msg.items.length}}"\r\n              translate-value-winner="{{msg.recipient.username || msg.recipient.name}}"\r\n              translate-value-price="{{$root.itemsValue(msg.items) | number:2}}"></span> --\x3e\r\n\r\n          </div>\r\n\r\n          <div class="items_won">\r\n              <div class="price">${{$root.itemsValue(msg.items) | number:2}}</div>\r\n\r\n              <div class="items_preview" ng-class="{manyItems:msg.items.length > 1}">\r\n                <div color-glow="msg.items[0].name_color"></div>\r\n\r\n                <div class="item"           \r\n                  ng-repeat="item in msg.items | limitTo:(msg.items.length <= 6 ? 6 : 5) | orderBy: \'price\':true" \r\n                  title="{{item.market_hash_name}} | {{item.price}}" >              \r\n                  <div item-thumb="item.icon_url" class="item_thumb"></div>\r\n                  \r\n                </div>\r\n\r\n                <div class="item" ng-if="msg.items.length > 6" >\r\n                  <div class="and_more">\r\n                    <span>+{{msg.items.length-5}}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n              </div>\r\n\r\n              <div class="names" >\r\n                <div ng-if="msg.items.length == 1">\r\n                  <div class="first">{{::msg.items[0].market_hash_name | itemName:\'fname\'}}</div>\r\n                  <div>\r\n                    <span class="last" steam-color="msg.items[0].name_color">{{::msg.items[0].market_hash_name | itemName:\'lname\'}}</span>\r\n                  </div>  \r\n                  \r\n                </div>\r\n                <div class="items_amount" ng-if="msg.items.length > 1">\r\n                  <div class="last" steam-color="msg.items[0].name_color">\r\n                    <any translate="items_amount" translate-value-amount="{{msg.items.length}}"></any>\r\n                  </div>                  \r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n      </div>\r\n      \r\n\t\t\t\r\n      \r\n      \x3c!--\r\n        Text can be applied special classes for special messages!\r\n        How special.\r\n      --\x3e\r\n\t\t\t\r\n\t\t\t\r\n      \x3c!--\r\n        Que hora es?\r\n      --\x3e\r\n      \r\n\t\t</div>\r\n\t</div>\r\n  \r\n  \x3c!--\r\n    Send the message...\r\n  --\x3e   \r\n\t<div class="send">\r\n    <div class="input_wrapper" ng-if="$root.sys.socket.services.chat">\r\n      <textarea maxlength="250" id="chatTextarea" ng-enter="sendMessage();" type="text" mentio="" mentio-select="getPeopleText(item)" mentio-typed-text="typedTerm" mentio-items="names | filter:label:typedTerm" class="dropup textarea" ng-model="chat.message" autocomplete="off" ng-attr-placeholder="{{\'chat_textarea\' | translate}}"></textarea>\r\n\r\n      <button ng-click="sendMessage();" class="button white_button">\r\n        <any translate="chat_send"></any>\r\n      </button>\r\n\r\n    </div>\r\n\r\n    <div class="input_wrapper disabled" ng-if="!$root.sys.socket.services.chat">\r\n      <any translate="chat_disabled"></any>\r\n    </div>\t\r\n\r\n\t</div>\r\n  \r\n  \x3c!--\r\n    Room select\r\n  --\x3e\r\n\t<div class="extras">\r\n\t\t\r\n    \x3c!-- <span class="online_counter" ng-if="$root.system.onlineUsers">\r\n     \r\n          <span class="online_bulb"></span>\r\n          <span ng-bind-html="\'nav_online\' | translate | htmlSafe"></span>\r\n          <span class="num">{{$root.system.onlineUsers}}</span>               \r\n       \r\n    </span> --\x3e\r\n\t\t<span class="rules" ng-click="$root.openRules()" ng-bind-html="\'chat_rules\' | translate | htmlSafe"></span>\r\n\r\n    <span class="social">\r\n      <a class="icon-tw_small" target="_blank" href="https://twitter.com/OfficialBoltgg"></a>\r\n\r\n      <a class="icon-discord_small" target="_blank" href="https://discord.gg/EMFHm5A"></a>\r\n\r\n      \x3c!-- <a class="icon-instagram_small" target="_blank" href="https://instagram.com/boltgg"></a> --\x3e\r\n\r\n      <a class="icon-yt_small" target="_blank" href="https://goo.gl/BiQFjs"></a>\r\n\r\n      <a class="icon-fb_small" target="_blank" href="https://www.facebook.com/boltggofficial/"></a>\r\n      \r\n    </span>\r\n    \r\n    \r\n    \r\n    <span class="tos" ng-click="$root.openTOS()" ng-bind-html="\'nav_tos\' | translate | htmlSafe"></span>\r\n\t</div>\r\n</div>'), $templateCache.put("fair/views/fair.tpl.html", '<div class="fair_view text_view padded_view">\t\r\n\t\r\n\t<div class="wrap">\r\n\t\t<h1><any translate="fair_title"></any></h1>\r\n\t\t<div class="text_block">\r\n\t\t\t<h2><any translate="fair_block1_titlea"></any></h2>\r\n\t\t\t<p><any translate="fair_block1_texta"></any></p>\r\n\t\t</div>\r\n\t\t<div class="text_block">\r\n\t\t\t<h2><any translate="fair_block2_titlea"></any></h2>\r\n\t\t\t<p><any translate="fair_block2_textc"></any></p>\r\n\t\t</div>\r\n\t\t<div class="text_block">\r\n\t\t\t<h2><any translate="fair_block3_titlea"></any></h2>\r\n\t\t\t<p><any translate="fair_block3_textd"></any></p>\r\n\t\t</div>\r\n\t\t<div class="text_block">\r\n\t\t\t<h2><any translate="fair_block4_titlea"></any></h2>\r\n\t\t\t<p><any translate="fair_block4_texta"></any></p>\r\n\t\t\t<div class="code_block">\r\nvar crypto = require("crypto");\r\n\r\n//YOUR PROVABLY FAIR DATA GOES BELOW - DO NOT REMOVE THE QUOTES///\r\nvar serverSeed          = "PASTE YOUR SD HERE";\r\nvar clientSeed          = "";\r\nvar hash        \t\t= "PASTE YOUR HASH HERE";\r\nvar salt                = "PASTE YOUR SALT HERE";\r\n///////////////////////////////////////\r\n\r\n \r\nfunction printResolvedNumbers(hash){\r\n  var resolvedNumber = parseInt(hash.substr(-6), 16);\r\n  console.log("Resolved number is: " + resolvedNumber);\r\n  var number100 = Math.ceil(resolvedNumber / 167772.15 * 100) / 100;\r\n  console.log("Resolved number in a range between 0 and 100, is: " + number100);\r\n}\r\n \r\nfunction verify(provablyFair, salt, clientSeed, serverSeed) {  \r\n\r\n  if (!clientSeed) console.log("---No Client Seed was set, using v1 provably fair verification algorithm.---")\r\n  else console.log("---Client Seed entered, using v2 provably fair verification algorithm---")  \r\n  \r\n  if (clientSeed) {    \r\n    console.log("Client seed entered: " + clientSeed);\r\n  }    \r\n  console.log("Hash entered: " + provablyFair);\r\n  console.log("Salt entered: " + salt);\r\n  console.log("Server seed entered: " + serverSeed);  \r\n\r\n  console.log("-------------------------------------------");   \r\n  var hasher = crypto.createHash(\'sha256\');\r\n  hasher.update(salt + serverSeed);\r\n  var hashedProvablyFair = hasher.digest(\'hex\');\r\n  console.log(\'Hash resulting from sha256(salt+ "" + server seed): \' + hashedProvablyFair);\r\n  console.log("Server seed proven to be valid: " + (hashedProvablyFair === provablyFair) );\r\n  console.log("-------------------------------------------");   \r\n\r\n  if (clientSeed) {\r\n    var hashing = crypto.createHash(\'sha256\');\r\n    hashing.update(clientSeed + serverSeed);\r\n    var rollHash = hashing.digest(\'hex\');\r\n    printResolvedNumbers(rollHash)\r\n  } else {\r\n    printResolvedNumbers(serverSeed);\r\n  }  \r\n  \r\n} \r\n\r\nverify(hash, salt, clientSeed, serverSeed);\r\n\t\t\t</div>\r\n\r\n\t\t\t<p class="par"><any translate="fair_block4_p1b"></any></p>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t\r\n\t</div>\r\n\t\r\n\t\r\n</div>\r\n\r\n'), $templateCache.put("faq/views/faq.tpl.html", '<div class="faq_view padded_view">\r\n\t<div class="wrap">\r\n\t\t<h1 ng-bind-html="\'faq_title\' | translate | htmlSafe"></h1>\r\n\t\t\x3c!-- <p class="lead" ng-bind-html="\'faq_lead\' | translate | htmlSafe"></p> --\x3e\r\n\r\n\t\t<div class="tabs" ng-init="tab=\'Upgrading\'">\r\n\t\t\t<div class="tabs_wrap">\r\n\t\t\t\t\x3c!-- <div class="tab" ng-click="tab=\'Common\'; toggleQuestion(question)" ng-class="{\'active\':tab==\'Common\'}">\t\r\n\t\t\t\t\t<any ng-bind-html="\'faq_common\' | translate | htmlSafe"></any>\r\n\t\t\t\t</div> --\x3e\r\n\t\t\t\t<div class="tab" ng-click="tab=\'Deposits\'; toggleQuestion(question)" ng-class="{\'active\':tab==\'Deposits\'}">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_deposits\' | translate | htmlSafe"></any>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="tab" ng-click="tab=\'Withdrawals\'; toggleQuestion(question)" ng-class="{\'active\':tab==\'Withdrawals\'}">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_withdrawals\' | translate | htmlSafe"></any>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="tab" ng-click="tab=\'Upgrading\'; toggleQuestion(question)" ng-class="{\'active\':tab==\'Upgrading\'}">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_upgrading\' | translate | htmlSafe"></any>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="tab" ng-click="tab=\'Other\'; toggleQuestion(question)" ng-class="{\'active\':tab==\'Other\'}">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_other\' | translate | htmlSafe"></any>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t\x3c!-- <div class="body" ng-if="tab==\'Common\'">\r\n\t\t\t<div class="group" ng-class="{\'active\':question==1}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_common_q1\' | translate | htmlSafe" ng-click="toggleQuestion(1)"></div>\r\n\t\t\t\t<div class="answer" ng-if="$root.user.reason">{{$root.user.reason}}</div>\r\n\t\t\t\t<div class="answer" ng-if="!$root.user.reason" ng-bind-html="\'faq_common_q1_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==2}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_deposits_q2\' | translate | htmlSafe" ng-click="toggleQuestion(2)"></div>\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_deposits_q2_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t<span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==3}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_common_q3\' | translate | htmlSafe" ng-click="toggleQuestion(3)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_common_q3_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==4}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_upgrading_q2\' | translate | htmlSafe" ng-click="toggleQuestion(4)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_upgrading_q2_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==5}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q5\' | translate | htmlSafe" ng-click="toggleQuestion(5)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_others_q5_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div> --\x3e\r\n\r\n\t\t<div class="body" ng-if="tab==\'Deposits\'">\r\n\t\t\t<div class="group" ng-class="{\'active\':question==1}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_deposits_q1\' | translate | htmlSafe" ng-click="toggleQuestion(1)"></div>\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_deposits_q1_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==2}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_deposits_q2\' | translate | htmlSafe" ng-click="toggleQuestion(2)"></div>\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_deposits_q2_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="body" ng-if="tab==\'Withdrawals\'">\r\n\t\t\t<div class="group" ng-class="{\'active\':question==1}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_withdrawals_q1\' | translate | htmlSafe" ng-click="toggleQuestion(1)"></div>\r\n\t\t\t\t\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_withdrawals_q1_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==2}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_withdrawals_q2\' | translate | htmlSafe" ng-click="toggleQuestion(2)"></div>\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_withdrawals_q2_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="body" ng-if="tab==\'Upgrading\'">\r\n\t\t\t<div class="group" ng-class="{\'active\':question==1}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_upgrading_q1\' | translate | htmlSafe" ng-click="toggleQuestion(1)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_upgrading_q1_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==2}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_upgrading_q2\' | translate | htmlSafe" ng-click="toggleQuestion(2)"></div>\r\n\t\t\t\t<div class="answer">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_upgrading_q2_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==3}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_upgrading_q3\' | translate | htmlSafe" ng-click="toggleQuestion(3)"></div>\r\n\t\t\t\t\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_upgrading_q3_answer\' | translate | htmlSafe"></any>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==4}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_upgrading_q4\' | translate | htmlSafe" ng-click="toggleQuestion(4)"></div>\r\n\t\t\t\t\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_upgrading_q4_answer\' | translate | htmlSafe"></any>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="body" ng-if="tab==\'Other\'">\r\n\t\t\t<div class="group" ng-class="{\'active\':question==12}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q12\' | translate | htmlSafe" ng-click="toggleQuestion(12)"></div>\r\n\t\t\t\t\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_others_q12_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==1}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q1\' | translate | htmlSafe" ng-click="toggleQuestion(1)"></div>\r\n\t\t\t\t\r\n\t\t\t\t<div class="answer" >\r\n\t\t\t\t\t<any ng-bind-html="\'faq_others_q1_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==2}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q2\' | translate | htmlSafe" ng-click="toggleQuestion(2)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_others_q2_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==3}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q3\' | translate | htmlSafe" ng-click="toggleQuestion(3)"></div>\r\n\t\t\t\t<div class="answer">\r\n\t\t\t\t\t<any ng-bind-html="\'faq_others_q3_answer\' | translate | htmlSafe"></any>\r\n\t\t\t\t\t\x3c!-- <span ng-click="$root.openSupport()" ng-bind-html="\'faq_support_form\' | translate | htmlSafe"></span> --\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="group" ng-class="{\'active\':question==4}">\r\n\t\t\t\t<div class="question" ng-bind-html="\'faq_others_q4\' | translate | htmlSafe" ng-click="toggleQuestion(4)"></div>\r\n\t\t\t\t<div class="answer" ng-bind-html="\'faq_others_q4_answer\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\r\n</div>'),
    $templateCache.put("gaterms/views/gaterms.tpl.html", '<div class="text_view padded_view gaterms_view">\r\n\t<div class="wrap">\r\n\t\t<h1>Bolt.GG Giveaway Terms & Conditions</h1>\r\n\t\t \r\n\t\t<div class="text_block">\r\n\t\t\tNO PURCHASE NECESSARY TO ENTER OR WIN. MAKING A PURCHASE OR PAYMENT OF ANY KIND WILL NOT INCREASE YOUR CHANCES OF WINNING.\r\n\t\t</div>\r\n\r\n\t\t<h2>Promotion description</h2>\r\n\r\n\t\t<div class="text_block">\r\n\t\t\tBolt.GG often conducts giveaways ("Sweepstakes") offering virtual items on the Steam Platform.\r\n\t\t\t \r\n\t\t\t   The sponsor of this Sweepstakes is Bolt.GG ("Sponsor"). By participating in the Sweepstakes, each Entrant unconditionally accepts and agrees to comply with and abide by these Official Rules and the decisions of Sponsor, which shall be final and binding in all respects. Sponsor is responsible for the collection, submission or processing of Entries and the overall administration of the Sweepstakes. Entrants should look solely to Sponsor with any questions, comments or problems related to the Sweepstakes.\r\n\t\t</div>\r\n\t\t \r\n\t\t<h2>Eligibility</h2>\r\n\t\t \r\n\t\t<div class="text_block">\r\n\t\t\tOpen to legal residents of all countries who are at least 18 years of age. Sponsor, and their respective parents, subsidiaries, affiliates, distributors, retailers, sales representatives, advertising and promotion agencies and each of their respective officers, directors and employees, are ineligible to enter the Sweepstakes or win a prize. Household Members and Immediate Family Members of such individuals are also not eligible to enter or win. "Household Members" shall mean those people who share the same residence at least three months a year. "Immediate Family Members" shall mean parents, step-parents, legal guardians, children, step-children, siblings, step-siblings, or spouses. This Sweepstakes is subject to all applicable federal, state and local laws and regulations and is void where prohibited or restricted by law.\r\n\t\t</div>\r\n\t\t \r\n\t\t<h2>Prizes</h2>\r\n\r\n\t\t<div class="text_block">\r\n\t\t\t     Prize: Various virtual items on the Steam Platform are given away as prizes. The value of the virtual item can be checked on the Steam Marketplace.\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tOnly one prize per person and per household will be awarded. Prizes cannot be transferred, redeemed for cash or substituted by winner. Sponsor reserves the right in its sole and absolute discretion to award a substitute prize of equal or greater value if a prize described in these Official Rules is unavailable or cannot be awarded, in whole or in part, for any reason. The ARV of the prize represents Sponsor\'s good faith determination. That determination is final and binding and cannot be appealed. If the actual value of the prize turns out to be less than the stated ARV, the difference will not be awarded in cash. Sponsor makes no representation or warranty concerning the appearance, safety or performance of any prize awarded. Restrictions, conditions, and limitations may apply. Sponsor will not replace any lost or stolen prize items.\r\n\t\t\t\r\n\t\t\tAll federal, state and/or local taxes, fees, and surcharges are the sole responsibility of the prize winner. Failure to comply with the Official Rules will result in forfeiture of the prize.\r\n\t\t</div>\r\n\r\n\t\t \r\n\t\t<h2>How to enter</h2> \r\n\t\t        \r\n\t\t<div class="text_block">\r\n\t\t\tEnter the Sweepstakes during the Promotion Period online by visiting the entry form, which can be found on the following website at https://www.bolt.gg/giveaway. You also may be able to enter into Sweepstakes on https://www.twitter.com/officialboltgg or https://www.gleam.io.\r\n\t\t\t \r\n\t\t\t   Automated or robotic Entries submitted by individuals or organizations will be disqualified. Internet entry must be made by the Entrant. Any attempt by Entrant to obtain more than the stated number of Entries by using multiple/different email addresses, identities, registrations, logins or any other methods, including, but not limited to, commercial contest/sweepstakes subscription notification and/or entering services, will void Entrant\'s Entries and that Entrant may be disqualified. Final eligibility for the award of any prize is subject to eligibility verification as set forth below. All Entries must be posted by the end of the Promotion Period in order to participate. Sponsor\'s database clock will be the official timekeeper for this Sweepstakes.\r\n\t\t</div> \r\n\r\n\r\n\t\t<h2>Winner selection</h2>  \r\n\t\t \r\n\t\t<div class="text_block">\r\n\t\t\tThe Winner(s) of the Sweepstakes will be selected in a random drawing from among all eligible Entries received throughout the Promotion Period. The random drawing will be conducted within 24 hours of the Sweepstakes ending by Sponsor or its designated representatives, whose decisions are final. Odds of winning will vary depending on the number of eligible Entries received.\r\n\t\t</div>\r\n\r\n\t\t<h2>Winner notification</h2>  \r\n\t\t   \r\n\t\t <div class="text_block">\r\n\t\t \tWinner will be notified by email at the email address provided in the Entry Information approximately 24 hours after the random drawing. Potential Winner must accept a prize by email as directed by Sponsor within one year of notification. Sponsor is not responsible for any delay or failure to receive notification for any reason, including inactive email account(s), technical difficulties associated therewith, or Winner’s failure to adequately monitor any email account.\r\n\t\t \r\n\t\t </div>\r\n\r\n\t\t <h2>Privacy</h2>  \r\n\r\n\t\t <div class="text_block">\r\n\t\t \tAny personal information supplied by you will be subject to the privacy policy of the Sponsor posted at https://www.bolt.gg. By entering the Sweepstakes, you grant Sponsor permission to share your email address and any other personally identifiable information with the other Sweepstakes Entities for the purpose of administration and prize fulfillment.\r\n\t\t </div>\r\n\r\n\t\t <h2>Limitation of liability</h2>\r\n\r\n\t\t <div class="text_block">\r\n\t\t \tSponsor assumes no responsibility or liability for (a) any incorrect or inaccurate entry information, or for any faulty or failed electronic data transmissions; (b) any unauthorized access to, or theft, destruction or alteration of entries at any point in the operation of this Sweepstakes; (c) any technical malfunction, failure, error, omission, interruption, deletion, defect, delay in operation or communications line failure, regardless of cause, with regard to any equipment, systems, networks, lines, satellites, servers, camera, computers or providers utilized in any aspect of the operation of the Sweepstakes; (d) inaccessibility or unavailability of any network or wireless service, the Internet or website or any combination thereof; (e) suspended or discontinued Internet, wireless or landline phone service; or (f) any injury or damage to participant\'s or to any other person’s computer or mobile device which may be related to or resulting from any attempt to participate in the Sweepstakes or download of any materials in the Sweepstakes.\r\n\t\t \t \r\n\t\t \t   If, for any reason, the Sweepstakes is not capable of running as planned for reasons which may include without limitation, infection by computer virus, tampering, unauthorized intervention, fraud, technical failures, or any other causes which may corrupt or affect the administration, security, fairness, integrity or proper conduct of this Sweepstakes, the Sponsor reserves the right at its sole discretion to cancel, terminate, modify or suspend the Sweepstakes in whole or in part. In such event, Sponsor shall immediately suspend all drawings and prize awards, and Sponsor reserves the right to award any remaining prizes (up to the total ARV as set forth in these Official Rules) in a manner deemed fair and equitable by Sponsor. Sponsor and Released Parties shall not have any further liability to any participant in connection with the Sweepstakes.\r\n\t\t </div>\r\n\r\n\t\t \r\n\r\n\t\t<h2>Social network disclaimer</h2>\r\n\t\t \r\n\t\t<div class="text_block">\r\n\t\t\tA Facebook account may be required to enter. If you don’t already have a Facebook account, visit www.facebook.com to create one. It is free to create an account. This promotion is in no way sponsored, endorsed or administered by, or associated with Facebook. You understand that you are providing your information to the Sponsor and not to Facebook. By participating via the Facebook platform, participants are also subject to Facebook’s data policy and terms of use, which can be found at https://www.facebook.com/about/privacy and https://www.facebook.com/legal/terms/update.\r\n\t\t</div>\r\n\r\n\r\n\t\t<h2>Winner list/Official rules</h2>\r\n\r\n\t\t<div class="text_block">\r\n\t\t\tTo obtain a copy of the Winner List or a copy of these Official Rules, send your request to support@bolt.gg. Requests for the names of the winners must be received no later than 48 hours after the Promotion Period has ended.\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t \r\n</div>\r\n\r\n\r\n\r\n \r\n\r\n \r\n \r\n'), $templateCache.put("giveaway/partials/item_preview.tpl.html", '<div color-glow="item.name_color" ng-class="{dimmer:item.name_color==\'#D2D2D2\'}" ng-if="!item.simplified"></div>\r\n\r\n\r\n\r\n<div class="price_n_wear" ng-if="!item.simplified">\r\n\t<div class="price">${{item.price | number:2}}</div>\t\t\r\n\t<div class="wear" title="{{$root.splitName(item).wear}}">{{$root.splitName(item).short_wear}}</div>\r\n</div>\t\t  \t\r\n\r\n<div class="thumb_wrapper ">\r\n\t\r\n\r\n\t<div class="active" \r\n\t\telectro-circle \t\t\t\t\r\n\t\tuser-color="item.name_color"\r\n\t\tpassive="true"\r\n\t\tng-if="!item.simplified">\t\t\t\t\r\n\t</div>\r\n\r\n\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n</div>\r\n\r\n<div class="names" ng-if="!item.simplified">\t\t\t\t\r\n\t<div class="first">{{item.market_hash_name | itemName:\'fname\'}}</div>\r\n\t<div steam-color="item.name_color">\r\n\t\t<span class="last" >{{item.market_hash_name | itemName:\'lname\'}}</span>\r\n\t</div>\t\r\n</div>'), $templateCache.put("giveaway/views/giveaway.tpl.html", '<div class="giveaway_view padded_view">\t\r\n\t\r\n\t<div class="wrap">\r\n\t\t<h1>March Madness</h1>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\r\n\t\t<div class="announce">\r\n\t\t\t<p class="big">Open a gift box. Get a free skin. Every day.</p>\r\n\t\t\t\x3c!-- <p class="secondary">Please note that skins won from the Calendar must be upgraded before you are able to withdraw them.</p> --\x3e\r\n\t\t</div>\r\n\r\n\t\t\r\n\r\n\t\t\r\n\r\n\t\t<div class="giveaway_list">\r\n\t\t\t<div class="item_wrapper" ng-repeat="ga in giveaway.giveaways" ng-class="canJoin(ga)">\r\n\t\t\t\t\r\n\t\t\t\t<div class="ga_container">\r\n\t\t\t\t\t<div class="fog" ng-if="!ga.claimedItem"></div>\r\n\r\n\t\t\t\t\t<div class="spinner"\t\t\t\t\t\t\r\n\t\t\t\t\t\tng-if="ga.loading"\r\n\t\t\t\t\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\r\n\r\n\t\t\t\t\t\x3c!-- <div class="flake_spinner angular-animate" ng-if="ga.loading">\r\n\t\t\t\t\t\t<div class="icon icon-snowflake2"></div>\r\n\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div ng-if="!ga.spin_items && !ga.claimedItem && !ga.loading" class="box_holder angular-animate" ng-click="claim(ga)"  ng-class="{claimable:claimable(ga)}">\r\n\t\t\t\t\t\t<div class="index">{{$index+1}}</div>\r\n\t\t\t\t\t\t<div svg-icon="{{\'gift-\'+ga.gift_index}}"></div>\r\n\t\t\t\t\t\t<button type="button" class="button claim_button">Claim</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div ng-if="ga.spin_items && ga.animate && !ga.loading" class="box_holder">\r\n\t\t\t\t\t\t<div case-roulette="ga.spin_items" roulette-results="ga.spinResults" roulette-rows="1" over-callback="spinOver"  ng-model="ga.rltBinding" class="case-roulette"></div>\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class="item" ng-if="ga.claimedItem" ng-include="\'giveaway/partials/item_preview.tpl.html\'" ng-init="item=ga.claimedItem">\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="spinner" \r\n\t\t\t\tng-class="{inflow:items.length}"\r\n\t\t\t\tng-if="glob.getgaInProgress" \r\n\t\t\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t<div class="footer">By participating you are accepting <span class="linklike" ui-sref="app.gaterms">Giveaway terms and conditions.</span></div>\r\n\t</div>\r\n\r\n\r\n\t\r\n\t\x3c!-- <div class="stats_footer" ng-if="giveaway">\r\n\t\t<div class="stat total_entries">\r\n\t\t\t<div class="stat_name">{{\'ga_entries\' | translate}}</div>\r\n\t\t\t<div class="stat_value">\r\n\t\t\t\t<span class="icon icon-entries"></span><span>{{giveaway.joinCount || 0}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="stat your_entries">\r\n\t\t\t<div class="stat_name">{{\'ga_your_entries\' | translate}}</div>\r\n\t\t\t<div class="stat_value">\r\n\t\t\t\t<span class="icon icon-my_entries"></span><span>{{giveaway.myEntries || 0}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="stat time_end">\r\n\t\t\t<div class="stat_name">{{\'ga_time_until\' | translate}}</div>\r\n\t\t\t<div class="stat_value">\r\n\t\t\t\t<span class="icon icon-countdown"></span><span>{{countdown}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div> --\x3e\r\n\r\n\t\r\n</div>\r\n\r\n'), $templateCache.put("history/views/history.tpl.html", '<div class="history padded_view">\r\n\t<div class="wrap">\r\n\t\t<h1 translate="history_title"></h1>\r\n\t\t\x3c!-- <div class="lead" translate="history_lead"></div> --\x3e\r\n\r\n\t\t<div class="tabs">\r\n\t\t\t<div class="tabs_wrap">\r\n\t            <div class="tab" ng-click="changeTab(\'trade\')" ng-class="{\'active\':tab ===\'trade\'}">{{\'history_trade\' | translate}}</div>\r\n\t\t\t\t<div class="tab" ng-click="changeTab(\'upgrade\')" ng-class="{\'active\':tab ===\'upgrade\'}">{{\'history_upgrade\' | translate}}</div>\r\n\t            \r\n\t\t\t</div>\r\n\t\t\t<div class="refresher" ng-click="refresh(tab)">\r\n\t\t\t\t<span class="icon-refresh"></span><span>{{\'history_refresh\' | translate}}</span>\r\n\t\t\t</div>\r\n            \r\n\t\t</div>\r\n\r\n\r\n\r\n\t\t<div class="data upgrade_history" \r\n\t\t\tng-if="tab == \'upgrade\'"\r\n\t\t\tinfinite-scroll-container="\'.history.padded_view\'" \r\n\t\t\tinfinite-scroll=\'getHistory("upgrade",true)\' \r\n\t\t\tinfinite-scroll-disabled=\'fetchInProgress || !history.upgrade.nextPage\' \r\n\t\t\tinfinite-scroll-distance=\'1\'>\r\n\t\t\t\r\n\t\t\t<div class="none" ng-if="!history.upgrade.results.length && !fetchInProgress"><any ng-bind-html="\'history_nothingHere\' | translate | htmlSafe"></any></div>\r\n\r\n\t\t\t<table ng-if="history.upgrade.results.length">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th class="fair">{{\'history_fair\' | translate}}</th>\r\n\t\t\t\t\t\t<th>{{\'history_items\' | translate}}</th>\r\n\t\t\t\t\t\t<th>{{\'history_status\' | translate}}</th>\r\n\t\t\t\t\t\t<th class="profit">{{\'history_profit\' | translate}}</th>\r\n\t\t\t\t\t\t<th class="time">{{\'history_time\' | translate}}</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr ng-repeat="entry in history.upgrade.results | orderBy:\'timestamp\':true" ng-class="{success:entry.won,fail:!entry.won}">\r\n\r\n\t\t\t\t\t\t<td class="fair">\r\n\t\t\t\t\t\t\t\x3c!-- <div>ID: {{entry.id}}</div> --\x3e\r\n\t\t\t\t\t\t\t<div ng-if="entry.resolvedNumberBase10"><any translate="history_roll" translate-value-roll="{{entry.resolvedNumberBase10}}"></any></div>\r\n\t\t\t\t\t\t\t\x3c!-- <div ng-if="entry.hash"><any translate="history_hash" translate-value-hash="{{entry.hash}}"></any></div> --\x3e\r\n\t\t\t\t\t\t\t<div ng-if="entry.serverSeed"><any translate="history_server_seed" translate-value-seed="{{entry.serverSeed}}"></any></div>\r\n\t\t\t\t\t\t\t<div ng-if="entry.clientSeed"><any translate="history_client_seed" translate-value-seed="{{entry.clientSeed}}"></any></div>\r\n\t\t\t\t\t\t\t<div ng-if="entry.provablyFair"><any translate="history_hash" translate-value-hash="{{entry.provablyFair}}"></any></div>\r\n\t\t\t\t\t\t\t<div ng-if="entry.salt"><any translate="history_salt" translate-value-salt="{{entry.salt}}"></any></div>\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="items">\r\n\t\t\t\t\t\t\t<div class="items_preview compact" ng-class="{manyItems:entry.from.length > 1}">\r\n\t\t\t\t\t\t\t\t<div color-glow="entry.from[0].name_color"></div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tng-repeat="item in entry.from | limitTo:(entry.from.length <= 4 ? 4 : 3)" \r\n\t\t\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item" ng-if="entry.from.length > 4" >\r\n\t\t\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t\t\t<span>+{{entry.from.length-3}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="icon-upgrade_arrow"></div>\r\n\r\n\t\t\t\t\t\t\t<div class="items_preview compact" ng-class="{manyItems:entry.to.length > 1}">\r\n\t\t\t\t\t\t\t\t<div color-glow="entry.to[0].name_color"></div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tng-repeat="item in entry.to | limitTo:(entry.to.length <= 4 ? 4 : 3)" \r\n\t\t\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item" ng-if="entry.to.length > 4" >\r\n\t\t\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t\t\t<span>+{{entry.to.length-3}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="status">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span ng-if="entry.won">{{\'history_upgraded\' | translate}}</span>\r\n\t\t\t\t\t\t\t\t<span class="fail" ng-if="!entry.won">{{\'history_failed\' | translate}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="highLow">\r\n\t\t\t\t\t\t\t\t<div ng-if="entry.highLow==\'low\'">{{\'history_roll_under\' | translate}}</div>\r\n\t\t\t\t\t\t\t\t<div ng-if="entry.highLow==\'high\'">{{\'history_roll_over\' | translate}}</div>\r\n\t\t\t\t\t\t\t\t<div class="roll_range" ng-if="entry.highLow==\'custom\'">\r\n\t\t\t\t\t\t\t\t\t<div translate="history_roll_range"></div>\r\n\t\t\t\t\t\t\t\t\t<div>{{entry.range.low}} - {{entry.range.high}}</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="profit">\r\n\t\t\t\t\t\t\t<span ng-if="!entry.won">-${{$root.itemsValue(entry.from) | number:2}}</span>\r\n\t\t\t\t\t\t\t<span ng-if="entry.won">${{$root.itemsValue(entry.to)-$root.itemsValue(entry.from) | number:2}}</span>\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="time">\r\n\t\t\t\t\t\t\t{{$root.moment(entry.timestamp).format("DD/MMM/YYYY, h:mm:ss A")}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\t\t\r\n\r\n\t\t\t<div class="spinner" \r\n\t\t\tng-class="{inflow:history.upgrade.results.length}"\r\n\t\t\tng-if="fetchInProgress" \r\n\t\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\r\n\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t<div class="data trade_history" \r\n\t\t\tng-if="tab == \'trade\'"\r\n\t\t\tinfinite-scroll-container="\'.history.padded_view\'" \r\n\t\t\tinfinite-scroll=\'getHistory("trade",true)\' \r\n\t\t\tinfinite-scroll-disabled=\'fetchInProgress || !history.trade.nextPage\' \r\n\t\t\tinfinite-scroll-distance=\'1\'>\r\n\t\t\t\r\n\t\t\t<div class="none" ng-if="!history.trade.results.length && !fetchInProgress"><any ng-bind-html="\'history_nothingHere\' | translate | htmlSafe"></any></div>\r\n\r\n\t\t\t<table ng-if="history.trade.results.length">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th class="id">{{\'history_offerid\' | translate}}</th>\r\n\t\t\t\t\t\t<th>{{\'history_type\' | translate}}</th>\r\n\t\t\t\t\t\t<th>{{\'history_items\' | translate}}</th>\r\n\t\t\t\t\t\t<th>{{\'history_status\' | translate}}</th>\r\n\t\t\t\t\t\t<th class="total">{{\'history_total\' | translate}}</th>\r\n\t\t\t\t\t\t<th class="time">{{\'history_time\' | translate}}</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody ng-repeat="entry in history.trade.results | orderBy:\'timestamp\':true" ng-class="{errored:entry.error}">\r\n\t\t\t\t\t<tr ng-class="tradeOfferStatusClass(entry)">\r\n\r\n\t\t\t\t\t\t<td class="id">\t\t\r\n\t\t\t\t\t\t\t<div>{{entry.offerId || entry.offerID || \'--\'}}</div>\r\n\t\t\t\t\t\t\t<div ng-if="entry.tradeStatus == 2 || entry.tradeStatus == 9 || entry.tradeStatus == 11">\r\n\t\t\t\t\t\t\t\t<a href="" target="_blank" ng-href="https://steamcommunity.com/tradeoffer/{{entry.offerId}}/">{{\'history_offer_link\' | translate}}</a>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="type" ng-class="entry.type">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{{\'history_\'+entry.type | translate}}\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="items">\r\n\t\t\t\t\t\t\t<div class="items_preview compact" ng-class="{manyItems:entry.items.length > 1}">\r\n\t\t\t\t\t\t\t\t<div color-glow="entry.items[0].name_color"></div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tng-repeat="item in entry.items | limitTo:(entry.items.length <= 4 ? 4 : 3)" \r\n\t\t\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item" ng-if="entry.items.length > 4" >\r\n\t\t\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t\t\t<span>+{{entry.items.length-3}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="status">\r\n\t\t\t\t\t\t\t<any ng-bind-html="\'history_\'+entry.tradeStatus | translate | htmlSafe" ng-if="entry.tradeStatus"></any>\r\n\t\t\t\t\t\t\t<span ng-if="!entry.tradeStatus">--</span>\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="total">\r\n\t\t\t\t\t\t\t${{$root.itemsValue(entry.items) | number:2}}\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t<td class="time">\r\n\t\t\t\t\t\t\t{{$root.moment(entry.timestamp).format("DD/MMM/YYYY, h:mm:ss A")}}\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t<tr class="trade_error" ng-if="entry.error">\r\n\t\t\t\t\t\t<td colspan="6">Error: {{entry.error}}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\t\r\n\r\n\t\t\t<div class="spinner" \r\n\t\t\tng-class="{inflow:history.trade.results.length}"\r\n\t\t\tng-if="fetchInProgress" \r\n\t\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\t\r\n\r\n\t\t</div>\r\n\r\n\r\n\t</div>\r\n</div>\r\n'), $templateCache.put("modals/views/confirmCodeExchange.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n<h2>Confirm the Purchase</h2>\r\n\r\n<div class="text_block">\r\n\t<div>You are about to Purchase the following items from Bolt Inventory</div>\r\n\t<div class="items_list">\r\n\t\t<div class="list_item bolt_credit">\r\n\t\t\t<span class="bullet"></span>\r\n\t\t\t<span class="name">Bolt Credit - </span>\r\n\t\t\t<span class="price">${{params.cardValue - $root.itemsValue(params.items) | number:2}}</span>\t\r\n\t\t</div>\r\n\t\t<div class="list_item" ng-repeat="item in params.items">\r\n\t\t\t<span class="bullet" steam-color-bg="item.name_color"></span>\r\n\t\t\t<span class="name">{{item.market_hash_name}} - </span>\r\n\t\t\t<span class="price">${{item.price}}</span>\t\t\t  \r\n\t\t</div>\r\n\t</div>  \r\n\r\n\t<div class="buttons">\r\n\t  <button type="button" \r\n\t  \tclass="button orange_button" \r\n\t  \tng-click="claimGiftCode()"\r\n\t  \tng-disabled="glob.claimInProgress"\r\n\t  \tng-loading="glob.claimInProgress">\r\n\t  \t\tConfirm Purchase\r\n\t  </button>  \r\n\t</div>\t\r\n</div>\r\n\r\n\r\n\r\n\r\n\x3c!-- <button ng-show="!$root.user.acceptedRules" class="submit" ng-click="accept()">Accept &amp; Enter</button> --\x3e\r\n'), $templateCache.put("modals/views/confirmGift.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n<h2>{{\'inv_gift_title\' | translate}}</h2>\r\n\r\n<div class="text_block">\r\n\t<span translate="gift_about_to_send" translate-value-items="{{params.items.length}}" translate-value-value="{{$root.itemsValue(params.items)}}"></span>  \r\n  \t<span><strong><span avatar="params.user.avatar"></span> {{params.user.name}}</strong>.</span>\r\n</div>\r\n\r\n<div class="text_block"><any translate="gift_sure"></any></div>\r\n\r\n<div class="buttons">\r\n  <button type="button" class="button orange_button" ng-click="confirm()">{{\'continue\' | translate}}</button>\r\n  <button type="button" class="button bnw_button" ng-click="cancel()">{{\'cancel\' | translate}}</button>\r\n</div>\r\n\x3c!-- <button ng-show="!$root.user.acceptedRules" class="submit" ng-click="accept()">Accept &amp; Enter</button> --\x3e\r\n'), $templateCache.put("modals/views/confirmWithdraw.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n<h2>{{\'inv_withdraw\' | translate}}</h2>\r\n\r\n<div class="text_block">\r\n\t<div translate="inv_witc_aboutto"></div>\r\n\t<div class="items_list">\r\n\t\t<div class="list_item" ng-repeat="item in params.items">\r\n\t\t\t<span class="bullet" steam-color-bg="item.name_color"></span>\r\n\t\t\t<span class="name">{{item.market_hash_name}} - </span>\r\n\t\t\t<span class="price">${{item.price}}</span>\t\t\t  \r\n\t\t</div>\r\n\t</div>  \t\r\n</div>\r\n\r\n<div class="text_block"><any translate="inv_witc_sure"></any></div>\r\n\r\n<div class="buttons">\r\n  <button type="button" class="button orange_button" ng-click="confirm()">{{\'continue\' | translate}}</button>\r\n  <button type="button" class="button green_button" ng-click="cancel()">{{\'inv_witc_keep\' | translate}}</button>\r\n</div>\r\n\x3c!-- <button ng-show="!$root.user.acceptedRules" class="submit" ng-click="accept()">Accept &amp; Enter</button> --\x3e\r\n'), $templateCache.put("modals/views/depositLockNote.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2>{{$root.idGames[params.gameId]}} <any ng-bind-html="\'dep_lock_title\' | translate | htmlSafe"></any></h2>\r\n\r\n<p class="body"><any ng-bind-html="\'dep_lock_if_continue1\' | translate | htmlSafe"></any> {{$root.idGames[params.gameId]}} <any ng-bind-html="\'dep_lock_if_continue2\' | translate | htmlSafe"></any></p>\r\n\r\n<div class="action_buttons">\r\n\t<button class="button orange_button" type="button" ng-click="confirm()"><any ng-bind-html="\'continue\' | translate | htmlSafe"></any></button>\r\n\t<button class="button gray_button" type="button" ng-click="cancel()"><any ng-bind-html="\'cancel\' | translate | htmlSafe"></any></button>\r\n</div>\r\n\r\n'), $templateCache.put("modals/views/depositType.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\r\n<h2>Select how you wish to deposit</h2>\r\n\r\n<div class="deposit_types">\r\n\t<div class="skin_dep" ng-click="cancel();$root.openInventory(\'steam\');">\r\n\t\t\x3c!-- <div class="shapes" glitter-shapes ng-include=\'"app/partials/deposit-payments-shapes.tpl.html"\'></div> --\x3e\r\n\t\t<div class="bg"></div>\r\n\t\t<div class="type_title">Skin Deposit</div>\r\n\t</div>\r\n\t<div class="gift_dep" ng-click="cancel();$root.openGiftCards();">\r\n\t\t<div class="shapes" glitter-shapes ng-include=\'"app/partials/deposit-payments-shapes.tpl.html"\'></div>\r\n\t\t<div class="payment_methods bg"></div>\r\n\t\t<div class="type_title">Gift Card</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n'), $templateCache.put("modals/views/fair.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2 ng-bind-html="\'provably_fair\' | translate | htmlSafe"></h2>\r\n<p class="lead">{{params.game | translate | capitalize}}</p>\r\n\r\n\r\n<p>\r\n\t<span ng-bind-html="\'fair_system\' | translate | htmlSafe"></span>\r\n\t<span ng-if="params.game==\'roulette\'" ng-bind-html="\'fair_roulette_expl\' | translate | htmlSafe"></span> \t\r\n\t<span ng-if="params.game==\'crash\'" ng-bind-html="\'fair_crash_expl\' | translate | htmlSafe"></span> \r\n\t<span ng-if="params.game==\'dice\'" ng-bind-html="\'fair_dice_expl\' | translate | htmlSafe"></span>\r\n</p>\r\n\r\n<div class="seeds">\r\n\t<div>\r\n\t\t<h4 ng-bind-html="\'fair_current_seed\' | translate | htmlSafe"></h4>\r\n\r\n\t\t<div>\r\n\t\t\t<div><any ng-bind-html="\'fair_hashed_server_seed\' | translate | htmlSafe"></any>:</div>\r\n\t\t\t<div class="hl">{{params.current.hash}}</div>\r\n\t\t</div>\r\n\t\t<div ng-if="params.current.client">\r\n\t\t\t<div><any ng-bind-html="\'fair_client_seed\' | translate | htmlSafe"></any>:</div>\r\n\t\t\t<div class="hl">{{params.current.client}}</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div>\r\n\t\t<h4 ng-bind-html="\'fair_prev_seed\' | translate | htmlSafe"></h4>\r\n\t\t<div>\r\n\t\t\t<div><any ng-bind-html="\'fair_hashed_server_seed\' | translate | htmlSafe"></any>:</div>\r\n\t\t\t<div class="hl">{{params.prev.hash}}</div>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<div><any ng-bind-html="\'fair_server_seed\' | translate | htmlSafe"></any>:</div>\r\n\t\t\t<div class="hl">{{params.prev.server}}</div>\r\n\t\t</div>\r\n\t\t<div ng-if="params.prev.client">\r\n\t\t\t<div><any ng-bind-html="\'fair_client_seed\' | translate | htmlSafe"></any>:</div>\r\n\t\t\t<div class="hl">{{params.prev.client}}</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<p ng-if="params.game==\'roulette\'">\r\n\t<any ng-bind-html="\'fair_verify_roulette\' | translate | htmlSafe"></any> \r\n\t<a ng-href="http://jsbin.com/yasemuw?hash={{params.prev.server}}" target="_blank" class="linklike">\r\n\t\t<any ng-bind-html="\'this_verifier\' | translate | htmlSafe"></any>\r\n\t</a>.\r\n</p>\r\n\r\n<p ng-if="params.game==\'crash\'"><any ng-bind-html="\'fair_verify_crash\' | translate | htmlSafe"></any> <a ng-href="https://google.com" target="_blank" class="linklike"><any ng-bind-html="\'this_verifier\' | translate | htmlSafe"></any></a>.</p>\r\n\r\n<p ng-if="params.game==\'dice\'"><any ng-bind-html="\'fair_verify_dice\' | translate | htmlSafe"></any> <a ng-href="https://dicesites.com/primedice/verifier" target="_blank" class="linklike"><any ng-bind-html="\'this_verifier\' | translate | htmlSafe"></any></a> (Last nonce = 0).</p>\r\n\r\n'),
    $templateCache.put("modals/views/gift.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2><any ng-bind-html="\'gift_title\' | translate | htmlSafe"></any> <span ng-if="selectedAlready">to {{selected.name}}</span></h2>\r\n<p class="lead"><any ng-bind-html="\'gift_lead\' | translate | htmlSafe"></any> </p>\r\n<div class="f-group" ng-if="!selectedAlready">\r\n\t<label><any ng-bind-html="\'gift_to\' | translate | htmlSafe"></any></label>\r\n\t<angucomplete-alt id="ex1"\r\n              placeholder="Search users"\r\n              pause="1000"\r\n              selected-object="gift.user"\r\n              remote-url="{{root}}account/searchAccounts?match="\r\n              search-fields="name"\r\n              title-field="name"\r\n              image-field="img"\r\n              description-field="steamid"\r\n              minlength="1"\r\n              input-class="search"/>\r\n</div>\r\n<div class="f-group">\r\n\t<label><any ng-bind-html="\'gift_num\' | translate | htmlSafe"></any> <any ng-bind-html="\'CREDITS\' | translate | htmlSafe"></any>:</label>\r\n\t<input ng-model="gift.sendAmount" type="number">\r\n</div>\r\n\r\n\x3c!-- <div class="captcha g-recaptcha" recaptcha ng-model="captcha"></div> --\x3e\r\n\r\n<button class="submit button orange_button" ng-click="sendGift();" ng-disabled="waitingRes" ng-loading="waitingRes">\r\n       \r\n       <any ng-bind-html="\'gift_send\' | translate | htmlSafe"></any> \r\n       <any ng-bind-html="\'CREDITS\' | translate | htmlSafe"></any>\r\n       \r\n</button>\r\n'), $templateCache.put("modals/views/giftCards.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\r\n<div class="card_purchase">\r\n\t<h2 class="main_h">{{\'cards_select_card\' | translate}}</h2>\r\n\r\n\t<div class="gift_cards">\r\n\t\t<div ng-repeat="card in gift_cards" class="gift_card" ng-click="goToGiftcard(card)">\r\n\t\t\t<div class="price_tag">\r\n\t\t\t\t<div class="value">${{card.value}}</div>\r\n\t\t\t</div>\r\n\t\t</div> \t\r\n\t</div>\r\n</div>\r\n\r\n<form class="card_claim">\r\n\t<h2>{{\'cards_have_claim\' | translate}}</h2>\r\n\r\n\t<div class="gift_key_input f-group">\r\n\t\t<input type="text" ng-model="gift_key" placeholder="{{\'cards_key_placeholder\' | translate}}" required>\r\n\t\t<button class="button orange_button" \r\n\t\t\tng-click="fetchGiftCard(gift_key)"\r\n\t\t\tng-loading="glob.getgiftcardInProgress"\r\n\t\t\tng-disabled="glob.getgiftcardInProgress">{{\'claim\' | translate}}</button>\r\n\t</div>\r\n</form>\r\n\r\n\r\n\r\n'), $templateCache.put("modals/views/gleam.tpl.html", '\r\n<div ng-if="params.gleamid">\r\n\t<i class="fa fa-times" ng-click="cancel()"></i>\r\n\t<a class="e-widget generic-loader no-button" href="https://gleam.io/{{params.gleamid}}/test-giveaway" rel="nofollow"></a>\r\n\t<script type="text/javascript" src="https://js.gleam.io/e.js" async="true"><\/script>\r\n</div>\r\n'), $templateCache.put("modals/views/howto.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel();$root.app.howtoRead=true;$root.saveAppLocalStore();"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n\r\n<h2><any ng-bind-html="\'howto_title\' | translate | htmlSafe"></any></h2>\r\n\r\n<ol>\r\n\t  <li>\r\n      <div class="li_num">1</div>\r\n     <div translate="howto_step_1"></div> \r\n    </li>\r\n    <li>\r\n      <div class="li_num">2</div>\r\n     <div translate="howto_step_2"></div> \r\n    </li>\r\n    <li>\r\n      <div class="li_num">3</div>\r\n     <div translate="howto_step_3"></div> \r\n    </li>\r\n    <li>\r\n      <div class="li_num">4</div>\r\n      <div>\r\n        <p translate="howto_step_4"></p> \r\n        <p translate="howto_step_4_win"></p> \r\n        <p translate="howto_step_4_lost"></p> \r\n      </div>\r\n     \r\n    </li>\r\n</ol>\r\n\r\n\r\n<button class="button orange_button" type="button" ng-click="cancel();$root.app.howtoRead=true;$root.saveAppLocalStore();">{{\'howto_gotit\' | translate}}</button>\r\n'), $templateCache.put("modals/views/inventory.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n\r\n\r\n\r\n<div class="header">\r\n\t<div class="aligned">\r\n\t\t<h2>\r\n\t\t\t<span ng-if="mode==\'code_exchange\'">{{\'inv_code_exchange_title\' | translate}}</span>\r\n\t\t\t<span ng-if="rawMode==\'cf_join\'">{{\'inv_cf_join\' | translate}}</span>\r\n\t\t\t<span ng-if="rawMode==\'cf_create\'">{{\'inv_cf_create\' | translate}}</span>\r\n\t\t\t<span ng-if="mode==\'inventory\' || mode==\'select\'">{{\'inv_inventory\' | translate}}</span>\r\n\t\t\t<span ng-if="mode==\'upgrade\'">{{\'inv_bolt_inventory\' | translate}}</span>\r\n\t\t\t<span ng-if="mode==\'steam\'">{{\'dep_title\' | translate}}</span>\r\n\t\t\t<div ng-if="mode==\'gift\'">\r\n\t\t\t\t<div>{{\'inv_gift_title\' | translate}}</div>\r\n\t\t\t\t<div class="secondary">\r\n\t\t\t\t\t<span translate="inv_gift_to"></span>\r\n\t\t\t\t\t<span avatar="data.user.avatar"></span>\r\n\t\t\t\t\t<span>{{data.user.name}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<span class="icon icon-refresh_dark" ng-click="refresh()" ng-if="mode == \'steam\' || mode == \'upgrade\'" title="{{\'inv_refresh\' | translate}}"></span>\r\n\t\t</h2>\r\n\t\t\r\n\t\t<span class="total">\r\n\t\t\t<span ng-if="mode==\'upgrade\' && data.userItems.length" ng-class="{invalid:$root.itemsValue(selectedItems)<$root.itemsValue(data.userItems)*1.01}">\r\n\t\t\t\t<any translate="inv_min" translate-value-value="{{$root.itemsValue(data.userItems)*1.01 | number:2}}"></any>\t\t\t\r\n\t\t\t</span>\r\n\t\t\t<span ng-if="mode==\'steam\'" ng-class="{invalid:$root.itemsValue(selectedItems)<0.15}">\r\n\t\t\t\t<any translate="inv_min" translate-value-value="0.15"></any>\r\n\t\t\t</span>\r\n\t\t\t<span ng-if="rawMode==\'cf_join\'" ng-class="{invalid:$root.itemsValue(selectedItems) < data.cf.amount * 0.9 || $root.itemsValue(selectedItems) > data.cf.amount * 1.1}">\r\n\t\t\t\t<any translate="inv_needs" translate-value-min="{{data.cf.amount * 0.9 | number:2}}" translate-value-max="{{data.cf.amount * 1.1 | number:2}}"></any>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t<span ng-if="mode != \'code_exchange\'">\r\n\t\t\t\t<any translate="inv_total" translate-value-value="{{$root.itemsValue(selectedItems) | number:2}}"></any>\r\n\t\t\t</span>\r\n\r\n\t\t\t<span ng-if="mode==\'code_exchange\'" ng-class="{invalid_card_limits:$root.itemsValue(selectedItems)>data.cardValue}">\r\n\t\t\t\t<span><span class="selected_amount">${{$root.itemsValue(selectedItems) | number:2}}</span> / <strong>${{data.cardValue | number:2}}</strong></span>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t</span>\t\r\n\t</div>\r\n\t<div class="header_note" ng-if="mode==\'code_exchange\'">{{\'inv_code_exchange_remaining\' | translate}}</div>\r\n\r\n</div>\t\r\n\r\n\r\n<div class="controls" ng-class="{filters_shown:show_filters}">\r\n\t<div class="filters_wrap">\r\n\t\t<div class="filters">\r\n\r\n\t\t\t\x3c!-- <div class="dropdown bnw" ng-class="{expanded:expanded}">\r\n\t\t\t\t<div class="label_holder" ng-click="expanded = !expanded">\r\n\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t<span class="dim">Sort by:</span>\r\n\t\t\t\t\t\t<span>{{search.sort}}</span> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="dim arrow">&#x25BE</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul class="dropdown-menu angular-animate ng-hide" ng-show="expanded">\r\n\t\t\t\t\t<li ng-repeat="(sort,sortObj) in sorts" ng-click="search.sort=sort;$parent.expanded=false">{{sortObj.name | translate}}</li>\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</div> --\x3e\r\n\t\t\t<div class="inline_input_wrapper">\r\n\t\t\t\t<div class="prefix">\r\n\t\t\t\t\t<div class="icon-search"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type="text" ng-model="search.query" placeholder="{{\'withdraw_search_placeholder\' | translate}}">\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="dropdown bnw" ng-class="{expanded:expanded}" click-away="expanded=false">\r\n\t\t\t\t<div class="label_holder" ng-click="expanded = !expanded">\r\n\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t<span class="dim">{{\'inv_price\' | translate}}</span>\r\n\t\t\t\t\t\t<span ng-if="!search.priceRange">{{\'inv_price_any\' | translate}}</span> \r\n\t\t\t\t\t\t<span ng-if="search.priceRange">\r\n\t\t\t\t\t\t\t<span ng-if="search.priceRange[1]!=10000">${{search.priceRange[0]}} - ${{search.priceRange[1]}}</span>\r\n\t\t\t\t\t\t\t<span ng-if="search.priceRange[1]==10000">$100+</span>\r\n\t\t\t\t\t\t</span>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="dim arrow">&#x25BE</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul class="dropdown-menu angular-animate ng-hide" ng-show="expanded">\r\n\t\t\t\t\t<li ng-click="setPriceRange(null);expanded=false">{{\'inv_price_any\' | translate}}</li>\r\n\t\t\t\t\t<li ng-repeat="range in priceRanges" ng-click="setPriceRange(range);$parent.expanded=false">\r\n\t\t\t\t\t\t<span ng-if="range[1]!=10000">${{range[0]}} - ${{range[1]}}</span>\r\n\t\t\t\t\t\t<span ng-if="range[1]==10000">$100+</span>\r\n\t\t\t\t\t</li>\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class="icon-asc" ng-click="switchOrder()" ng-class="{asc:search.order == \'asc\'}"></div>\r\n\r\n\t\t</div>\r\n\t\t<div class="tapper" ng-click="show_filters=false">\r\n\t\t\t<span class="tri"></span>\r\n\t\t\t<span class="text">TAP TO CLOSE</span>\r\n\t\t\t<span class="tri"></span>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\r\n\r\n\t<div class="buttons" ng-if="mode == \'inventory\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button bnw_button" \r\n\t\t\tng-click="selectAll()"\r\n\t\t\tng-if="$root.user.role == \'mod\' || $root.user.role == \'support\' || $root.user.role == \'admin\'">{{\'inv_select_all\' | translate}}</button>\r\n\t\t\r\n\t\t\x3c!-- <button type="button" class="button bnw_button" ng-click="close();$root.openInventory(\'steam\')">{{\'upg_deposit\' | translate}}</button> --\x3e\t\t\t\r\n\t\t\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="withdrawItems()"\t\t\t\t\t\t\r\n\t\t\tng-disabled="!selectedItems.length || glob.withdrawalInProgress"\r\n\t\t\tng-loading="glob.withdrawalInProgress">\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="!selectedItems.length"><any translate="inv_withdraw"></any></span>\r\n\t\t\t\t<span ng-if="selectedItems.length"><any translate="inv_withdraw_items_short" translate-value-amount="{{selectedItems.length}}"></any></span>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</button>\r\n\t</div>\t\r\n\r\n\r\n\t<div class="buttons" ng-if="mode == \'cf\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button bnw_button" \r\n\t\t\tng-click="selectAll()">\r\n\t\t\t{{\'inv_select_all\' | translate}}\r\n\t\t</button>\r\n\t\t\r\n\t\t\x3c!-- <button type="button" class="button bnw_button" ng-click="close();$root.openInventory(\'steam\')">{{\'upg_deposit\' | translate}}</button> --\x3e\t\t\t\r\n\t\t\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="confirm(selectedItems)"\r\n\t\t\tng-disabled="!selectedItems.length">\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="rawMode == \'cf_join\'">{{\'inv_join\' | translate}}</span>\r\n\t\t\t\t<span ng-if="rawMode == \'cf_create\'">{{\'inv_create\' | translate}}</span>\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\t\r\n\r\n\r\n\r\n\t<div class="buttons" ng-if="mode==\'select\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\t\t\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="confirm(selectedItems)"\r\n\t\t\tng-disabled="!selectedItems.length">\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="!selectedItems.length"><any translate="inv_select"></any></span>\r\n\t\t\t\t<span ng-if="selectedItems.length"><any translate="inv_select_items_short" translate-value-amount="{{selectedItems.length}}"></any></span>\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="buttons" ng-if="mode==\'gift\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\t\t\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="sendGift()"\r\n\t\t\tng-disabled="!selectedItems.length || glob.sendGiftInProgress"\r\n\t\t\tng-loading="glob.sendGiftInProgress">\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="!selectedItems.length"><any translate="inv_send_gift"></any></span>\r\n\t\t\t\t<span ng-if="selectedItems.length"><any translate="inv_send_gift_items_short" translate-value-amount="{{selectedItems.length}}"></any></span>\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="buttons" ng-if="mode==\'upgrade\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\t\t\x3c!-- <button type="button" class="button bnw_button" ng-click="refresh()" ng-disabled="glob.getitemsInProgress">{{\'inv_refresh\' | translate}}</button> --\x3e\t\t\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="confirm(selectedItems)"\r\n\t\t\tng-disabled="!selectedItems.length">\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="!selectedItems.length"><any translate="inv_select"></any></span>\r\n\t\t\t\t<span ng-if="selectedItems.length"><any translate="inv_select_items_short" translate-value-amount="{{selectedItems.length}}"></any></span>\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="buttons" ng-if="mode==\'code_exchange\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="cancel();codeExchange();"\r\n\t\t\tng-disabled="!selectedItems.length || $root.itemsValue(selectedItems)>data.cardValue">\r\n\t\t\t<div>\r\n\t\t\t\tPurchase\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="buttons" ng-if="mode == \'steam\'">\r\n\t\t<div class="filters_button" ng-click="$parent.show_filters = !$parent.show_filters">\r\n\t\t\t<div  class="icon icon-search"></div>\r\n\t\t</div>\r\n\r\n\t\t\x3c!-- <button type="button" class="button bnw_button" ng-click="refresh()" ng-disabled="glob.getsteamInProgress">{{\'inv_refresh\' | translate}}</button>\t --\x3e\r\n\r\n\t\t<button type="button" class="button bnw_button" ng-click="selectAll()">{{\'inv_select_all\' | translate}}</button>\t\r\n\t\t\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button" \r\n\t\t\tng-click="depositItems()"\t\t\t\t\t\t\r\n\t\t\tng-disabled="!selectedItems.length || glob.depositInProgress"\r\n\t\t\tng-loading="glob.depositInProgress">\r\n\t\t\t<div>\r\n\t\t\t\t<span ng-if="!selectedItems.length"><any translate="inv_deposit"></any></span>\r\n\t\t\t\t<span ng-if="selectedItems.length"><any translate="inv_deposit_items_short" translate-value-amount="{{selectedItems.length}}"></any></span>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</button>\r\n\t</div>\t\r\n</div>\r\n\r\n\r\n\r\n<div class="items_wrap">\r\n\t<div class="banner_disabled" ng-if="mode==\'steam\' && !$root.sys.api.services.deposit">\r\n\t\t<span><any translate="dep_disabled"></any></span>\r\n\t</div>\r\n\r\n\t<div class="items">\r\n\r\n\t\t<div\r\n\t\tinfinite-scroll-container="\'.inventoryModal .items_wrap .items\'" \r\n\t\tinfinite-scroll=\'refresh(true)\' \r\n\t\tinfinite-scroll-disabled=\'(mode != "upgrade" && mode != "code_exchange") || glob.getitemsInProgress || !pagination.nextPage\'\r\n\t\tinfinite-scroll-distance=\'1\'>\r\n\r\n\t\t\t<div class="item_wrap angular-animate" \r\n\t\t\t\tng-repeat="item in items | filter:itemFilter | orderBy:\'price\':search.order==\'desc\'">\r\n\t\t\t\t\r\n\t\t\t\t<div class="item skin_item" \t\t\t\t\t\t\t\r\n\t\t\t\t\tng-click="toggleItem(item)" \r\n\t\t\t\t\tng-class="{\r\n\t\t\t\t\t\tisAdded:item.selected, \r\n\t\t\t\t\t\tdisabled:!itemAvailable(item)\r\n\t\t\t\t\t}">\r\n\t\t\t\t  \x3c!-- <img ng-src="{{\'https://steamcommunity-a.akamaihd.net/economy/image/\'+ item.icon_url+ \'/250/250\'}}" alt=""> --\x3e\r\n\t\t\t\t  <div color-glow="item.name_color"></div>\r\n\r\n\t\t\t\t  <div class="marker">\r\n\t\t\t\t  \t<div class="icon-chmark"></div>\r\n\t\t\t\t  </div>\r\n\r\n\t\t\t\t  <div class="price">${{::item.price | number:2}}</div>\r\n\t\t\t\t  <div class="wear" title="{{::$root.splitName(item).wear}}">{{::$root.splitName(item).short_wear}}</div>\r\n\r\n\t\t\t\t  <div class="thumb_wrap">\r\n\t\t\t\t  \t<div item-thumb="item.icon_url"></div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  \r\n\t\t\t\t  <div class="names" title="{{::item.market_hash_name}}">\r\n\t\t\t\t  \t<div class="first_name">{{::$root.splitName(item).fname}}</div>\r\n\t\t\t\t  \t<div class="last_name" ng-style="{color:\'#\'+item.name_color}">{{::$root.splitName(item).lname}}</div>\r\n\t\t\t\t  </div>\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\r\n\t\t</div>\r\n\r\n\t\t\r\n\t\t<div class="spinner" \r\n\t\t\tng-class="{inflow:items.length}"\r\n\t\t\tng-if="glob.getitemsInProgress || glob.getinventoryInProgress || glob.getsteamInProgress" \r\n\t\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\r\n\r\n\t\t<div class="no_items" ng-if="(mode==\'inventory\' || mode==\'select\' || mode==\'cf\') && !glob.getinventoryInProgress && !items.length">\r\n\t\t\t<div><any translate="inv_empty"></any></div>\r\n\t\t\t<button class="button orange_button" type="button" ng-click="close();$root.openInventory(\'steam\')">{{\'inv_deposit_btn\' | translate}}</button>\r\n\t\t</div>\t\r\n\r\n\t\t<div class="no_items" ng-if="mode==\'steam\' && !glob.getsteamInProgress && !items.length">\r\n\t\t\t<div class="smily">:(</div>\r\n\t\t\t<div><any translate="inv_steam_no_items"></any></div>\t\t\t\r\n\t\t</div>\t\t\t\t\r\n\t</div>\r\n</div>\r\n\r\n<div class="selected_items" ng-if="mode==\'upgrade\' || mode==\'code_exchange\'">\r\n\t<div class="inner_wrap">\r\n\t\t<div class="heading" ng-if="selectedItems.length">\r\n\t\t\t<div class="main"><any translate="inv_selected"></any></div>\r\n\t\t\t<div class="secondary"><any translate="items_amount" translate-value-amount="{{selectedItems.length}}"></any></div>\r\n\t\t</div>\r\n\t\t<div class="sel_items">\r\n\t\t\t<div ng-repeat="item in selectedItems" item-thumb="item.icon_url" ng-click="toggleItem(item)" title="{{item.market_hash_name}} | ${{item.price}}">\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n</div>\r\n\r\n<div class="bottom_banner" ng-if="mode==\'steam\'">\r\n\t{{\'inv_make_sure_available\' | translate}}\r\n</div>\r\n\r\n<div class="bottom_banner" ng-if="mode==\'inventory\'">\r\n\t{{\'inv_make_sure_available_withdraw\' | translate}}\r\n</div>\r\n\r\n\t\r\n'), $templateCache.put("modals/views/itemDeposits.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n\r\n<h2>Item search!</h2>\r\n<p class="lead">Enter here item name to fetch all item deposits.</p>\r\n\r\n<form ng-submit="lookupItem(itemname)">\r\n  <div class="f-group">\r\n    <label>Search for item</label>\r\n    <input type="text" name="" placeholder="Item name..." ng-model="itemname" required>\r\n  </div>\r\n\r\n  <button class="submit" type="submit" ng-disabled="glob.getgetItemDepositsInProgress" ng-loading="glob.getgetItemDepositsInProgress"><div>Lookup Item</div></button>\r\n\r\n\r\n\r\n  <div class="table_wrap" ng-if="deposits.length">\r\n      <hr>\r\n\r\n      <table>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>User ID</th>          \r\n          <th>Timestamp</th>\r\n        </tr>\r\n        <tr ng-repeat="deposit in deposits">\r\n          <td>{{deposit.name || deposit.username}}</td>\r\n          <td>{{deposit.userID}}</td>\r\n          <td>{{$root.moment(deposit.timestamp).format("DD/MMM/YYYY hh:mm")}}</td>\r\n        </tr>\r\n      </table>\r\n      \r\n     \r\n  </div>\r\n</form>\r\n'), $templateCache.put("modals/views/leavePromo.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2 ng-bind-html="\'free_bananas\' | translate | htmlSafe"></h2>\r\n\r\n<p ng-bind-html="\'leave_promo_expl\' | translate | htmlSafe"></p>\r\n\r\n<button class="submit" type="button" ng-disabled="glob.claimInventoryValuePromoInProgress" ng-loading="glob.claimInventoryValuePromoInProgress" ng-click="getInventoryPromo()">\r\n\t<any ng-bind-html="\'leave_promo_button\' | translate | htmlSafe"></any>\r\n</button>\r\n\r\n\r\n\r\n\r\n\r\n'), $templateCache.put("modals/views/promo.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2 ng-bind-html="\'free_bananas\' | translate | htmlSafe"></h2>\r\n<p class="lead" ng-bind-html="\'freeb_lead\' | translate | htmlSafe"></p>\r\n<div class="f-group">\r\n\t<label><any ng-bind-html="\'freeb_promo_code\' | translate | htmlSafe"></any>:</label>\r\n\t<input ng-model="code" focus-me type="text" placeholder="{{\'freeb_code_here\' | translate}}">\r\n</div>\r\n<button class="submit" ng-click="claimCode();" ng-disabled="waitingRes" ng-loading="waitingRes">\r\n\t<div ng-bind-html="\'freeb_submit\' | translate | htmlSafe"></div>\r\n</button>\r\n<i class="fa fa-times" ng-click="cancel()"></i>\r\n'), $templateCache.put("modals/views/rules.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel()"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n<h2><any ng-bind-html="\'rules_title2\' | translate | htmlSafe"></any></h2>\r\n<ol>\r\n\t  \x3c!-- <li><any ng-bind-html="\'rule_1\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_2\' | translate | htmlSafe"></any></li> --\x3e\r\n    <li><any ng-bind-html="\'rule_1a\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_3a\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_4\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_5\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_6\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_7\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_8\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_9\' | translate | htmlSafe"></any></li>\r\n  \t<li><any ng-bind-html="\'rule_10\' | translate | htmlSafe"></any></li>\r\n\t\t<li><any ng-bind-html="\'rule_11\' | translate | htmlSafe"></any></li>\r\n\t\t\x3c!-- <li><any ng-bind-html="\'rule_12\' | translate | htmlSafe"></any></li> --\x3e\r\n</ol>\r\n\x3c!-- <button ng-show="!$root.user.acceptedRules" class="submit" ng-click="accept()">Accept &amp; Enter</button> --\x3e\r\n'), $templateCache.put("modals/views/steamidMute.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n\r\n<h2>Mute!</h2>\r\n<p class="lead">By User\'s steamid</p>\r\n\r\n<form ng-submit="mute(itemname,perm)">\r\n\t\r\n  <div class="f-group">\r\n    <label>Enter Steam id</label>\r\n    <input type="text" name="" placeholder="Steam id..." ng-model="itemname" required>\r\n  </div>\r\n  <div class="f-group">\r\n\t\t<label class="round_switch" \r\n\t\t\tng-class="{active:perm}" \r\n\t\t\tng-click="perm = !perm">\r\n\t\t\t<span>Mute Permanently:</span>\r\n\t\t  \t<div class="slider"></div>\r\n\t\t</label>\r\n\t</div>\r\n\r\n  <button class="submit" type="submit" ng-disabled="glob.muteUserBySteamidInProgress" ng-loading="glob.muteUserBySteamidInProgress"><div>Mute</div></button>\r\n</form>\r\n'), $templateCache.put("modals/views/support.tpl.html", '<i class="fa icon-x" ng-click="cancel()"></i>\r\n\r\n\r\n\r\n\r\n\t<h2 ng-bind-html="\'support_call_to_action\' | translate | htmlSafe"></h2>\r\n\t<p class="lead" ng-bind-html="\'support_we_are_humans\' | translate | htmlSafe"></p>\r\n\t<p class="note top"><any ng-bind-html="\'support_before_send\' | translate | htmlSafe"></any> <a ui-sref="app.faq" ng-click="cancel();">FAQ</a></p>\r\n\r\n\t<form ng-submit="sendMail();">\r\n\t\t<div class="f-group">\r\n\t\t\t<label><any ng-bind-html="\'support_mail\' | translate | htmlSafe"></any></label>\r\n\t\t\t<input ng-model="message.email" placeholder="user@domain.com" type="text" required>\r\n\t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t       <label><any ng-bind-html="\'support_subj\' | translate | htmlSafe"></any></label>\r\n\t\t       <input ng-model="message.subject" placeholder="{{\'support_subj_field\' | translate}}" type="text" required>\r\n\t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t       <label><any ng-bind-html="\'support_message\' | translate | htmlSafe"></any></label>\r\n\t\t       <textarea ng-model="message.text" placeholder="{{\'support_message_field\' | translate}}" required></textarea>\r\n\t\t</div>\r\n\t\t<button class="submit" type="submit" ng-disabled="waitingRes" ng-loading="waitingRes">\r\n\t\t\t<any ng-bind-html="\'support_send\' | translate | htmlSafe"></any>\r\n\t\t</button>\r\n\t</form>\r\n\t\r\n\r\n\r\n\t<p class="note" ng-bind-html="\'support_lying\' | translate | htmlSafe"></p>\r\n\r\n\r\n\x3c!--<div class="live" ng-if="$root.liveChatOnline" ng-click="$root.popLiveSupport()">\r\n\tLive Support\r\n</div>--\x3e'),
    $templateCache.put("modals/views/tos.tpl.html", '<div class="icon-x" ng-click="cancel()"></div>\r\n\r\n<h2>Terms of Service</h2>\r\n<p>By using Bolt.gg you acknowledge that you are at least 18 years of age or the legal age in your jurisdiction and accept these Terms of Service to their entirety and without reservation. You are also agreeing to our Terms of Service and you are responsible for compliance with any applicable laws. These Terms of Service govern your use of this website. You must be at least 18 years of age to use Bolt.gg.</p>\r\n\r\n<h3>Intellectual Property</h3>\r\n<p>All materials on this website are intellectual property of Bolt.gg and you may not use any of the content seen here for commercial use without written permission. This includes the codebase (html/javascript/css), games, game mechanics, the layout/look-and-feel of the website, graphics, as well as any similar variations of the name Bolt.gg.</p>\r\n\r\n<h3>Acceptable Use</h3>\r\n<p>By using Bolt.gg, you acknowledge that you must not utilize Bolt.gg in any way that may cause damage, harm, or any harmful impairment to both the accessibility and availability of Bolt.gg nor in any manner which would be considered unlawful, illicit, harmful, or fraudulent. By using Bolt.gg you also acknowledge that Bolt.gg and it’s staff has at any time the right to access and modify your account balance, information and anything pertaining to your on-site account as this is both owned and controlled by the website and it’s owners.</p>\r\n\r\n<h3>Limitations of Liability</h3>\r\n<p>Use of our services is at your own risk. Bolt.gg, its owners and affiliates should / will never be held liable for any individual’s profits / loss gained on Bolt.gg. Bolt.gg and it’s affiliates assume no responsibility for any missed bets or loss of virtual currency / items.</p>\r\n\r\n<h3>Item Pricing</h3>\r\n<p>You are participating in online games / events that allow you to both put forth, deposit, and withdraw intangible items.  We provide each individual item with a set numerical evaluation in points. These values are subject to change without notice. By using Bolt.gg you are accepting our item evaluations and evaluation method. There will be no refund / compensation in the case of an evaluation issue/inaccuracy or account reset due to market manipulations.</p>\r\n\r\n<h3>On-site store</h3>\r\n<p>Intangible items composing solely of Counter-Strike: Global Offensive Skins may be deposited / put forth onto Bolt.gg’s on-site store in exchange for Bolt.gg’s virtual currency. Depositing Skins on Bolt.gg implies that you fully accept the item pricing terms and conditions and understand that any loss due to inaccuracy in market value does not constitute any compensation whatsoever. We are not responsible for the name tags or stickers attached to your Skins. Bolt.gg is not responsible for the loss of your Skins as a result of any third-parties including Steam.</p>\r\n\r\n<h3>Deposit</h3>\r\n<p>Any and all funds submitted for use on the Website  will be converted to provide you with an equivalent “value” in your balance on the Website. However, the sole use of the balance on the Website is for use on the Website. The balance does not represent real money and there is no method to “cash out” your virtual items from the Website, withdraw your site balance, demand a refund, or convert your Website balance or virtual items back to real dollars. You are purchasing a right to play on our Website using your site balance (depicted in dollars for ease of reference only) but those funds and your virtual items cannot be converted or refunded back to real dollars.</p>\r\n\r\n<h3>Retrieval Process</h3>\r\n<p>If items are lost on Bolt.gg in error, you must send a ticket within 3 days of the error via our support wizard located under Extras > Support. Keep in mind that any falsified evidence / fabricated story only serves to delay the process and henceforth may result in a permanent ban in regards to Bolt.gg.</p>\r\n\r\n<h3>Bans, Timeouts &amp; Conduct</h3>\r\n<p>Bolt.gg reserves the right to remove any user from our website without and for any reason. </p>\r\n\r\n<h3>Refunds</h3>\r\n<p>Bolt.gg is not in any way required to grant refunds or compensation for any issue whatsoever. By participating on this website you agree that you are always playing at your own risk with full acknowledgement of the terms of service.</p>\r\n\r\n<h3>Additional Terms and Conditions; EULAs</h3>\r\n<p>When you use G2A Pay services provided by G2A.COM Limited (hereinafter referred to as the "G2A Pay services provider") to make a purchase on our website, responsibility over your purchase will first be transferred to G2A.COM Limited before it is delivered to you. G2A Pay services provider assumes primary responsibility, with our assistance, for payment and payment related customer support. The terms between G2A Pay services provider and customers who utilize services of G2A Pay are governed by separate agreements and are not subject to the Terms on this website.<br>  \r\nWith respect to customers making purchases through G2A Pay services provider checkout, (i) the Privacy Policy of G2A Pay services provider shall apply to all payments and should be reviewed before making any purchase, and (ii) the G2A Pay services provider Refund Policy shall apply to all payments unless notice is expressly provided by the relevant supplier to buyers in advance. In addition the purchase of certain products may also require shoppers to agree to one or more End-User License Agreements (or "EULAs") that may include additional terms set by the product supplier rather than by Us or G2A Pay services provider. You will be bound by any EULA that you agree to.<br>\r\nWe and/or entities that sell products on our website by using G2A Pay services are primarily responsible for  warranty, maintenance, technical or product support services for those Products. We and/or entities that sell products on our website are primarily responsible to users for any liabilities related to fulfillment of orders, and EULAs entered into by the End-User Customer. G2A Pay services provider is primarily responsible for facilitating your payment.<br>\r\nYou are responsible for any fees, taxes or other costs associated with the purchase and delivery of your items resulting from charges imposed by your relationship with payment services providers or the duties and taxes imposed by your local customs officials or other regulatory body.<br>\r\nFor customer service inquiries or disputes, You may contact us by email at support@boltgg.zendesk.com.<br>\r\nQuestions related to payments made through G2A Pay services provider payment should be addressed to support@g2a.com.<br>\r\nWhere possible, we will work with You and/or any user selling on our website, to resolve any disputes arising from your purchase.\r\n</p>\r\n\r\n<h3>Contact details</h3>\r\n<p>\r\nCompany name: Air B.V.<br>\r\nCompany registered address: Ceresstraat 13, 4811 CA Breda<br>\r\nMerchant business address: Ceresstraat 13, 4811 CA Breda<br>\r\nThe company is registered in the Netherlands<br>\r\nRegistration number: 4892336918<br>\r\nContact e-mail: support@boltgg.zendesk.com<br>\r\n</p>\r\n\r\n<br>\r\n<p>Bolt.gg is not affiliated with Steam or the Valve Corporation.</p>\r\n'), $templateCache.put("modals/views/tradeURL.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<h2>{{\'sidebar_settings\' | translate}}</h2>\r\n\r\n<form ng-submit="updateSettings()" name="urlForm">\r\n\t<div class="f-group">\r\n\t\t<label>\r\n\t\t\t<span>{{\'turl_title\' | translate}}:</span>\t\t\r\n\t\t\t<a class="righty" href="https://steamcommunity.com/id/me/tradeoffers/privacy" target="_blank">{{\'settings_findhere\' | translate}}</a>\r\n\t\t</label>\r\n\t\t<input ng-model="url" type="text" ng-required>\r\n\t\t<p class="lead">{{\'turl_lead\' | translate}}</p>\r\n\t</div>\r\n\r\n\t<div class="f-group">\r\n\t\t<label>\r\n\t\t\t<span>{{\'turl_email\' | translate}}</span>\t\t\t\r\n\t\t</label>\r\n\t\t<input ng-model="email" type="email">\t\r\n\t\t\x3c!-- <p class="lead">{{\'turl_email_lead\' | translate}}</p>\t --\x3e\r\n\t</div>\r\n\r\n\t<div class="f-group">\r\n\t\t<label>\r\n\t\t\t<span>{{\'turl_seed\' | translate}}</span>\t\t\t\r\n\t\t</label>\r\n\t\t<input ng-model="$root.app.clientSeed" type="text">\r\n\t\t<p class="lead">{{\'turl_seed_lead\' | translate}}</p>\r\n\t</div>\r\n\r\n\t\r\n\r\n\t<div class="f-group">\r\n\t\t<label class="round_switch" ng-class="{active:$root.app.overunder}">\r\n\t\t\t<span>{{\'turl_overunder\' | translate}}</span>\r\n\t\t\t\r\n\t\t\t<div class="slider"></div>\r\n\t\t\t\r\n\t\t\t<input type="checkbox" ng-model="$root.app.overunder" class="checkbox">\t\t\t\t\t\t\r\n\t\t</label>\r\n\t</div>\r\n\r\n\r\n\r\n\t<button type="submit" \r\n\t\tclass="button orange_button submit" \r\n\t\tng-disabled="urlForm.$pristine || updateInProg" \r\n\t\tng-loading="updateInProg">\r\n\t\t<div ng-bind-html="\'update\' | translate | htmlSafe"></div>\r\n\t</button>\r\n</form>\r\n\r\n'), $templateCache.put("modals/views/twttrAnnounce.tpl.html", '\r\n<div class="icon-x"  ng-click="cancel();$root.app.twttrAnnounceRead=params.tweetId;$root.saveAppLocalStore();"></div>\r\n\x3c!-- <h2 ng-show="!$root.user.acceptedRules"><any ng-bind-html="\'rules_title\' | translate | htmlSafe"></any></h2> --\x3e\r\n\r\n<h2><any ng-bind-html="\'twa_title\' | translate | htmlSafe"></any></h2>\r\n\r\n\r\n\r\n<div class="tweet_wrap" ng-class="{fetched:!glob.fetchingTweet}">\r\n\t<div class="spinner" \t\r\n\t\tng-if="glob.fetchingTweet" \r\n\t\tng-include="\'app/partials/loader.tpl.html\'"></div>\r\n\t<div class="tweet" tweet="params.tweetId"></div>\r\n</div>\r\n\r\n<div twitter-follow></div>\r\n\r\n<div class="buttons">\r\n\t<button type="button" class="button orange_button" ng-click="goToGa()">{{\'howto_join_ga\' | translate}}</a>\r\n\t\r\n\t<button class="button bnw_button" type="button" ng-click="cancel();$root.app.twttrAnnounceRead=params.tweetId;$root.saveAppLocalStore();">{{\'howto_gotit\' | translate}}</button>\r\n\t\r\n\r\n</div>\r\n'), $templateCache.put("modals/views/user.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<div class="header">\r\n\t<p><img ng-src="{{public.img}}" alt=""></p>\r\n\t<p class="name"><a href="{{public.profileurl}}" target="_blank">@{{public.name}}</a></p>\r\n\t<p class="bio">{{public.bio}}</p>\r\n\t<p class="joined"><any ng-bind-html="\'user_joined_on\' | translate | htmlSafe"></any> {{public.joined | date}}</p>\r\n\t\x3c!-- <p class="bio" ng-if="public.bio.length > 0">"{{public.bio}}"</p> --\x3e\r\n\t\x3c!-- <blockquote ng-if="public.bio.length > 0">{{public.bio}}</blockquote> --\x3e\r\n</div>\r\n<div class="stats">\r\n\t<div class="row">\r\n\t\t<div class="stat">\r\n\t\t\t<div class="number">{{public.referralcodeuses | number}}</div>\r\n\t\t\t<div class="label" ng-bind-html="\'referrals\' | translate | htmlSafe"></div>\r\n\t\t</div>\r\n\t\t<div class="stat">\r\n\t\t\t<div class="number">{{public.totalBets | num:$root.user.thousands}}</div>\r\n\t\t\t<div class="label" ng-bind-html="\'user_tbet\' | translate | htmlSafe"></div>\r\n\t\t</div>\r\n\t\t<div class="stat">\r\n\t\t\t<div class="number">{{public.totalWinnings | num:$root.user.thousands}}</div>\r\n\t\t\t<div class="label" ng-bind-html="\'user_twon\' | translate | htmlSafe"></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="row">\r\n\t\t<div class="stat">\r\n\t\t\t<div class="number">{{public.totalWithdraws | num:$root.user.thousands}}</div>\r\n\t\t\t<div class="label" ng-bind-html="\'user_twithdraw\' | translate | htmlSafe"></div>\r\n\t\t</div>\r\n\t\t<div class="stat">\r\n\t\t\t<div class="number">{{public.totalDeposits | num:$root.user.thousands}}</div>\r\n\t\t\t<div class="label" ng-bind-html="\'user_tdeposits\' | translate | htmlSafe"></div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'), $templateCache.put("modals/views/userLookup.tpl.html", '<i class="fa fa-times" ng-click="cancel()"></i>\r\n<div class="userSearch">\r\n  <div class="quick">\r\n    <div class="f-group">\r\n      <label>Search for user</label>\r\n      <angucomplete-alt id="ex1" placeholder="Username.." pause="1000" selected-object="user" remote-url="{{root}}account/searchAccounts?match="\r\n        search-fields="name" title-field="name" image-field="img" description-field="steamid" minlength="1" input-class="search"\r\n      />\r\n    </div>\r\n    <div ng-if="user">\r\n      <div class="userTabs" ng-init="userTab = \'info\'">\r\n        <div ng-class="{\'active\':userTab == \'info\'}" ng-click="userTab = \'info\'">Info</div>\r\n        <div ng-class="{\'active\':userTab == \'trades\'}" ng-click="userTab = \'trades\'">Trade Offers</div>\r\n        <div ng-class="{\'active\':userTab == \'trans\'}" ng-click="userTab = \'trans\'">Transactions</div>\r\n      </div>\r\n      <div class="info" ng-if="userTab == \'info\'">\r\n        <h2>User Info For {{user.originalObject.name}}</h2>\r\n        <p>User ID: {{user.originalObject.id}}</p>\r\n        <p>IP: {{user.originalObject.ip}}</p>\r\n        <p>Joined: {{user.originalObject.joined | date}}</p>\r\n        <p>Last Login: {{user.originalObject.lastLogin | date}}</p>\r\n        <p>Profile URL: <a href="{{user.originalObject.profileurl}}">{{user.originalObject.profileurl}}</a></p>\r\n        <p>Referrals: {{user.originalObject.referralcodeuses | number}}</p>\r\n        <p>Steam ID: {{user.originalObject.steamid}}</p>\r\n        <p>Trade URL: <a href="{{user.originalObject.tradeUrl}}">{{user.originalObject.tradeUrl}}</a></p>\r\n        <p>Credits: {{user.originalObject.credits | number}}</p>\r\n        <p># of Bets: {{user.originalObject.totalBets | number}}</p>\r\n        <p>Total Winnings: {{user.originalObject.totalWinnings | currency}}</p>\r\n        <p># of Deposits: {{user.originalObject.totalDeposits | number}}</p>\r\n        <p># of Withdrawals: {{user.originalObject.totalWithdraws | number}}</p>\r\n        <p>Reason: {{user.originalObject.reason}}</p>\r\n        <p>{{user.originalObject}}</p>\r\n      </div>\r\n      <div class="trans arrayList" ng-if="userTab == \'trades\'">\r\n        <h2>Trade Offers For {{user.originalObject.name}}:</h2>\r\n        <table border=1>\r\n          <tr>\r\n            <td>Time</td>\r\n            <td>Bot</td>\r\n            <td>Status</td>\r\n            <td>type</td>\r\n            <td>Steam ID</td>\r\n            <td>Offer Code</td>\r\n            <td># of items</td>\r\n            <td>Total Value</td>\r\n            <td>Items</td>\r\n          </tr>\r\n          <tr ng-repeat="trade in userTradesArray | orderBy:\'timestamp\':true">\r\n            <td>{{trade.timestamp | date:\'medium\'}}</td>\r\n            <td>{{trade.botUsername}}</td>\r\n            <td>{{trade.tradeStatus}}</td>\r\n            <td>{{trade.type}}</td>\r\n            <td>{{trade.id}}</td>\r\n            <td>{{trade.offerID}}</td>\r\n            <td>{{trade.items.length}}</td>\r\n            <td>{{trade.value | currency}}</td>\r\n            <td>\r\n              <div ng-repeat="item in trade.items">\r\n                {{ item.market_hash_name }}, {{ item.price }}<br/>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <div class="trans arrayList" ng-if="userTab == \'trans\'">\r\n        <h2>Transactions For {{user.originalObject.name}}:</h2>\r\n        <p>these go back 7 days</p>\r\n        <table border=1>\r\n          <tr>\r\n            <th>Time</th>\r\n            <th>Amount</th>\r\n            <th>New Balance</th>\r\n            <th>Transaction Type</th>\r\n            <th>Meta Data</th>\r\n          </tr>\r\n          <tr ng-repeat="tran in userTransArray | orderBy:\'timestamp\':true">\r\n            <td>{{tran.timestamp | date:\'medium\'}}</td>\r\n            <td>{{tran.amount | number}}</td>\r\n            <td>{{tran.balance | number}}</td>\r\n            <td>{{tran.transactionType}}</td>\r\n            <td>{{tran.metadata}}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>'), $templateCache.put("modals/views/welcome.tpl.html", '<h2><any ng-bind-html="\'welcome_title\' | translate | htmlSafe"></any></h2>\r\n<p class="lead"><any ng-bind-html="\'welcome_lead\' | translate | htmlSafe"></any></p>\r\n\r\n<div class="list">\r\n\t<div class="item">\r\n\t\t<img src="img/welcome_deposit.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_newUser\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_newUser_desc\' | translate | htmlSafe"></any> <span>({{$root.referrerID ? \'0.5\' : \'0.1\'}} start + 1 on first deposit)</span></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="item">\r\n\t\t<img src="img/welcome_trivia.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_freeGiveaways\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_freeGiveaways_desc\' | translate | htmlSafe"></any></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="item">\r\n\t\t<img src="img/welcome_referral.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_ref\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_ref_desc\' | translate | htmlSafe"></any></p>\r\n\t\t</div>\r\n\t</div>\r\n\t\x3c!--<div class="item">\r\n\t\t<img src="img/welcome_twitch.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_twitch\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_twitch_desc\' | translate | htmlSafe"></any></p>\r\n\t\t</div>\r\n\t</div>--\x3e\r\n\t<div class="item">\r\n\t\t<img src="img/welcome_support.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_support\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_support_desc\' | translate | htmlSafe"></any></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="item">\r\n\t\t<img src="img/welcome_community.png" alt="">\r\n\t\t<div class="info">\r\n\t\t\t<h3><any ng-bind-html="\'welcome_com\' | translate | htmlSafe"></any></h3>\r\n\t\t\t<p><any ng-bind-html="\'welcome_com_desc\' | translate | htmlSafe"></any></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<button ng-if="!errored" ng-click="claimBonus()" ng-disabled="waitingRes"><i class="icon-bananas"></i><span><any ng-bind-html="\'welcome_claim\' | translate | htmlSafe"></any></span><i class="icon-bananas"></i></button>\r\n\t<button ng-if="errored" ng-click="cancel()" class="error">{{err}} <div>(Click To Close)</div></button>\r\n</div>'), $templateCache.put("ref/views/ref.tpl.html", '<div class="ref_view with_recent_upgrades">\r\n\t\x3c!--/////////////////////////WELCOME SCREEN///////////////////////////////////--\x3e\r\n\t<div class="welcome header_padded">\r\n\t\t<div class="moto">\r\n\t\t\t<div translate="ref_congrats_title"></div>\r\n\t\t\t<div class="subhead" translate="ref_we_got_skins"></div>\t\t\t\t\r\n\t\t</div>\r\n\t\t\x3c!-- <div class="icon-logo">\r\n\t\t\t<div electro-circles passive="true"></div>\r\n\t\t</div> --\x3e\r\n\t\t<div class="icon-bolt_mascot">\t\r\n\t\t\t<div class="snow_flakes" snow-flakes particles="10" ng-if="$root.theme == \'xmas\'" active="true"></div>\r\n\t\t\t<div electro-circles passive="true"></div>\t\r\n\t\t\t<div class="bats_container">\r\n\t\t\t\t<div bat-animated class="bat_animated bat-1" active="true"></div>\r\n\t\t\t\t<div bat-animated class="bat_animated bat-2" active="true"></div>\r\n\t\t\t\t<div bat-animated class="bat_animated bat-3" active="true"></div>\r\n\t\t\t\t<div bat-animated class="bat_animated bat-4" active="true"></div>\r\n\t\t\t</div>\t\t\r\n\t\t</div>\r\n\t\t<div class="lead">\r\n\t\t\t<div translate="ref_welcome_expl" translate-value-code="{{refCode}}"></div>\r\n\t\t\t<div class="accent" ng-if="!$root.user"><any translate="ref_signin_a"></any></div>\r\n\t\t\t<div class="secondary" ng-if="$root.user"><any translate="ref_clicking_a"></any></div>\r\n\t\t</div>\r\n\t\t<button type="button" \r\n\t\t\tclass="button orange_button redeem_button"\r\n\t\t\tng-click="redeemRefCode()"\r\n\t\t\tng-disabled="glob.referralInProgress"\r\n\t\t\tng-loading="glob.referralInProgress"\r\n\t\t\tng-if="$root.user">\r\n\t\t\t{{\'ref_redeem_a\' | translate}}\r\n\t\t</button>\r\n\t\t<a class="button orange_button signin_button" ng-click="$root.signIn()" ng-if="!$root.user">\r\n\t\t\t<span class="icon icon-steam_round"></span><span translate="signIn_steam"></span>\r\n\t\t</a>\r\n\t</div>\r\n\t\x3c!--//////////////////////////////////////////////////////////////////////////--\x3e\r\n</div>'), $templateCache.put("rewards/views/rewards.tpl.html", '<div class="rewards_view padded_view">\t\r\n\t<div class="wrap">\r\n\t\t<div class="view_header">\r\n\t\t\t<div class="main_text" ng-bind-html="\'rewards_title\' | translate | htmlSafe"></div>\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class="block_wrapper">\r\n\t\t\t<div class="reward_block">\r\n\t\t\t\t<div class="heading" ng-bind-html="\'rewards_twitter_title\' | translate | htmlSafe"></div>\r\n\t\t\t\t<div class="text" ng-bind-html="\'rewards_twitter_lead\' | translate | htmlSafe">\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\x3c!-- <input type="text" class="glass_input" placeholder = "Twitter handle" ng-model="twitter_name" required> --\x3e\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<a ng-if="!$root.user.isTwitterFollower" class="button blue_button" ng-href="{{glob.prepareUrl(\'/twitter/connect\')}}" target="_blank" >\r\n\t\t\t\t\t\t<span ng-bind-html="\'rewards_claim\' | translate | htmlSafe"></span><span class="amount">0.1</span><span class="icon-bananas"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div class="button gray_button" ng-if="$root.user.isTwitterFollower" ng-bind-html="\'rewards_claimed\' | translate | htmlSafe"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="block_wrapper">\t\r\n\t\t\t<form class="reward_block" ng-submit="checkGroup()">\r\n\t\t\t\t<div class="heading"><any ng-bind-html="\'rewards_steam_title\' | translate | htmlSafe"></any></div>\r\n\t\t\t\t<div class="text" ng-bind-html="\'rewards_steam_lead\' | translate | htmlSafe">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button ng-if="!$root.user.steamGroupVerified" type="submit" class="button blue_button" ng-disabled="glob.checkSteamGroupMembershipInProgress" ng-loading="glob.checkSteamGroupMembershipInProgress">\r\n\t\t\t\t\t\t<span ng-bind-html="\'rewards_claim\' | translate | htmlSafe"></span><span class="amount">0.1</span><span class="icon-bananas"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div class="button gray_button" ng-if="$root.user.steamGroupVerified"><any ng-bind-html="\'rewards_claimed\' | translate | htmlSafe"></any></div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t\t<div class="block_wrapper">\r\n\t\t\t<form class="reward_block" ng-submit="verifyEmail(email)">\r\n\t\t\t\t<div class="heading"><any ng-bind-html="\'rewards_email_title\' | translate | htmlSafe"></any></div>\r\n\t\t\t\t<div class="text" ng-bind-html="\'rewards_email_lead\' | translate | htmlSafe">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<input type="text" class="glass_input" placeholder = "Email" ng-model="email" required>\t\r\n\t\t\t\t<div>\t\t\t\t\t\r\n\t\t\t\t\t<button ng-if="!$root.user.emailVerified" type="submit" class="button blue_button" ng-disabled="glob.sendVerifyEmailInProgress" ng-loading="glob.sendVerifyEmailInProgress">\r\n\t\t\t\t\t\t<span ng-bind-html="\'rewards_claim\' | translate | htmlSafe"></span><span class="amount">0.1</span><span class="icon-bananas"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div class="button gray_button" ng-if="$root.user.emailVerified"><any ng-bind-html="\'rewards_claimed\' | translate | htmlSafe"></any></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t\t\r\n\t</div>\r\n\t\r\n\t\r\n\t\r\n\t\r\n</div>\r\n\r\n'), $templateCache.put("settings/views/settings.tpl.html", '<div class="settings">\r\n\t<div class="wrap">\r\n\t\t<div class="image_wrap">\r\n\t\t\t\t\t    \r\n\t\t    <svg class="donut_svg" width="160" height="160" xmlns="http://www.w3.org/2000/svg">\r\n\t\t     <g>\t\t      \r\n\t\t      <circle id="circle" class="donut" r="77" cy="80" cx="80" ng-style="{\r\n\t\t      \t\'stroke-dashoffset\': 484 - (484*calcLevelFraction())\r\n\t\t      }"/>\r\n\t\t     </g>\r\n\t\t    </svg>\r\n\t\t\t\r\n\t\t\t<div class="profile-img">\r\n\t\t\t\t<img ng-src="{{$root.user.img}}" class="img-responsive" alt="">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class="name">\r\n\t\t\t{{$root.user.name}}\r\n\t\t</div>\r\n\t\t\x3c!-- <hr> --\x3e\r\n\t\t<div class="currentLevelWrap">\r\n\t\t\t<div class="currentLevel">\r\n\t\t\t\t<span class="info">{{\'settings_level\' | translate}}</span>\r\n\t\t\t\t<span class="level">{{$root.user.levelInfo.level}}</span>\r\n\t\t\t\t<span class="new" ng-if="$root.user.lastClaimedLevel < $root.user.expLevel">{{\'settings_new_level\' | translate}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class="new_level" ng-if="$root.user.lastClaimedLevel < $root.user.expLevel">\r\n\t\t\t<button ng-click="$root.claimLevels()" class="button orange_button" ng-disabled="glob.claimLevelsInProgress" ng-loading="glob.claimLevelsInProgress">{{\'claim_free_bananas\' | translate}}</button>\r\n\t\t</div>\r\n\t\t\x3c!-- <div class="levelWrap">\r\n\t\t\t<div class="levelProgress">\r\n\t\t\t\t<div class="inner" style="width: {{($root.user.levelInfo.exp-$root.user.levelInfo.lowerRange)/($root.user.levelInfo.upperRange-$root.user.levelInfo.lowerRange)*100}}%"></div>\r\n\t\t\t\t<div class="lower">{{$root.user.levelInfo.lowerRange | number}}</div>\r\n\t\t\t\t<div class="upper">{{$root.user.levelInfo.upperRange | number}}</div>\r\n\t\t\t</div>\r\n\t\t</div> --\x3e\r\n\r\n\t\t<hr>\r\n\r\n\t\t<div class="f-group">\r\n\t\t\t<label>{{\'settings_theme\' | translate}}</label>\r\n\t\t\t<select ng-model="settings.themePath">\r\n\t\t\t\t<option value="/css/app.css">Blue/Orange</option>\r\n\t\t\t\t\x3c!-- <option value="/css/blackOrange.css">Black/Orange</option> --\x3e\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t\t<label><span>{{\'settings_tradeurl\' | translate}}</span><a class="righty" href="https://steamcommunity.com/id/me/tradeoffers/privacy" target="_blank">{{\'settings_findhere\' | translate}}</a></label>\r\n\r\n\t\t\t<input class="trade_url" type="text" ng-model="settings.tradeUrl" placeholder="{{\'settings_tradeurl\' | translate}}">\r\n\t\t\t\t\r\n\t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t\t<label><span>{{\'settings_bio\' | translate}}</span><span class="righty" ng-bind-html="\'settings_limit\' | translate"></span></label>\t\t\t\t\r\n\t\t\t<textarea  ng-model="settings.bio" placeholder="{{\'settings_bio_field\' | translate}}"></textarea>\r\n\t\t\t\x3c!-- <input type="text"> --\x3e\r\n\t\t</div>\r\n\t\x3c!-- \t<div class="f-group">\r\n\t\t\t<label>Banana Ratio:</label>\r\n\t\t\t<div class="checkbox">\r\n\t\t\t  <label><input type="checkbox" ng-model="settings.thousands">Decimal (1 = 1.000)</label>\r\n\t\t\t</div>\r\n\t\t</div> --\x3e\r\n\t\t<div class="f-group">\r\n\t\t\t<label><span>{{\'settings_lang\' | translate}}</span></label>\r\n\t\t\t<select ng-model="settings.locale">\r\n\t\t\t\t<option value="en-US">English</option>\r\n\t\t\t\t<option value="pl">Polish</option>\r\n\t\t\t\t<option value="chi">Chinese</option>\r\n\t\t\t\t<option value="ru">Russian</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t\t<div>\t\t\t\t\r\n\t\t\t\t<label class="round_switch" \r\n\t\t\t\t\tng-class="{active:settings.notify==\'on\'}" \r\n\t\t\t\t\tng-click="settings.notify = settings.notify==\'on\' ? \'off\' : \'on\'">\r\n\t\t\t\t\t<span><any ng-bind-html="\'settings_notifs\' | translate | htmlSafe"></any></span>\r\n\t\t\t\t  \t<div class="slider"></div>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\x3c!-- <select ng-model="settings.notify">\r\n\t\t\t\t<option value="on">On</option>\r\n\t\t\t\t<option value="off">Off</option>\r\n\t\t\t</select> --\x3e\r\n   \t\t</div>\r\n\t\t<div class="f-group">\r\n\t\t\t<button class="submit button orange_button" ng-click="save();">\r\n\t\t\t\t<any ng-bind-html="\'settings_save\' | translate | htmlSafe"></any>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\r\n\r\n\t\t<form name="seedForm"  class="f-group seed_form" ng-submit="saveSeed(settings.clientSeed, seedForm)">\r\n\t\t\t<label>\r\n\t\t\t\t{{\'settings_change_seed\' | translate}}\t\t\t\t\r\n\t\t\t</label>\r\n\t\t\t<span class="note" ng-bind-html="\'settings_change_seed_lead\' | translate | htmlSafe"></span>\r\n\t\t\t\r\n\r\n\r\n\t\t\t<div class="subm_input_wrapper">\r\n\t\t\t\t<textarea type="text" ng-model="settings.clientSeed" required/></textarea>\r\n\t\t\t\t<button type="submit" ng-disabled="seedForm.$pristine || glob.setClientSeedInProgress">\r\n\t\t\t\t\t<div awaiting-loader ng-if="glob.setClientSeedInProgress"></div>\r\n\t\t\t\t\t<div ng-if="!glob.setClientSeedInProgress">\r\n\t\t\t\t\t\t<div class="bg"></div>\r\n\t\t\t\t\t\t<span class="icon icon-chmark"></span>\r\n\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t</button>\r\n\t\t\t</div>\t\t\r\n\t\t</form>\r\n\r\n\t</div>\r\n</div>\r\n'), $templateCache.put("sidebar/views/sidebar.tpl.html", '\r\n\r\n<div class="sidebar">\r\n\t\t\r\n\t\r\n\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\x3c!-- </ul> --\x3e\r\n\t<div class="cont">\r\n\t\t\r\n\r\n\t\t<chat></chat>\r\n\t\t\r\n\t</div>\r\n</div>\r\n'),
    $templateCache.put("upgrade/views/upgrade.tpl.html", '<div class="upgrade_view with_recent_upgrades">\r\n\t\r\n\t<div class="wrap">\r\n\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\t\t\r\n\t\t\x3c!--/////////////////////////SIGN IN SCREEN///////////////////////////////////--\x3e\r\n\t\t<div class="authenticate header_padded" ng-if="mode==\'auth\'">\r\n\t\t\t<h1 class="moto" translate="signIn_desc">\r\n\t\t\t\t\r\n\t\t\t</h1>\r\n\t\t\t<div class="aspect_container">\r\n\t\t\t\t<div class="mascot_container">\r\n\t\t\t\t\t<div class="icon-bolt_mascot">\r\n\t\t\t\t\t\t<div class="snow_flakes" snow-flakes ng-if="$root.theme==\'xmas\'" active="true" particles="10"></div>\r\n\t\t\t\t\t\t<div class="bats_container big_bats">\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-1" active="true"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-2" active="true"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-3" active="true"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-4" active="true"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<a class="button orange_button" ng-click="$root.signIn()">\r\n\t\t\t\t<span class="icon icon-steam_round"></span><span translate="signIn_steam"></span>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t\t\x3c!--//////////////////////////////////////////////////////////////////////////--\x3e\r\n\r\n\r\n\t\t\r\n\r\n\r\n\t\t\x3c!--/////////////////////////UPGRADE GAME///////////////////////////////////--\x3e\r\n\r\n\t\t<div class="upgrade_view_wrapper header_padded" ng-if="mode==\'upgrade\'" >\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div class="upgrade_visuals inline_mode" \t\t\t\t\r\n\t\t\t\tng-class="{\t\t\t\t\r\n\t\t\t\t\tanim_mode:anim.status,\t\t\t\t\r\n\t\t\t\t\tanim_resolved: anim.status == \'resolved\',\r\n\t\t\t\t\tanim_success: anim.status == \'resolved\' && anim.success,\r\n\t\t\t\t\tselect_mode: true,\r\n\t\t\t\t\tanim_fail: anim.status == \'resolved\' && !anim.success\r\n\t\t\t\t}">\r\n\r\n\r\n\r\n\t\t\t\t<div class="background" \r\n\t\t\t\t\telectro-circles\t\t\t\t\r\n\t\t\t\t\tuser-color="selectedItems[0].name_color"\r\n\t\t\t\t\tupgrade-color="upgradeItems[0].name_color"\r\n\t\t\t\t\tuser-classes="{\r\n\t\t\t\t\t\tactive:selectedItems.length\t\t\t\t\t\t\r\n\t\t\t\t\t}"\r\n\t\t\t\t\tupgrade-classes="{\r\n\t\t\t\t\t\tactive:upgradeItems.length\t\t\t\t\t\t\r\n\t\t\t\t\t}"\t\t\t\t\r\n\t\t\t\t\tupdate="upgradeItems.length || selectedItems.length" \t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tanimation-handle="anim"\r\n\t\t\t\t\tskip-animation="anim.instant"\r\n\t\t\t\t\tng-class="{\r\n\t\t\t\t\t\tupgrading:anim.status && !anim.instant\r\n\t\t\t\t\t}">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div class="entries">\r\n\r\n\t\t\t\t\t<div class="items_wrapper user_items_wrapper">\r\n\t\t\t\t\t\t<div class="call_to_action angular-animate" ng-if="!selectedItems.length">\r\n\t\t\t\t\t\t\t<div ng-if="!selectedItems.length" class="head" ng-bind-html="\'upg_select_its_br\' | translate | htmlSafe"></div>\r\n\t\t\t\t\t\t\t\x3c!-- <button class="button orange_button" ng-click="selectItems()">Choose</button> --\x3e\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="items_info">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span class="head">\r\n\t\t\t\t\t\t\t\t<span ng-bind-html="\'upgrade_your_its\' | translate | htmlSafe" ></span> <span class="price" ng-if="selectedItems.length">${{$root.itemsValue(selectedItems) | number:2}}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div class="user_items items_preview not_selected" ng-class="{manyItems:selectedItems.length > 1}" ng-click="selectItems()">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div color-glow="selectedItems[0].name_color"></div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item angular-animate"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tng-repeat="item in selectedItems | limitTo:(selectedItems.length <= 9 ? 9 : 8)" \r\n\t\t\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item" ng-if="selectedItems.length > 9" >\r\n\t\t\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t\t\t<span>+{{selectedItems.length-8}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div class="item_data" >\r\n\t\t\t\t\t\t\t\t<span ng-if="selectedItems.length == 1">\r\n\t\t\t\t\t\t\t\t\t<div class="fname">{{selectedItems[0].market_hash_name | itemName:\'fname\'}}</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span class="lname" ng-style="{color:\'#\'+selectedItems[0].name_color}">{{selectedItems[0].market_hash_name | itemName:\'lname\'}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class="wear" title="{{$root.splitName(selectedItems[0]).wear}}"> {{$root.splitName(selectedItems[0]).short_wear}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span class="items_amount" ng-if="selectedItems.length > 1">\r\n\t\t\t\t\t\t\t\t\t<div class="lname" ng-style="{color:\'#\'+selectedItems[0].name_color}">\r\n\t\t\t\t\t\t\t\t\t\t<any translate="items_amount" translate-value-amount="{{selectedItems.length}}"></any>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div class="items_wrapper upgrade_items_wrapper">\r\n\r\n\t\t\t\t\t\t<div class="call_to_action angular-animate" ng-if="!upgradeItems.length && !glob.getitemInProgress">\r\n\t\t\t\t\t\t\t<div class="mascot_wrapper">\r\n\t\t\t\t\t\t\t\t<div class="icon icon-bolt_mascot"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\x3c!-- <div class="button white_button" ng-click="selectUpgradeItems()">View Bolt inventory</div> --\x3e\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="items_info" ng-loading="glob.getitemInProgress">\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<span class="head">\r\n\t\t\t\t\t\t\t\t<span ng-bind-html="\'upgrade\' | translate | htmlSafe"></span> <span class="price" ng-if="selectedItems.length">${{$root.itemsValue(upgradeItems) | number:2}}</span>\r\n\t\t\t\t\t\t\t</span>\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t<div class="upgrade_items items_preview" ng-class="{manyItems:upgradeItems.length > 1}" ng-click="selectUpgradeItems()">\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div color-glow="upgradeItems[0].name_color"></div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item angular-animate"\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tng-repeat="item in upgradeItems | limitTo:(upgradeItems.length <= 9 ? 9 : 8)" \r\n\t\t\t\t\t\t\t\t\ttitle="{{item.market_hash_name}} | {{item.price}}" >\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div item-thumb="item.icon_url" class="item_thumb"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class="item" ng-if="upgradeItems.length > 9" >\r\n\t\t\t\t\t\t\t\t\t<div class="and_more">\r\n\t\t\t\t\t\t\t\t\t\t<span>+{{upgradeItems.length-8}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="item_data" >\r\n\t\t\t\t\t\t\t\t<span ng-if="upgradeItems.length == 1">\r\n\t\t\t\t\t\t\t\t\t<div class="fname">{{upgradeItems[0].market_hash_name | itemName:\'fname\'}}</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span class="lname" ng-style="{color:\'#\'+upgradeItems[0].name_color}">{{upgradeItems[0].market_hash_name | itemName:\'lname\'}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class="wear" title="{{$root.splitName(upgradeItems[0]).wear}}"> {{$root.splitName(upgradeItems[0]).short_wear}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t<span class="items_amount" ng-if="upgradeItems.length > 1">\r\n\t\t\t\t\t\t\t\t\t<div class="lname" ng-style="{color:\'#\'+upgradeItems[0].name_color}">\r\n\t\t\t\t\t\t\t\t\t\t<any translate="items_amount" translate-value-amount="{{upgradeItems.length}}"></any>\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div class="upgrade_middle" ng-class="{select_mode:false}">\r\n\r\n\t\t\t\t\t<div class="stat chance_stat">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class="inliner">\r\n\t\t\t\t\t\t\t<div class="head">{{\'upg_chance\' | translate}}</div>\r\n\t\t\t\t\t\t\t<div class="num">\r\n\t\t\t\t\t\t\t\t<div>{{calcChance() | number:2}}%</div><div class="bonus" ng-if="bonusActive()">+{{calcBonus() | number:2}}%</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<div class="controls">\r\n\t\t\t\t\t\t<div class="fog"></div>\r\n\t\t\t\t\t\t<div class="snow_flakes" snow-flakes particles="5" ng-if="$root.theme == \'xmas\'" active="anim.status"></div>\r\n\t\t\t\t\t\t<div class="bats_container">\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-1" active="anim.status"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-2" active="anim.status"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-3" active="anim.status"></div>\r\n\t\t\t\t\t\t\t<div bat-animated class="bat_animated bat-4" active="anim.status"></div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="anim_holder angular-animate" ng-if="anim.status">\r\n\t\t\t\t\t\t\t<div class="icon-bolt"></div>\r\n\t\t\t\t\t\t\t<div class="result_container success_container">\r\n\t\t\t\t\t\t\t\t\x3c!-- <div class="fog"></div> --\x3e\r\n\t\t\t\t\t\t\t\t<div class="roll" translate="upg_roll" translate-value-roll="{{upgrade.roll}}" ng-if="$root.app.overunder"></div>\r\n\t\t\t\t\t\t\t\t<div class="icon icon-upgrade_success"></div>\r\n\t\t\t\t\t\t\t\t<div>{{\'upg_win\' | translate}}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="result_container fail_container">\r\n\t\t\t\t\t\t\t\t\x3c!-- <div class="fog"></div> --\x3e\r\n\t\t\t\t\t\t\t\t<div class="roll" translate="upg_roll" translate-value-roll="{{upgrade.roll}}" ng-if="$root.app.overunder"></div>\r\n\t\t\t\t\t\t\t\t<div class="icon icon-upgrade_fail"></div>\r\n\t\t\t\t\t\t\t\t<div>{{\'upg_lost\' | translate}}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="container angular-animate">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class="multipliers">\r\n\t\t\t\t\t\t\t\t<div class="mult" \r\n\t\t\t\t\t\t\t\t\tng-repeat="m in mults" \r\n\t\t\t\t\t\t\t\t\tng-click="switchMult(m)"\r\n\t\t\t\t\t\t\t\t\tng-class="{active:upgrade.mult===m}">\r\n\t\t\t\t\t\t\t\t\t{{m}}x\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="mult custom" \r\n\t\t\t\t\t\t\t\t\tng-click="selectUpgradeItems()"\r\n\t\t\t\t\t\t\t\t\tng-class="{active:upgrade.mult==\'custom\'}">\r\n\t\t\t\t\t\t\t\t\t{{\'upg_custom_it\' | translate}}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<button type="button" \r\n\t\t\t\t\t\t\t\tclass="button orange_button" \r\n\t\t\t\t\t\t\t\tng-click="startUpgrade()" \r\n\t\t\t\t\t\t\t\tng-disabled="!selectedItems.length || !upgradeItems.length || glob.resolveInProgress"\r\n\t\t\t\t\t\t\t\tng-loading="glob.resolveInProgress">\r\n\t\t\t\t\t\t\t\t{{\'upg_start\' | translate}}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<div class="highLow" ng-if="$root.app.overunder && (!$root.abtest.variation || $root.abtest.variation == 0)">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class="button white_button" ng-class="{inactive:upgrade.highLow!=\'low\'}" ng-click="upgrade.highLow=\'low\'">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>{{\'upg_roll_under\' | translate}}</span> <num ng-if="calcChance()">{{calcBonusChance() | number:2}}</num>\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button class="button white_button" ng-class="{inactive:upgrade.highLow!=\'high\'}" ng-click="upgrade.highLow=\'high\'">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>{{\'upg_roll_over\' | translate}}</span> <num ng-if="calcChance()">{{(100-calcBonusChance()) | number:2}}</num>\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</button>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="highLow" ng-if="$root.app.overunder && $root.abtest.variation == 1">\r\n\t\t\t\t\t\t\t\t<div class="slider_container">\r\n\t\t\t\t\t\t\t\t\t<div class="top_text">\r\n\t\t\t\t\t\t\t\t\t\t<span class="under" ng-click="upgrade.range={begin:0}">{{\'upg_roll_range_under\' | translate}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class="range">{{upgrade.range.begin | number:2}} - {{upgrade.range.end | number:2}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class="over" ng-click="upgrade.range={begin:100-calcBonusChance()}">{{\'upg_roll_range_over\' | translate}}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div jq-range-slider class="rangeSlider" ng-model="upgrade.range" range="calcBonusChance()"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<div class="switches">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<label class="round_switch" ng-class="{active:anim.instant}">\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class="slider"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" ng-model="anim.instant" class="checkbox">\r\n\t\t\t\t\t\t\t\t\t<span><any translate="upg_skip_anim"></any></span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\x3c!-- <label class="round_switch" ng-class="{active:upgrade.over}">\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class="slider"></div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" ng-model="upgrade.over" class="checkbox">\r\n\t\t\t\t\t\t\t\t\t<span><any translate="upg_roll_over"></any></span>\r\n\t\t\t\t\t\t\t\t</label> --\x3e\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="banner_disabled" ng-if="!$root.sys.api.services.upgrade">\r\n\t\t\t\t\t\t\t\t<span translate="upgrade_disabled"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="stat mult_stat">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class="inliner">\r\n\t\t\t\t\t\t\t<div class="head"><any translate="upg_multiplier"></any></div>\r\n\t\t\t\t\t\t\t<div class="num">\r\n\t\t\t\t\t\t\t{{calcMult()  | number:2}}x\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div class="buttons">\r\n\t\t\t\t\t<div class="button_wrap" >\r\n\t\t\t\t\t\t<button class="button orange_button" ng-click="selectItems()" ng-disabled="glob.resolveInProgress || anim.status"><any translate="your_inventory"></any></button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="howto_button" ng-click="$root.openHowto();" title="{{\'upg_howto\' | translate}}">?</div>\r\n\r\n\t\t\t\t\t<div class="button_wrap" >\r\n\t\t\t\t\t\t<button class="button white_button" ng-click="selectUpgradeItems()" ng-disabled="glob.resolveInProgress || anim.status"><any translate="bolt_inventory"></any></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="howto_inline" ng-click="$root.openHowto();">\r\n\t\t\t\t\t<span>{{\'upg_howto\' | translate}}</span><span class="howto_button">?</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t' +
      '<div style="background-color: #202e6a;padding-right:0">\n' +
      '\t<input class="input" ng-model="promo.value" type="text" ng-attr-placeholder="{{\'promo_placeholder\' | translate}}"/>\n' +
      '\t<button class="button orange_button" ng-disabled="promo.value.length < 1" ng-click="sendPromo()">\n' +
      '\t\t<any translate="send_promo">送</any>\n' +
      '\t</button>\n' +
      '</div>' +
          '<div class="fair">\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span translate="upg_hash" translate-value-hash="{{upgrade.provablyFair}}"></span>\r\n\t\t\t\t\t\t\x3c!-- <span class="icon icon-refresh" ng-click="refreshHash()" title="{{\'upg_hash_gen_title\' | translate}}"></span> --\x3e\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div translate="upg_salt" translate-value-salt="{{upgrade.salt}}"></div>\r\n\t\t\t\t\t<div translate="upg_client_seed" translate-value-seed="{{upgrade.client_seed}}"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t</div>\r\n\t\r\n\t\r\n</div>\r\n'), $templateCache.put("nav/views/nav.tpl.html", '<div class="nav">\r\n\t<div class="true_nav">\r\n\t\t<div class="left_stuff">\r\n\t\t\t<div class="logo" ui-sref="app.home">\r\n\t\t\t\t<a href="/">\r\n\t\t\t\t\t<div class="icon-logo big_logo"></div>\t\r\n\t\t\t\t\t<div class="icon-logo_small small_logo"></div>\t\t\t\t\t\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="jackolantern">\r\n\t\t\t\t\x3c!-- <div class="icon icon-jackolantern" ng-click="$root.switchHalloween()" ng-class="{active:$root.app.halloween}">\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t</div> --\x3e\r\n\t\t\t\t\r\n\t\t\t\t<div class="dropdown theme_selector" ng-class="{expanded:themesExpanded}" click-away="themesExpanded=false">\r\n\t\t\t\t\t<div class="label_holder" ng-click="themesExpanded = !themesExpanded;$root.app.themesNote=false;$root.app.chinyThemeNote=false;$root.saveAppLocalStore();">\r\n\t\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t\t<div class="themeIcon" ng-class="$root.theme || \'blue\'">\r\n\t\t\t\t\t\t\t\t<span class="icon icon-snowflake3" ng-if="$root.theme==\'xmas\' || $root.theme==\'xmasga\'"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul class="dropdown-menu angular-animate ng-hide" ng-show="themesExpanded">\r\n\t\t\t\t\t\t<div class="head">Themes</div>\r\n\t\t\t\t\t\t<li ng-repeat="(name,theme) in $root.themes" ng-click="$root.switchTheme(name);$parent.themesExpanded=false" ng-if="!theme.hidden">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span class="themeIcon" ng-class="name">\r\n\t\t\t\t\t\t\t\t<span class="icon icon-snowflake3" ng-if="name==\'xmas\' || name==\'xmasga\'"></span>\r\n\t\t\t\t\t\t\t</span> \r\n\t\t\t\t\t\t\t<span>{{theme.name || name | capitalize}}</span>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</li>\t\t\t\t\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="tooltip_container angular-animate" ng-if="$root.app.themesNote && $root.user">\r\n\t\t\t\t\t<div class="tooltip_body" ng-click="$root.app.themesNote=false;$root.saveAppLocalStore();">\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class="icon icon-x"></div>\r\n\t\t\t\t\t\t<div class="text">{{\'nav_click_theme\' | translate}}</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\x3c!-- <div class="tooltip_container angular-animate xmas_tooltip" ng-if="$root.app.xmasThemeNote">\r\n\t\t\t\t\t<div class="tooltip_body" ng-click="$root.app.xmasThemeNote=false;$root.saveAppLocalStore();">\t\t\t<div class="icon icon-snowflake2"></div>\r\n\t\t\t\t\t\t<div class="icon icon-snowflake3"></div>\t\t\t\t\t\r\n\t\t\t\t\t\t<div class="icon icon-x"></div>\r\n\t\t\t\t\t\t<div class="text">Click here to enjoy our new Xmas theme!</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> --\x3e\r\n\r\n\t\t\t\t\x3c!-- <div class="tooltip_container angular-animate chiny_tooltip" ng-if="$root.app.chinyThemeNote">\r\n\t\t\t\t\t<div class="tooltip_body" ng-click="$root.switchTheme(\'chiny\');$root.app.chinyThemeNote=false;$root.saveAppLocalStore();">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class="icon icon-x" ng-click="$root.app.chinyThemeNote=false;$root.saveAppLocalStore();$event.stopPropagation()"></div>\r\n\t\t\t\t\t\t<div class="text">Click here to enjoy our new Chinese New Year theme!</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> --\x3e\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t<ul class="menu" ng-if="$root.user" ng-include="\'app/partials/menu.tpl.html\'">\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t\t\x3c!-- <div class="social">\r\n\t\t\t\t<a class="icon-tw" target="_blank" href="https://twitter.com/OfficialBoltgg"></a>\r\n\t\t\t</div> --\x3e\r\n\t\t</div>\r\n\r\n\t\t<div class="right_stuff">\t\r\n\t\t\t\x3c!-- <div class="dropdown notifications" \r\n\t\t\t\tng-if="$root.userAuthed" \r\n\t\t\t\tng-class="{\'unread\':notificationUnread}" \t\t\t\t \r\n\t\t\t\ttitle="{{\'nav_notifications\' | translate}}" \r\n\t\t\t\tclick-away="notifExpanded=false">\r\n\r\n\t\t\t\t<div class="label_holder" ng-click="notifExpanded = !notifExpanded;clickNotif();">\r\n\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t<span class="icon icon-bell"></span>\r\n\t\t\t\t\t\t<span class="icon icon-bell_active"></span>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t         \r\n\r\n\r\n\t\t        <ul class="dropdown-menu angular-animate ng-hide" ng-show="notifExpanded" ng-click="notifExpanded=false">\r\n\r\n\t\t          \t<li class="special">\r\n\t\t          \t\t<any class="title" ng-bind-html="\'nav_notifications\' | translate | htmlSafe"></any>\r\n\t\t          \t\t<div class="controls" ng-click="$event.stopPropagation();">\r\n\t\t          \t\t\t<label class="round_switch" \r\n\t\t          \t\t\t\tng-class="{active:userSettings.notify==\'off\'}" \r\n\t\t          \t\t\t\tng-click="userSettings.notify = userSettings.notify==\'on\' ? \'off\' : \'on\';saveSettings();">\r\n\t\t          \t\t\t\t<span><any ng-bind-html="\'nav_mute\' | translate | htmlSafe"></any></span>\r\n\t\t          \t\t\t  \t<div class="slider"></div>\r\n\t\t          \t\t\t</label>\t\t\t          \t\t\r\n\t\t          \t\t</div>\r\n\t\t          \t</li>\r\n\t\t          \t\r\n\r\n\t\t          \t<div class="scrollable-content">\r\n\t\t          \t\t<li class="none" ng-if="notificationList.length == 0"><any ng-bind-html="\'nav_noNotif\' | translate | htmlSafe"></any></li>\r\n\t\t\t            <li ng-repeat="item in notificationList | orderBy:\'timestamp\':true" class="notification">\r\n\t\t\t            \t<div class="flex">\r\n\t\t\t            \t\t<span class="icon icon-bolt_collat" ng-if="item.type == \'win\'"></span>\r\n\t\t\t            \t\t\r\n\t\t\t\t            \t<span>\r\n\t\t\t\t            \t\t<span>{{item.message}}</span>\t\t\t\t            \t\t\r\n\t\t\t\t            \t\t<div class="time">{{$root.fromNow(item.timestamp)}}</div>\r\n\t\t\t\t            \t</span>\r\n\t\t\t            \t</div>\r\n\t\t\t            </li>\r\n\t\t          \t</div>\r\n\r\n\t\t        </ul>\r\n\t\t\t</div> --\x3e\r\n\r\n\t        \r\n\t    \t<div class="sound_control">\r\n\t\t\t\t<div ng-if="glob.sounds.muted == true" ng-click="glob.sounds.muted = false" class="icon-volume_off"></div>\r\n\t\t\t\t<div ng-if="glob.sounds.muted == false" ng-click="glob.sounds.muted = true" class="icon-volume_up"></div>\r\n\t\t\t</div>\t\r\n\t        \r\n\t        \r\n\r\n\t\t\t<div class="lang_selector dropdown" ng-class="{expanded:langExpanded}" click-away="langExpanded=false">\r\n\t\t\t\t<div class="label_holder" ng-click="langExpanded = !langExpanded">\r\n\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t<span class="icon icon-{{$root.locale || \'en\'}}_flag"></span>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t<span class="icon-arrow_down arrow"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul class="dropdown-menu angular-animate ng-hide" ng-show="langExpanded">\r\n\t\t\t\t\t<li ng-repeat="(code,name) in langs" ng-click="switchLocale(code);$parent.langExpanded=false">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span class="icon icon-{{code}}_flag"></span> <span>{{name | capitalize}}</span>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</li>\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="dropdown user_selector" ng-class="{expanded:userExpanded,mobile_expanded:$root.mobile_menu_expanded}" click-away="userExpanded=false" ng-if="$root.user">\r\n\t\t\t\t<div class="label_holder" ng-click="userExpanded = !userExpanded;$root.mobile_menu_expanded=!$root.mobile_menu_expanded;">\r\n\t\t\t\t\t<div class="rangeLabel">\r\n\t\t\t\t\t\t<span avatar="$root.user.avatar || $root.user.img"></span>\r\n\t\t\t\t\t\t<span class="name">{{$root.user.name || $root.user.displayName}}</span>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t<span class="icon-arrow_down arrow"></span>\r\n\t\t\t\t\t<div class="mobile_menu_toggler">\r\n\t\t\t\t\t    <div class="top"></div>\r\n\t\t\t\t\t    <div class="mid"></div>\r\n\t\t\t\t\t    <div class="bot"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="dropdown-menu angular-animate ng-hide" ng-show="userExpanded" ng-click="userExpanded=false">\r\n\t\t\t\t\t<ul ng-include="\'app/partials/menu.tpl.html\'">\r\n\t\t\t\t\t\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div ng-if="!$root.user">\r\n\t\t\t\t<a class="button orange_button" ng-click="$root.signIn()">\r\n\t\t\t\t\t<span class="icon-steam_round"></span><span>{{\'signIn\' | translate}}</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t\t\x3c!-- <button class="button white_button" ng-click="$root.openInventory()" ng-if="$root.user">Deposit/Withdraw ({{$root.inventory.length || 0}})</button>\t\t --\x3e\t\r\n\t\t</div>\r\n\t</div>\r\n\r\n\r\n\t\x3c!-- <div class="global_banner red" ng-if="$root.warningBanner" ng-bind="$root.warningBanner"></div>\r\n\t\r\n\t<div class="global_banner" ng-class="{\'trivia\':$root.sys.banner.indexOf(\'Trivia:\') > -1}" ng-if="$root.sys.banner && $root.warningBanner == null">\r\n\t\t<span>\r\n\t\t\t<span ng-bind-html="$root.sys.banner | linky:\'_blank\'"></span>\r\n\t\t\t<span ng-if="$root.sys.gleamid" class="gleam_link"><a ng-click="$root.openGleam({gleamid:$root.sys.gleamid})">Click here</a> to enter.</span>\r\n\t\t\t\r\n\t\t</span> \t\t\t\r\n\t</div> --\x3e\r\n\t\r\n</div>\r\n\r\n\r\n')
}]), angular.module("app.translateService", []).factory("translateService", ["$rootScope", "$http", "$q", "$translate", function ($rootScope, $http, $q, $translate) {
  var ts                    = {user: null, authed: !1};
  ts.changeLang             = function (key) {
    for (var ret = !1, i = 0; i < supportedTranslations.length; i++) supportedTranslations[i] == key && (ret = !0);
    ret && $translate.use(key)
  };
  var supportedTranslations = ["en", "es", "dk", "cz", "pt", "tr", "de", "fr", "se", "pl", "chi", "ru", "no", "el", "fi", "nl", "sl", "ro", "ja", "th", "zh"];
  return ts
}]), angular.module("app.userService", []).factory("userService", ["$rootScope", "$http", "$q", "translateService", "$timeout", "glob", function ($rootScope, $http, $q, translateService, $timeout, glob) {
  function parseSystemData(data) {
    var obj = {};
    return data.forEach(function (sec) {
      obj[sec.section] = sec, "api" != sec.section && "auth" != sec.section || sec.service || glob.printwarning("error_disabled", null, 1e4), "socket" != sec.section || sec.service || glob.printwarning("error_disabled_socket", null, 1e4), "app" == sec.section && glob.parseBanner(sec), !sec.service && sec.services && $.each(sec.services, function (key, val) {
        sec.services[key] = !1
      })
    }), obj
  }

  var socket = new glob.ansocket($rootScope), userService = {user: null, authed: !1};
  return $rootScope.system = {}, $rootScope.langs = {
    en: "English",
    cz: "Čeština",
    de: "Deutsch",
    dk: "Dansk",
    es: "Español",
    fr: "Français",
    pt: "Português",
    ru: "Русский",
    se: "Svenska",
    tr: "Türkçe",
    ro: "Română",
    sl: "Slovenščina",
    nl: "Nederlands",
    fi: "Suomi",
    el: "Ελληνικά",
    no: "Norsk",
    pl: "Polski",
    ja: "日本語",
    th: "ไทย",
    zh: "中文"
  }, userService.getBootupData = function () {
    function getUser() {
      userService.getAccountData(q)
    }

    var q = $q.defer();
    return glob.get("/api2/v1/app/state", {}, function (resp) {
      $rootScope.sys = parseSystemData(resp), getUser()
    }, getUser), q.promise
  }, userService.getAccountData = function (q) {
    return q || (q = $q.defer()), glob.get("/api2/v1/user", {}, function (response) {
      const auth = JSON.parse(window.localStorage.getItem('auth'))
      if (!auth) {
        q.resolve(null)
      } else {
        response.user.avatar = auth.Avatar
        response.user.displayName = auth.Name
        response.user.steamId = auth.SteamID
        response.user.locale = window.defaultLang
        userService.authed = !0,
          response.user.thousands = !0,
          userService.user = response.user,
          $rootScope.userAuthed = userService.authed,
          $rootScope.user = userService.user,
        $rootScope.sys && $rootScope.sys.app && glob.parseBanner($rootScope.sys.app),
          $rootScope.$broadcast("accountChange"),
        userService.user.locale && $rootScope.langs[userService.user.locale] || (userService.user.locale = window.defaultLang),
          $rootScope.locale = userService.user.locale,
          userService.switchLocale(userService.user.locale),
          q.resolve(userService.user)
      }
    }, function (err) {
      if (q.resolve(null), "auth" == err) return !0
    }), q.promise
  }, userService.switchLocale = function (locale) {
    locale && $rootScope.langs[locale] || (locale = window.defaultLang), translateService.changeLang(locale), moment.locale(locale), $rootScope.user && ($rootScope.user.locale = locale)
  }, userService.switchLocale(window.defaultLang), socket.on("account_balanceChange", function (data) {
    userService.user.credits = data.balance, userService.user.levelInfo = data.levelInfo, void 0 !== data.depositAppLock && (userService.user.depositAppLock = data.depositAppLock), void 0 !== data.inventoryValuePromo && (userService.user.inventoryValuePromo = data.inventoryValuePromo), $rootScope.$broadcast("accountChange")
  }), socket.on("service/state", function (data) {
    $.extend($rootScope.sys, parseSystemData([data]))
  }), userService
}]), function (n, t) {
  "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t(n.async = n.async || {})
}(this, function (n) {
  "use strict";

  function t(n, t) {
    t |= 0;
    for (var e = Math.max(n.length - t, 0), r = Array(e), u = 0; u < e; u++) r[u] = n[t + u];
    return r
  }

  function e(n) {
    var t = typeof n;
    return null != n && ("object" == t || "function" == t)
  }

  function r(n) {
    setTimeout(n, 0)
  }

  function u(n) {
    return function (e) {
      var r = t(arguments, 1);
      n(function () {
        e.apply(null, r)
      })
    }
  }

  function i(n) {
    return ct(function (t, r) {
      var u;
      try {
        u = n.apply(this, t)
      } catch (n) {
        return r(n)
      }
      e(u) && "function" == typeof u.then ? u.then(function (n) {
        o(r, null, n)
      }, function (n) {
        o(r, n.message ? n : new Error(n))
      }) : r(null, u)
    })
  }

  function o(n, t, e) {
    try {
      n(t, e)
    } catch (n) {
      lt(c, n)
    }
  }

  function c(n) {
    throw n
  }

  function f(n) {
    return st && "AsyncFunction" === n[Symbol.toStringTag]
  }

  function a(n) {
    return f(n) ? i(n) : n
  }

  function l(n) {
    return function (e) {
      var r = t(arguments, 1), u = ct(function (t, r) {
        var u = this;
        return n(e, function (n, e) {
          a(n).apply(u, t.concat(e))
        }, r)
      });
      return r.length ? u.apply(this, r) : u
    }
  }

  function s(n) {
    var t = mt.call(n, bt), e = n[bt];
    try {
      n[bt] = void 0;
      var r = !0
    } catch (n) {
    }
    var u = gt.call(n);
    return r && (t ? n[bt] = e : delete n[bt]), u
  }

  function p(n) {
    return St.call(n)
  }

  function h(n) {
    return null == n ? void 0 === n ? Lt : kt : Ot && Ot in Object(n) ? s(n) : p(n)
  }

  function y(n) {
    if (!e(n)) return !1;
    var t = h(n);
    return t == xt || t == Et || t == wt || t == At
  }

  function v(n) {
    return "number" == typeof n && n > -1 && n % 1 == 0 && n <= Tt
  }

  function d(n) {
    return null != n && v(n.length) && !y(n)
  }

  function m() {
  }

  function g(n) {
    return function () {
      if (null !== n) {
        var t = n;
        n = null, t.apply(this, arguments)
      }
    }
  }

  function b(n, t) {
    for (var e = -1, r = Array(n); ++e < n;) r[e] = t(e);
    return r
  }

  function j(n) {
    return null != n && "object" == typeof n
  }

  function S(n) {
    return j(n) && h(n) == _t
  }

  function k() {
    return !1
  }

  function L(n, t) {
    return !!(t = null == t ? Nt : t) && ("number" == typeof n || Qt.test(n)) && n > -1 && n % 1 == 0 && n < t
  }

  function O(n) {
    return j(n) && v(n.length) && !!me[h(n)]
  }

  function x(n, t) {
    var e = Vt(n), r = !e && Pt(n), u = !e && !r && Wt(n), i = !e && !r && !u && Oe(n), o = e || r || u || i,
        c                                                                                 = o ? b(n.length, String) : [], f = c.length;
    for (var a in n) !t && !xe.call(n, a) || o && ("length" == a || u && ("offset" == a || "parent" == a) || i && ("buffer" == a || "byteLength" == a || "byteOffset" == a) || L(a, f)) || c.push(a);
    return c
  }

  function E(n) {
    var t = n && n.constructor;
    return n === ("function" == typeof t && t.prototype || Ee)
  }

  function T(n) {
    if (!E(n)) return Ae(n);
    var t = [];
    for (var e in Object(n)) Be.call(n, e) && "constructor" != e && t.push(e);
    return t
  }

  function B(n) {
    return d(n) ? x(n) : T(n)
  }

  function F(n) {
    var t = -1, e = n.length;
    return function () {
      return ++t < e ? {value: n[t], key: t} : null
    }
  }

  function I(n) {
    var t = -1;
    return function () {
      var e = n.next();
      return e.done ? null : (t++, {value: e.value, key: t})
    }
  }

  function _(n) {
    var t = B(n), e = -1, r = t.length;
    return function () {
      var u = t[++e];
      return e < r ? {value: n[u], key: u} : null
    }
  }

  function M(n) {
    if (d(n)) return F(n);
    var t = It(n);
    return t ? I(t) : _(n)
  }

  function U(n) {
    return function () {
      if (null === n) throw new Error("Callback was already called.");
      var t = n;
      n = null, t.apply(this, arguments)
    }
  }

  function z(n) {
    return function (t, e, r) {
      function u(n, t) {
        if (f -= 1, n) c = !0, r(n); else {
          if (t === Bt || c && f <= 0) return c = !0, r(null);
          i()
        }
      }

      function i() {
        for (; f < n && !c;) {
          var t = o();
          if (null === t) return c = !0, void(f <= 0 && r(null));
          f += 1, e(t.value, t.key, U(u))
        }
      }

      if (r = g(r || m), n <= 0 || !t) return r(null);
      var o = M(t), c = !1, f = 0;
      i()
    }
  }

  function P(n, t, e, r) {
    z(t)(n, a(e), r)
  }

  function V(n, t) {
    return function (e, r, u) {
      return n(e, t, r, u)
    }
  }

  function q(n, t, e) {
    function r(n, t) {
      n ? e(n) : ++i !== o && t !== Bt || e(null)
    }

    e     = g(e || m);
    var u = 0, i = 0, o = n.length;
    for (0 === o && e(null); u < o; u++) t(n[u], u, U(r))
  }

  function D(n) {
    return function (t, e, r) {
      return n(Ie, t, a(e), r)
    }
  }

  function R(n, t, e, r) {
    r = r || m, t = t || [];
    var u = [], i = 0, o = a(e);
    n(t, function (n, t, e) {
      var r = i++;
      o(n, function (n, t) {
        u[r] = t, e(n)
      })
    }, function (n) {
      r(n, u)
    })
  }

  function C(n) {
    return function (t, e, r, u) {
      return n(z(e), t, a(r), u)
    }
  }

  function $(n, t) {
    for (var e = -1, r = null == n ? 0 : n.length; ++e < r && !1 !== t(n[e], e, n);) ;
    return n
  }

  function N(n, t) {
    return n && Ve(n, t, B)
  }

  function Q(n, t, e, r) {
    for (var u = n.length, i = e + (r ? 1 : -1); r ? i-- : ++i < u;) if (t(n[i], i, n)) return i;
    return -1
  }

  function G(n) {
    return n !== n
  }

  function H(n, t, e) {
    for (var r = e - 1, u = n.length; ++r < u;) if (n[r] === t) return r;
    return -1
  }

  function J(n, t, e) {
    return t === t ? H(n, t, e) : Q(n, G, e)
  }

  function K(n, t) {
    for (var e = -1, r = null == n ? 0 : n.length, u = Array(r); ++e < r;) u[e] = t(n[e], e, n);
    return u
  }

  function X(n) {
    return "symbol" == typeof n || j(n) && h(n) == De
  }

  function Y(n) {
    if ("string" == typeof n) return n;
    if (Vt(n)) return K(n, Y) + "";
    if (X(n)) return $e ? $e.call(n) : "";
    var t = n + "";
    return "0" == t && 1 / n == -Re ? "-0" : t
  }

  function Z(n, t, e) {
    var r = -1, u = n.length;
    t < 0 && (t = -t > u ? 0 : u + t), e = e > u ? u : e, e < 0 && (e += u), u = t > e ? 0 : e - t >>> 0, t >>>= 0;
    for (var i = Array(u); ++r < u;) i[r] = n[r + t];
    return i
  }

  function nn(n, t, e) {
    var r = n.length;
    return e = void 0 === e ? r : e, !t && e >= r ? n : Z(n, t, e)
  }

  function tn(n, t) {
    for (var e = n.length; e-- && J(t, n[e], 0) > -1;) ;
    return e
  }

  function en(n, t) {
    for (var e = -1, r = n.length; ++e < r && J(t, n[e], 0) > -1;) ;
    return e
  }

  function rn(n) {
    return n.split("")
  }

  function un(n) {
    return Xe.test(n)
  }

  function on(n) {
    return n.match(mr) || []
  }

  function cn(n) {
    return un(n) ? on(n) : rn(n)
  }

  function fn(n) {
    return null == n ? "" : Y(n)
  }

  function an(n, t, e) {
    if ((n = fn(n)) && (e || void 0 === t)) return n.replace(gr, "");
    if (!n || !(t = Y(t))) return n;
    var r = cn(n), u = cn(t);
    return nn(r, en(r, u), tn(r, u) + 1).join("")
  }

  function ln(n) {
    return n = n.toString().replace(kr, ""), n = n.match(br)[2].replace(" ", ""), n = n ? n.split(jr) : [], n = n.map(function (n) {
      return an(n.replace(Sr, ""))
    })
  }

  function sn(n, t) {
    var e = {};
    N(n, function (n, t) {
      function r(t, e) {
        var r = K(u, function (n) {
          return t[n]
        });
        r.push(e), a(n).apply(null, r)
      }

      var u, i = f(n), o = !i && 1 === n.length || i && 0 === n.length;
      if (Vt(n)) u = n.slice(0, -1), n = n[n.length - 1], e[t] = u.concat(u.length > 0 ? r : n); else if (o) e[t] = n; else {
        if (u = ln(n), 0 === n.length && !i && 0 === u.length) throw new Error("autoInject task functions require explicit parameters.");
        i || u.pop(), e[t] = u.concat(r)
      }
    }), qe(e, t)
  }

  function pn() {
    this.head = this.tail = null, this.length = 0
  }

  function hn(n, t) {
    n.length = 1, n.head = n.tail = t
  }

  function yn(n, t, e) {
    function r(n, t, e) {
      if (null != e && "function" != typeof e) throw new Error("task callback must be a function");
      if (s.started = !0, Vt(n) || (n = [n]), 0 === n.length && s.idle()) return lt(function () {
        s.drain()
      });
      for (var r = 0, u = n.length; r < u; r++) {
        var i = {data: n[r], callback: e || m};
        t ? s._tasks.unshift(i) : s._tasks.push(i)
      }
      f || (f = !0, lt(function () {
        f = !1, s.process()
      }))
    }

    function u(n) {
      return function (t) {
        o -= 1;
        for (var e = 0, r = n.length; e < r; e++) {
          var u = n[e], i = J(c, u, 0);
          0 === i ? c.shift() : i > 0 && c.splice(i, 1), u.callback.apply(u, arguments), null != t && s.error(t, u.data)
        }
        o <= s.concurrency - s.buffer && s.unsaturated(), s.idle() && s.drain(), s.process()
      }
    }

    if (null == t) t = 1; else if (0 === t) throw new Error("Concurrency must not be zero");
    var i = a(n), o = 0, c = [], f = !1, l = !1, s = {
      _tasks:      new pn,
      concurrency: t,
      payload:     e,
      saturated:   m,
      unsaturated: m,
      buffer:      t / 4,
      empty:       m,
      drain:       m,
      error:       m,
      started:     !1,
      paused:      !1,
      push:        function (n, t) {
        r(n, !1, t)
      },
      kill:        function () {
        s.drain = m, s._tasks.empty()
      },
      unshift:     function (n, t) {
        r(n, !0, t)
      },
      remove:      function (n) {
        s._tasks.remove(n)
      },
      process:     function () {
        if (!l) {
          for (l = !0; !s.paused && o < s.concurrency && s._tasks.length;) {
            var n = [], t = [], e = s._tasks.length;
            s.payload && (e = Math.min(e, s.payload));
            for (var r = 0; r < e; r++) {
              var f = s._tasks.shift();
              n.push(f), c.push(f), t.push(f.data)
            }
            o += 1, 0 === s._tasks.length && s.empty(), o === s.concurrency && s.saturated();
            var a = U(u(n));
            i(t, a)
          }
          l = !1
        }
      },
      length:      function () {
        return s._tasks.length
      },
      running:     function () {
        return o
      },
      workersList: function () {
        return c
      },
      idle:        function () {
        return s._tasks.length + o === 0
      },
      pause:       function () {
        s.paused = !0
      },
      resume:      function () {
        !1 !== s.paused && (s.paused = !1, lt(s.process))
      }
    };
    return s
  }

  function vn(n, t) {
    return yn(n, 1, t)
  }

  function dn(n, t, e, r) {
    r     = g(r || m);
    var u = a(e);
    Or(n, function (n, e, r) {
      u(t, n, function (n, e) {
        t = e, r(n)
      })
    }, function (n) {
      r(n, t)
    })
  }

  function mn() {
    var n = K(arguments, a);
    return function () {
      var e = t(arguments), r = this, u = e[e.length - 1];
      "function" == typeof u ? e.pop() : u = m, dn(n, e, function (n, e, u) {
        e.apply(r, n.concat(function (n) {
          var e = t(arguments, 1);
          u(n, e)
        }))
      }, function (n, t) {
        u.apply(r, [n].concat(t))
      })
    }
  }

  function gn(n) {
    return n
  }

  function bn(n, t) {
    return function (e, r, u, i) {
      i        = i || m;
      var o, c = !1;
      e(r, function (e, r, i) {
        u(e, function (r, u) {
          r ? i(r) : n(u) && !o ? (c = !0, o = t(!0, e), i(null, Bt)) : i()
        })
      }, function (n) {
        n ? i(n) : i(null, c ? o : t(!1))
      })
    }
  }

  function jn(n, t) {
    return t
  }

  function Sn(n) {
    return function (e) {
      var r = t(arguments, 1);
      r.push(function (e) {
        var r = t(arguments, 1);
        "object" == typeof console && (e ? console.error : console[n] && $(r, function (t) {
        }))
      }), a(e).apply(null, r)
    }
  }

  function kn(n, e, r) {
    function u(n) {
      if (n) return r(n);
      var e = t(arguments, 1);
      e.push(i), c.apply(this, e)
    }

    function i(n, t) {
      return n ? r(n) : t ? void o(u) : r(null)
    }

    r     = U(r || m);
    var o = a(n), c = a(e);
    i(null, !0)
  }

  function Ln(n, e, r) {
    r     = U(r || m);
    var u = a(n), i = function (n) {
      if (n) return r(n);
      var o = t(arguments, 1);
      return e.apply(this, o) ? u(i) : void r.apply(null, [null].concat(o))
    };
    u(i)
  }

  function On(n, t, e) {
    Ln(n, function () {
      return !t.apply(this, arguments)
    }, e)
  }

  function wn(n, t, e) {
    function r(n) {
      return n ? e(n) : void o(u)
    }

    function u(n, t) {
      return n ? e(n) : t ? void i(r) : e(null)
    }

    e     = U(e || m);
    var i = a(t), o = a(n);
    o(u)
  }

  function xn(n) {
    return function (t, e, r) {
      return n(t, r)
    }
  }

  function En(n, t, e) {
    Ie(n, xn(a(t)), e)
  }

  function An(n, t, e, r) {
    z(t)(n, xn(a(e)), r)
  }

  function Tn(n) {
    return f(n) ? n : ct(function (t, e) {
      var r = !0;
      t.push(function () {
        var n = arguments;
        r ? lt(function () {
          e.apply(null, n)
        }) : e.apply(null, n)
      }), n.apply(this, t), r = !1
    })
  }

  function Bn(n) {
    return !n
  }

  function Fn(n) {
    return function (t) {
      return null == t ? void 0 : t[n]
    }
  }

  function In(n, t, e, r) {
    var u = new Array(t.length);
    n(t, function (n, t, r) {
      e(n, function (n, e) {
        u[t] = !!e, r(n)
      })
    }, function (n) {
      if (n) return r(n);
      for (var e = [], i = 0; i < t.length; i++) u[i] && e.push(t[i]);
      r(null, e)
    })
  }

  function _n(n, t, e, r) {
    var u = [];
    n(t, function (n, t, r) {
      e(n, function (e, i) {
        e ? r(e) : (i && u.push({index: t, value: n}), r())
      })
    }, function (n) {
      n ? r(n) : r(null, K(u.sort(function (n, t) {
        return n.index - t.index
      }), Fn("value")))
    })
  }

  function Mn(n, t, e, r) {
    (d(t) ? In : _n)(n, t, a(e), r || m)
  }

  function Un(n, t) {
    function e(n) {
      return n ? r(n) : void u(e)
    }

    var r = U(t || m), u = a(Tn(n));
    e()
  }

  function zn(n, t, e, r) {
    r     = g(r || m);
    var u = {}, i = a(e);
    P(n, t, function (n, t, e) {
      i(n, t, function (n, r) {
        return n ? e(n) : (u[t] = r, void e())
      })
    }, function (n) {
      r(n, u)
    })
  }

  function Pn(n, t) {
    return t in n
  }

  function Vn(n, e) {
    var r = Object.create(null), u = Object.create(null);
    e     = e || gn;
    var i = a(n), o = ct(function (n, o) {
      var c = e.apply(null, n);
      Pn(r, c) ? lt(function () {
        o.apply(null, r[c])
      }) : Pn(u, c) ? u[c].push(o) : (u[c] = [o], i.apply(null, n.concat(function () {
        var n = t(arguments);
        r[c]  = n;
        var e = u[c];
        delete u[c];
        for (var i = 0, o = e.length; i < o; i++) e[i].apply(null, n)
      })))
    });
    return o.memo = r, o.unmemoized = n, o
  }

  function qn(n, e, r) {
    r     = r || m;
    var u = d(e) ? [] : {};
    n(e, function (n, e, r) {
      a(n)(function (n, i) {
        arguments.length > 2 && (i = t(arguments, 1)), u[e] = i, r(n)
      })
    }, function (n) {
      r(n, u)
    })
  }

  function Dn(n, t) {
    qn(Ie, n, t)
  }

  function Rn(n, t, e) {
    qn(z(t), n, e)
  }

  function Cn(n, t) {
    if (t = g(t || m), !Vt(n)) return t(new TypeError("First argument to race must be an array of functions"));
    if (!n.length) return t();
    for (var e = 0, r = n.length; e < r; e++) a(n[e])(t)
  }

  function $n(n, e, r, u) {
    dn(t(n).reverse(), e, r, u)
  }

  function Wn(n) {
    var e = a(n);
    return ct(function (n, r) {
      return n.push(function (n, e) {
        if (n) r(null, {error: n}); else {
          var u;
          u = arguments.length <= 2 ? e : t(arguments, 1), r(null, {value: u})
        }
      }), e.apply(this, n)
    })
  }

  function Nn(n) {
    var t;
    return Vt(n) ? t = K(n, Wn) : (t = {}, N(n, function (n, e) {
      t[e] = Wn.call(this, n)
    })), t
  }

  function Qn(n, t, e, r) {
    Mn(n, t, function (n, t) {
      e(n, function (n, e) {
        t(n, !e)
      })
    }, r)
  }

  function Gn(n) {
    return function () {
      return n
    }
  }

  function Hn(n, t, e) {
    function u() {
      f(function (n) {
        n && l++ < c.times && ("function" != typeof c.errorFilter || c.errorFilter(n)) ? setTimeout(u, c.intervalFunc(l)) : e.apply(null, arguments)
      })
    }

    var i = 5, o = 0, c = {times: i, intervalFunc: Gn(o)};
    if (arguments.length < 3 && "function" == typeof n ? (e = t || m, t = n) : (function (n, t) {
        if ("object" == typeof t) n.times = +t.times || i, n.intervalFunc = "function" == typeof t.interval ? t.interval : Gn(+t.interval || o), n.errorFilter = t.errorFilter; else {
          if ("number" != typeof t && "string" != typeof t) throw new Error("Invalid arguments for async.retry");
          n.times = +t || i
        }
      }(c, n), e = e || m), "function" != typeof t) throw new Error("Invalid arguments for async.retry");
    var f = a(t), l = 1;
    u()
  }

  function Jn(n, t) {
    qn(Or, n, t)
  }

  function Kn(n, t, e) {
    function r(n, t) {
      var e = n.criteria, r = t.criteria;
      return e < r ? -1 : e > r ? 1 : 0
    }

    var u = a(t);
    _e(n, function (n, t) {
      u(n, function (e, r) {
        return e ? t(e) : void t(null, {value: n, criteria: r})
      })
    }, function (n, t) {
      return n ? e(n) : void e(null, K(t.sort(r), Fn("value")))
    })
  }

  function Xn(n, t, e) {
    var r = a(n);
    return ct(function (u, i) {
      function o() {
        var t = n.name || "anonymous", r = new Error('Callback function "' + t + '" timed out.');
        r.code = "ETIMEDOUT", e && (r.info = e), f = !0, i(r)
      }

      var c, f = !1;
      u.push(function () {
        f || (i.apply(null, arguments), clearTimeout(c))
      }), c = setTimeout(o, t), r.apply(null, u)
    })
  }

  function Yn(n, t, e, r) {
    for (var u = -1, i = iu(uu((t - n) / (e || 1)), 0), o = Array(i); i--;) o[r ? i : ++u] = n, n += e;
    return o
  }

  function Zn(n, t, e, r) {
    var u = a(e);
    Ue(Yn(0, n, 1), t, u, r)
  }

  function nt(n, t, e, r) {
    arguments.length <= 3 && (r = e, e = t, t = Vt(n) ? [] : {}), r = g(r || m);
    var u = a(e);
    Ie(n, function (n, e, r) {
      u(t, n, e, r)
    }, function (n) {
      r(n, t)
    })
  }

  function tt(n, e) {
    var r, u = null;
    e = e || m, Ur(n, function (n, e) {
      a(n)(function (n, i) {
        r = arguments.length > 2 ? t(arguments, 1) : i, u = n, e(!n)
      })
    }, function () {
      e(u, r)
    })
  }

  function et(n) {
    return function () {
      return (n.unmemoized || n).apply(null, arguments)
    }
  }

  function rt(n, e, r) {
    r     = U(r || m);
    var u = a(e);
    if (!n()) return r(null);
    var i = function (e) {
      if (e) return r(e);
      if (n()) return u(i);
      var o = t(arguments, 1);
      r.apply(null, [null].concat(o))
    };
    u(i)
  }

  function ut(n, t, e) {
    rt(function () {
      return !n.apply(this, arguments)
    }, t, e)
  }

  var it, ot                                                                                = function (n) {
        var e = t(arguments, 1);
        return function () {
          var r = t(arguments);
          return n.apply(null, e.concat(r))
        }
      }, ct                                                                                 = function (n) {
        return function () {
          var e = t(arguments), r = e.pop();
          n.call(this, e, r)
        }
      }, ft                                                                                 = "function" == typeof setImmediate && setImmediate,
      at                                                                                    = "object" == typeof process && "function" == typeof process.nextTick;
  it                                                                                        = ft ? setImmediate : at ? process.nextTick : r;
  var lt                                                                                    = u(it), st                                                                        = "function" == typeof Symbol,
      pt                                                                                    = "object" == typeof global && global && global.Object === Object && global,
      ht                                                                                    = "object" == typeof self && self && self.Object === Object && self,
      yt = pt || ht || Function("return this")(), vt = yt.Symbol, dt = Object.prototype, mt = dt.hasOwnProperty,
      gt                                                                                    = dt.toString, bt                                                                  = vt ? vt.toStringTag : void 0, jt                               = Object.prototype, St = jt.toString,
      kt                                                                                    = "[object Null]", Lt                                                              = "[object Undefined]", Ot                                   = vt ? vt.toStringTag : void 0,
      wt                                                                                    = "[object AsyncFunction]", xt                                                     = "[object Function]", Et = "[object GeneratorFunction]",
      At                                                                                    = "[object Proxy]", Tt = 9007199254740991, Bt                                      = {}, Ft = "function" == typeof Symbol && Symbol.iterator,
      It                                                                                    = function (n) {
        return Ft && n[Ft] && n[Ft]()
      }, _t                                                                                 = "[object Arguments]", Mt                                                      = Object.prototype, Ut                               = Mt.hasOwnProperty, zt = Mt.propertyIsEnumerable,
      Pt                                                                                    = S(function () {
        return arguments
      }()) ? S : function (n) {
        return j(n) && Ut.call(n, "callee") && !zt.call(n, "callee")
      }, Vt                                                                                 = Array.isArray, qt = "object" == typeof n && n && !n.nodeType && n,
      Dt                                                                                    = qt && "object" == typeof module && module && !module.nodeType && module, Rt      = Dt && Dt.exports === qt,
      Ct                                                                                    = Rt ? yt.Buffer : void 0, $t = Ct ? Ct.isBuffer : void 0, Wt = $t || k, Nt = 9007199254740991,
      Qt                                                                                    = /^(?:0|[1-9]\d*)$/, me = {};
  me["[object Float32Array]"] = me["[object Float64Array]"] = me["[object Int8Array]"] = me["[object Int16Array]"] = me["[object Int32Array]"] = me["[object Uint8Array]"] = me["[object Uint8ClampedArray]"] = me["[object Uint16Array]"] = me["[object Uint32Array]"] = !0, me["[object Arguments]"] = me["[object Array]"] = me["[object ArrayBuffer]"] = me["[object Boolean]"] = me["[object DataView]"] = me["[object Date]"] = me["[object Error]"] = me["[object Function]"] = me["[object Map]"] = me["[object Number]"] = me["[object Object]"] = me["[object RegExp]"] = me["[object Set]"] = me["[object String]"] = me["[object WeakMap]"] = !1;
  var ge                                                                                          = "object" == typeof n && n && !n.nodeType && n,
      be                                                                                          = ge && "object" == typeof module && module && !module.nodeType && module,
      je                                                                                          = be && be.exports === ge, Se                                                            = je && pt.process, ke                                     = function () {
        try {
          return Se && Se.binding && Se.binding("util")
        } catch (n) {
        }
      }(), Le                                                                                     = ke && ke.isTypedArray, Oe = Le ? function (n) {
        return function (t) {
          return n(t)
        }
      }(Le) : O, we                                                                               = Object.prototype, xe = we.hasOwnProperty, Ee                                = Object.prototype, Ae = function (n, t) {
        return function (e) {
          return n(t(e))
        }
      }(Object.keys, Object), Te = Object.prototype, Be = Te.hasOwnProperty, Fe = V(P, 1 / 0), Ie = function (n, t, e) {
        (d(n) ? q : Fe)(n, a(t), e)
      }, _e                                                                                       = D(R), Me = l(_e), Ue                                                                = C(R), ze                                                     = V(Ue, 1), Pe = l(ze), Ve = function (n) {
        return function (t, e, r) {
          for (var u = -1, i = Object(t), o = r(t), c = o.length; c--;) {
            var f = o[n ? c : ++u];
            if (!1 === e(i[f], f, i)) break
          }
          return t
        }
      }(), qe                                                                                     = function (n, e, r) {
        function u(n, t) {
          j.push(function () {
            f(n, t)
          })
        }

        function i() {
          if (0 === j.length && 0 === v) return r(null, y);
          for (; j.length && v < e;) {
            j.shift()()
          }
        }

        function o(n, t) {
          var e = b[n];
          e || (e = b[n] = []), e.push(t)
        }

        function c(n) {
          $(b[n] || [], function (n) {
            n()
          }), i()
        }

        function f(n, e) {
          if (!d) {
            var u = U(function (e, u) {
              if (v--, arguments.length > 2 && (u = t(arguments, 1)), e) {
                var i = {};
                N(y, function (n, t) {
                  i[t] = n
                }), i[n] = u, d = !0, b = Object.create(null), r(e, i)
              } else y[n] = u, c(n)
            });
            v++;
            var i = a(e[e.length - 1]);
            e.length > 1 ? i(y, u) : i(u)
          }
        }

        function s(t) {
          var e = [];
          return N(n, function (n, r) {
            Vt(n) && J(n, t, 0) >= 0 && e.push(r)
          }), e
        }

        "function" == typeof e && (r = e, e = null), r = g(r || m);
        var p = B(n), h = p.length;
        if (!h) return r(null);
        e || (e = h);
        var y = {}, v = 0, d = !1, b = Object.create(null), j = [], S = [], k = {};
        N(n, function (t, e) {
          if (!Vt(t)) return u(e, [t]), void S.push(e);
          var r = t.slice(0, t.length - 1), i = r.length;
          return 0 === i ? (u(e, t), void S.push(e)) : (k[e] = i, void $(r, function (c) {
            if (!n[c]) throw new Error("async.auto task `" + e + "` has a non-existent dependency `" + c + "` in " + r.join(", "));
            o(c, function () {
              0 === --i && u(e, t)
            })
          }))
        }), function () {
          for (var n, t = 0; S.length;) n = S.pop(), t++, $(s(n), function (n) {
            0 == --k[n] && S.push(n)
          });
          if (t !== h) throw new Error("async.auto cannot execute tasks due to a recursive dependency")
        }(), i()
      }, De                                                                                       = "[object Symbol]", Re = 1 / 0, Ce = vt ? vt.prototype : void 0,
      $e                                                                                          = Ce ? Ce.toString : void 0,
      Xe                                                                                          = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),
      Ye                                                                                          = "\\ud800-\\udfff", ir                                                                  = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
      or                                                                                          = "\\ud83c[\\udffb-\\udfff]", fr = "[^" + Ye + "]", ar = "(?:\\ud83c[\\udde6-\\uddff]){2}",
      lr                                                                                          = "[\\ud800-\\udbff][\\udc00-\\udfff]",
      pr                                                                                          = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
      hr                                                                                          = "[\\ufe0e\\ufe0f]?",
      yr                                                                                          = "(?:\\u200d(?:" + [fr, ar, lr].join("|") + ")" + hr + pr + ")*", vr                    = hr + pr + yr,
      dr                                                                                          = "(?:" + [fr + ir + "?", ir, ar, lr, "[\\ud800-\\udfff]"].join("|") + ")",
      mr                                                                                          = RegExp(or + "(?=" + or + ")|" + dr + vr, "g"), gr                                      = /^\s+|\s+$/g,
      br                                                                                          = /^(?:async\s+)?(function)?\s*[^\(]*\(\s*([^\)]*)\)/m, jr                               = /,/, Sr = /(=.+)?(\s*)$/,
      kr                                                                                          = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;
  pn.prototype.removeLink = function (n) {
    return n.prev ? n.prev.next = n.next : this.head = n.next, n.next ? n.next.prev = n.prev : this.tail = n.prev, n.prev = n.next = null, this.length -= 1, n
  }, pn.prototype.empty = function () {
    for (; this.head;) this.shift();
    return this
  }, pn.prototype.insertAfter = function (n, t) {
    t.prev = n, t.next = n.next, n.next ? n.next.prev = t : this.tail = t, n.next = t, this.length += 1
  }, pn.prototype.insertBefore = function (n, t) {
    t.prev = n.prev, t.next = n, n.prev ? n.prev.next = t : this.head = t, n.prev = t, this.length += 1
  }, pn.prototype.unshift = function (n) {
    this.head ? this.insertBefore(this.head, n) : hn(this, n)
  }, pn.prototype.push = function (n) {
    this.tail ? this.insertAfter(this.tail, n) : hn(this, n)
  }, pn.prototype.shift = function () {
    return this.head && this.removeLink(this.head)
  }, pn.prototype.pop = function () {
    return this.tail && this.removeLink(this.tail)
  }, pn.prototype.toArray = function () {
    for (var n = Array(this.length), t = this.head, e = 0; e < this.length; e++) n[e] = t.data, t = t.next;
    return n
  }, pn.prototype.remove = function (n) {
    for (var t = this.head; t;) {
      var e = t.next;
      n(t) && this.removeLink(t), t = e
    }
    return this
  };
  var Lr, Or                                                                                      = V(P, 1), wr                                                                        = function () {
        return mn.apply(null, t(arguments).reverse())
      }, xr                                                                                       = Array.prototype.concat, Er                                                          = function (n, e, r, u) {
        u     = u || m;
        var i = a(r);
        Ue(n, e, function (n, e) {
          i(n, function (n) {
            return n ? e(n) : e(null, t(arguments, 1))
          })
        }, function (n, t) {
          for (var e = [], r = 0; r < t.length; r++) t[r] && (e = xr.apply(e, t[r]));
          return u(n, e)
        })
      }, Ar                                                                                       = V(Er, 1 / 0), Tr = V(Er, 1), Br                                                     = function () {
        var n = t(arguments), e = [null].concat(n);
        return function () {
          return arguments[arguments.length - 1].apply(this, e)
        }
      }, Fr = D(bn(gn, jn)), Ir = C(bn(gn, jn)), _r = V(Ir, 1), Mr = Sn("dir"), Ur = V(An, 1), zr = D(bn(Bn, Bn)),
      Pr                                                                                          = C(bn(Bn, Bn)), Vr = V(Pr, 1), qr                                                       = D(Mn), Dr                                           = C(Mn), Rr = V(Dr, 1), Cr = function (n, t, e, r) {
        r     = r || m;
        var u = a(e);
        Ue(n, t, function (n, t) {
          u(n, function (e, r) {
            return e ? t(e) : t(null, {key: r, val: n})
          })
        }, function (n, t) {
          for (var e = {}, u = Object.prototype.hasOwnProperty, i = 0; i < t.length; i++) if (t[i]) {
            var o = t[i].key, c = t[i].val;
            u.call(e, o) ? e[o].push(c) : e[o] = [c]
          }
          return r(n, e)
        })
      }, $r                                                                                       = V(Cr, 1 / 0), Wr = V(Cr, 1), Nr = Sn("log"), Qr                                     = V(zn, 1 / 0), Gr = V(zn, 1);
  Lr                                                                                              = at ? process.nextTick : ft ? setImmediate : r;
  var Hr                                                                                          = u(Lr), Jr                                                                              = function (n, t) {
        var e = a(n);
        return yn(function (n, t) {
          e(n[0], t)
        }, t, 1)
      }, Kr                                                                                       = function (n, t) {
        var e = Jr(n, t);
        return e.push = function (n, t, r) {
          if (null == r && (r = m), "function" != typeof r) throw new Error("task callback must be a function");
          if (e.started = !0, Vt(n) || (n = [n]), 0 === n.length) return lt(function () {
            e.drain()
          });
          t = t || 0;
          for (var u = e._tasks.head; u && t >= u.priority;) u = u.next;
          for (var i = 0, o = n.length; i < o; i++) {
            var c = {data: n[i], priority: t, callback: r};
            u ? e._tasks.insertBefore(u, c) : e._tasks.push(c)
          }
          lt(e.process)
        }, delete e.unshift, e
      }, Xr                                                                                       = D(Qn), Yr = C(Qn), Zr = V(Yr, 1), nu                                                = function (n, t) {
        t || (t = n, n = null);
        var e = a(t);
        return ct(function (t, r) {
          function u(n) {
            e.apply(null, t.concat(n))
          }

          n ? Hn(n, u, r) : Hn(u, r)
        })
      }, tu                                                                                       = D(bn(Boolean, gn)), eu = C(bn(Boolean, gn)), ru                                     = V(eu, 1), uu = Math.ceil, iu      = Math.max,
      ou                                                                                          = V(Zn, 1 / 0), cu                                                                       = V(Zn, 1), fu                                                        = function (n, e) {
        function r(t) {
          var e = a(n[i++]);
          t.push(U(u)), e.apply(null, t)
        }

        function u(u) {
          return u || i === n.length ? e.apply(null, arguments) : void r(t(arguments, 1))
        }

        if (e = g(e || m), !Vt(n)) return e(new Error("First argument to waterfall must be an array of functions"));
        if (!n.length) return e();
        var i = 0;
        r([])
      }, au                                                                                       = {
        apply:           ot,
        applyEach:       Me,
        applyEachSeries: Pe,
        asyncify:        i,
        auto:            qe,
        autoInject:      sn,
        cargo:           vn,
        compose:         wr,
        concat:          Ar,
        concatLimit:     Er,
        concatSeries:    Tr,
        constant:        Br,
        detect:          Fr,
        detectLimit:     Ir,
        detectSeries:    _r,
        dir:             Mr,
        doDuring:        kn,
        doUntil:         On,
        doWhilst:        Ln,
        during:          wn,
        each:            En,
        eachLimit:       An,
        eachOf:          Ie,
        eachOfLimit:     P,
        eachOfSeries:    Or,
        eachSeries:      Ur,
        ensureAsync:     Tn,
        every:           zr,
        everyLimit:      Pr,
        everySeries:     Vr,
        filter:          qr,
        filterLimit:     Dr,
        filterSeries:    Rr,
        forever:         Un,
        groupBy:         $r,
        groupByLimit:    Cr,
        groupBySeries:   Wr,
        log:             Nr,
        map:             _e,
        mapLimit:        Ue,
        mapSeries:       ze,
        mapValues:       Qr,
        mapValuesLimit:  zn,
        mapValuesSeries: Gr,
        memoize:         Vn,
        nextTick:        Hr,
        parallel:        Dn,
        parallelLimit:   Rn,
        priorityQueue:   Kr,
        queue:           Jr,
        race:            Cn,
        reduce:          dn,
        reduceRight:     $n,
        reflect:         Wn,
        reflectAll:      Nn,
        reject:          Xr,
        rejectLimit:     Yr,
        rejectSeries:    Zr,
        retry:           Hn,
        retryable:       nu,
        seq:             mn,
        series:          Jn,
        setImmediate:    lt,
        some:            tu,
        someLimit:       eu,
        someSeries:      ru,
        sortBy:          Kn,
        timeout:         Xn,
        times:           ou,
        timesLimit:      Zn,
        timesSeries:     cu,
        transform:       nt,
        tryEach:         tt,
        unmemoize:       et,
        until:           ut,
        waterfall:       fu,
        whilst:          rt,
        all:             zr,
        allLimit:        Pr,
        allSeries:       Vr,
        any:             tu,
        anyLimit:        eu,
        anySeries:       ru,
        find:            Fr,
        findLimit:       Ir,
        findSeries:      _r,
        forEach:         En,
        forEachSeries:   Ur,
        forEachLimit:    An,
        forEachOf:       Ie,
        forEachOfSeries: Or,
        forEachOfLimit:  P,
        inject:          dn,
        foldl:           dn,
        foldr:           $n,
        select:          qr,
        selectLimit:     Dr,
        selectSeries:    Rr,
        wrapSync:        i
      };
  n.default = au, n.apply = ot, n.applyEach = Me, n.applyEachSeries = Pe, n.asyncify = i, n.auto = qe, n.autoInject = sn, n.cargo = vn, n.compose = wr, n.concat = Ar, n.concatLimit = Er, n.concatSeries = Tr, n.constant = Br, n.detect = Fr, n.detectLimit = Ir, n.detectSeries = _r, n.dir = Mr, n.doDuring = kn, n.doUntil = On, n.doWhilst = Ln, n.during = wn, n.each = En, n.eachLimit = An, n.eachOf = Ie, n.eachOfLimit = P, n.eachOfSeries = Or, n.eachSeries = Ur, n.ensureAsync = Tn, n.every = zr, n.everyLimit = Pr, n.everySeries = Vr, n.filter = qr, n.filterLimit = Dr, n.filterSeries = Rr, n.forever = Un, n.groupBy = $r, n.groupByLimit = Cr, n.groupBySeries = Wr, n.log = Nr, n.map = _e, n.mapLimit = Ue, n.mapSeries = ze, n.mapValues = Qr, n.mapValuesLimit = zn, n.mapValuesSeries = Gr, n.memoize = Vn, n.nextTick = Hr, n.parallel = Dn, n.parallelLimit = Rn, n.priorityQueue = Kr, n.queue = Jr, n.race = Cn, n.reduce = dn, n.reduceRight = $n, n.reflect = Wn, n.reflectAll = Nn, n.reject = Xr, n.rejectLimit = Yr, n.rejectSeries = Zr, n.retry = Hn, n.retryable = nu, n.seq = mn, n.series = Jn, n.setImmediate = lt, n.some = tu, n.someLimit = eu, n.someSeries = ru, n.sortBy = Kn, n.timeout = Xn, n.times = ou, n.timesLimit = Zn, n.timesSeries = cu, n.transform = nt, n.tryEach = tt, n.unmemoize = et, n.until = ut, n.waterfall = fu, n.whilst = rt, n.all = zr, n.allLimit = Pr, n.allSeries = Vr, n.any = tu, n.anyLimit = eu, n.anySeries = ru, n.find = Fr, n.findLimit = Ir, n.findSeries = _r, n.forEach = En, n.forEachSeries = Ur, n.forEachLimit = An, n.forEachOf = Ie, n.forEachOfSeries = Or, n.forEachOfLimit = P, n.inject = dn, n.foldl = dn, n.foldr = $n, n.select = qr, n.selectLimit = Dr, n.selectSeries = Rr, n.wrapSync = i, Object.defineProperty(n, "__esModule", {value: !0})
}), angular.module("app").directive("caseRoulette", ["$timeout", "glob", "$templateCache", "$compile", function ($timeout, glob, $templateCache, $compile) {
  return {
    require: "?ngModel",
    scope:   {
      caseRoulette:        "&",
      rouletteFastForward: "&",
      overCallback:        "&",
      rouletteRows:        "=",
      rouletteResults:     "=",
      rouletteResize:      "="
    },
    link:    function (scope, element, attrs, ngModel) {
      function multipliedItems() {
        for (var retitems = [], i = 0; i < rows; i++) retitems.push($.extend(!0, [], caseitems));
        return retitems
      }

      function recItemsPerView() {
        rows || (rows = 1);
        var w = element.width(), n = Math.floor(w / (1.05 * itemW));
        return n < 2 && (n = 2), n += Math.floor(rows / 2)
      }

      function resetRoulette() {
        roulette && roulette.terminate(), lastItemsPerView = recItemsPerView(), lastItemsPerView = 1;
        var iopts = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 35};
        roulette = new caseRoulette(element, scope, glob, $timeout, $templateCache, $compile), ngModel.$setViewValue(roulette), roulette.updateItems(multipliedItems(), iopts)
      }

      function onresize() {
        $timeout(function () {
          var newItemsPerView = recItemsPerView();
          if (newItemsPerView !== lastItemsPerView) {
            if (!roulette || roulette.started) return;
            $timeout(function () {
              lastItemsPerView = newItemsPerView;
              var iopts        = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 30};
              roulette.updateItems(multipliedItems(), iopts)
            })
          }
        })
      }

      var lastItemsPerView, roulette, caseitems = scope.caseRoulette(), rows = 1, itemW = 180;
      scope.$watch("rouletteRows", function (newrows) {
        if (newrows) {
          element.removeClass("rows_" + rows), rows = newrows, element.addClass("rows_" + newrows), lastItemsPerView = recItemsPerView();
          var iopts = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 35};
          roulette ? roulette.updateItems(multipliedItems(), iopts) : resetRoulette()
        }
      }), scope.$watch("rouletteResults", function (results) {
        if (results) {
          roulette.start($.extend(!0, [], results), {
            itemcallback: function () {
              glob.sound("click")
            }
          }, function () {
            var fastForward = scope.rouletteFastForward();
            $timeout(function () {
              var cb = scope.overCallback();
              cb ? cb(function () {
                resetRoulette()
              }) : resetRoulette()
            }, fastForward ? 200 : 500)
          })
        }
      }), scope.$watch("rouletteResize", function (val, oldval) {
        void 0 !== val && onresize()
      }), $(window).on("resize", onresize), scope.$on("$destroy", function () {
        $(window).off("resize", onresize)
      })
    }
  }
}]);
var caseRoulette = function (el, scope, glob, $timeout, $templateCache, $compile) {
  function randomRange(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min
  }

  function transform(el, transform, origin) {
    el.css({
      transform:                  transform,
      "-moz-transform":           transform,
      "-webkit-transform":        transform,
      "-ms-transform":            transform,
      "transform-origin":         origin,
      "-moz-transform-origin":    origin,
      "-webkit-transform-origin": origin,
      "-ms-transform-origin":     origin
    })
  }

  function prepareOptions(sopts) {
    iopts || (iopts = {}), sopts || (sopts = {}), iopts.itemsPerView || (iopts.itemsPerView = 4), void 0 == iopts.startOffset && (iopts.startOffset = 0), iopts.minItems || (iopts.minItems = 20), iopts.wrapperWidth = 100 / iopts.itemsPerView, iopts.itemWidth = .95 * iopts.wrapperWidth, iopts.margin = (iopts.wrapperWidth - iopts.itemWidth) / 2, options = $.extend({}, iopts, sopts)
  }

  function prepateItemsRowData(items) {
    function groomItems(items) {
      items.forEach(function (it) {
        it.id = generateUUID()
      }), glob.shuffle(items)
    }

    function expanditems() {
      if (resitems.length < options.minItems) {
        var arrdupe = $.extend(!0, [], original);
        groomItems(arrdupe);
        var resultinglength = resitems.length + arrdupe.length;
        resultinglength > options.minItems && (arrdupe.length = arrdupe.length - (resultinglength - options.minItems)), resitems = resitems.concat(arrdupe)
      }
      resitems.length < options.minItems && expanditems()
    }

    var resitems = items, original = $.extend(!0, [], resitems);
    return groomItems(resitems), expanditems(), resitems
  }

  function prepareItemsRowForAnimation(itemrow, winneritem) {
    var rangeLimit = Math.ceil(.1 * options.minItems);
    rangeLimit = 2, addItem(itemrow, winneritem, Math.ceil(.69 * options.minItems) + randomRange(-rangeLimit, rangeLimit)), applyItemStyles(), itemrow.winner = winneritem, dlog("winneritem:", winneritem)
  }

  function compileItem(it) {
    var newscope = scope.$new(!0);
    it.simplified = !it.winner, newscope.item = it, newscope.glob = glob;
    var templ = $compile(template)(newscope), itemel = $("<div class='item roulette_item'/>"),
        itemwrap                                     = $("<div class='crlt_item_wrapper'/>");
    return itemel.append(templ), itemwrap.append(itemel), it.el = itemwrap, it.innerEl = itemel, itemwrap
  }

  function applyItemStyles() {
    itemRows.forEach(function (itemsRow) {
      itemsRow.forEach(function (it, i) {
        it.el.css({width: options.wrapperWidth + "%", padding: 0});
        var item = {
          color:           "#" + it.quality_color || "D2D2D2",
          wrapperPosition: options.wrapperWidth * i,
          position:        options.wrapperWidth * i + options.margin
        };
        $.extend(it, item)
      }), findItemByOffset(itemsRow, -options.startOffset, function (item) {
        item.el.addClass("crlt_current")
      }, function (item) {
        item.el.removeClass("crlt_current")
      })
    })
  }

  function drawItemsRow(items, placeholder) {
    if (placeholderContainer && placeholderContainer.remove(), container = $("<div class='crlt_container'/>"), transform(container, "translate3d(" + options.startOffset + "%,0,0)"), rltwrap.append(container), placeholder) {
      var itemel = compileItem({
        id:               42,
        price:            42,
        icon_url:         "",
        name_color:       "D2D2D2",
        quality_color:    "EB4B4B",
        market_hash_name: "placeholder",
        placeholder:      !0
      });
      container.append(itemel), placeholderContainer = container, itemel.css("opacity", 0)
    } else items.forEach(function (it, i) {
      compileItem(it), container.append(it.el), it.el.css("opacity", 0), $timeout(function () {
        it.el.css("opacity", 1), $timeout(function () {
          it.el.css("opacity", "")
        })
      })
    });
    items.container = container
  }

  function addItem(items, it, index) {
    items.splice(index, 0, it);
    var itemel = compileItem(it);
    items[index - 1].el.after(itemel)
  }

  function updateItems(newItemRows, opts) {
    if (iopts = opts, prepareOptions(), newItemRows.length < itemRows.length) {
      itemRows.splice(newItemRows.length).forEach(function (row) {
        row.container.remove()
      })
    } else newItemRows.length > itemRows.length && (0 == itemRows.length || (newItemRows = newItemRows.splice(itemRows.length)), newItemRows.forEach(function (itemsRow) {
      var itemsRow = prepateItemsRowData(itemsRow);
      drawItemsRow(itemsRow), itemRows.push(itemsRow)
    }));
    applyItemStyles()
  }

  function start(results, sopts, callback) {
    if (this.started) return !1;
    if (this.started = !0, prepareOptions(sopts), itemRows.length !== results.length) {
      var newItemRows = [];
      results.forEach(function (result) {
        newItemRows.push(result.items)
      }), updateItems(newItemRows, iopts)
    }
    return itemRows.forEach(function (itemrow, i) {
      prepareItemsRowForAnimation(itemrow, results[i].winner)
    }), fns = [], itemRows.forEach(function (itemRow, i) {
      fns.push(function (cb) {
        rotatejs(itemRow, sopts.itemcallback, cb)
      })
    }), async.parallel(fns, callback), !0
  }

  function rotatejs(items, itemcb, cb) {
    function step(x) {
      transform(container, "translate3d(" + -x + "%,0,0)"), offset = x, checkCurrentItem()
    }

    function checkCurrentItem() {
      findItemByOffset(items, offset, function (item) {
        var el = item.el;
        currentitem && currentitem.id === item.id || (currentitem = item, el.addClass("crlt_current"), itemcb && itemcb(item, el))
      }, function (item) {
        item.el.removeClass("crlt_current")
      })
    }

    function animOver() {
      rltwrap.addClass("crlt_fade"), currentitem.el.addClass("crlt_win"), cb && $timeout(cb, fastForward ? 0 : 200)
    }

    var fastForward = scope.rouletteFastForward(), container = items.container, offset = -options.startOffset,
        r                                                                              = Math.random();
    r < .1 && (r = .1);
    var currentitem, randominside = .5 * options.itemWidth, targetoffset = items.winner.position + randominside - 50;
    $({x: offset}).animate({x: targetoffset}, {
      duration: fastForward ? 2500 : 6e3,
      easing:   "crltEasing1",
      step:     function () {
        terminated || step(this.x)
      },
      complete: function () {
        terminated || (step(this.x), $timeout(animOver, fastForward ? 0 : 200))
      }
    })
  }

  function findItemByOffset(items, offset, foundcb, restcb) {
    var currentPosition = offset + 50;
    items.forEach(function (item, i) {
      var itemstart = item.wrapperPosition, itemend = itemstart + options.wrapperWidth;
      item.position, options.itemWidth;
      currentPosition < itemend && currentPosition > itemstart ? foundcb && foundcb(item) : restcb && restcb(item)
    })
  }

  function over(cb) {
    terminated || (itemRows.forEach(function (itemsRow) {
      itemsRow.forEach(function (it) {
        it.el.css("opacity", 0)
      })
    }), setTimeout(function () {
      terminated || cb && cb()
    }, 420))
  }

  function terminate() {
    terminated = !0, items = [], rltwrap.remove()
  }

  el                                                                          = $(el);
  var options, rltwrap, container, placeholderContainer, terminated, itemRows = [],
      template                                                                = $templateCache.get("giveaway/partials/item_preview.tpl.html");
  return function (parent) {
    rltwrap   = $("<div class='crlt_wrapper'/>");
    var flare = $("<div class='crlt_flare'/>"), arrow = $("<div class='crlt_arrow'/>");
    parent.prepend(rltwrap), rltwrap.append(arrow, flare)
  }(el), jQuery.extend(jQuery.easing, {
    crltEasing: function (x, t, b, c, d) {
      var ts = (t /= d) * t, tc = ts * t;
      return b + c * (-3.7975 * tc * ts + 14.2925 * ts * ts + -19.09 * tc + 9.595 * ts)
    }
  }), jQuery.extend(jQuery.easing, {
    crltEasing1: function (x, t, b, c, d) {
      var ts = (t /= d) * t, tc = ts * t;
      return b + c * (-1.2525 * tc * ts + 6.3075 * ts * ts + -10.605 * tc + 6.3 * ts + .25 * t)
    }
  }), scope.$on("$destroy", function () {
    terminate()
  }), {updateItems: updateItems, start: start, over: over, terminate: terminate}
};
angular.module("cases.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.cases", {
    url:         "/cases",
    templateUrl: "cases/views/cases.tpl.html",
    controller:  "cases.controller",
    scope:       {},
    nologin:     !0
  })
}]), angular.module("cases.controller", []).controller("cases.controller", ["$scope", "$rootScope", "$timeout", "glob", "$state", "$translate", function ($scope, $rootScope, $timeout, glob, $state, $translate) {
  $scope.glob = glob, $rootScope.title = "Bolt.GG - Cases", $scope.search = {query: ""}, $scope.env = {
    category:     "official",
    categoryName: $translate.instant("CASES_CAT_OFFICIAL")
  };
  var filterKeys = {"High to Low": "hilo", "Low to High": "lohi", "A - Z": "az", "Z - A": "za"};
  $scope.filter = "", $scope.filters = Object.keys(filterKeys), $scope.busy = !1, $scope.refresh = function (category) {
    $scope.busy = !0;
    var opts    = {category: category, search: $scope.search.query};
    $scope.filter && (opts.filter = filterKeys[$scope.filter]), glob.get("/api2/crates", opts, function (env) {
      $scope.env = env, conf.dummy_data && !$scope.env.cases.length && ($scope.env = testCases), $scope.busy = !1
    }, function () {
      $scope.busy = !1, conf.dummy_data && ($scope.env = testCases)
    })
  }, $scope.openCase = function (c) {
    conf.dummy_data ? $state.go("app.unbox", {
      crate:    c,
      crate_id: c.id
    }) : $state.go("app.unbox", c.playerId ? {crate_id: c.playerId, slug: c.slug} : {crate_id: c.id})
  }, $scope.$watch("filter", function (newVal, oldVal) {
    newVal && newVal !== oldVal && $scope.refresh($scope.env.category)
  }), $scope.refresh()
}]).controller("CaseCreatorCtrl", ["$scope", "$timeout", "glob", "$state", function ($scope, $timeout, glob, $state) {
  $scope.casePrice = 0, $scope.caseOdds = 0, $scope.comission = 0;
  var filterKeys = {
    "High to Low": "-price",
    "Low to High": "price",
    "A - Z":       "market_hash_name",
    "Z - A":       "-market_hash_name"
  };
  $scope.filters = Object.keys(filterKeys), $scope.newCase = {name: "", cut: 0}, $scope.opts = {
    items:     [],
    filter:    "A - Z",
    filterKey: filterKeys["A - Z"]
  }, $scope.affiliates = [0, 1, 2, 3, 4, 5], $scope.selectSkin = function (id) {
    $scope.newCase.style = id
  }, $scope.selectedItems = function () {
    return $scope.opts.items.filter(function (item) {
      return item.selected
    })
  }, $scope.emptySelection = function () {
    return !$scope.selectedItems().length
  }, $scope.canCreate = function () {
    return !$scope.busy && 100 === $scope.caseOdds && $scope.newCase.name && $scope.newCase.style && !$scope.emptySelection()
  }, $scope.createCase = function () {
    $scope.busy || ($scope.busy = !0, glob.post("/api2/crates/create", {
      name:  $scope.newCase.name,
      style: $scope.newCase.style,
      cut:   $scope.opts.cut,
      items: $scope.selectedItems().map(function (item) {
        return {name: item.id, odds: item.odds}
      })
    }, function (resp) {
      $scope.busy = !1, glob.printinfo($translate.instant("CASE_CREATED"), 1e4), $state.go("app.unbox", {
        crate_id: resp.playerId,
        slug:     resp.slug
      })
    }, function () {
      $scope.busy = !1
    }))
  }, $scope.$watch("opts", function (newVal) {
    $timeout(function () {
      var items = $scope.selectedItems();
      $scope.opts.filterKey = filterKeys[newVal.filter], $scope.caseOdds = items.reduce(function (odds, item) {
        return odds + (item.odds || 0)
      }, 0) || 0, $scope.casePrice = items.reduce(function (price, item) {
        var odd = item.odds || 0;
        return odd ? price + item.price * parseFloat(odd / 100) : price
      }, 0) || 0, $scope.casePrice *= $scope.opts.edge, $scope.commission = $scope.casePrice * parseFloat($scope.opts.cut / 100), $scope.casePrice += $scope.commission
    }, 0)
  }, !0),
    glob.get("/api2/crates/createOpts", {}, function (response) {
      $scope.opts = Object.assign($scope.opts, response), $scope.opts.cut = 0, $scope.newCase = {name: "", cut: 0}
    })
}]), angular.module("cases.directives", []).directive("caseAnimatedImage", ["glob", "$timeout", function (glob, $timeout) {
  return {
    scope: {caseAnimatedImage: "&"}, link: function (scope, elem, attr) {
      function applyImage() {
        $imgEl.css("opacity", 1)
      }

      function playSheet(direction) {
        loopOverTs    = null;
        var oldFrames = frames;
        sheetDirection = direction, frames = sheet[sheetDirection + "frames"], sheet[sheetDirection + "crossfade"] ? (currentFrameIndex = frames.indexOf(oldFrames[currentFrameIndex])) < 0 && (currentFrameIndex = 0) : currentFrameIndex = 0, sheetAnimator || (sheetAnimator = new glob.animationThrottle(fpsArg || 30)), sheetAnimator.run(function () {
          if (frames = sheet[sheetDirection + "frames"], sheetRunning || (elem.addClass("animation-running"), sheetRunning = !0), currentFrameIndex != frames.length) {
            setFrame(frames[currentFrameIndex]), currentFrameIndex++
          } else {
            if ("b" == sheetDirection) return currentFrameIndex = 0, elem.removeClass("animation-running"), sheetRunning = !1, !1;
            "f" == sheetDirection && sheet.looped ? (currentFrameIndex = 0, sheetDirection = "l") : "l" == sheetDirection && (sheet.lpause ? loopOverTs ? loopOverTs + sheet.lpause < (new Date).valueOf() && (loopOverTs = null, currentFrameIndex = 0) : loopOverTs = (new Date).valueOf() : currentFrameIndex = 0)
          }
        })
      }

      function setFrame(frameN) {
        if (sheet) {
          frameN     = clamp(frameN, 0, sheet.last);
          var margin = (sheet.last, 100 * frameN / (sheet.last + 1));
          glob.transform(sheetEl, "translate3d(" + -margin + "%,0,0)")
        }
      }

      function parseSheet(sheet) {
        function parseFramesData(data) {
          if (data) {
            var split = data.split("-"), s = parseInt(split[0]), e = parseInt(split[1]), frames = [];
            if (s < e) for (var i = s; i <= e; i++) frames.push(i); else for (var i = s; i >= e; i--) frames.push(i);
            return s > sheet.last && (sheet.last = s), e > sheet.last && (sheet.last = e), frames
          }
        }

        sheet.last = 0, sheet.fframes = parseFramesData(sheet.f), sheet.bframes = parseFramesData(sheet.b), sheet.lframes = parseFramesData(sheet.l)
      }

      function backwardsPlay(done) {
        function step() {
          var frame = pastFrames.pop();
          if (output.putImageData(frame, 0, 0, 0, 0, w, h), lastFrameStamp = frame.time, !pastFrames.length) return lastFrameStamp = 0, done(), !1
        }

        backwardsAnimator && backwardsAnimator.stop(), pastFrames.length && (backwardsFps = pastFrames.length / (pastFrames[pastFrames.length - 1].time - pastFrames[0].time)), backwardsFps || (backwardsFps = 30), backwardsAnimator = new glob.animationThrottle(backwardsFps), dlog("backwardsFps", backwardsFps), backwardsAnimator.run(step)
      }

      function processFrameLoop() {
        if (vidEl.currentTime > lastFrameStamp) {
          vidBuffer.drawImage(vidEl, 0, 0);
          var image = vidBuffer.getImageData(0, 0, w, h), imageData = image.data,
              alphaData                                             = vidBuffer.getImageData(0, h, w, h).data;
          image.time                                                = vidEl.currentTime;
          for (var i = 3, len = imageData.length; i < len; i += 4) imageData[i] = alphaData[i - 1];
          output.putImageData(image, 0, 0, 0, 0, w, h), lastFrameStamp = image.time, pastFrames.push(image)
        }
      }

      var videoType, sheetType, sheets = {
        champagne:  {looped: !0, f: "0-0", l: "0-21", b: "0-0", lpause: 700},
        "chef-hat": {looped: !0, f: "0-6", l: "7-21", b: "6-0", bcrossfade: !0}
      };
      attr.animationType && "sheet" != attr.animationType ? videoType = !0 : sheetType = !0;
      var parent = elem.parents(".animate_hover_parent");
      parent.length || (parent = elem.parent());
      var sheet, w                                    = 600, h                           = 450, fpsArg             = attr.fps ? parseInt(attr.fps) : void 0,
          imageName                                   = scope.caseAnimatedImage(), id   = imageName.substr(imageName.lastIndexOf("/") + 1),
          lastFrameStamp = 0, pastFrames = [], imgSrc = "/img/" + imageName + ".png";
      if (videoType) var vidSrc = "/styles/img/cases/" + imageName + "_masked.mp4"; else if (sheetType) var sheetSrc = "/img/" + imageName + "_sheet.png";
      var $imgEl = $("<img/>").addClass("thumb_component thumb_image");
      if ($imgEl.css("opacity", 0).attr("src", imgSrc).on("load", applyImage), elem.append($imgEl), !glob.isMobileOrTablet() && !attr.noAnimation) {
        if (videoType) var $vidEl           = $("<video/>").addClass("thumb_component").attr("src", vidSrc),
                           $vidBufferCanvas = $("<canvas/>").addClass("thumb_component").attr("width", w).attr("height", 2 * h),
                           $outputCanvas    = $("<canvas/>").addClass("thumb_component thumb_animation_output").attr("width", w).attr("height", h); else if (sheetType) {
          var sheetPreloaded = !1,
              $sheetEl       = $("<img/>").addClass("thumb_component thumb_sheet thumb_animation_output");
          $sheetEl.on("load", function () {
            if (!(sheet = sheets[id])) {
              sheet      = {};
              var frames = Math.round(this.naturalWidth / w);
              frames < 6 && (frames = 11), sheet.f = "0-" + (frames - 1), sheet.b = frames - 1 + "-0", sheet.bcrossfade = !0
            }
            parseSheet(sheet), $sheetEl.css({}), sheetPreloaded = !0, setFrame(0)
          }).attr("src", sheetSrc), elem.append($sheetEl)
        }
        if (videoType) var vidEl = $vidEl[0], vidBuffer = $vidBufferCanvas[0].getContext("2d"),
                           output                       = $outputCanvas[0].getContext("2d"); else if (sheetType) var sheetEl = $sheetEl[0];
        videoType && elem.append($outputCanvas), parent.on("mouseenter", function () {
          if (videoType) vidEl.play(), frameProcessor.start(); else if (sheetType) {
            if (!sheetPreloaded) return;
            playSheet("f")
          }
        }), parent.on("mouseleave", function () {
          if (videoType) frameProcessor.stop(), vidEl.pause(), vidEl.currentTime = 0, backwardsPlay(function () {
            elem.removeClass("animation-running")
          }); else if (sheetType) {
            if (!sheetPreloaded) return;
            playSheet("b")
          }
        });
        var sheetAnimator, sheetDirection, sheetRunning, loopOverTs, backwardsFps, backwardsAnimator,
            currentFrameIndex = 0, frames = [], frameProcessor = new glob.animationThrottle(120);
        frameProcessor.start = function () {
          frameProcessor.run(processFrameLoop)
        }, scope.$on("$destroy", function () {
          sheetAnimator && sheetAnimator.stop()
        })
      }
    }
  }
}]), angular.module("cases", ["cases.controller", "cases.directives", "cases.roulette", "cases.config"]), angular.module("cases.roulette", []).directive("casesRoulette", ["$timeout", "glob", "$templateCache", "$compile", function ($timeout, glob, $templateCache, $compile) {
  return {
    require: "?ngModel",
    scope:   {
      casesRoulette:       "&",
      rouletteFastForward: "&",
      overCallback:        "&",
      rouletteRows:        "=",
      rouletteResults:     "=",
      rouletteResize:      "="
    },
    link:    function (scope, element, attrs, ngModel) {
      function multipliedItems() {
        for (var retitems = [], i = 0; i < rows; i++) retitems.push($.extend(!0, [], caseitems));
        return retitems
      }

      function recItemsPerView() {
        rows || (rows = 1);
        var w = element.width(), n = Math.floor(w / (1.05 * itemW));
        return n < 2 && (n = 2), n += Math.floor(rows / 2)
      }

      function resetRoulette() {
        roulette && roulette.terminate(), lastItemsPerView = recItemsPerView();
        var iopts = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 35};
        roulette = new caseRoulette(element, scope, glob, $timeout, $templateCache, $compile), ngModel.$setViewValue(roulette), roulette.updateItems(multipliedItems(), iopts)
      }

      function onresize() {
        $timeout(function () {
          var newItemsPerView = recItemsPerView();
          if (newItemsPerView !== lastItemsPerView) {
            if (!roulette || roulette.started) return;
            $timeout(function () {
              lastItemsPerView = newItemsPerView;
              var iopts        = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 30};
              roulette.updateItems(multipliedItems(), iopts)
            })
          }
        })
      }

      var rows, lastItemsPerView, roulette, caseitems = scope.casesRoulette(), itemW = 150;
      scope.$watch("rouletteRows", function (newrows) {
        if (newrows) {
          element.removeClass("rows_" + rows), rows = newrows, element.addClass("rows_" + newrows), lastItemsPerView = recItemsPerView();
          var iopts = {itemsPerView: lastItemsPerView, startOffset: 0, minItems: 35};
          roulette ? roulette.updateItems(multipliedItems(), iopts) : resetRoulette()
        }
      }), scope.$watch("rouletteResults", function (results) {
        if (results) {
          roulette.start($.extend(!0, [], results), {
            itemcallback: function () {
              glob.sounds.click.play()
            }
          }, function () {
            var fastForward = scope.rouletteFastForward();
            $timeout(function () {
              var cb = scope.overCallback();
              cb ? cb(function () {
                resetRoulette()
              }) : resetRoulette()
            }, fastForward ? 200 : 500)
          })
        }
      }), scope.$watch("rouletteResize", function (val, oldval) {
        void 0 !== val && onresize()
      }), $(window).on("resize", onresize), scope.$on("$destroy", function () {
        $(window).off("resize", onresize)
      })
    }
  }
}]);
var caseRoulette = function (el, scope, glob, $timeout, $templateCache, $compile) {
  function randomRange(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min
  }

  function transform(el, transform, origin) {
    el.css({
      transform:                  transform,
      "-moz-transform":           transform,
      "-webkit-transform":        transform,
      "-ms-transform":            transform,
      "transform-origin":         origin,
      "-moz-transform-origin":    origin,
      "-webkit-transform-origin": origin,
      "-ms-transform-origin":     origin
    })
  }

  function prepareOptions(sopts) {
    iopts || (iopts = {}), sopts || (sopts = {}), iopts.itemsPerView || (iopts.itemsPerView = 4), void 0 == iopts.startOffset && (iopts.startOffset = 0), iopts.minItems || (iopts.minItems = 20), iopts.wrapperWidth = 100 / iopts.itemsPerView, iopts.itemWidth = .95 * iopts.wrapperWidth, iopts.margin = (iopts.wrapperWidth - iopts.itemWidth) / 2, options = $.extend({}, iopts, sopts)
  }

  function prepateItemsRowData(items) {
    function groomItems(items) {
      items.forEach(function (it) {
        it.id = generateUUID()
      }), glob.shuffle(items)
    }

    function expanditems() {
      if (resitems.length < options.minItems) {
        var arrdupe = $.extend(!0, [], original);
        groomItems(arrdupe);
        var resultinglength = resitems.length + arrdupe.length;
        resultinglength > options.minItems && (arrdupe.length = arrdupe.length - (resultinglength - options.minItems)), resitems = resitems.concat(arrdupe)
      }
      resitems.length < options.minItems && expanditems()
    }

    var resitems = items, original = $.extend(!0, [], resitems);
    return groomItems(resitems), expanditems(), resitems
  }

  function prepareItemsRowForAnimation(itemrow, winneritem) {
    var rangeLimit = Math.ceil(.1 * options.minItems);
    rangeLimit = 2, addItem(itemrow, winneritem, Math.ceil(.69 * options.minItems) + randomRange(-rangeLimit, rangeLimit)), applyItemStyles(), itemrow.winner = winneritem, dlog("winneritem:", winneritem)
  }

  function compileItem(it) {
    var newscope = scope.$new(!0);
    newscope.item = it, newscope.glob = glob;
    var templ                                                     = $compile(template)(newscope), itemwrap            = $("<div class='preview_box item_wrap item_preview'/>"),
        itemel = $("<div class='item skin_item'/>"), shadowcaster = $("<div class='crlt_shadow_caster'/>");
    return itemel.append(templ), itemwrap.append(itemel), itemwrap.append(shadowcaster), it.el = itemwrap, it.innerEl = itemel, it.shadowcasterEl = shadowcaster, itemwrap
  }

  function applyItemStyles() {
    itemRows.forEach(function (itemsRow) {
      itemsRow.forEach(function (it, i) {
        it.el.css({width: options.wrapperWidth + "%", padding: 0});
        var item = {
          color:           "#" + it.quality_color || "D2D2D2",
          wrapperPosition: options.wrapperWidth * i,
          position:        options.wrapperWidth * i + options.margin
        };
        $.extend(it, item)
      }), findItemByOffset(itemsRow, -options.startOffset, function (item) {
        item.el.addClass("crlt_current")
      }, function (item) {
        item.el.removeClass("crlt_current")
      })
    })
  }

  function drawItemsRow(items, placeholder) {
    if (placeholderContainer && placeholderContainer.remove(), container = $("<div class='crlt_container'/>"), transform(container, "translate3d(" + options.startOffset + "%,0,0)"), rltwrap.append(container), placeholder) {
      var itemel = compileItem({
        id:               42,
        price:            42,
        icon_url:         "",
        name_color:       "D2D2D2",
        quality_color:    "EB4B4B",
        market_hash_name: "placeholder",
        placeholder:      !0
      });
      container.append(itemel), placeholderContainer = container, itemel.css("opacity", 0)
    } else items.forEach(function (it, i) {
      compileItem(it), container.append(it.el), it.el.css("opacity", 0), $timeout(function () {
        it.el.css("opacity", 1), $timeout(function () {
          it.el.css("opacity", "")
        })
      })
    });
    items.container = container
  }

  function addItem(items, it, index) {
    items.splice(index, 0, it);
    var itemel = compileItem(it);
    items[index - 1].el.after(itemel)
  }

  function updateItems(newItemRows, opts) {
    if (iopts = opts, prepareOptions(), newItemRows.length < itemRows.length) {
      itemRows.splice(newItemRows.length).forEach(function (row) {
        row.container.remove()
      })
    } else newItemRows.length > itemRows.length && (0 == itemRows.length || (newItemRows = newItemRows.splice(itemRows.length)), newItemRows.forEach(function (itemsRow) {
      var itemsRow = prepateItemsRowData(itemsRow);
      drawItemsRow(itemsRow), itemRows.push(itemsRow)
    }));
    applyItemStyles()
  }

  function start(results, sopts, callback) {
    if (this.started) return !1;
    if (this.started = !0, prepareOptions(sopts), itemRows.length !== results.length) {
      var newItemRows = [];
      results.forEach(function (result) {
        newItemRows.push(result.items)
      }), updateItems(newItemRows, iopts)
    }
    return itemRows.forEach(function (itemrow, i) {
      prepareItemsRowForAnimation(itemrow, results[i].winner)
    }), fns = [], itemRows.forEach(function (itemRow, i) {
      fns.push(function (cb) {
        rotatejs(itemRow, sopts.itemcallback, cb)
      })
    }), async.parallel(fns, callback), !0
  }

  function rotatejs(items, itemcb, cb) {
    function step(x) {
      transform(container, "translate3d(" + -x + "%,0,0)"), offset = x, checkCurrentItem()
    }

    function checkCurrentItem() {
      findItemByOffset(items, offset, function (item) {
        var el = item.el;
        currentitem && currentitem.id === item.id || (currentitem = item, el.addClass("crlt_current"), itemcb && itemcb(item, el))
      }, function (item) {
        item.el.removeClass("crlt_current")
      })
    }

    function animOver() {
      rltwrap.addClass("crlt_fade"), currentitem.shadowcasterEl.css({"box-shadow": "0 0 10rem -0.6rem " + currentitem.color}), currentitem.el.addClass("crlt_win"), cb && $timeout(cb, fastForward ? 0 : 200)
    }

    var fastForward = scope.rouletteFastForward(), container = items.container, offset = -options.startOffset,
        r                                                                              = Math.random();
    r < .1 && (r = .1);
    var currentitem, randominside = options.itemWidth * r, targetoffset = items.winner.position + randominside - 50;
    $({x: offset}).animate({x: targetoffset}, {
      duration: fastForward ? 2500 : 6e3,
      easing:   "crltEasing1",
      step:     function () {
        terminated || step(this.x)
      },
      complete: function () {
        terminated || (step(this.x), $timeout(animOver, fastForward ? 0 : 200))
      }
    })
  }

  function findItemByOffset(items, offset, foundcb, restcb) {
    var currentPosition = offset + 50;
    items.forEach(function (item, i) {
      var itemstart = item.wrapperPosition, itemend = itemstart + options.wrapperWidth;
      item.position, options.itemWidth;
      currentPosition < itemend && currentPosition > itemstart ? foundcb && foundcb(item) : restcb && restcb(item)
    })
  }

  function over(cb) {
    terminated || (itemRows.forEach(function (itemsRow) {
      itemsRow.forEach(function (it) {
        it.el.css("opacity", 0)
      })
    }), setTimeout(function () {
      terminated || cb && cb()
    }, 420))
  }

  function terminate() {
    terminated = !0, items = [], rltwrap.remove()
  }

  el                                                                          = $(el);
  var options, rltwrap, container, placeholderContainer, terminated, itemRows = [],
      template                                                                = $templateCache.get("app/partials/item_preview.tpl.html");
  return function (parent) {
    rltwrap   = $("<div class='crlt_wrapper'/>");
    var flare = $("<div class='crlt_flare'/>"), arrow = $("<div class='crlt_arrow'/>");
    parent.prepend(rltwrap), rltwrap.append(arrow, flare)
  }(el), jQuery.extend(jQuery.easing, {
    crltEasing: function (x, t, b, c, d) {
      var ts = (t /= d) * t, tc = ts * t;
      return b + c * (-3.7975 * tc * ts + 14.2925 * ts * ts + -19.09 * tc + 9.595 * ts)
    }
  }), jQuery.extend(jQuery.easing, {
    crltEasing1: function (x, t, b, c, d) {
      var ts = (t /= d) * t, tc = ts * t;
      return b + c * (-1.2525 * tc * ts + 6.3075 * ts * ts + -10.605 * tc + 6.3 * ts + .25 * t)
    }
  }), scope.$on("$destroy", function () {
    terminate()
  }), {updateItems: updateItems, start: start, over: over, terminate: terminate}
};
!function () {
  function decimalAdjust(type, value, exp) {
    return void 0 === exp || 0 == +exp ? Math[type](value) : (value = +value, exp = +exp, isNaN(value) || "number" != typeof exp || exp % 1 != 0 ? NaN : (value = value.toString().split("e"), value = Math[type](+(value[0] + "e" + (value[1] ? +value[1] - exp : -exp))), value = value.toString().split("e"), +(value[0] + "e" + (value[1] ? +value[1] + exp : exp))))
  }

  Math.round10 || (Math.round10 = function (value, exp) {
    return decimalAdjust("round", value, exp)
  }), Math.floor10 || (Math.floor10 = function (value, exp) {
    return decimalAdjust("floor", value, exp)
  }), Math.ceil10 || (Math.ceil10 = function (value, exp) {
    return decimalAdjust("ceil", value, exp)
  })
}(), function t(e, i, a) {
  function o(r, s) {
    if (!i[r]) {
      if (!e[r]) {
        var l = "function" == typeof require && require;
        if (!s && l) return l(r, !0);
        if (n) return n(r, !0);
        var h = new Error("Cannot find module '" + r + "'");
        throw h.code = "MODULE_NOT_FOUND", h
      }
      var d = i[r] = {exports: {}};
      e[r][0].call(d.exports, function (t) {
        var i = e[r][1][t];
        return o(i || t)
      }, d, d.exports, t, e, i, a)
    }
    return i[r].exports
  }

  for (var n = "function" == typeof require && require, r = 0; r < a.length; r++) o(a[r]);
  return o
}({
  1:                                                      [function (t, e, i) {
  }, {}], 2:                                              [function (t, e, i) {
    function a(t) {
      if (t) {
        var e                                    = /^#([a-fA-F0-9]{3})$/, i         = /^#([a-fA-F0-9]{6})$/,
            a                                    = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
            o                                    = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
            n = /(\w+)/, r = [0, 0, 0], s = 1, l = t.match(e);
        if (l) {
          l = l[1];
          for (var h = 0; h < r.length; h++) r[h] = parseInt(l[h] + l[h], 16)
        } else if (l = t.match(i)) {
          l = l[1];
          for (var h = 0; h < r.length; h++) r[h] = parseInt(l.slice(2 * h, 2 * h + 2), 16)
        } else if (l = t.match(a)) {
          for (var h = 0; h < r.length; h++) r[h] = parseInt(l[h + 1]);
          s = parseFloat(l[4])
        } else if (l = t.match(o)) {
          for (var h = 0; h < r.length; h++) r[h] = Math.round(2.55 * parseFloat(l[h + 1]));
          s = parseFloat(l[4])
        } else if (l = t.match(n)) {
          if ("transparent" == l[1]) return [0, 0, 0, 0];
          if (!(r = y[l[1]])) return
        }
        for (var h = 0; h < r.length; h++) r[h] = v(r[h], 0, 255);
        return s = s || 0 == s ? v(s, 0, 1) : 1, r[3] = s, r
      }
    }

    function o(t) {
      if (t) {
        var e = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,
            i = t.match(e);
        if (i) {
          var a = parseFloat(i[4]);
          return [v(parseInt(i[1]), 0, 360), v(parseFloat(i[2]), 0, 100), v(parseFloat(i[3]), 0, 100), v(isNaN(a) ? 1 : a, 0, 1)]
        }
      }
    }

    function n(t) {
      if (t) {
        var e = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,
            i = t.match(e);
        if (i) {
          var a = parseFloat(i[4]);
          return [v(parseInt(i[1]), 0, 360), v(parseFloat(i[2]), 0, 100), v(parseFloat(i[3]), 0, 100), v(isNaN(a) ? 1 : a, 0, 1)]
        }
      }
    }

    function r(t) {
      var e = a(t);
      return e && e.slice(0, 3)
    }

    function s(t) {
      var e = o(t);
      return e && e.slice(0, 3)
    }

    function l(t) {
      var e = a(t);
      return e ? e[3] : (e = o(t)) ? e[3] : (e = n(t)) ? e[3] : void 0
    }

    function h(t) {
      return "#" + x(t[0]) + x(t[1]) + x(t[2])
    }

    function d(t, e) {
      return 1 > e || t[3] && t[3] < 1 ? c(t, e) : "rgb(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
    }

    function c(t, e) {
      return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), "rgba(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + e + ")"
    }

    function u(t, e) {
      return 1 > e || t[3] && t[3] < 1 ? f(t, e) : "rgb(" + Math.round(t[0] / 255 * 100) + "%, " + Math.round(t[1] / 255 * 100) + "%, " + Math.round(t[2] / 255 * 100) + "%)"
    }

    function f(t, e) {
      return "rgba(" + Math.round(t[0] / 255 * 100) + "%, " + Math.round(t[1] / 255 * 100) + "%, " + Math.round(t[2] / 255 * 100) + "%, " + (e || t[3] || 1) + ")"
    }

    function g(t, e) {
      return 1 > e || t[3] && t[3] < 1 ? p(t, e) : "hsl(" + t[0] + ", " + t[1] + "%, " + t[2] + "%)"
    }

    function p(t, e) {
      return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), "hsla(" + t[0] + ", " + t[1] + "%, " + t[2] + "%, " + e + ")"
    }

    function m(t, e) {
      return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), "hwb(" + t[0] + ", " + t[1] + "%, " + t[2] + "%" + (void 0 !== e && 1 !== e ? ", " + e : "") + ")"
    }

    function b(t) {
      return k[t.slice(0, 3)]
    }

    function v(t, e, i) {
      return Math.min(Math.max(e, t), i)
    }

    function x(t) {
      var e = t.toString(16).toUpperCase();
      return e.length < 2 ? "0" + e : e
    }

    var y     = t("color-name");
    e.exports = {
      getRgba:        a,
      getHsla:        o,
      getRgb:         r,
      getHsl:         s,
      getHwb:         n,
      getAlpha:       l,
      hexString:      h,
      rgbString:      d,
      rgbaString:     c,
      percentString:  u,
      percentaString: f,
      hslString:      g,
      hslaString:     p,
      hwbString:      m,
      keyword:        b
    };
    var k     = {};
    for (var S in y) k[y[S]] = S
  }, {"color-name": 6}], 3:                               [function (t, e, i) {
    var a = t("color-convert"), o = t("chartjs-color-string"), n = function (t) {
      if (t instanceof n) return t;
      if (!(this instanceof n)) return new n(t);
      this.values = {rgb: [0, 0, 0], hsl: [0, 0, 0], hsv: [0, 0, 0], hwb: [0, 0, 0], cmyk: [0, 0, 0, 0], alpha: 1};
      var e;
      if ("string" == typeof t) if (e = o.getRgba(t)) this.setValues("rgb", e); else if (e = o.getHsla(t)) this.setValues("hsl", e); else {
        if (!(e = o.getHwb(t))) throw new Error('Unable to parse color from string "' + t + '"');
        this.setValues("hwb", e)
      } else if ("object" == typeof t) if (e = t, void 0 !== e.r || void 0 !== e.red) this.setValues("rgb", e); else if (void 0 !== e.l || void 0 !== e.lightness) this.setValues("hsl", e); else if (void 0 !== e.v || void 0 !== e.value) this.setValues("hsv", e); else if (void 0 !== e.w || void 0 !== e.whiteness) this.setValues("hwb", e); else {
        if (void 0 === e.c && void 0 === e.cyan) throw new Error("Unable to parse color from object " + JSON.stringify(t));
        this.setValues("cmyk", e)
      }
    };
    n.prototype = {
      rgb:              function () {
        return this.setSpace("rgb", arguments)
      }, hsl:           function () {
        return this.setSpace("hsl", arguments)
      }, hsv:           function () {
        return this.setSpace("hsv", arguments)
      }, hwb:           function () {
        return this.setSpace("hwb", arguments)
      }, cmyk:          function () {
        return this.setSpace("cmyk", arguments)
      }, rgbArray:      function () {
        return this.values.rgb
      }, hslArray:      function () {
        return this.values.hsl
      }, hsvArray:      function () {
        return this.values.hsv
      }, hwbArray:      function () {
        var t = this.values;
        return 1 !== t.alpha ? t.hwb.concat([t.alpha]) : t.hwb
      }, cmykArray:     function () {
        return this.values.cmyk
      }, rgbaArray:     function () {
        var t = this.values;
        return t.rgb.concat([t.alpha])
      }, hslaArray:     function () {
        var t = this.values;
        return t.hsl.concat([t.alpha])
      }, alpha:         function (t) {
        return void 0 === t ? this.values.alpha : (this.setValues("alpha", t), this)
      }, red:           function (t) {
        return this.setChannel("rgb", 0, t)
      }, green:         function (t) {
        return this.setChannel("rgb", 1, t)
      }, blue:          function (t) {
        return this.setChannel("rgb", 2, t)
      }, hue:           function (t) {
        return t && (t %= 360, t = 0 > t ? 360 + t : t), this.setChannel("hsl", 0, t)
      }, saturation:    function (t) {
        return this.setChannel("hsl", 1, t)
      }, lightness:     function (t) {
        return this.setChannel("hsl", 2, t)
      }, saturationv:   function (t) {
        return this.setChannel("hsv", 1, t)
      }, whiteness:     function (t) {
        return this.setChannel("hwb", 1, t)
      }, blackness:     function (t) {
        return this.setChannel("hwb", 2, t)
      }, value:         function (t) {
        return this.setChannel("hsv", 2, t)
      }, cyan:          function (t) {
        return this.setChannel("cmyk", 0, t)
      }, magenta:       function (t) {
        return this.setChannel("cmyk", 1, t)
      }, yellow:        function (t) {
        return this.setChannel("cmyk", 2, t)
      }, black:         function (t) {
        return this.setChannel("cmyk", 3, t)
      }, hexString:     function () {
        return o.hexString(this.values.rgb)
      }, rgbString:     function () {
        return o.rgbString(this.values.rgb, this.values.alpha)
      }, rgbaString:    function () {
        return o.rgbaString(this.values.rgb, this.values.alpha)
      }, percentString: function () {
        return o.percentString(this.values.rgb, this.values.alpha)
      }, hslString:     function () {
        return o.hslString(this.values.hsl, this.values.alpha)
      }, hslaString:    function () {
        return o.hslaString(this.values.hsl, this.values.alpha)
      }, hwbString:     function () {
        return o.hwbString(this.values.hwb, this.values.alpha)
      }, keyword:       function () {
        return o.keyword(this.values.rgb, this.values.alpha)
      }, rgbNumber:     function () {
        var t = this.values.rgb;
        return t[0] << 16 | t[1] << 8 | t[2]
      }, luminosity:    function () {
        for (var t = this.values.rgb, e = [], i = 0; i < t.length; i++) {
          var a = t[i] / 255;
          e[i]  = .03928 >= a ? a / 12.92 : Math.pow((a + .055) / 1.055, 2.4)
        }
        return .2126 * e[0] + .7152 * e[1] + .0722 * e[2]
      }, contrast:      function (t) {
        var e = this.luminosity(), i = t.luminosity();
        return e > i ? (e + .05) / (i + .05) : (i + .05) / (e + .05)
      }, level:         function (t) {
        var e = this.contrast(t);
        return e >= 7.1 ? "AAA" : e >= 4.5 ? "AA" : ""
      }, dark:          function () {
        var t = this.values.rgb;
        return 128 > (299 * t[0] + 587 * t[1] + 114 * t[2]) / 1e3
      }, light:         function () {
        return !this.dark()
      }, negate:        function () {
        for (var t = [], e = 0; 3 > e; e++) t[e] = 255 - this.values.rgb[e];
        return this.setValues("rgb", t), this
      }, lighten:       function (t) {
        var e = this.values.hsl;
        return e[2] += e[2] * t, this.setValues("hsl", e), this
      }, darken:        function (t) {
        var e = this.values.hsl;
        return e[2] -= e[2] * t, this.setValues("hsl", e), this
      }, saturate:      function (t) {
        var e = this.values.hsl;
        return e[1] += e[1] * t, this.setValues("hsl", e), this
      }, desaturate:    function (t) {
        var e = this.values.hsl;
        return e[1] -= e[1] * t, this.setValues("hsl", e), this
      }, whiten:        function (t) {
        var e = this.values.hwb;
        return e[1] += e[1] * t, this.setValues("hwb", e), this
      }, blacken:       function (t) {
        var e = this.values.hwb;
        return e[2] += e[2] * t, this.setValues("hwb", e), this
      }, greyscale:     function () {
        var t = this.values.rgb, e = .3 * t[0] + .59 * t[1] + .11 * t[2];
        return this.setValues("rgb", [e, e, e]), this
      }, clearer:       function (t) {
        var e = this.values.alpha;
        return this.setValues("alpha", e - e * t), this
      }, opaquer:       function (t) {
        var e = this.values.alpha;
        return this.setValues("alpha", e + e * t), this
      }, rotate:        function (t) {
        var e = this.values.hsl, i = (e[0] + t) % 360;
        return e[0] = 0 > i ? 360 + i : i, this.setValues("hsl", e), this
      }, mix:           function (t, e) {
        var i = this, a = t, o = void 0 === e ? .5 : e, n = 2 * o - 1, r = i.alpha() - a.alpha(),
            s                                                            = ((n * r == -1 ? n : (n + r) / (1 + n * r)) + 1) / 2, l   = 1 - s;
        return this.rgb(s * i.red() + l * a.red(), s * i.green() + l * a.green(), s * i.blue() + l * a.blue()).alpha(i.alpha() * o + a.alpha() * (1 - o))
      }, toJSON:        function () {
        return this.rgb()
      }, clone:         function () {
        var t, e, i = new n, a = this.values, o = i.values;
        for (var r in a) a.hasOwnProperty(r) && (t = a[r], e = {}.toString.call(t), "[object Array]" === e ? o[r] = t.slice(0) : "[object Number]" === e && (o[r] = t));
        return i
      }
    }, n.prototype.spaces = {
      rgb:  ["red", "green", "blue"],
      hsl:  ["hue", "saturation", "lightness"],
      hsv:  ["hue", "saturation", "value"],
      hwb:  ["hue", "whiteness", "blackness"],
      cmyk: ["cyan", "magenta", "yellow", "black"]
    }, n.prototype.maxes = {
      rgb:  [255, 255, 255],
      hsl:  [360, 100, 100],
      hsv:  [360, 100, 100],
      hwb:  [360, 100, 100],
      cmyk: [100, 100, 100, 100]
    }, n.prototype.getValues = function (t) {
      for (var e = this.values, i = {}, a = 0; a < t.length; a++) i[t.charAt(a)] = e[t][a];
      return 1 !== e.alpha && (i.a = e.alpha), i
    }, n.prototype.setValues = function (t, e) {
      var i, o = this.values, n = this.spaces, r = this.maxes, s = 1;
      if ("alpha" === t) s = e; else if (e.length) o[t] = e.slice(0, t.length), s = e[t.length]; else if (void 0 !== e[t.charAt(0)]) {
        for (i = 0; i < t.length; i++) o[t][i] = e[t.charAt(i)];
        s = e.a
      } else if (void 0 !== e[n[t][0]]) {
        var l = n[t];
        for (i = 0; i < t.length; i++) o[t][i] = e[l[i]];
        s = e.alpha
      }
      if (o.alpha = Math.max(0, Math.min(1, void 0 === s ? o.alpha : s)), "alpha" === t) return !1;
      var h;
      for (i = 0; i < t.length; i++) h = Math.max(0, Math.min(r[t][i], o[t][i])), o[t][i] = Math.round(h);
      for (var d in n) d !== t && (o[d] = a[t][d](o[t]));
      return !0
    }, n.prototype.setSpace = function (t, e) {
      var i = e[0];
      return void 0 === i ? this.getValues(t) : ("number" == typeof i && (i = Array.prototype.slice.call(e)), this.setValues(t, i), this)
    }, n.prototype.setChannel = function (t, e, i) {
      var a = this.values[t];
      return void 0 === i ? a[e] : i === a[e] ? this : (a[e] = i, this.setValues(t, a), this)
    }, "undefined" != typeof window && (window.Color = n), e.exports = n
  }, {"chartjs-color-string": 2, "color-convert": 5}], 4: [function (t, e, i) {
    function a(t) {
      var e, i, a, o = t[0] / 255, n = t[1] / 255, r = t[2] / 255, s = Math.min(o, n, r), l = Math.max(o, n, r),
          h                                                                                 = l - s;
      return l == s ? e = 0 : o == l ? e = (n - r) / h : n == l ? e = 2 + (r - o) / h : r == l && (e = 4 + (o - n) / h), e = Math.min(60 * e, 360), 0 > e && (e += 360), a = (s + l) / 2, i = l == s ? 0 : .5 >= a ? h / (l + s) : h / (2 - l - s), [e, 100 * i, 100 * a]
    }

    function o(t) {
      var e, i, a, o = t[0], n = t[1], r = t[2], s = Math.min(o, n, r), l = Math.max(o, n, r), h = l - s;
      return i = 0 == l ? 0 : h / l * 1e3 / 10, l == s ? e = 0 : o == l ? e = (n - r) / h : n == l ? e = 2 + (r - o) / h : r == l && (e = 4 + (o - n) / h), e = Math.min(60 * e, 360), 0 > e && (e += 360), a = l / 255 * 1e3 / 10, [e, i, a]
    }

    function n(t) {
      var e = t[0], i = t[1], o = t[2], n = a(t)[0], r = 1 / 255 * Math.min(e, Math.min(i, o)),
          o                                            = 1 - 1 / 255 * Math.max(e, Math.max(i, o));
      return [n, 100 * r, 100 * o]
    }

    function s(t) {
      var e, i, a, o, n = t[0] / 255, r = t[1] / 255, s = t[2] / 255;
      return o = Math.min(1 - n, 1 - r, 1 - s), e = (1 - n - o) / (1 - o) || 0, i = (1 - r - o) / (1 - o) || 0, a = (1 - s - o) / (1 - o) || 0, [100 * e, 100 * i, 100 * a, 100 * o]
    }

    function l(t) {
      return G[JSON.stringify(t)]
    }

    function h(t) {
      var e = t[0] / 255, i = t[1] / 255, a = t[2] / 255;
      return e = e > .04045 ? Math.pow((e + .055) / 1.055, 2.4) : e / 12.92, i = i > .04045 ? Math.pow((i + .055) / 1.055, 2.4) : i / 12.92, a = a > .04045 ? Math.pow((a + .055) / 1.055, 2.4) : a / 12.92, [100 * (.4124 * e + .3576 * i + .1805 * a), 100 * (.2126 * e + .7152 * i + .0722 * a), 100 * (.0193 * e + .1192 * i + .9505 * a)]
    }

    function d(t) {
      var e, i, a, o = h(t), n = o[0], r = o[1], s = o[2];
      return n /= 95.047, r /= 100, s /= 108.883, n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116, r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, s = s > .008856 ? Math.pow(s, 1 / 3) : 7.787 * s + 16 / 116, e = 116 * r - 16, i = 500 * (n - r), a = 200 * (r - s), [e, i, a]
    }

    function c(t) {
      return B(d(t))
    }

    function u(t) {
      var e, i, a, o, n, r = t[0] / 360, s = t[1] / 100, l = t[2] / 100;
      if (0 == s) return n = 255 * l, [n, n, n];
      i = .5 > l ? l * (1 + s) : l + s - l * s, e = 2 * l - i, o = [0, 0, 0];
      for (var h = 0; 3 > h; h++) a = r + 1 / 3 * -(h - 1), 0 > a && a++, a > 1 && a--, n = 1 > 6 * a ? e + 6 * (i - e) * a : 1 > 2 * a ? i : 2 > 3 * a ? e + (i - e) * (2 / 3 - a) * 6 : e, o[h] = 255 * n;
      return o
    }

    function f(t) {
      var e, i, a = t[0], o = t[1] / 100, n = t[2] / 100;
      return 0 === n ? [0, 0, 0] : (n *= 2, o *= 1 >= n ? n : 2 - n, i = (n + o) / 2, e = 2 * o / (n + o), [a, 100 * e, 100 * i])
    }

    function p(t) {
      return n(u(t))
    }

    function m(t) {
      return s(u(t))
    }

    function v(t) {
      return l(u(t))
    }

    function x(t) {
      var e                                                                                    = t[0] / 60, i = t[1] / 100, a                                                     = t[2] / 100, o = Math.floor(e) % 6, n = e - Math.floor(e),
          r = 255 * a * (1 - i), s = 255 * a * (1 - i * n), l = 255 * a * (1 - i * (1 - n)), a = 255 * a;
      switch (o) {
        case 0:
          return [a, l, r];
        case 1:
          return [s, a, r];
        case 2:
          return [r, a, l];
        case 3:
          return [r, s, a];
        case 4:
          return [l, r, a];
        case 5:
          return [a, r, s]
      }
    }

    function y(t) {
      var e, i, a = t[0], o = t[1] / 100, n = t[2] / 100;
      return i = (2 - o) * n, e = o * n, e /= 1 >= i ? i : 2 - i, e = e || 0, i /= 2, [a, 100 * e, 100 * i]
    }

    function k(t) {
      return n(x(t))
    }

    function S(t) {
      return s(x(t))
    }

    function C(t) {
      return l(x(t))
    }

    function w(t) {
      var e, i, a, o, n = t[0] / 360, s = t[1] / 100, l = t[2] / 100, h = s + l;
      switch (h > 1 && (s /= h, l /= h), e = Math.floor(6 * n), i = 1 - l, a = 6 * n - e, 0 != (1 & e) && (a = 1 - a), o = s + a * (i - s), e) {
        default:
        case 6:
        case 0:
          r = i, g = o, b = s;
          break;
        case 1:
          r = o, g = i, b = s;
          break;
        case 2:
          r = s, g = i, b = o;
          break;
        case 3:
          r = s, g = o, b = i;
          break;
        case 4:
          r = o, g = s, b = i;
          break;
        case 5:
          r = i, g = s, b = o
      }
      return [255 * r, 255 * g, 255 * b]
    }

    function M(t) {
      return a(w(t))
    }

    function D(t) {
      return o(w(t))
    }

    function A(t) {
      return s(w(t))
    }

    function I(t) {
      return l(w(t))
    }

    function F(t) {
      var e, i, a, o = t[0] / 100, n = t[1] / 100, r = t[2] / 100, s = t[3] / 100;
      return e = 1 - Math.min(1, o * (1 - s) + s), i = 1 - Math.min(1, n * (1 - s) + s), a = 1 - Math.min(1, r * (1 - s) + s), [255 * e, 255 * i, 255 * a]
    }

    function _(t) {
      return a(F(t))
    }

    function P(t) {
      return o(F(t))
    }

    function T(t) {
      return n(F(t))
    }

    function V(t) {
      return l(F(t))
    }

    function R(t) {
      var e, i, a, o = t[0] / 100, n = t[1] / 100, r = t[2] / 100;
      return e = 3.2406 * o + -1.5372 * n + -.4986 * r, i = -.9689 * o + 1.8758 * n + .0415 * r, a = .0557 * o + -.204 * n + 1.057 * r, e = e > .0031308 ? 1.055 * Math.pow(e, 1 / 2.4) - .055 : e *= 12.92, i = i > .0031308 ? 1.055 * Math.pow(i, 1 / 2.4) - .055 : i *= 12.92, a = a > .0031308 ? 1.055 * Math.pow(a, 1 / 2.4) - .055 : a *= 12.92, e = Math.min(Math.max(0, e), 1), i = Math.min(Math.max(0, i), 1), a = Math.min(Math.max(0, a), 1), [255 * e, 255 * i, 255 * a]
    }

    function O(t) {
      var e, i, a, o = t[0], n = t[1], r = t[2];
      return o /= 95.047, n /= 100, r /= 108.883, o = o > .008856 ? Math.pow(o, 1 / 3) : 7.787 * o + 16 / 116, n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116, r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, e = 116 * n - 16, i = 500 * (o - n), a = 200 * (n - r), [e, i, a]
    }

    function W(t) {
      return B(O(t))
    }

    function L(t) {
      var e, i, a, o, n = t[0], r = t[1], s = t[2];
      return 8 >= n ? (i = 100 * n / 903.3, o = i / 100 * 7.787 + 16 / 116) : (i = 100 * Math.pow((n + 16) / 116, 3), o = Math.pow(i / 100, 1 / 3)), e = .008856 >= e / 95.047 ? e = 95.047 * (r / 500 + o - 16 / 116) / 7.787 : 95.047 * Math.pow(r / 500 + o, 3), a = .008859 >= a / 108.883 ? a = 108.883 * (o - s / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(o - s / 200, 3), [e, i, a]
    }

    function B(t) {
      var e, i, a, o = t[0], n = t[1], r = t[2];
      return e = Math.atan2(r, n), i = 360 * e / 2 / Math.PI, 0 > i && (i += 360), a = Math.sqrt(n * n + r * r), [o, a, i]
    }

    function z(t) {
      return R(L(t))
    }

    function H(t) {
      var e, i, a, o = t[0], n = t[1];
      return a = t[2] / 360 * 2 * Math.PI, e = n * Math.cos(a), i = n * Math.sin(a), [o, e, i]
    }

    function N(t) {
      return L(H(t))
    }

    function E(t) {
      return z(H(t))
    }

    function U(t) {
      return Q[t]
    }

    function j(t) {
      return a(U(t))
    }

    function q(t) {
      return o(U(t))
    }

    function Y(t) {
      return n(U(t))
    }

    function J(t) {
      return s(U(t))
    }

    function Z(t) {
      return d(U(t))
    }

    function X(t) {
      return h(U(t))
    }

    e.exports = {
      rgb2hsl:      a,
      rgb2hsv:      o,
      rgb2hwb:      n,
      rgb2cmyk:     s,
      rgb2keyword:  l,
      rgb2xyz:      h,
      rgb2lab:      d,
      rgb2lch:      c,
      hsl2rgb:      u,
      hsl2hsv:      f,
      hsl2hwb:      p,
      hsl2cmyk:     m,
      hsl2keyword:  v,
      hsv2rgb:      x,
      hsv2hsl:      y,
      hsv2hwb:      k,
      hsv2cmyk:     S,
      hsv2keyword:  C,
      hwb2rgb:      w,
      hwb2hsl:      M,
      hwb2hsv:      D,
      hwb2cmyk:     A,
      hwb2keyword:  I,
      cmyk2rgb:     F,
      cmyk2hsl:     _,
      cmyk2hsv:     P,
      cmyk2hwb:     T,
      cmyk2keyword: V,
      keyword2rgb:  U,
      keyword2hsl:  j,
      keyword2hsv:  q,
      keyword2hwb:  Y,
      keyword2cmyk: J,
      keyword2lab:  Z,
      keyword2xyz:  X,
      xyz2rgb:      R,
      xyz2lab:      O,
      xyz2lch:      W,
      lab2xyz:      L,
      lab2rgb:      z,
      lab2lch:      B,
      lch2lab:      H,
      lch2xyz:      N,
      lch2rgb:      E
    };
    var Q     = {
      aliceblue:            [240, 248, 255],
      antiquewhite:         [250, 235, 215],
      aqua:                 [0, 255, 255],
      aquamarine:           [127, 255, 212],
      azure:                [240, 255, 255],
      beige:                [245, 245, 220],
      bisque:               [255, 228, 196],
      black:                [0, 0, 0],
      blanchedalmond:       [255, 235, 205],
      blue:                 [0, 0, 255],
      blueviolet:           [138, 43, 226],
      brown:                [165, 42, 42],
      burlywood:            [222, 184, 135],
      cadetblue:            [95, 158, 160],
      chartreuse:           [127, 255, 0],
      chocolate:            [210, 105, 30],
      coral:                [255, 127, 80],
      cornflowerblue:       [100, 149, 237],
      cornsilk:             [255, 248, 220],
      crimson:              [220, 20, 60],
      cyan:                 [0, 255, 255],
      darkblue:             [0, 0, 139],
      darkcyan:             [0, 139, 139],
      darkgoldenrod:        [184, 134, 11],
      darkgray:             [169, 169, 169],
      darkgreen:            [0, 100, 0],
      darkgrey:             [169, 169, 169],
      darkkhaki:            [189, 183, 107],
      darkmagenta:          [139, 0, 139],
      darkolivegreen:       [85, 107, 47],
      darkorange:           [255, 140, 0],
      darkorchid:           [153, 50, 204],
      darkred:              [139, 0, 0],
      darksalmon:           [233, 150, 122],
      darkseagreen:         [143, 188, 143],
      darkslateblue:        [72, 61, 139],
      darkslategray:        [47, 79, 79],
      darkslategrey:        [47, 79, 79],
      darkturquoise:        [0, 206, 209],
      darkviolet:           [148, 0, 211],
      deeppink:             [255, 20, 147],
      deepskyblue:          [0, 191, 255],
      dimgray:              [105, 105, 105],
      dimgrey:              [105, 105, 105],
      dodgerblue:           [30, 144, 255],
      firebrick:            [178, 34, 34],
      floralwhite:          [255, 250, 240],
      forestgreen:          [34, 139, 34],
      fuchsia:              [255, 0, 255],
      gainsboro:            [220, 220, 220],
      ghostwhite:           [248, 248, 255],
      gold:                 [255, 215, 0],
      goldenrod:            [218, 165, 32],
      gray:                 [128, 128, 128],
      green:                [0, 128, 0],
      greenyellow:          [173, 255, 47],
      grey:                 [128, 128, 128],
      honeydew:             [240, 255, 240],
      hotpink:              [255, 105, 180],
      indianred:            [205, 92, 92],
      indigo:               [75, 0, 130],
      ivory:                [255, 255, 240],
      khaki:                [240, 230, 140],
      lavender:             [230, 230, 250],
      lavenderblush:        [255, 240, 245],
      lawngreen:            [124, 252, 0],
      lemonchiffon:         [255, 250, 205],
      lightblue:            [173, 216, 230],
      lightcoral:           [240, 128, 128],
      lightcyan:            [224, 255, 255],
      lightgoldenrodyellow: [250, 250, 210],
      lightgray:            [211, 211, 211],
      lightgreen:           [144, 238, 144],
      lightgrey:            [211, 211, 211],
      lightpink:            [255, 182, 193],
      lightsalmon:          [255, 160, 122],
      lightseagreen:        [32, 178, 170],
      lightskyblue:         [135, 206, 250],
      lightslategray:       [119, 136, 153],
      lightslategrey:       [119, 136, 153],
      lightsteelblue:       [176, 196, 222],
      lightyellow:          [255, 255, 224],
      lime:                 [0, 255, 0],
      limegreen:            [50, 205, 50],
      linen:                [250, 240, 230],
      magenta:              [255, 0, 255],
      maroon:               [128, 0, 0],
      mediumaquamarine:     [102, 205, 170],
      mediumblue:           [0, 0, 205],
      mediumorchid:         [186, 85, 211],
      mediumpurple:         [147, 112, 219],
      mediumseagreen:       [60, 179, 113],
      mediumslateblue:      [123, 104, 238],
      mediumspringgreen:    [0, 250, 154],
      mediumturquoise:      [72, 209, 204],
      mediumvioletred:      [199, 21, 133],
      midnightblue:         [25, 25, 112],
      mintcream:            [245, 255, 250],
      mistyrose:            [255, 228, 225],
      moccasin:             [255, 228, 181],
      navajowhite:          [255, 222, 173],
      navy:                 [0, 0, 128],
      oldlace:              [253, 245, 230],
      olive:                [128, 128, 0],
      olivedrab:            [107, 142, 35],
      orange:               [255, 165, 0],
      orangered:            [255, 69, 0],
      orchid:               [218, 112, 214],
      palegoldenrod:        [238, 232, 170],
      palegreen:            [152, 251, 152],
      paleturquoise:        [175, 238, 238],
      palevioletred:        [219, 112, 147],
      papayawhip:           [255, 239, 213],
      peachpuff:            [255, 218, 185],
      peru:                 [205, 133, 63],
      pink:                 [255, 192, 203],
      plum:                 [221, 160, 221],
      powderblue:           [176, 224, 230],
      purple:               [128, 0, 128],
      rebeccapurple:        [102, 51, 153],
      red:                  [255, 0, 0],
      rosybrown:            [188, 143, 143],
      royalblue:            [65, 105, 225],
      saddlebrown:          [139, 69, 19],
      salmon:               [250, 128, 114],
      sandybrown:           [244, 164, 96],
      seagreen:             [46, 139, 87],
      seashell:             [255, 245, 238],
      sienna:               [160, 82, 45],
      silver:               [192, 192, 192],
      skyblue:              [135, 206, 235],
      slateblue:            [106, 90, 205],
      slategray:            [112, 128, 144],
      slategrey:            [112, 128, 144],
      snow:                 [255, 250, 250],
      springgreen:          [0, 255, 127],
      steelblue:            [70, 130, 180],
      tan:                  [210, 180, 140],
      teal:                 [0, 128, 128],
      thistle:              [216, 191, 216],
      tomato:               [255, 99, 71],
      turquoise:            [64, 224, 208],
      violet:               [238, 130, 238],
      wheat:                [245, 222, 179],
      white:                [255, 255, 255],
      whitesmoke:           [245, 245, 245],
      yellow:               [255, 255, 0],
      yellowgreen:          [154, 205, 50]
    }, G      = {};
    for (var $ in Q) G[JSON.stringify(Q[$])] = $
  }, {}], 5:                                              [function (t, e, i) {
    var a = t("./conversions"), o = function () {
      return new h
    };
    for (var n in a) {
      o[n + "Raw"] = function (t) {
        return function (e) {
          return "number" == typeof e && (e = Array.prototype.slice.call(arguments)), a[t](e)
        }
      }(n);
      var r        = /(\w+)2(\w+)/.exec(n), s = r[1], l = r[2];
      o[s] = o[s] || {}, o[s][l] = o[n] = function (t) {
        return function (e) {
          "number" == typeof e && (e = Array.prototype.slice.call(arguments));
          var i = a[t](e);
          if ("string" == typeof i || void 0 === i) return i;
          for (var o = 0; o < i.length; o++) i[o] = Math.round(i[o]);
          return i
        }
      }(n)
    }
    var h = function () {
      this.convs = {}
    };
    h.prototype.routeSpace = function (t, e) {
      var i = e[0];
      return void 0 === i ? this.getValues(t) : ("number" == typeof i && (i = Array.prototype.slice.call(e)), this.setValues(t, i))
    }, h.prototype.setValues = function (t, e) {
      return this.space = t, this.convs = {}, this.convs[t] = e, this
    }, h.prototype.getValues = function (t) {
      var e = this.convs[t];
      if (!e) {
        var i = this.space, a = this.convs[i];
        e = o[i][t](a), this.convs[t] = e
      }
      return e
    }, ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function (t) {
      h.prototype[t] = function (e) {
        return this.routeSpace(t, arguments)
      }
    }), e.exports = o
  }, {"./conversions": 4}], 6:                            [function (t, e, i) {
    e.exports = {
      aliceblue:            [240, 248, 255],
      antiquewhite:         [250, 235, 215],
      aqua:                 [0, 255, 255],
      aquamarine:           [127, 255, 212],
      azure:                [240, 255, 255],
      beige:                [245, 245, 220],
      bisque:               [255, 228, 196],
      black:                [0, 0, 0],
      blanchedalmond:       [255, 235, 205],
      blue:                 [0, 0, 255],
      blueviolet:           [138, 43, 226],
      brown:                [165, 42, 42],
      burlywood:            [222, 184, 135],
      cadetblue:            [95, 158, 160],
      chartreuse:           [127, 255, 0],
      chocolate:            [210, 105, 30],
      coral:                [255, 127, 80],
      cornflowerblue:       [100, 149, 237],
      cornsilk:             [255, 248, 220],
      crimson:              [220, 20, 60],
      cyan:                 [0, 255, 255],
      darkblue:             [0, 0, 139],
      darkcyan:             [0, 139, 139],
      darkgoldenrod:        [184, 134, 11],
      darkgray:             [169, 169, 169],
      darkgreen:            [0, 100, 0],
      darkgrey:             [169, 169, 169],
      darkkhaki:            [189, 183, 107],
      darkmagenta:          [139, 0, 139],
      darkolivegreen:       [85, 107, 47],
      darkorange:           [255, 140, 0],
      darkorchid:           [153, 50, 204],
      darkred:              [139, 0, 0],
      darksalmon:           [233, 150, 122],
      darkseagreen:         [143, 188, 143],
      darkslateblue:        [72, 61, 139],
      darkslategray:        [47, 79, 79],
      darkslategrey:        [47, 79, 79],
      darkturquoise:        [0, 206, 209],
      darkviolet:           [148, 0, 211],
      deeppink:             [255, 20, 147],
      deepskyblue:          [0, 191, 255],
      dimgray:              [105, 105, 105],
      dimgrey:              [105, 105, 105],
      dodgerblue:           [30, 144, 255],
      firebrick:            [178, 34, 34],
      floralwhite:          [255, 250, 240],
      forestgreen:          [34, 139, 34],
      fuchsia:              [255, 0, 255],
      gainsboro:            [220, 220, 220],
      ghostwhite:           [248, 248, 255],
      gold:                 [255, 215, 0],
      goldenrod:            [218, 165, 32],
      gray:                 [128, 128, 128],
      green:                [0, 128, 0],
      greenyellow:          [173, 255, 47],
      grey:                 [128, 128, 128],
      honeydew:             [240, 255, 240],
      hotpink:              [255, 105, 180],
      indianred:            [205, 92, 92],
      indigo:               [75, 0, 130],
      ivory:                [255, 255, 240],
      khaki:                [240, 230, 140],
      lavender:             [230, 230, 250],
      lavenderblush:        [255, 240, 245],
      lawngreen:            [124, 252, 0],
      lemonchiffon:         [255, 250, 205],
      lightblue:            [173, 216, 230],
      lightcoral:           [240, 128, 128],
      lightcyan:            [224, 255, 255],
      lightgoldenrodyellow: [250, 250, 210],
      lightgray:            [211, 211, 211],
      lightgreen:           [144, 238, 144],
      lightgrey:            [211, 211, 211],
      lightpink:            [255, 182, 193],
      lightsalmon:          [255, 160, 122],
      lightseagreen:        [32, 178, 170],
      lightskyblue:         [135, 206, 250],
      lightslategray:       [119, 136, 153],
      lightslategrey:       [119, 136, 153],
      lightsteelblue:       [176, 196, 222],
      lightyellow:          [255, 255, 224],
      lime:                 [0, 255, 0],
      limegreen:            [50, 205, 50],
      linen:                [250, 240, 230],
      magenta:              [255, 0, 255],
      maroon:               [128, 0, 0],
      mediumaquamarine:     [102, 205, 170],
      mediumblue:           [0, 0, 205],
      mediumorchid:         [186, 85, 211],
      mediumpurple:         [147, 112, 219],
      mediumseagreen:       [60, 179, 113],
      mediumslateblue:      [123, 104, 238],
      mediumspringgreen:    [0, 250, 154],
      mediumturquoise:      [72, 209, 204],
      mediumvioletred:      [199, 21, 133],
      midnightblue:         [25, 25, 112],
      mintcream:            [245, 255, 250],
      mistyrose:            [255, 228, 225],
      moccasin:             [255, 228, 181],
      navajowhite:          [255, 222, 173],
      navy:                 [0, 0, 128],
      oldlace:              [253, 245, 230],
      olive:                [128, 128, 0],
      olivedrab:            [107, 142, 35],
      orange:               [255, 165, 0],
      orangered:            [255, 69, 0],
      orchid:               [218, 112, 214],
      palegoldenrod:        [238, 232, 170],
      palegreen:            [152, 251, 152],
      paleturquoise:        [175, 238, 238],
      palevioletred:        [219, 112, 147],
      papayawhip:           [255, 239, 213],
      peachpuff:            [255, 218, 185],
      peru:                 [205, 133, 63],
      pink:                 [255, 192, 203],
      plum:                 [221, 160, 221],
      powderblue:           [176, 224, 230],
      purple:               [128, 0, 128],
      rebeccapurple:        [102, 51, 153],
      red:                  [255, 0, 0],
      rosybrown:            [188, 143, 143],
      royalblue:            [65, 105, 225],
      saddlebrown:          [139, 69, 19],
      salmon:               [250, 128, 114],
      sandybrown:           [244, 164, 96],
      seagreen:             [46, 139, 87],
      seashell:             [255, 245, 238],
      sienna:               [160, 82, 45],
      silver:               [192, 192, 192],
      skyblue:              [135, 206, 235],
      slateblue:            [106, 90, 205],
      slategray:            [112, 128, 144],
      slategrey:            [112, 128, 144],
      snow:                 [255, 250, 250],
      springgreen:          [0, 255, 127],
      steelblue:            [70, 130, 180],
      tan:                  [210, 180, 140],
      teal:                 [0, 128, 128],
      thistle:              [216, 191, 216],
      tomato:               [255, 99, 71],
      turquoise:            [64, 224, 208],
      violet:               [238, 130, 238],
      wheat:                [245, 222, 179],
      white:                [255, 255, 255],
      whitesmoke:           [245, 245, 245],
      yellow:               [255, 255, 0],
      yellowgreen:          [154, 205, 50]
    }
  }, {}], 7:                                              [function (t, e, i) {
    var a = t("./core/core.js")();
    t("./core/core.helpers")(a), t("./core/core.element")(a), t("./core/core.animation")(a), t("./core/core.controller")(a), t("./core/core.datasetController")(a), t("./core/core.layoutService")(a), t("./core/core.legend")(a), t("./core/core.plugin.js")(a), t("./core/core.scale")(a), t("./core/core.scaleService")(a), t("./core/core.title")(a), t("./core/core.tooltip")(a), t("./elements/element.arc")(a), t("./elements/element.line")(a), t("./elements/element.point")(a), t("./elements/element.rectangle")(a), t("./scales/scale.category")(a), t("./scales/scale.linear")(a), t("./scales/scale.logarithmic")(a), t("./scales/scale.radialLinear")(a), t("./scales/scale.time")(a), t("./controllers/controller.bar")(a), t("./controllers/controller.bubble")(a), t("./controllers/controller.doughnut")(a), t("./controllers/controller.line")(a), t("./controllers/controller.polarArea")(a), t("./controllers/controller.radar")(a), t("./charts/Chart.Bar")(a), t("./charts/Chart.Bubble")(a), t("./charts/Chart.Doughnut")(a), t("./charts/Chart.Line")(a), t("./charts/Chart.PolarArea")(a), t("./charts/Chart.Radar")(a), t("./charts/Chart.Scatter")(a), window.Chart = e.exports = a
  }, {
    "./charts/Chart.Bar":                 8,
    "./charts/Chart.Bubble":              9,
    "./charts/Chart.Doughnut":            10,
    "./charts/Chart.Line":                11,
    "./charts/Chart.PolarArea":           12,
    "./charts/Chart.Radar":               13,
    "./charts/Chart.Scatter":             14,
    "./controllers/controller.bar":       15,
    "./controllers/controller.bubble":    16,
    "./controllers/controller.doughnut":  17,
    "./controllers/controller.line":      18,
    "./controllers/controller.polarArea": 19,
    "./controllers/controller.radar":     20,
    "./core/core.animation":              21,
    "./core/core.controller":             22,
    "./core/core.datasetController":      23,
    "./core/core.element":                24,
    "./core/core.helpers":                25,
    "./core/core.js":                     26,
    "./core/core.layoutService":          27,
    "./core/core.legend":                 28,
    "./core/core.plugin.js":              29,
    "./core/core.scale":                  30,
    "./core/core.scaleService":           31,
    "./core/core.title":                  32,
    "./core/core.tooltip":                33,
    "./elements/element.arc":             34,
    "./elements/element.line":            35,
    "./elements/element.point":           36,
    "./elements/element.rectangle":       37,
    "./scales/scale.category":            38,
    "./scales/scale.linear":              39,
    "./scales/scale.logarithmic":         40,
    "./scales/scale.radialLinear":        41,
    "./scales/scale.time":                42
  }], 8:                                                  [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.Bar = function (e, i) {
        return i.type = "bar", new t(e, i)
      }
    }
  }, {}], 9:                                              [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.Bubble = function (e, i) {
        return i.type = "bubble", new t(e, i)
      }
    }
  }, {}], 10:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.Doughnut = function (e, i) {
        return i.type = "doughnut", new t(e, i)
      }
    }
  }, {}], 11:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.Line = function (e, i) {
        return i.type = "line", new t(e, i)
      }
    }
  }, {}], 12:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.PolarArea = function (e, i) {
        return i.type = "polarArea", new t(e, i)
      }
    }
  }, {}], 13:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      t.Radar = function (e, i) {
        return i.options = t.helpers.configMerge({aspectRatio: 1}, i.options), i.type = "radar", new t(e, i)
      }
    }
  }, {}], 14:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = {
        hover:    {mode: "single"},
        scales:   {
          xAxes: [{type: "linear", position: "bottom", id: "x-axis-1"}],
          yAxes: [{type: "linear", position: "left", id: "y-axis-1"}]
        },
        tooltips: {
          callbacks: {
            title:    function (t, e) {
              return ""
            }, label: function (t, e) {
              return "(" + t.xLabel + ", " + t.yLabel + ")"
            }
          }
        }
      };
      t.defaults.scatter = e, t.controllers.scatter = t.controllers.line, t.Scatter = function (e, i) {
        return i.type = "scatter", new t(e, i)
      }
    }
  }, {}], 15:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.bar = {
        hover:  {mode: "label"},
        scales: {
          xAxes:     [{
            type:               "category",
            categoryPercentage: .8,
            barPercentage:      .9,
            gridLines:          {offsetGridLines: !0}
          }], yAxes: [{type: "linear"}]
        }
      }, t.controllers.bar = t.DatasetController.extend({
        dataElementType:   t.elements.Rectangle,
        initialize:        function (e, i) {
          t.DatasetController.prototype.initialize.call(this, e, i), this.getMeta().bar = !0
        },
        getBarCount:       function () {
          var t = 0;
          return e.each(this.chart.data.datasets, function (e, i) {
            this.chart.getDatasetMeta(i).bar && this.chart.isDatasetVisible(i) && ++t
          }, this), t
        },
        update:            function (t) {
          e.each(this.getMeta().data, function (e, i) {
            this.updateElement(e, i, t)
          }, this)
        },
        updateElement:     function (t, i, a) {
          var o                                                                  = this.getMeta(), n                                              = this.getScaleForId(o.xAxisID), r = this.getScaleForId(o.yAxisID),
              s = r.getBasePixel(), l = this.chart.options.elements.rectangle, h = t.custom || {},
              d                                                                  = this.getDataset();
          e.extend(t, {
            _xScale:       n,
            _yScale:       r,
            _datasetIndex: this.index,
            _index:        i,
            _model:        {
              x:               this.calculateBarX(i, this.index),
              y:               a ? s : this.calculateBarY(i, this.index),
              label:           this.chart.data.labels[i],
              datasetLabel:    d.label,
              base:            a ? s : this.calculateBarBase(this.index, i),
              width:           this.calculateBarWidth(i),
              backgroundColor: h.backgroundColor ? h.backgroundColor : e.getValueAtIndexOrDefault(d.backgroundColor, i, l.backgroundColor),
              borderSkipped:   h.borderSkipped ? h.borderSkipped : l.borderSkipped,
              borderColor:     h.borderColor ? h.borderColor : e.getValueAtIndexOrDefault(d.borderColor, i, l.borderColor),
              borderWidth:     h.borderWidth ? h.borderWidth : e.getValueAtIndexOrDefault(d.borderWidth, i, l.borderWidth)
            }
          }), t.pivot()
        },
        calculateBarBase:  function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.yAxisID), o = 0;
          if (a.options.stacked) {
            var n = this.chart, r = n.data.datasets;
            if (0 > r[t].data[e]) for (var l = 0; t > l; l++) {
              var h = r[l], d = n.getDatasetMeta(l);
              d.bar && d.yAxisID === a.id && n.isDatasetVisible(l) && (o += h.data[e] < 0 ? h.data[e] : 0)
            } else for (var c = 0; t > c; c++) {
              var u = r[c], f = n.getDatasetMeta(c);
              f.bar && f.yAxisID === a.id && n.isDatasetVisible(c) && (o += u.data[e] > 0 ? u.data[e] : 0)
            }
            return a.getPixelForValue(o)
          }
          return a.getBasePixel()
        },
        getRuler:          function (t) {
          var e, i = this.getMeta(), a = this.getScaleForId(i.xAxisID), o = this.getBarCount();
          e        = "category" === a.options.type ? a.getPixelForTick(t + 1) - a.getPixelForTick(t) : a.width / a.ticks.length;
          var n    = e * a.options.categoryPercentage, r = (e - e * a.options.categoryPercentage) / 2, s = n / o;
          if (a.ticks.length !== this.chart.data.labels.length) {
            s *= a.ticks.length / this.chart.data.labels.length
          }
          return {
            datasetCount:    o,
            tickWidth:       e,
            categoryWidth:   n,
            categorySpacing: r,
            fullBarWidth:    s,
            barWidth:        s * a.options.barPercentage,
            barSpacing:      s - s * a.options.barPercentage
          }
        },
        calculateBarWidth: function (t) {
          var e = this.getScaleForId(this.getMeta().xAxisID), i = this.getRuler(t);
          return e.options.stacked ? i.categoryWidth : i.barWidth
        },
        getBarIndex:       function (t) {
          var e, i, a = 0;
          for (i = 0; t > i; ++i) e = this.chart.getDatasetMeta(i), e.bar && this.chart.isDatasetVisible(i) && ++a;
          return a
        },
        calculateBarX:     function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.xAxisID), o = this.getBarIndex(e), n = this.getRuler(t),
              r                                                                                 = a.getPixelForValue(null, t, e, this.chart.isCombo);
          return r -= this.chart.isCombo ? n.tickWidth / 2 : 0, a.options.stacked ? r + n.categoryWidth / 2 + n.categorySpacing : r + n.barWidth / 2 + n.categorySpacing + n.barWidth * o + n.barSpacing / 2 + n.barSpacing * o
        },
        calculateBarY:     function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.yAxisID), o = this.getDataset().data[t];
          if (a.options.stacked) {
            for (var n = 0, r = 0, s = 0; e > s; s++) {
              var l = this.chart.data.datasets[s], h = this.chart.getDatasetMeta(s);
              h.bar && h.yAxisID === a.id && this.chart.isDatasetVisible(s) && (l.data[t] < 0 ? r += l.data[t] || 0 : n += l.data[t] || 0)
            }
            return 0 > o ? a.getPixelForValue(r + o) : a.getPixelForValue(n + o)
          }
          return a.getPixelForValue(o)
        },
        draw:              function (t) {
          var i = t || 1;
          e.each(this.getMeta().data, function (t, e) {
            var a = this.getDataset().data[e];
            null === a || void 0 === a || isNaN(a) || t.transition(i).draw()
          }, this)
        },
        setHoverStyle:     function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t._index, o = t.custom || {}, n = t._model;
          n.backgroundColor = o.hoverBackgroundColor ? o.hoverBackgroundColor : e.getValueAtIndexOrDefault(i.hoverBackgroundColor, a, e.getHoverColor(n.backgroundColor)), n.borderColor = o.hoverBorderColor ? o.hoverBorderColor : e.getValueAtIndexOrDefault(i.hoverBorderColor, a, e.getHoverColor(n.borderColor)), n.borderWidth = o.hoverBorderWidth ? o.hoverBorderWidth : e.getValueAtIndexOrDefault(i.hoverBorderWidth, a, n.borderWidth)
        },
        removeHoverStyle:  function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t._index, o = t.custom || {}, n = t._model,
              r                                                                                  = this.chart.options.elements.rectangle;
          n.backgroundColor = o.backgroundColor ? o.backgroundColor : e.getValueAtIndexOrDefault(i.backgroundColor, a, r.backgroundColor), n.borderColor = o.borderColor ? o.borderColor : e.getValueAtIndexOrDefault(i.borderColor, a, r.borderColor), n.borderWidth = o.borderWidth ? o.borderWidth : e.getValueAtIndexOrDefault(i.borderWidth, a, r.borderWidth)
        }
      }), t.defaults.horizontalBar = {
        hover:    {mode: "label"},
        scales:   {
          xAxes: [{type: "linear", position: "bottom"}],
          yAxes: [{
            position:           "left",
            type:               "category",
            categoryPercentage: .8,
            barPercentage:      .9,
            gridLines:          {offsetGridLines: !0}
          }]
        },
        elements: {rectangle: {borderSkipped: "left"}},
        tooltips: {
          callbacks: {
            title:    function (t, e) {
              var i = "";
              return t.length > 0 && (t[0].yLabel ? i = t[0].yLabel : e.labels.length > 0 && t[0].index < e.labels.length && (i = e.labels[t[0].index])), i
            }, label: function (t, e) {
              return (e.datasets[t.datasetIndex].label || "") + ": " + t.xLabel
            }
          }
        }
      }, t.controllers.horizontalBar = t.controllers.bar.extend({
        updateElement:         function (t, i, a, o) {
          var n = this.getMeta(), r = this.getScaleForId(n.xAxisID), s = this.getScaleForId(n.yAxisID),
              l                                                        = r.getBasePixel(), h = t.custom || {}, d = this.getDataset(),
              c                                                        = this.chart.options.elements.rectangle;
          e.extend(t, {
            _xScale:       r,
            _yScale:       s,
            _datasetIndex: this.index,
            _index:        i,
            _model:        {
              x:               a ? l : this.calculateBarX(i, this.index),
              y:               this.calculateBarY(i, this.index),
              label:           this.chart.data.labels[i],
              datasetLabel:    d.label,
              base:            a ? l : this.calculateBarBase(this.index, i),
              height:          this.calculateBarHeight(i),
              backgroundColor: h.backgroundColor ? h.backgroundColor : e.getValueAtIndexOrDefault(d.backgroundColor, i, c.backgroundColor),
              borderSkipped:   h.borderSkipped ? h.borderSkipped : c.borderSkipped,
              borderColor:     h.borderColor ? h.borderColor : e.getValueAtIndexOrDefault(d.borderColor, i, c.borderColor),
              borderWidth:     h.borderWidth ? h.borderWidth : e.getValueAtIndexOrDefault(d.borderWidth, i, c.borderWidth)
            },
            draw:          function () {
              function t(t) {
                return l[(d + t) % 4]
              }

              var e = this._chart.ctx, i = this._view, a = i.height / 2, o = i.y - a, n = i.y + a,
                  r                                                                     = i.base - (i.base - i.x), s = i.borderWidth / 2;
              i.borderWidth && (o += s, n -= s, r += s), e.beginPath(), e.fillStyle = i.backgroundColor, e.strokeStyle = i.borderColor, e.lineWidth = i.borderWidth;
              var l = [[i.base, n], [i.base, o], [r, o], [r, n]], h = ["bottom", "left", "top", "right"],
                  d                                                 = h.indexOf(i.borderSkipped, 0);
              -1 === d && (d = 0), e.moveTo.apply(e, t(0));
              for (var c = 1; 4 > c; c++) e.lineTo.apply(e, t(c));
              e.fill(), i.borderWidth && e.stroke()
            },
            inRange:       function (t, e) {
              var i = this._view, a = !1;
              return i && (a = i.x < i.base ? e >= i.y - i.height / 2 && e <= i.y + i.height / 2 && t >= i.x && t <= i.base : e >= i.y - i.height / 2 && e <= i.y + i.height / 2 && t >= i.base && t <= i.x), a
            }
          }), t.pivot()
        }, calculateBarBase:   function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.xAxisID), o = 0;
          if (a.options.stacked) {
            if (0 > this.chart.data.datasets[t].data[e]) for (var r = 0; t > r; r++) {
              var s = this.chart.data.datasets[r], l = this.chart.getDatasetMeta(r);
              l.bar && l.xAxisID === a.id && this.chart.isDatasetVisible(r) && (o += s.data[e] < 0 ? s.data[e] : 0)
            } else for (var h = 0; t > h; h++) {
              var d = this.chart.data.datasets[h], c = this.chart.getDatasetMeta(h);
              c.bar && c.xAxisID === a.id && this.chart.isDatasetVisible(h) && (o += d.data[e] > 0 ? d.data[e] : 0)
            }
            return a.getPixelForValue(o)
          }
          return a.getBasePixel()
        }, getRuler:           function (t) {
          var e, i = this.getMeta(), a = this.getScaleForId(i.yAxisID), o = this.getBarCount();
          e        = "category" === a.options.type ? a.getPixelForTick(t + 1) - a.getPixelForTick(t) : a.width / a.ticks.length;
          var n    = e * a.options.categoryPercentage, r = (e - e * a.options.categoryPercentage) / 2, s = n / o;
          if (a.ticks.length !== this.chart.data.labels.length) {
            s *= a.ticks.length / this.chart.data.labels.length
          }
          return {
            datasetCount:    o,
            tickHeight:      e,
            categoryHeight:  n,
            categorySpacing: r,
            fullBarHeight:   s,
            barHeight:       s * a.options.barPercentage,
            barSpacing:      s - s * a.options.barPercentage
          }
        }, calculateBarHeight: function (t) {
          var e = this.getScaleForId(this.getMeta().yAxisID), i = this.getRuler(t);
          return e.options.stacked ? i.categoryHeight : i.barHeight
        }, calculateBarX:      function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.xAxisID), o = this.getDataset().data[t];
          if (a.options.stacked) {
            for (var n = 0, r = 0, s = 0; e > s; s++) {
              var l = this.chart.data.datasets[s], h = this.chart.getDatasetMeta(s);
              h.bar && h.xAxisID === a.id && this.chart.isDatasetVisible(s) && (l.data[t] < 0 ? r += l.data[t] || 0 : n += l.data[t] || 0)
            }
            return 0 > o ? a.getPixelForValue(r + o) : a.getPixelForValue(n + o)
          }
          return a.getPixelForValue(o)
        }, calculateBarY:      function (t, e) {
          var i = this.getMeta(), a = this.getScaleForId(i.yAxisID), o = this.getBarIndex(e), n = this.getRuler(t),
              r                                                                                 = a.getPixelForValue(null, t, e, this.chart.isCombo);
          return r -= this.chart.isCombo ? n.tickHeight / 2 : 0, a.options.stacked ? r + n.categoryHeight / 2 + n.categorySpacing : r + n.barHeight / 2 + n.categorySpacing + n.barHeight * o + n.barSpacing / 2 + n.barSpacing * o
        }
      })
    }
  }, {}], 16:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.bubble = {
        hover:    {mode: "single"},
        scales:   {
          xAxes: [{type: "linear", position: "bottom", id: "x-axis-0"}],
          yAxes: [{type: "linear", position: "left", id: "y-axis-0"}]
        },
        tooltips: {
          callbacks: {
            title:    function (t, e) {
              return ""
            }, label: function (t, e) {
              var i = e.datasets[t.datasetIndex].label || "", a = e.datasets[t.datasetIndex].data[t.index];
              return i + ": (" + a.x + ", " + a.y + ", " + a.r + ")"
            }
          }
        }
      }, t.controllers.bubble = t.DatasetController.extend({
        dataElementType:     t.elements.Point, update: function (t) {
          var i = this.getMeta(), a = i.data;
          e.each(a, function (e, i) {
            this.updateElement(e, i, t)
          }, this)
        }, updateElement:    function (t, i, a) {
          var o                                                           = this.getMeta(), n                                       = this.getScaleForId(o.xAxisID), r = this.getScaleForId(o.yAxisID),
              s = t.custom || {}, l = this.getDataset(), h = l.data[i], d = this.chart.options.elements.point;
          e.extend(t, {
            _xScale:       n,
            _yScale:       r,
            _datasetIndex: this.index,
            _index:        i,
            _model:        {
              x:               a ? n.getPixelForDecimal(.5) : n.getPixelForValue(h, i, this.index, this.chart.isCombo),
              y:               a ? r.getBasePixel() : r.getPixelForValue(h, i, this.index),
              radius:          a ? 0 : s.radius ? s.radius : this.getRadius(h),
              backgroundColor: s.backgroundColor ? s.backgroundColor : e.getValueAtIndexOrDefault(l.backgroundColor, i, d.backgroundColor),
              borderColor:     s.borderColor ? s.borderColor : e.getValueAtIndexOrDefault(l.borderColor, i, d.borderColor),
              borderWidth:     s.borderWidth ? s.borderWidth : e.getValueAtIndexOrDefault(l.borderWidth, i, d.borderWidth),
              hitRadius:       s.hitRadius ? s.hitRadius : e.getValueAtIndexOrDefault(l.hitRadius, i, d.hitRadius)
            }
          });
          var c = t._model;
          c.skip = s.skip ? s.skip : isNaN(c.x) || isNaN(c.y), t.pivot()
        }, getRadius:        function (t) {
          return t.r || this.chart.options.elements.point.radius
        }, setHoverStyle:    function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t._index, o = t.custom || {}, n = t._model;
          n.radius = o.hoverRadius ? o.hoverRadius : e.getValueAtIndexOrDefault(i.hoverRadius, a, this.chart.options.elements.point.hoverRadius) + this.getRadius(this.getDataset().data[t._index]), n.backgroundColor = o.hoverBackgroundColor ? o.hoverBackgroundColor : e.getValueAtIndexOrDefault(i.hoverBackgroundColor, a, e.getHoverColor(n.backgroundColor)), n.borderColor = o.hoverBorderColor ? o.hoverBorderColor : e.getValueAtIndexOrDefault(i.hoverBorderColor, a, e.getHoverColor(n.borderColor)), n.borderWidth = o.hoverBorderWidth ? o.hoverBorderWidth : e.getValueAtIndexOrDefault(i.hoverBorderWidth, a, n.borderWidth)
        }, removeHoverStyle: function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t._index, o = t.custom || {}, n = t._model,
              r                                                                                  = this.chart.options.elements.point;
          n.radius = o.radius ? o.radius : this.getRadius(i.data[t._index]), n.backgroundColor = o.backgroundColor ? o.backgroundColor : e.getValueAtIndexOrDefault(i.backgroundColor, a, r.backgroundColor), n.borderColor = o.borderColor ? o.borderColor : e.getValueAtIndexOrDefault(i.borderColor, a, r.borderColor), n.borderWidth = o.borderWidth ? o.borderWidth : e.getValueAtIndexOrDefault(i.borderWidth, a, r.borderWidth)
        }
      })
    }
  }, {}], 17:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = t.defaults;
      i.doughnut = {
        animation:        {animateRotate: !0, animateScale: !1},
        aspectRatio:      1,
        hover:            {mode: "single"},
        legendCallback:   function (t) {
          var e = [];
          e.push('<ul class="' + t.id + '-legend">');
          var i = t.data, a = i.datasets, o = i.labels;
          if (a.length) for (var n = 0; n < a[0].data.length; ++n) e.push('<li><span style="background-color:' + a[0].backgroundColor[n] + '"></span>'), o[n] && e.push(o[n]), e.push("</li>");
          return e.push("</ul>"), e.join("")
        },
        legend:           {
          labels:     {
            generateLabels: function (t) {
              var i = t.data;
              return i.labels.length && i.datasets.length ? i.labels.map(function (a, o) {
                var n = t.getDatasetMeta(0), r = i.datasets[0], s = n.data[o], l = s.custom || {},
                    h                                                            = e.getValueAtIndexOrDefault, d                            = t.options.elements.arc;
                return {
                  text:        a,
                  fillStyle:   l.backgroundColor ? l.backgroundColor : h(r.backgroundColor, o, d.backgroundColor),
                  strokeStyle: l.borderColor ? l.borderColor : h(r.borderColor, o, d.borderColor),
                  lineWidth:   l.borderWidth ? l.borderWidth : h(r.borderWidth, o, d.borderWidth),
                  hidden:      isNaN(r.data[o]) || n.data[o].hidden,
                  index:       o
                }
              }) : []
            }
          }, onClick: function (t, e) {
            var i, a, o, n = e.index, r = this.chart;
            for (i = 0, a = (r.data.datasets || []).length; a > i; ++i) o = r.getDatasetMeta(i), o.data[n].hidden = !o.data[n].hidden;
            r.update()
          }
        },
        cutoutPercentage: 50,
        rotation:         -.5 * Math.PI,
        circumference:    2 * Math.PI,
        tooltips:         {
          callbacks: {
            title:    function () {
              return ""
            }, label: function (t, e) {
              return e.labels[t.index] + ": " + e.datasets[t.datasetIndex].data[t.index]
            }
          }
        }
      }, i.pie = e.clone(i.doughnut), e.extend(i.pie, {cutoutPercentage: 0}), t.controllers.doughnut = t.controllers.pie = t.DatasetController.extend({
        dataElementType:        t.elements.Arc,
        linkScales:             e.noop,
        getRingIndex:           function (t) {
          for (var e = 0, i = 0; t > i; ++i) this.chart.isDatasetVisible(i) && ++e;
          return e
        },
        update:                 function (t) {
          var i                                                                             = this, a                                                                   = i.chart, o = a.chartArea, n = a.options, r = n.elements.arc,
              s = o.right - o.left - r.borderWidth, l = o.bottom - o.top - r.borderWidth, h = Math.min(s, l),
              d                                                                             = {x: 0, y: 0}, c = i.getMeta(), u = n.cutoutPercentage, f = n.circumference;
          if (f < 2 * Math.PI) {
            var g                                                  = n.rotation % (2 * Math.PI);
            g += 2 * Math.PI * (g >= Math.PI ? -1 : g < -Math.PI ? 1 : 0);
            var p = g + f, m = {x: Math.cos(g), y: Math.sin(g)}, b = {x: Math.cos(p), y: Math.sin(p)},
                v                                                  = 0 >= g && p >= 0 || g <= 2 * Math.PI && 2 * Math.PI <= p,
                x                                                  = g <= .5 * Math.PI && .5 * Math.PI <= p || g <= 2.5 * Math.PI && 2.5 * Math.PI <= p,
                y                                                  = g <= -Math.PI && -Math.PI <= p || g <= Math.PI && Math.PI <= p,
                k                                                  = g <= .5 * -Math.PI && .5 * -Math.PI <= p || g <= 1.5 * Math.PI && 1.5 * Math.PI <= p,
                S                                                  = u / 100, C = {
                  x: y ? -1 : Math.min(m.x * (m.x < 0 ? 1 : S), b.x * (b.x < 0 ? 1 : S)),
                  y: k ? -1 : Math.min(m.y * (m.y < 0 ? 1 : S), b.y * (b.y < 0 ? 1 : S))
                }, w                                               = {
                  x: v ? 1 : Math.max(m.x * (m.x > 0 ? 1 : S), b.x * (b.x > 0 ? 1 : S)),
                  y: x ? 1 : Math.max(m.y * (m.y > 0 ? 1 : S), b.y * (b.y > 0 ? 1 : S))
                }, M                                               = {width: .5 * (w.x - C.x), height: .5 * (w.y - C.y)};
            h = Math.min(s / M.width, l / M.height), d = {x: -.5 * (w.x + C.x), y: -.5 * (w.y + C.y)}
          }
          a.outerRadius = Math.max(h / 2, 0), a.innerRadius = Math.max(u ? a.outerRadius / 100 * u : 1, 0), a.radiusLength = (a.outerRadius - a.innerRadius) / a.getVisibleDatasetCount(), a.offsetX = d.x * a.outerRadius, a.offsetY = d.y * a.outerRadius, c.total = i.calculateTotal(), i.outerRadius = a.outerRadius - a.radiusLength * i.getRingIndex(i.index), i.innerRadius = i.outerRadius - a.radiusLength, e.each(c.data, function (e, a) {
            i.updateElement(e, a, t)
          })
        },
        updateElement:          function (t, i, a) {
          var o = this, n = o.chart, r = n.chartArea, s = n.options, l = s.animation, h = s.elements.arc,
              d                                                                         = (r.left + r.right) / 2, c = (r.top + r.bottom) / 2, u                 = s.rotation, f = s.rotation,
              g                                                                         = o.getDataset(),
              p                                                                         = a && l.animateRotate ? 0 : t.hidden ? 0 : o.calculateCircumference(g.data[i]) * (s.circumference / (2 * Math.PI)),
              m                                                                         = a && l.animateScale ? 0 : o.innerRadius, b                            = a && l.animateScale ? 0 : o.outerRadius,
              v                                                                         = t.custom || {}, x = e.getValueAtIndexOrDefault;
          e.extend(t, {
            _datasetIndex: o.index,
            _index:        i,
            _model:        {
              x:             d + n.offsetX,
              y:             c + n.offsetY,
              startAngle:    u,
              endAngle:      f,
              circumference: p,
              outerRadius:   b,
              innerRadius:   m,
              label:         x(g.label, i, n.data.labels[i])
            }
          });
          var y = t._model;
          y.backgroundColor = v.backgroundColor ? v.backgroundColor : x(g.backgroundColor, i, h.backgroundColor), y.hoverBackgroundColor = v.hoverBackgroundColor ? v.hoverBackgroundColor : x(g.hoverBackgroundColor, i, h.hoverBackgroundColor), y.borderWidth = v.borderWidth ? v.borderWidth : x(g.borderWidth, i, h.borderWidth), y.borderColor = v.borderColor ? v.borderColor : x(g.borderColor, i, h.borderColor), a && l.animateRotate || (y.startAngle = 0 === i ? s.rotation : o.getMeta().data[i - 1]._model.endAngle, y.endAngle = y.startAngle + y.circumference), t.pivot()
        },
        removeHoverStyle:       function (e) {
          t.DatasetController.prototype.removeHoverStyle.call(this, e, this.chart.options.elements.arc)
        },
        calculateTotal:         function () {
          var t, i = this.getDataset(), a = this.getMeta(), o = 0;
          return e.each(a.data, function (e, a) {
            t = i.data[a], isNaN(t) || e.hidden || (o += Math.abs(t))
          }), o
        },
        calculateCircumference: function (t) {
          var e = this.getMeta().total;
          return e > 0 && !isNaN(t) ? 2 * Math.PI * (t / e) : 0
        }
      })
    }
  }, {}], 18:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.line = {
        showLines: !0,
        hover:     {mode: "label"},
        scales:    {
          xAxes: [{type: "category", id: "x-axis-0"}],
          yAxes: [{type: "linear", id: "y-axis-0"}]
        }
      }, t.controllers.line = t.DatasetController.extend({
        datasetElementType:        t.elements.Line,
        dataElementType:           t.elements.Point,
        addElementAndReset:        function (e) {
          var i = this, a = i.chart.options;
          t.DatasetController.prototype.addElementAndReset.call(i, e), a.showLines && 0 !== a.elements.line.tension && i.updateBezierControlPoints()
        },
        update:                    function (t) {
          var i, a, o, n, r = this, s = r.getMeta(), l = s.dataset, h = s.data || [], d = r.chart.options,
              c                                                                         = d.elements.line, u = r.getScaleForId(s.yAxisID);
          for (d.showLines && (o = r.getDataset(), n = l.custom || {}, void 0 !== o.tension && void 0 === o.lineTension && (o.lineTension = o.tension), l._scale = u, l._datasetIndex = r.index, l._children = h, l._model = {
            tension:          n.tension ? n.tension : e.getValueOrDefault(o.lineTension, c.tension),
            backgroundColor:  n.backgroundColor ? n.backgroundColor : o.backgroundColor || c.backgroundColor,
            borderWidth:      n.borderWidth ? n.borderWidth : o.borderWidth || c.borderWidth,
            borderColor:      n.borderColor ? n.borderColor : o.borderColor || c.borderColor,
            borderCapStyle:   n.borderCapStyle ? n.borderCapStyle : o.borderCapStyle || c.borderCapStyle,
            borderDash:       n.borderDash ? n.borderDash : o.borderDash || c.borderDash,
            borderDashOffset: n.borderDashOffset ? n.borderDashOffset : o.borderDashOffset || c.borderDashOffset,
            borderJoinStyle:  n.borderJoinStyle ? n.borderJoinStyle : o.borderJoinStyle || c.borderJoinStyle,
            fill:             n.fill ? n.fill : void 0 !== o.fill ? o.fill : c.fill,
            scaleTop:         u.top,
            scaleBottom:      u.bottom,
            scaleZero:        u.getBasePixel()
          }, l.pivot()), i = 0, a = h.length; a > i; ++i) r.updateElement(h[i], i, t);
          d.showLines && 0 !== c.tension && r.updateBezierControlPoints()
        },
        getPointBackgroundColor:   function (t, i) {
          var a = this.chart.options.elements.point.backgroundColor, o = this.getDataset(), n = t.custom || {};
          return n.backgroundColor ? a = n.backgroundColor : o.pointBackgroundColor ? a = e.getValueAtIndexOrDefault(o.pointBackgroundColor, i, a) : o.backgroundColor && (a = o.backgroundColor), a
        },
        getPointBorderColor:       function (t, i) {
          var a = this.chart.options.elements.point.borderColor, o = this.getDataset(), n = t.custom || {};
          return n.borderColor ? a = n.borderColor : o.pointBorderColor ? a = e.getValueAtIndexOrDefault(o.pointBorderColor, i, a) : o.borderColor && (a = o.borderColor), a
        },
        getPointBorderWidth:       function (t, i) {
          var a = this.chart.options.elements.point.borderWidth, o = this.getDataset(), n = t.custom || {};
          return n.borderWidth ? a = n.borderWidth : o.pointBorderWidth ? a = e.getValueAtIndexOrDefault(o.pointBorderWidth, i, a) : o.borderWidth && (a = o.borderWidth), a
        },
        updateElement:             function (t, i, a) {
          var o, n, r = this, s = r.getMeta(), l = t.custom || {}, h = r.getDataset(), d = r.index, c = h.data[i],
              u                                                                                       = r.getScaleForId(s.yAxisID), f = r.getScaleForId(s.xAxisID), g                       = r.chart.options.elements.point;
          void 0 !== h.radius && void 0 === h.pointRadius && (h.pointRadius = h.radius), void 0 !== h.hitRadius && void 0 === h.pointHitRadius && (h.pointHitRadius = h.hitRadius), o = f.getPixelForValue(c, i, d, r.chart.isCombo), n = a ? u.getBasePixel() : r.calculatePointY(c, i, d, r.chart.isCombo), t._xScale = f, t._yScale = u, t._datasetIndex = d, t._index = i, t._model = {
            x:               o,
            y:               n,
            skip:            l.skip || isNaN(o) || isNaN(n),
            radius:          l.radius || e.getValueAtIndexOrDefault(h.pointRadius, i, g.radius),
            pointStyle:      l.pointStyle || e.getValueAtIndexOrDefault(h.pointStyle, i, g.pointStyle),
            backgroundColor: r.getPointBackgroundColor(t, i),
            borderColor:     r.getPointBorderColor(t, i),
            borderWidth:     r.getPointBorderWidth(t, i),
            tension:         s.dataset._model ? s.dataset._model.tension : 0,
            hitRadius:       l.hitRadius || e.getValueAtIndexOrDefault(h.pointHitRadius, i, g.hitRadius)
          }
        },
        calculatePointY:           function (t, e, i, a) {
          var o, n, r, s = this, l = s.chart, h = s.getMeta(), d = s.getScaleForId(h.yAxisID), c = 0, u = 0;
          if (d.options.stacked) {
            for (o = 0; i > o; o++) n = l.data.datasets[o], r = l.getDatasetMeta(o), "line" === r.type && l.isDatasetVisible(o) && (n.data[e] < 0 ? u += n.data[e] || 0 : c += n.data[e] || 0);
            return 0 > t ? d.getPixelForValue(u + t) : d.getPixelForValue(c + t)
          }
          return d.getPixelForValue(t)
        },
        updateBezierControlPoints: function () {
          var t, i, a, o, n, r = this.getMeta(), s = this.chart.chartArea, l = r.data || [];
          for (t = 0, i = l.length; i > t; ++t) a = l[t], o = a._model, n = e.splineCurve(e.previousItem(l, t)._model, o, e.nextItem(l, t)._model, r.dataset._model.tension), o.controlPointPreviousX = Math.max(Math.min(n.previous.x, s.right), s.left), o.controlPointPreviousY = Math.max(Math.min(n.previous.y, s.bottom), s.top), o.controlPointNextX = Math.max(Math.min(n.next.x, s.right), s.left), o.controlPointNextY = Math.max(Math.min(n.next.y, s.bottom), s.top), a.pivot()
        },
        draw:                      function (t) {
          var e, i, a = this.getMeta(), o = a.data || [], n = t || 1;
          for (e = 0, i = o.length; i > e; ++e) o[e].transition(n);
          for (this.chart.options.showLines && a.dataset.transition(n).draw(), e = 0, i = o.length; i > e; ++e) o[e].draw()
        },
        setHoverStyle:             function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t._index, o = t.custom || {}, n = t._model;
          n.radius = o.hoverRadius || e.getValueAtIndexOrDefault(i.pointHoverRadius, a, this.chart.options.elements.point.hoverRadius), n.backgroundColor = o.hoverBackgroundColor || e.getValueAtIndexOrDefault(i.pointHoverBackgroundColor, a, e.getHoverColor(n.backgroundColor)), n.borderColor = o.hoverBorderColor || e.getValueAtIndexOrDefault(i.pointHoverBorderColor, a, e.getHoverColor(n.borderColor)), n.borderWidth = o.hoverBorderWidth || e.getValueAtIndexOrDefault(i.pointHoverBorderWidth, a, n.borderWidth)
        },
        removeHoverStyle:          function (t) {
          var i = this, a = i.chart.data.datasets[t._datasetIndex], o = t._index, n = t.custom || {}, r = t._model;
          void 0 !== a.radius && void 0 === a.pointRadius && (a.pointRadius = a.radius), r.radius = n.radius || e.getValueAtIndexOrDefault(a.pointRadius, o, i.chart.options.elements.point.radius), r.backgroundColor = i.getPointBackgroundColor(t, o), r.borderColor = i.getPointBorderColor(t, o), r.borderWidth = i.getPointBorderWidth(t, o)
        }
      })
    }
  }, {}], 19:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.polarArea = {
        scale:          {type: "radialLinear", lineArc: !0},
        animation:      {animateRotate: !0, animateScale: !0},
        aspectRatio:    1,
        legendCallback: function (t) {
          var e = [];
          e.push('<ul class="' + t.id + '-legend">');
          var i = t.data, a = i.datasets, o = i.labels;
          if (a.length) for (var n = 0; n < a[0].data.length; ++n) e.push('<li><span style="background-color:' + a[0].backgroundColor[n] + '">'), o[n] && e.push(o[n]), e.push("</span></li>");
          return e.push("</ul>"), e.join("")
        },
        legend:         {
          labels:     {
            generateLabels: function (t) {
              var i = t.data;
              return i.labels.length && i.datasets.length ? i.labels.map(function (a, o) {
                var n = t.getDatasetMeta(0), r = i.datasets[0], s = n.data[o], l = s.custom || {},
                    h                                                            = e.getValueAtIndexOrDefault, d = t.options.elements.arc;
                return {
                  text:        a,
                  fillStyle:   l.backgroundColor ? l.backgroundColor : h(r.backgroundColor, o, d.backgroundColor),
                  strokeStyle: l.borderColor ? l.borderColor : h(r.borderColor, o, d.borderColor),
                  lineWidth:   l.borderWidth ? l.borderWidth : h(r.borderWidth, o, d.borderWidth),
                  hidden:      isNaN(r.data[o]) || n.data[o].hidden,
                  index:       o
                }
              }) : []
            }
          }, onClick: function (t, e) {
            var i, a, o, n = e.index, r = this.chart;
            for (i = 0, a = (r.data.datasets || []).length; a > i; ++i) o = r.getDatasetMeta(i), o.data[n].hidden = !o.data[n].hidden;
            r.update()
          }
        },
        tooltips:       {
          callbacks: {
            title:    function () {
              return ""
            }, label: function (t, e) {
              return e.labels[t.index] + ": " + t.yLabel
            }
          }
        }
      }, t.controllers.polarArea = t.DatasetController.extend({
        dataElementType:        t.elements.Arc,
        linkScales:             e.noop,
        update:                 function (t) {
          var i = this, a = i.chart, o = a.chartArea, n = this.getMeta(), r = a.options, s = r.elements.arc,
              l                                                                            = Math.min(o.right - o.left, o.bottom - o.top);
          a.outerRadius = Math.max((l - s.borderWidth / 2) / 2, 0), a.innerRadius = Math.max(r.cutoutPercentage ? a.outerRadius / 100 * r.cutoutPercentage : 1, 0), a.radiusLength = (a.outerRadius - a.innerRadius) / a.getVisibleDatasetCount(), i.outerRadius = a.outerRadius - a.radiusLength * i.index, i.innerRadius = i.outerRadius - a.radiusLength, n.count = i.countVisibleElements(), e.each(n.data, function (e, a) {
            i.updateElement(e, a, t)
          })
        },
        updateElement:          function (t, i, a) {
          for (var o = this, n = o.chart, r = n.chartArea, s = o.getDataset(), l = n.options, h = l.animation, d = l.elements.arc, c = t.custom || {}, u = n.scale, f = e.getValueAtIndexOrDefault, g = n.data.labels, p = o.calculateCircumference(s.data[i]), m = (r.left + r.right) / 2, b = (r.top + r.bottom) / 2, v = 0, x = o.getMeta(), y = 0; i > y; ++y) isNaN(s.data[y]) || x.data[y].hidden || ++v;
          var k = t.hidden ? 0 : u.getDistanceFromCenterForValue(s.data[i]), S = -.5 * Math.PI + p * v,
              C                                                                = S + (t.hidden ? 0 : p), w                                    = {
                x:               m,
                y:               b,
                innerRadius:     0,
                outerRadius:     h.animateScale ? 0 : u.getDistanceFromCenterForValue(s.data[i]),
                startAngle:      h.animateRotate ? -.5 * Math.PI : S,
                endAngle:        h.animateRotate ? -.5 * Math.PI : C,
                backgroundColor: c.backgroundColor ? c.backgroundColor : f(s.backgroundColor, i, d.backgroundColor),
                borderWidth:     c.borderWidth ? c.borderWidth : f(s.borderWidth, i, d.borderWidth),
                borderColor:     c.borderColor ? c.borderColor : f(s.borderColor, i, d.borderColor),
                label:           f(g, i, g[i])
              };
          e.extend(t, {
            _datasetIndex: o.index,
            _index:        i,
            _scale:        u,
            _model:        a ? w : {
              x:               m,
              y:               b,
              innerRadius:     0,
              outerRadius:     k,
              startAngle:      S,
              endAngle:        C,
              backgroundColor: c.backgroundColor ? c.backgroundColor : f(s.backgroundColor, i, d.backgroundColor),
              borderWidth:     c.borderWidth ? c.borderWidth : f(s.borderWidth, i, d.borderWidth),
              borderColor:     c.borderColor ? c.borderColor : f(s.borderColor, i, d.borderColor),
              label:           f(g, i, g[i])
            }
          }), t.pivot()
        },
        removeHoverStyle:       function (e) {
          t.DatasetController.prototype.removeHoverStyle.call(this, e, this.chart.options.elements.arc)
        },
        countVisibleElements:   function () {
          var t = this.getDataset(), i = this.getMeta(), a = 0;
          return e.each(i.data, function (e, i) {
            isNaN(t.data[i]) || e.hidden || a++
          }), a
        },
        calculateCircumference: function (t) {
          var e = this.getMeta().count;
          return e > 0 && !isNaN(t) ? 2 * Math.PI / e : 0
        }
      })
    }
  }, {}], 20:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.radar = {
        scale:    {type: "radialLinear"},
        elements: {line: {tension: 0}}
      }, t.controllers.radar = t.DatasetController.extend({
        datasetElementType:        t.elements.Line,
        dataElementType:           t.elements.Point,
        linkScales:                e.noop,
        addElementAndReset:        function (e) {
          t.DatasetController.prototype.addElementAndReset.call(this, e), this.updateBezierControlPoints()
        },
        update:                    function (t) {
          var i = this.getMeta(), a = i.dataset, o = i.data, n = a.custom || {}, r = this.getDataset(),
              s                                                                    = this.chart.options.elements.line, l                              = this.chart.scale;
          void 0 !== r.tension && void 0 === r.lineTension && (r.lineTension = r.tension), e.extend(i.dataset, {
            _datasetIndex: this.index,
            _children:     o,
            _loop:         !0,
            _model:        {
              tension:          n.tension ? n.tension : e.getValueOrDefault(r.lineTension, s.tension),
              backgroundColor:  n.backgroundColor ? n.backgroundColor : r.backgroundColor || s.backgroundColor,
              borderWidth:      n.borderWidth ? n.borderWidth : r.borderWidth || s.borderWidth,
              borderColor:      n.borderColor ? n.borderColor : r.borderColor || s.borderColor,
              fill:             n.fill ? n.fill : void 0 !== r.fill ? r.fill : s.fill,
              borderCapStyle:   n.borderCapStyle ? n.borderCapStyle : r.borderCapStyle || s.borderCapStyle,
              borderDash:       n.borderDash ? n.borderDash : r.borderDash || s.borderDash,
              borderDashOffset: n.borderDashOffset ? n.borderDashOffset : r.borderDashOffset || s.borderDashOffset,
              borderJoinStyle:  n.borderJoinStyle ? n.borderJoinStyle : r.borderJoinStyle || s.borderJoinStyle,
              scaleTop:         l.top,
              scaleBottom:      l.bottom,
              scaleZero:        l.getBasePosition()
            }
          }), i.dataset.pivot(), e.each(o, function (e, i) {
            this.updateElement(e, i, t)
          }, this), this.updateBezierControlPoints()
        },
        updateElement:             function (t, i, a) {
          var o = t.custom || {}, n = this.getDataset(), r = this.chart.scale, s = this.chart.options.elements.point,
              l                                                                  = r.getPointPositionForValue(i, n.data[i]);
          e.extend(t, {
            _datasetIndex: this.index,
            _index:        i,
            _scale:        r,
            _model:        {
              x:               a ? r.xCenter : l.x,
              y:               a ? r.yCenter : l.y,
              tension:         o.tension ? o.tension : e.getValueOrDefault(n.tension, this.chart.options.elements.line.tension),
              radius:          o.radius ? o.radius : e.getValueAtIndexOrDefault(n.pointRadius, i, s.radius),
              backgroundColor: o.backgroundColor ? o.backgroundColor : e.getValueAtIndexOrDefault(n.pointBackgroundColor, i, s.backgroundColor),
              borderColor:     o.borderColor ? o.borderColor : e.getValueAtIndexOrDefault(n.pointBorderColor, i, s.borderColor),
              borderWidth:     o.borderWidth ? o.borderWidth : e.getValueAtIndexOrDefault(n.pointBorderWidth, i, s.borderWidth),
              pointStyle:      o.pointStyle ? o.pointStyle : e.getValueAtIndexOrDefault(n.pointStyle, i, s.pointStyle),
              hitRadius:       o.hitRadius ? o.hitRadius : e.getValueAtIndexOrDefault(n.hitRadius, i, s.hitRadius)
            }
          }), t._model.skip = o.skip ? o.skip : isNaN(t._model.x) || isNaN(t._model.y)
        },
        updateBezierControlPoints: function () {
          var t = this.chart.chartArea, i = this.getMeta();
          e.each(i.data, function (a, o) {
            var n = a._model,
                r = e.splineCurve(e.previousItem(i.data, o, !0)._model, n, e.nextItem(i.data, o, !0)._model, n.tension);
            n.controlPointPreviousX = Math.max(Math.min(r.previous.x, t.right), t.left), n.controlPointPreviousY = Math.max(Math.min(r.previous.y, t.bottom), t.top), n.controlPointNextX = Math.max(Math.min(r.next.x, t.right), t.left), n.controlPointNextY = Math.max(Math.min(r.next.y, t.bottom), t.top), a.pivot()
          }, this)
        },
        draw:                      function (t) {
          var i = this.getMeta(), a = t || 1;
          e.each(i.data, function (t, e) {
            t.transition(a)
          }), i.dataset.transition(a).draw(), e.each(i.data, function (t) {
            t.draw()
          })
        },
        setHoverStyle:             function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t.custom || {}, o = t._index, n = t._model;
          n.radius = a.hoverRadius ? a.hoverRadius : e.getValueAtIndexOrDefault(i.pointHoverRadius, o, this.chart.options.elements.point.hoverRadius), n.backgroundColor = a.hoverBackgroundColor ? a.hoverBackgroundColor : e.getValueAtIndexOrDefault(i.pointHoverBackgroundColor, o, e.getHoverColor(n.backgroundColor)), n.borderColor = a.hoverBorderColor ? a.hoverBorderColor : e.getValueAtIndexOrDefault(i.pointHoverBorderColor, o, e.getHoverColor(n.borderColor)), n.borderWidth = a.hoverBorderWidth ? a.hoverBorderWidth : e.getValueAtIndexOrDefault(i.pointHoverBorderWidth, o, n.borderWidth)
        },
        removeHoverStyle:          function (t) {
          var i = this.chart.data.datasets[t._datasetIndex], a = t.custom || {}, o = t._index, n = t._model,
              r                                                                                  = this.chart.options.elements.point;
          n.radius = a.radius ? a.radius : e.getValueAtIndexOrDefault(i.radius, o, r.radius), n.backgroundColor = a.backgroundColor ? a.backgroundColor : e.getValueAtIndexOrDefault(i.pointBackgroundColor, o, r.backgroundColor), n.borderColor = a.borderColor ? a.borderColor : e.getValueAtIndexOrDefault(i.pointBorderColor, o, r.borderColor), n.borderWidth = a.borderWidth ? a.borderWidth : e.getValueAtIndexOrDefault(i.pointBorderWidth, o, r.borderWidth)
        }
      })
    }
  }, {}], 21:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.global.animation = {
        duration:   1e3,
        easing:     "easeOutQuart",
        onProgress: e.noop,
        onComplete: e.noop
      }, t.Animation = t.Element.extend({
        currentStep:         null,
        numSteps:            60,
        easing:              "",
        render:              null,
        onAnimationProgress: null,
        onAnimationComplete: null
      }), t.animationService = {
        frameDuration:         17,
        animations:            [],
        dropFrames:            0,
        request:               null,
        addAnimation:          function (t, e, i, a) {
          a || (t.animating = !0);
          for (var o = 0; o < this.animations.length; ++o) if (this.animations[o].chartInstance === t) return void(this.animations[o].animationObject = e);
          this.animations.push({
            chartInstance:   t,
            animationObject: e
          }), 1 === this.animations.length && this.requestAnimationFrame()
        },
        cancelAnimation:       function (t) {
          var i = e.findIndex(this.animations, function (e) {
            return e.chartInstance === t
          });
          -1 !== i && (this.animations.splice(i, 1), t.animating = !1)
        },
        requestAnimationFrame: function () {
          var t = this;
          null === t.request && (t.request = e.requestAnimFrame.call(window, function () {
            t.request = null, t.startDigest()
          }))
        },
        startDigest:           function () {
          var t = Date.now(), e = 0;
          this.dropFrames > 1 && (e = Math.floor(this.dropFrames), this.dropFrames = this.dropFrames % 1);
          for (var i = 0; i < this.animations.length;) null === this.animations[i].animationObject.currentStep && (this.animations[i].animationObject.currentStep = 0), this.animations[i].animationObject.currentStep += 1 + e, this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps && (this.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps), this.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject), this.animations[i].animationObject.onAnimationProgress && this.animations[i].animationObject.onAnimationProgress.call && this.animations[i].animationObject.onAnimationProgress.call(this.animations[i].chartInstance, this.animations[i]), this.animations[i].animationObject.currentStep === this.animations[i].animationObject.numSteps ? (this.animations[i].animationObject.onAnimationComplete && this.animations[i].animationObject.onAnimationComplete.call && this.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance, this.animations[i]), this.animations[i].chartInstance.animating = !1, this.animations.splice(i, 1)) : ++i;
          var a = Date.now(), o = (a - t) / this.frameDuration;
          this.dropFrames += o, this.animations.length > 0 && this.requestAnimationFrame()
        }
      }
    }
  }, {}], 22:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.types = {}, t.instances = {}, t.controllers = {}, t.Controller = function (i) {
        return this.chart = i, this.config = i.config, this.options = this.config.options = e.configMerge(t.defaults.global, t.defaults[this.config.type], this.config.options || {}), this.id = e.uid(), Object.defineProperty(this, "data", {
          get: function () {
            return this.config.data
          }
        }), t.instances[this.id] = this, this.options.responsive && this.resize(!0), this.initialize(), this
      }, e.extend(t.Controller.prototype, {
        initialize:                   function () {
          return t.pluginService.notifyPlugins("beforeInit", [this]), this.bindEvents(), this.ensureScalesHaveIDs(), this.buildOrUpdateControllers(), this.buildScales(), this.buildSurroundingItems(), this.updateLayout(), this.resetElements(), this.initToolTip(), this.update(), t.pluginService.notifyPlugins("afterInit", [this]), this
        }, clear:                     function () {
          return e.clear(this.chart), this
        }, stop:                      function () {
          return t.animationService.cancelAnimation(this), this
        }, resize:                    function (t) {
          var i = this.chart.canvas, a = e.getMaximumWidth(this.chart.canvas),
              o                        = this.options.maintainAspectRatio && !1 === isNaN(this.chart.aspectRatio) && isFinite(this.chart.aspectRatio) && 0 !== this.chart.aspectRatio ? a / this.chart.aspectRatio : e.getMaximumHeight(this.chart.canvas);
          return this.chart.width !== a || this.chart.height !== o ? (i.width = this.chart.width = a, i.height = this.chart.height = o, e.retinaScale(this.chart), t || (this.stop(), this.update(this.options.responsiveAnimationDuration)), this) : this
        }, ensureScalesHaveIDs:       function () {
          var t = this.options, i = t.scales || {}, a = t.scale;
          e.each(i.xAxes, function (t, e) {
            t.id = t.id || "x-axis-" + e
          }), e.each(i.yAxes, function (t, e) {
            t.id = t.id || "y-axis-" + e
          }), a && (a.id = a.id || "scale")
        }, buildScales:               function () {
          var i = this, a = i.options, o = i.scales = {}, n = [];
          a.scales && (n = n.concat((a.scales.xAxes || []).map(function (t) {
            return {options: t, dtype: "category"}
          }), (a.scales.yAxes || []).map(function (t) {
            return {options: t, dtype: "linear"}
          }))), a.scale && n.push({options: a.scale, dtype: "radialLinear", isDefault: !0}), e.each(n, function (a, n) {
            var r = a.options, s = e.getValueOrDefault(r.type, a.dtype), l = t.scaleService.getScaleConstructor(s);
            if (l) {
              var h = new l({id: r.id, options: r, ctx: i.chart.ctx, chart: i});
              o[h.id] = h, a.isDefault && (i.scale = h)
            }
          }), t.scaleService.addScalesToLayout(this)
        }, buildSurroundingItems:     function () {
          this.options.title && (this.titleBlock = new t.Title({
            ctx:     this.chart.ctx,
            options: this.options.title,
            chart:   this
          }), t.layoutService.addBox(this, this.titleBlock)), this.options.legend && (this.legend = new t.Legend({
            ctx:     this.chart.ctx,
            options: this.options.legend,
            chart:   this
          }), t.layoutService.addBox(this, this.legend))
        }, updateLayout:              function () {
          t.layoutService.update(this, this.chart.width, this.chart.height)
        }, buildOrUpdateControllers:  function () {
          var i = [], a = [];
          if (e.each(this.data.datasets, function (e, o) {
              var n = this.getDatasetMeta(o);
              n.type || (n.type = e.type || this.config.type), i.push(n.type), n.controller ? n.controller.updateIndex(o) : (n.controller = new t.controllers[n.type](this, o), a.push(n.controller))
            }, this), i.length > 1) for (var o = 1; o < i.length; o++) if (i[o] !== i[o - 1]) {
            this.isCombo = !0;
            break
          }
          return a
        }, resetElements:             function () {
          e.each(this.data.datasets, function (t, e) {
            this.getDatasetMeta(e).controller.reset()
          }, this)
        }, update:                    function (i, a) {
          t.pluginService.notifyPlugins("beforeUpdate", [this]), this.tooltip._data = this.data;
          var o = this.buildOrUpdateControllers();
          e.each(this.data.datasets, function (t, e) {
            this.getDatasetMeta(e).controller.buildOrUpdateElements()
          }, this), t.layoutService.update(this, this.chart.width, this.chart.height), t.pluginService.notifyPlugins("afterScaleUpdate", [this]), e.each(o, function (t) {
            t.reset()
          }), e.each(this.data.datasets, function (t, e) {
            this.getDatasetMeta(e).controller.update()
          }, this), t.pluginService.notifyPlugins("afterUpdate", [this]), this.render(i, a)
        }, render:                    function (i, a) {
          t.pluginService.notifyPlugins("beforeRender", [this]);
          var o = this.options.animation;
          if (o && (void 0 !== i && 0 !== i || void 0 === i && 0 !== o.duration)) {
            var n = new t.Animation;
            n.numSteps = (i || o.duration) / 16.66, n.easing = o.easing, n.render = function (t, i) {
              var a = e.easingEffects[i.easing], o = i.currentStep / i.numSteps, n = a(o);
              t.draw(n, o, i.currentStep)
            }, n.onAnimationProgress = o.onProgress, n.onAnimationComplete = o.onComplete, t.animationService.addAnimation(this, n, i, a)
          } else this.draw(), o && o.onComplete && o.onComplete.call && o.onComplete.call(this);
          return this
        }, draw:                      function (i) {
          var a = i || 1;
          this.clear(), t.pluginService.notifyPlugins("beforeDraw", [this, a]), e.each(this.boxes, function (t) {
            t.draw(this.chartArea)
          }, this), this.scale && this.scale.draw();
          var o = this.chart.ctx;
          o.save(), o.beginPath(), o.rect(this.chartArea.left, this.chartArea.top, this.chartArea.right - this.chartArea.left, this.chartArea.bottom - this.chartArea.top), o.clip(), e.each(this.data.datasets, function (t, e) {
            this.isDatasetVisible(e) && this.getDatasetMeta(e).controller.draw(i)
          }, this, !0), o.restore(), this.tooltip.transition(a).draw(), t.pluginService.notifyPlugins("afterDraw", [this, a])
        }, getElementAtEvent:         function (t) {
          var i = e.getRelativePosition(t, this.chart), a = [];
          return e.each(this.data.datasets, function (t, o) {
            if (this.isDatasetVisible(o)) {
              var n = this.getDatasetMeta(o);
              e.each(n.data, function (t, e) {
                return t.inRange(i.x, i.y) ? (a.push(t), a) : void 0
              })
            }
          }, this), a
        }, getElementsAtEvent:        function (t) {
          var i = e.getRelativePosition(t, this.chart), a = [], o = function () {
            if (this.data.datasets) for (var t = 0; t < this.data.datasets.length; t++) {
              var e = this.getDatasetMeta(t);
              if (this.isDatasetVisible(t)) for (var a = 0; a < e.data.length; a++) if (e.data[a].inRange(i.x, i.y)) return e.data[a]
            }
          }.call(this);
          return o ? (e.each(this.data.datasets, function (t, e) {
            if (this.isDatasetVisible(e)) {
              var i = this.getDatasetMeta(e);
              a.push(i.data[o._index])
            }
          }, this), a) : a
        }, getElementsAtEventForMode: function (t, e) {
          var i = this;
          switch (e) {
            case"single":
              return i.getElementAtEvent(t);
            case"label":
              return i.getElementsAtEvent(t);
            case"dataset":
              return i.getDatasetAtEvent(t);
            default:
              return t
          }
        }, getDatasetAtEvent:         function (t) {
          var e = this.getElementAtEvent(t);
          return e.length > 0 && (e = this.getDatasetMeta(e[0]._datasetIndex).data), e
        }, getDatasetMeta:            function (t) {
          var e = this.data.datasets[t];
          e._meta || (e._meta = {});
          var i = e._meta[this.id];
          return i || (i = e._meta[this.id] = {
            type:       null,
            data:       [],
            dataset:    null,
            controller: null,
            hidden:     null,
            xAxisID:    null,
            yAxisID:    null
          }), i
        }, getVisibleDatasetCount:    function () {
          for (var t = 0, e = 0, i = this.data.datasets.length; i > e; ++e) this.isDatasetVisible(e) && t++;
          return t
        }, isDatasetVisible:          function (t) {
          var e = this.getDatasetMeta(t);
          return "boolean" == typeof e.hidden ? !e.hidden : !this.data.datasets[t].hidden
        }, generateLegend:            function () {
          return this.options.legendCallback(this)
        }, destroy:                   function () {
          this.clear(), e.unbindEvents(this, this.events), e.removeResizeListener(this.chart.canvas.parentNode);
          var i = this.chart.canvas;
          i.width = this.chart.width, i.height = this.chart.height, void 0 !== this.chart.originalDevicePixelRatio && this.chart.ctx.scale(1 / this.chart.originalDevicePixelRatio, 1 / this.chart.originalDevicePixelRatio), i.style.width = this.chart.originalCanvasStyleWidth, i.style.height = this.chart.originalCanvasStyleHeight, t.pluginService.notifyPlugins("destroy", [this]), delete t.instances[this.id]
        }, toBase64Image:             function () {
          return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments)
        }, initToolTip:               function () {
          this.tooltip = new t.Tooltip({
            _chart:         this.chart,
            _chartInstance: this,
            _data:          this.data,
            _options:       this.options
          }, this)
        }, bindEvents:                function () {
          e.bindEvents(this, this.options.events, function (t) {
            this.eventHandler(t)
          })
        }, updateHoverStyle:          function (t, e, i) {
          var a, o, n, r = i ? "setHoverStyle" : "removeHoverStyle";
          switch (e) {
            case"single":
              t = [t[0]];
              break;
            case"label":
            case"dataset":
              break;
            default:
              return
          }
          for (o = 0, n = t.length; n > o; ++o) (a = t[o]) && this.getDatasetMeta(a._datasetIndex).controller[r](a)
        }, eventHandler:              function (t) {
          var i = this, a = i.tooltip, o = i.options || {}, n = o.hover, r = o.tooltips;
          return i.lastActive = i.lastActive || [], i.lastTooltipActive = i.lastTooltipActive || [], "mouseout" === t.type ? (i.active = [], i.tooltipActive = []) : (i.active = i.getElementsAtEventForMode(t, n.mode), i.tooltipActive = i.getElementsAtEventForMode(t, r.mode)), n.onHover && n.onHover.call(i, i.active), ("mouseup" === t.type || "click" === t.type) && (o.onClick && o.onClick.call(i, t, i.active), i.legend && i.legend.handleEvent && i.legend.handleEvent(t)), i.lastActive.length && i.updateHoverStyle(i.lastActive, n.mode, !1), i.active.length && n.mode && i.updateHoverStyle(i.active, n.mode, !0), (r.enabled || r.custom) && (a.initialize(), a._active = i.tooltipActive, a.update(!0)), a.pivot(), i.animating || e.arrayEquals(i.active, i.lastActive) && e.arrayEquals(i.tooltipActive, i.lastTooltipActive) || (i.stop(), (r.enabled || r.custom) && a.update(!0), i.render(n.animationDuration, !0)), i.lastActive = i.active, i.lastTooltipActive = i.tooltipActive, i
        }
      })
    }
  }, {}], 23:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = e.noop;
      t.DatasetController = function (t, e) {
        this.initialize.call(this, t, e)
      }, e.extend(t.DatasetController.prototype, {
        datasetElementType:    null,
        dataElementType:       null,
        initialize:            function (t, e) {
          this.chart = t, this.index = e, this.linkScales(), this.addElements()
        },
        updateIndex:           function (t) {
          this.index = t
        },
        linkScales:            function () {
          var t = this.getMeta(), e = this.getDataset();
          null === t.xAxisID && (t.xAxisID = e.xAxisID || this.chart.options.scales.xAxes[0].id), null === t.yAxisID && (t.yAxisID = e.yAxisID || this.chart.options.scales.yAxes[0].id)
        },
        getDataset:            function () {
          return this.chart.data.datasets[this.index]
        },
        getMeta:               function () {
          return this.chart.getDatasetMeta(this.index)
        },
        getScaleForId:         function (t) {
          return this.chart.scales[t]
        },
        reset:                 function () {
          this.update(!0)
        },
        createMetaDataset:     function () {
          var t = this, e = t.datasetElementType;
          return e && new e({_chart: t.chart.chart, _datasetIndex: t.index})
        },
        createMetaData:        function (t) {
          var e = this, i = e.dataElementType;
          return i && new i({_chart: e.chart.chart, _datasetIndex: e.index, _index: t})
        },
        addElements:           function () {
          var t, e, i = this, a = i.getMeta(), o = i.getDataset().data || [], n = a.data;
          for (t = 0, e = o.length; e > t; ++t) n[t] = n[t] || i.createMetaData(a, t);
          a.dataset = a.dataset || i.createMetaDataset()
        },
        addElementAndReset:    function (t) {
          var e = this, i = e.createMetaData(t);
          e.getMeta().data.splice(t, 0, i), e.updateElement(i, t, !0)
        },
        buildOrUpdateElements: function () {
          var t = this.getMeta(), e = t.data, i = this.getDataset().data.length, a = e.length;
          if (a > i) e.splice(i, a - i); else if (i > a) for (var o = a; i > o; ++o) this.addElementAndReset(o)
        },
        update:                i,
        draw:                  function (t) {
          var i = t || 1;
          e.each(this.getMeta().data, function (t, e) {
            t.transition(i).draw()
          })
        },
        removeHoverStyle:      function (t, i) {
          var a = this.chart.data.datasets[t._datasetIndex], o = t._index, n = t.custom || {},
              r                                                              = e.getValueAtIndexOrDefault, s = (e.color, t._model);
          s.backgroundColor = n.backgroundColor ? n.backgroundColor : r(a.backgroundColor, o, i.backgroundColor), s.borderColor = n.borderColor ? n.borderColor : r(a.borderColor, o, i.borderColor), s.borderWidth = n.borderWidth ? n.borderWidth : r(a.borderWidth, o, i.borderWidth)
        },
        setHoverStyle:         function (t) {
          var i                                                                 = this.chart.data.datasets[t._datasetIndex], a = t._index, o    = t.custom || {},
              n = e.getValueAtIndexOrDefault, r = (e.color, e.getHoverColor), s = t._model;
          s.backgroundColor = o.hoverBackgroundColor ? o.hoverBackgroundColor : n(i.hoverBackgroundColor, a, r(s.backgroundColor)), s.borderColor = o.hoverBorderColor ? o.hoverBorderColor : n(i.hoverBorderColor, a, r(s.borderColor)), s.borderWidth = o.hoverBorderWidth ? o.hoverBorderWidth : n(i.hoverBorderWidth, a, s.borderWidth)
        }
      }), t.DatasetController.extend = e.inherits
    }
  }, {}], 24:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.elements = {}, t.Element = function (t) {
        e.extend(this, t), this.initialize.apply(this, arguments)
      }, e.extend(t.Element.prototype, {
        initialize:         function () {
          this.hidden = !1
        }, pivot:           function () {
          return this._view || (this._view = e.clone(this._model)), this._start = e.clone(this._view), this
        }, transition:      function (t) {
          return this._view || (this._view = e.clone(this._model)), 1 === t ? (this._view = this._model, this._start = null, this) : (this._start || this.pivot(), e.each(this._model, function (i, a) {
            if ("_" === a[0]) ; else if (this._view.hasOwnProperty(a)) if (i === this._view[a]) ; else if ("string" == typeof i) try {
              var o         = e.color(this._model[a]).mix(e.color(this._start[a]), t);
              this._view[a] = o.rgbString()
            } catch (n) {
              this._view[a] = i
            } else if ("number" == typeof i) {
              var r         = void 0 !== this._start[a] && !1 === isNaN(this._start[a]) ? this._start[a] : 0;
              this._view[a] = (this._model[a] - r) * t + r
            } else this._view[a] = i; else "number" != typeof i || isNaN(this._view[a]) ? this._view[a] = i : this._view[a] = i * t
          }, this), this)
        }, tooltipPosition: function () {
          return {x: this._model.x, y: this._model.y}
        }, hasValue:        function () {
          return e.isNumber(this._model.x) && e.isNumber(this._model.y)
        }
      }), t.Element.extend = e.inherits
    }
  }, {}], 25:                                             [function (t, e, i) {
    "use strict";
    var a     = t("chartjs-color");
    e.exports = function (t) {
      function e(t, e, i) {
        var a;
        return "string" == typeof t ? (a = parseInt(t, 10), -1 != t.indexOf("%") && (a = a / 100 * e.parentNode[i])) : a = t, a
      }

      function i(t) {
        return void 0 !== t && null !== t && "none" !== t
      }

      function o(t, a, o) {
        var n = document.defaultView, r = t.parentNode, s = n.getComputedStyle(t)[a], l = n.getComputedStyle(r)[a],
            h                                                                           = i(s), d = i(l), c = Number.POSITIVE_INFINITY;
        return h || d ? Math.min(h ? e(s, t, o) : c, d ? e(l, r, o) : c) : "none"
      }

      var n = t.helpers = {};
      n.each = function (t, e, i, a) {
        var o, r;
        if (n.isArray(t)) if (r = t.length, a) for (o = r - 1; o >= 0; o--) e.call(i, t[o], o); else for (o = 0; r > o; o++) e.call(i, t[o], o); else if ("object" == typeof t) {
          var s = Object.keys(t);
          for (r = s.length, o = 0; r > o; o++) e.call(i, t[s[o]], s[o])
        }
      }, n.clone = function (t) {
        var e = {};
        return n.each(t, function (t, i) {
          n.isArray(t) ? e[i] = t.slice(0) : e[i] = "object" == typeof t && null !== t ? n.clone(t) : t
        }), e
      }, n.extend = function (t) {
        for (var e = arguments.length, i = [], a = 1; e > a; a++) i.push(arguments[a]);
        return n.each(i, function (e) {
          n.each(e, function (e, i) {
            t[i] = e
          })
        }), t
      }, n.configMerge = function (e) {
        var i = n.clone(e);
        return n.each(Array.prototype.slice.call(arguments, 1), function (e) {
          n.each(e, function (e, a) {
            if ("scales" === a) i[a] = n.scaleMerge(i.hasOwnProperty(a) ? i[a] : {}, e); else if ("scale" === a) i[a] = n.configMerge(i.hasOwnProperty(a) ? i[a] : {}, t.scaleService.getScaleDefaults(e.type), e); else if (i.hasOwnProperty(a) && n.isArray(i[a]) && n.isArray(e)) {
              var o = i[a];
              n.each(e, function (t, e) {
                e < o.length ? "object" == typeof o[e] && null !== o[e] && "object" == typeof t && null !== t ? o[e] = n.configMerge(o[e], t) : o[e] = t : o.push(t)
              })
            } else i.hasOwnProperty(a) && "object" == typeof i[a] && null !== i[a] && "object" == typeof e ? i[a] = n.configMerge(i[a], e) : i[a] = e
          })
        }), i
      }, n.extendDeep = function (t) {
        function e(t) {
          return n.each(arguments, function (i) {
            i !== t && n.each(i, function (i, a) {
              t[a] && t[a].constructor && t[a].constructor === Object ? e(t[a], i) : t[a] = i
            })
          }), t
        }

        return e.apply(this, arguments)
      }, n.scaleMerge = function (e, i) {
        var a = n.clone(e);
        return n.each(i, function (e, i) {
          "xAxes" === i || "yAxes" === i ? a.hasOwnProperty(i) ? n.each(e, function (e, o) {
            var r = n.getValueOrDefault(e.type, "xAxes" === i ? "category" : "linear"),
                s = t.scaleService.getScaleDefaults(r);
            o >= a[i].length || !a[i][o].type ? a[i].push(n.configMerge(s, e)) : e.type && e.type !== a[i][o].type ? a[i][o] = n.configMerge(a[i][o], s, e) : a[i][o] = n.configMerge(a[i][o], e)
          }) : (a[i] = [], n.each(e, function (e) {
            var o = n.getValueOrDefault(e.type, "xAxes" === i ? "category" : "linear");
            a[i].push(n.configMerge(t.scaleService.getScaleDefaults(o), e))
          })) : a.hasOwnProperty(i) && "object" == typeof a[i] && null !== a[i] && "object" == typeof e ? a[i] = n.configMerge(a[i], e) : a[i] = e
        }), a
      }, n.getValueAtIndexOrDefault = function (t, e, i) {
        return void 0 === t || null === t ? i : n.isArray(t) ? e < t.length ? t[e] : i : t
      }, n.getValueOrDefault = function (t, e) {
        return void 0 === t ? e : t
      }, n.indexOf = function (t, e) {
        if (Array.prototype.indexOf) return t.indexOf(e);
        for (var i = 0; i < t.length; i++) if (t[i] === e) return i;
        return -1
      }, n.where = function (t, e) {
        if (n.isArray(t) && Array.prototype.filter) return t.filter(e);
        var i = [];
        return n.each(t, function (t) {
          e(t) && i.push(t)
        }), i
      }, n.findIndex = function (t, e, i) {
        var a = -1;
        if (Array.prototype.findIndex) a = t.findIndex(e, i); else for (var o = 0; o < t.length; ++o) if (i = void 0 !== i ? i : t, e.call(i, t[o], o, t)) {
          a = o;
          break
        }
        return a
      }, n.findNextWhere = function (t, e, i) {
        (void 0 === i || null === i) && (i = -1);
        for (var a = i + 1; a < t.length; a++) {
          var o = t[a];
          if (e(o)) return o
        }
      }, n.findPreviousWhere = function (t, e, i) {
        (void 0 === i || null === i) && (i = t.length);
        for (var a = i - 1; a >= 0; a--) {
          var o = t[a];
          if (e(o)) return o
        }
      }, n.inherits = function (t) {
        var e = this, i = t && t.hasOwnProperty("constructor") ? t.constructor : function () {
          return e.apply(this, arguments)
        }, a  = function () {
          this.constructor = i
        };
        return a.prototype = e.prototype, i.prototype = new a, i.extend = n.inherits, t && n.extend(i.prototype, t), i.__super__ = e.prototype, i
      }, n.noop = function () {
      }, n.uid = function () {
        var t = 0;
        return function () {
          return t++
        }
      }(), n.warn = function (t) {
        console && console.warn
      }, n.isNumber = function (t) {
        return !isNaN(parseFloat(t)) && isFinite(t)
      }, n.almostEquals = function (t, e, i) {
        return Math.abs(t - e) < i
      }, n.max = function (t) {
        return t.reduce(function (t, e) {
          return isNaN(e) ? t : Math.max(t, e)
        }, Number.NEGATIVE_INFINITY)
      }, n.min = function (t) {
        return t.reduce(function (t, e) {
          return isNaN(e) ? t : Math.min(t, e)
        }, Number.POSITIVE_INFINITY)
      }, n.sign = function (t) {
        return Math.sign ? Math.sign(t) : (t = +t, 0 === t || isNaN(t) ? t : t > 0 ? 1 : -1)
      }, n.log10 = function (t) {
        return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
      }, n.toRadians = function (t) {
        return t * (Math.PI / 180)
      }, n.toDegrees = function (t) {
        return t * (180 / Math.PI)
      }, n.getAngleFromPoint = function (t, e) {
        var i = e.x - t.x, a = e.y - t.y, o = Math.sqrt(i * i + a * a), n = Math.atan2(a, i);
        return n < -.5 * Math.PI && (n += 2 * Math.PI), {angle: n, distance: o}
      }, n.aliasPixel = function (t) {
        return t % 2 == 0 ? 0 : .5
      }, n.splineCurve = function (t, e, i, a) {
        var o                                                                                  = t.skip ? e : t, n                                                              = e, r                                                       = i.skip ? e : i,
            s                                                                                  = Math.sqrt(Math.pow(n.x - o.x, 2) + Math.pow(n.y - o.y, 2)),
            l = Math.sqrt(Math.pow(r.x - n.x, 2) + Math.pow(r.y - n.y, 2)), h = s / (s + l), d = l / (s + l);
        h = isNaN(h) ? 0 : h, d = isNaN(d) ? 0 : d;
        var c = a * h, u = a * d;
        return {
          previous: {x: n.x - c * (r.x - o.x), y: n.y - c * (r.y - o.y)},
          next:     {x: n.x + u * (r.x - o.x), y: n.y + u * (r.y - o.y)}
        }
      }, n.nextItem = function (t, e, i) {
        return i ? e >= t.length - 1 ? t[0] : t[e + 1] : e >= t.length - 1 ? t[t.length - 1] : t[e + 1]
      }, n.previousItem = function (t, e, i) {
        return i ? 0 >= e ? t[t.length - 1] : t[e - 1] : 0 >= e ? t[0] : t[e - 1]
      }, n.niceNum = function (t, e) {
        var a = Math.floor(n.log10(t)), o = t / Math.pow(10, a);
        return (e ? 1.5 > o ? 1 : 3 > o ? 2 : 7 > o ? 5 : 10 : 1 >= o ? 1 : 2 >= o ? 2 : 5 >= o ? 5 : 10) * Math.pow(10, a)
      };
      var r = n.easingEffects = {
        linear:              function (t) {
          return t
        }, easeInQuad:       function (t) {
          return t * t
        }, easeOutQuad:      function (t) {
          return -1 * t * (t - 2)
        }, easeInOutQuad:    function (t) {
          return (t /= .5) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1)
        }, easeInCubic:      function (t) {
          return t * t * t
        }, easeOutCubic:     function (t) {
          return 1 * ((t = t / 1 - 1) * t * t + 1)
        }, easeInOutCubic:   function (t) {
          return (t /= .5) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2)
        }, easeInQuart:      function (t) {
          return t * t * t * t
        }, easeOutQuart:     function (t) {
          return -1 * ((t = t / 1 - 1) * t * t * t - 1)
        }, easeInOutQuart:   function (t) {
          return (t /= .5) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2)
        }, easeInQuint:      function (t) {
          return 1 * (t /= 1) * t * t * t * t
        }, easeOutQuint:     function (t) {
          return 1 * ((t = t / 1 - 1) * t * t * t * t + 1)
        }, easeInOutQuint:   function (t) {
          return (t /= .5) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2)
        }, easeInSine:       function (t) {
          return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1
        }, easeOutSine:      function (t) {
          return 1 * Math.sin(t / 1 * (Math.PI / 2))
        }, easeInOutSine:    function (t) {
          return -.5 * (Math.cos(Math.PI * t / 1) - 1)
        }, easeInExpo:       function (t) {
          return 0 === t ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1))
        }, easeOutExpo:      function (t) {
          return 1 === t ? 1 : 1 * (1 - Math.pow(2, -10 * t / 1))
        }, easeInOutExpo:    function (t) {
          return 0 === t ? 0 : 1 === t ? 1 : (t /= .5) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * --t))
        }, easeInCirc:       function (t) {
          return t >= 1 ? t : -1 * (Math.sqrt(1 - (t /= 1) * t) - 1)
        }, easeOutCirc:      function (t) {
          return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t)
        }, easeInOutCirc:    function (t) {
          return (t /= .5) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        }, easeInElastic:    function (t) {
          var e = 1.70158, i = 0, a = 1;
          return 0 === t ? 0 : 1 == (t /= 1) ? 1 : (i || (i = .3), a < Math.abs(1) ? (a = 1, e = i / 4) : e = i / (2 * Math.PI) * Math.asin(1 / a), -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / i))
        }, easeOutElastic:   function (t) {
          var e = 1.70158, i = 0, a = 1;
          return 0 === t ? 0 : 1 == (t /= 1) ? 1 : (i || (i = .3), a < Math.abs(1) ? (a = 1, e = i / 4) : e = i / (2 * Math.PI) * Math.asin(1 / a), a * Math.pow(2, -10 * t) * Math.sin((1 * t - e) * (2 * Math.PI) / i) + 1)
        }, easeInOutElastic: function (t) {
          var e = 1.70158, i = 0, a = 1;
          return 0 === t ? 0 : 2 == (t /= .5) ? 1 : (i || (i = .3 * 1.5 * 1), a < Math.abs(1) ? (a = 1, e = i / 4) : e = i / (2 * Math.PI) * Math.asin(1 / a), 1 > t ? a * Math.pow(2, 10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / i) * -.5 : a * Math.pow(2, -10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / i) * .5 + 1)
        }, easeInBack:       function (t) {
          var e = 1.70158;
          return 1 * (t /= 1) * t * ((e + 1) * t - e)
        }, easeOutBack:      function (t) {
          var e = 1.70158;
          return 1 * ((t = t / 1 - 1) * t * ((e + 1) * t + e) + 1)
        }, easeInOutBack:    function (t) {
          var e = 1.70158;
          return (t /= .5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2)
        }, easeInBounce:     function (t) {
          return 1 - r.easeOutBounce(1 - t)
        }, easeOutBounce:    function (t) {
          return (t /= 1) < 1 / 2.75 ? 7.5625 * t * t * 1 : 2 / 2.75 > t ? 1 * (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 * (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
        }, easeInOutBounce:  function (t) {
          return .5 > t ? .5 * r.easeInBounce(2 * t) : .5 * r.easeOutBounce(2 * t - 1) + .5
        }
      };
      n.requestAnimFrame = function () {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {
          return window.setTimeout(t, 1e3 / 60)
        }
      }(), n.cancelAnimFrame = function () {
        return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame || function (t) {
          return window.clearTimeout(t, 1e3 / 60)
        }
      }(), n.getRelativePosition = function (t, e) {
        var i, a, o = t.originalEvent || t, r = t.currentTarget || t.srcElement, s = r.getBoundingClientRect(),
            l                                                                      = o.touches;
        l && l.length > 0 ? (i = l[0].clientX, a = l[0].clientY) : (i = o.clientX, a = o.clientY);
        var h                                                 = parseFloat(n.getStyle(r, "padding-left")), d = parseFloat(n.getStyle(r, "padding-top")),
            c = parseFloat(n.getStyle(r, "padding-right")), u = parseFloat(n.getStyle(r, "padding-bottom")),
            f                                                 = s.right - s.left - h - c, g = s.bottom - s.top - d - u;
        return i = Math.round((i - s.left - h) / f * r.width / e.currentDevicePixelRatio), a = Math.round((a - s.top - d) / g * r.height / e.currentDevicePixelRatio), {
          x: i,
          y: a
        }
      }, n.addEvent = function (t, e, i) {
        t.addEventListener ? t.addEventListener(e, i) : t.attachEvent ? t.attachEvent("on" + e, i) : t["on" + e] = i
      }, n.removeEvent = function (t, e, i) {
        t.removeEventListener ? t.removeEventListener(e, i, !1) : t.detachEvent ? t.detachEvent("on" + e, i) : t["on" + e] = n.noop
      }, n.bindEvents = function (t, e, i) {
        var a = t.events = t.events || {};
        n.each(e, function (e) {
          a[e] = function () {
            i.apply(t, arguments)
          }, n.addEvent(t.chart.canvas, e, a[e])
        })
      }, n.unbindEvents = function (t, e) {
        var i = t.chart.canvas;
        n.each(e, function (t, e) {
          n.removeEvent(i, e, t)
        })
      }, n.getConstraintWidth = function (t) {
        return o(t, "max-width", "clientWidth")
      }, n.getConstraintHeight = function (t) {
        return o(t, "max-height", "clientHeight")
      }, n.getMaximumWidth = function (t) {
        var e                        = t.parentNode, i      = parseInt(n.getStyle(e, "padding-left")) + parseInt(n.getStyle(e, "padding-right")),
            a = e.clientWidth - i, o = n.getConstraintWidth(t);
        return isNaN(o) ? a : Math.min(a, o)
      }, n.getMaximumHeight = function (t) {
        var e                         = t.parentNode, i       = parseInt(n.getStyle(e, "padding-top")) + parseInt(n.getStyle(e, "padding-bottom")),
            a = e.clientHeight - i, o = n.getConstraintHeight(t);
        return isNaN(o) ? a : Math.min(a, o)
      }, n.getStyle = function (t, e) {
        return t.currentStyle ? t.currentStyle[e] : document.defaultView.getComputedStyle(t, null).getPropertyValue(e)
      }, n.retinaScale = function (t) {
        var e = t.ctx, i = t.canvas, a = i.width, o = i.height,
            n                                       = t.currentDevicePixelRatio = window.devicePixelRatio || 1;
        1 !== n && (i.height = o * n, i.width = a * n, e.scale(n, n), t.originalDevicePixelRatio = t.originalDevicePixelRatio || n), i.style.width = a + "px", i.style.height = o + "px"
      }, n.clear = function (t) {
        t.ctx.clearRect(0, 0, t.width, t.height)
      }, n.fontString = function (t, e, i) {
        return e + " " + t + "px " + i
      }, n.longestText = function (t, e, i, a) {
        a     = a || {};
        var o = a.data = a.data || {}, r = a.garbageCollect = a.garbageCollect || [];
        a.font !== e && (o = a.data = {}, r = a.garbageCollect = [], a.font = e), t.font = e;
        var s = 0;
        n.each(i, function (e) {
          if (void 0 !== e && null !== e) {
            var i = o[e];
            i || (i = o[e] = t.measureText(e).width, r.push(e)), i > s && (s = i)
          }
        });
        var l = r.length / 2;
        if (l > i.length) {
          for (var h = 0; l > h; h++) delete o[r[h]];
          r.splice(0, l)
        }
        return s
      }, n.drawRoundedRectangle = function (t, e, i, a, o, n) {
        t.beginPath(), t.moveTo(e + n, i), t.lineTo(e + a - n, i), t.quadraticCurveTo(e + a, i, e + a, i + n), t.lineTo(e + a, i + o - n), t.quadraticCurveTo(e + a, i + o, e + a - n, i + o), t.lineTo(e + n, i + o), t.quadraticCurveTo(e, i + o, e, i + o - n), t.lineTo(e, i + n), t.quadraticCurveTo(e, i, e + n, i), t.closePath()
      }, n.color = function (e) {
        return a ? a(e instanceof CanvasGradient ? t.defaults.global.defaultColor : e) : e
      }, n.addResizeListener = function (t, e) {
        var i = document.createElement("iframe"), a = "chartjs-hidden-iframe";
        i.classlist ? i.classlist.add(a) : i.setAttribute("class", a);
        var o = i.style;
        o.width = "100%", o.display = "block", o.border = 0, o.height = 0, o.margin = 0, o.position = "absolute", o.left = 0, o.right = 0, o.top = 0, o.bottom = 0, t.insertBefore(i, t.firstChild), (i.contentWindow || i).onresize = function () {
          e && e()
        }
      }, n.removeResizeListener = function (t) {
        var e = t.querySelector(".chartjs-hidden-iframe");
        e && e.parentNode.removeChild(e)
      }, n.isArray = function (t) {
        return Array.isArray ? Array.isArray(t) : "[object Array]" === Object.prototype.toString.call(t)
      }, n.arrayEquals = function (t, e) {
        var i, a, o, r;
        if (!t || !e || t.length != e.length) return !1;
        for (i = 0, a = t.length; a > i; ++i) if (o = t[i], r = e[i], o instanceof Array && r instanceof Array) {
          if (!n.arrayEquals(o, r)) return !1
        } else if (o != r) return !1;
        return !0
      }, n.pushAllIfDefined = function (t, e) {
        void 0 !== t && (n.isArray(t) ? e.push.apply(e, t) : e.push(t))
      }, n.callCallback = function (t, e, i) {
        t && "function" == typeof t.call && t.apply(i, e)
      }, n.getHoverColor = function (t) {
        return t instanceof CanvasPattern ? t : n.color(t).saturate(.5).darken(.1).rgbString()
      }
    }
  }, {"chartjs-color": 3}], 26:                           [function (t, e, i) {
    "use strict";
    e.exports = function () {
      var t = function (e, i) {
        this.config = i, e.length && e[0].getContext && (e = e[0]), e.getContext && (e = e.getContext("2d")), this.ctx = e, this.canvas = e.canvas, this.width = e.canvas.width || parseInt(t.helpers.getStyle(e.canvas, "width")) || t.helpers.getMaximumWidth(e.canvas), this.height = e.canvas.height || parseInt(t.helpers.getStyle(e.canvas, "height")) || t.helpers.getMaximumHeight(e.canvas), this.aspectRatio = this.width / this.height, (isNaN(this.aspectRatio) || !1 === isFinite(this.aspectRatio)) && (this.aspectRatio = void 0 !== i.aspectRatio ? i.aspectRatio : 2), this.originalCanvasStyleWidth = e.canvas.style.width, this.originalCanvasStyleHeight = e.canvas.style.height, t.helpers.retinaScale(this), i && (this.controller = new t.Controller(this));
        var a = this;
        return t.helpers.addResizeListener(e.canvas.parentNode, function () {
          a.controller && a.controller.config.options.responsive && a.controller.resize()
        }), this.controller ? this.controller : this
      };
      return t.defaults = {
        global: {
          responsive:                  !0,
          responsiveAnimationDuration: 0,
          maintainAspectRatio:         !0,
          events:                      ["mousemove", "mouseout", "click", "touchstart", "touchmove"],
          hover:                       {onHover: null, mode: "single", animationDuration: 400},
          onClick:                     null,
          defaultColor:                "rgba(0,0,0,0.1)",
          defaultFontColor:            "#666",
          defaultFontFamily:           "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          defaultFontSize:             12,
          defaultFontStyle:            "normal",
          showLines:                   !0,
          elements:                    {},
          legendCallback:              function (t) {
            var e = [];
            e.push('<ul class="' + t.id + '-legend">');
            for (var i = 0; i < t.data.datasets.length; i++) e.push('<li><span style="background-color:' + t.data.datasets[i].backgroundColor + '"></span>'), t.data.datasets[i].label && e.push(t.data.datasets[i].label), e.push("</li>");
            return e.push("</ul>"), e.join("")
          }
        }
      }, t
    }
  }, {}], 27:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e           = t.helpers;
      t.layoutService = {
        defaults:     {}, addBox: function (t, e) {
          t.boxes || (t.boxes = []), t.boxes.push(e)
        }, removeBox: function (t, e) {
          t.boxes && t.boxes.splice(t.boxes.indexOf(e), 1)
        }, update:    function (t, i, a) {
          function o(t) {
            var e, i = t.isHorizontal();
            i ? (e = t.update(t.options.fullWidth ? p : k, y), S -= e.height) : (e = t.update(x, v), k -= e.width), C.push({
              horizontal: i,
              minSize:    e,
              box:        t
            })
          }

          function n(t) {
            var i = e.findNextWhere(C, function (e) {
              return e.box === t
            });
            if (i) if (t.isHorizontal()) {
              var a = {left: w, right: M, top: 0, bottom: 0};
              t.update(t.options.fullWidth ? p : k, m / 2, a)
            } else t.update(i.minSize.width, S)
          }

          function r(t) {
            var i = e.findNextWhere(C, function (e) {
              return e.box === t
            }), a = {left: 0, right: 0, top: D, bottom: A};
            i && t.update(i.minSize.width, S, a)
          }

          function s(t) {
            t.isHorizontal() ? (t.left = t.options.fullWidth ? l : w, t.right = t.options.fullWidth ? i - l : w + k, t.top = P, t.bottom = P + t.height, P = t.bottom) : (t.left = _, t.right = _ + t.width, t.top = D, t.bottom = D + S, _ = t.right)
          }

          if (t) {
            var l = 0, d = e.where(t.boxes, function (t) {
              return "left" === t.options.position
            }), c = e.where(t.boxes, function (t) {
              return "right" === t.options.position
            }), u = e.where(t.boxes, function (t) {
              return "top" === t.options.position
            }), f = e.where(t.boxes, function (t) {
              return "bottom" === t.options.position
            }), g = e.where(t.boxes, function (t) {
              return "chartArea" === t.options.position
            });
            u.sort(function (t, e) {
              return (e.options.fullWidth ? 1 : 0) - (t.options.fullWidth ? 1 : 0)
            }), f.sort(function (t, e) {
              return (t.options.fullWidth ? 1 : 0) - (e.options.fullWidth ? 1 : 0)
            });
            var p                                                    = i - 2 * l, m = a - 0, b = p / 2, v               = m / 2, x = (i - b) / (d.length + c.length),
                y = (a - v) / (u.length + f.length), k = p, S = m, C = [];
            e.each(d.concat(c, u, f), o);
            var w = l, M = l, D = 0, A = 0;
            e.each(d.concat(c), n), e.each(d, function (t) {
              w += t.width
            }), e.each(c, function (t) {
              M += t.width
            }), e.each(u.concat(f), n), e.each(u, function (t) {
              D += t.height
            }), e.each(f, function (t) {
              A += t.height
            }), e.each(d.concat(c), r), w = l, M = l, D = 0, A = 0, e.each(d, function (t) {
              w += t.width
            }), e.each(c, function (t) {
              M += t.width
            }), e.each(u, function (t) {
              D += t.height
            }), e.each(f, function (t) {
              A += t.height
            });
            var I = a - D - A, F = i - w - M;
            (F !== k || I !== S) && (e.each(d, function (t) {
              t.height = I
            }), e.each(c, function (t) {
              t.height = I
            }), e.each(u, function (t) {
              t.options.fullWidth || (t.width = F)
            }), e.each(f, function (t) {
              t.options.fullWidth || (t.width = F)
            }), S = I, k = F);
            var _ = l, P = 0;
            e.each(d.concat(u), s), _ += k, P += S, e.each(c, s), e.each(f, s), t.chartArea = {
              left:   w,
              top:    D,
              right:  w + k,
              bottom: D + S
            }, e.each(g, function (e) {
              e.left = t.chartArea.left, e.top = t.chartArea.top, e.right = t.chartArea.right, e.bottom = t.chartArea.bottom, e.update(k, S)
            })
          }
        }
      }
    }
  }, {}], 28:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = e.noop;
      t.defaults.global.legend = {
        display:   !0, position: "top", fullWidth: !0, reverse: !1, onClick: function (t, e) {
          var i = e.datasetIndex, a = this.chart, o = a.getDatasetMeta(i);
          o.hidden = null === o.hidden ? !a.data.datasets[i].hidden : null, a.update()
        }, labels: {
          boxWidth: 40, padding: 10, generateLabels: function (t) {
            var i = t.data;
            return e.isArray(i.datasets) ? i.datasets.map(function (e, i) {
              return {
                text:           e.label,
                fillStyle:      e.backgroundColor,
                hidden:         !t.isDatasetVisible(i),
                lineCap:        e.borderCapStyle,
                lineDash:       e.borderDash,
                lineDashOffset: e.borderDashOffset,
                lineJoin:       e.borderJoinStyle,
                lineWidth:      e.borderWidth,
                strokeStyle:    e.borderColor,
                datasetIndex:   i
              }
            }, this) : []
          }
        }
      }, t.Legend = t.Element.extend({
        initialize:            function (t) {
          e.extend(this, t), this.legendHitBoxes = [], this.doughnutMode = !1
        }, beforeUpdate:       i, update: function (t, e, i) {
          return this.beforeUpdate(), this.maxWidth = t, this.maxHeight = e, this.margins = i, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this.beforeBuildLabels(), this.buildLabels(), this.afterBuildLabels(), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate(), this.minSize
        }, afterUpdate:        i, beforeSetDimensions: i, setDimensions: function () {
          this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0, this.minSize = {
            width:  0,
            height: 0
          }
        }, afterSetDimensions: i, beforeBuildLabels: i, buildLabels: function () {
          this.legendItems = this.options.labels.generateLabels.call(this, this.chart), this.options.reverse && this.legendItems.reverse()
        }, afterBuildLabels:   i, beforeFit: i, fit: function () {
          var i                                                                      = this.options, a = i.labels, o                                      = i.display, n = this.ctx, r = t.defaults.global,
              s                                                                      = e.getValueOrDefault, l                                             = s(a.fontSize, r.defaultFontSize), h = s(a.fontStyle, r.defaultFontStyle),
              d = s(a.fontFamily, r.defaultFontFamily), c = e.fontString(l, h, d), u = this.legendHitBoxes = [],
              f = this.minSize, g = this.isHorizontal();
          if (g ? (f.width = this.maxWidth, f.height = o ? 10 : 0) : (f.width = o ? 10 : 0, f.height = this.maxHeight), o && g) {
            var p = this.lineWidths = [0], m = this.legendItems.length ? l + a.padding : 0;
            n.textAlign = "left", n.textBaseline = "top", n.font = c, e.each(this.legendItems, function (t, e) {
              var i = a.boxWidth + l / 2 + n.measureText(t.text).width;
              p[p.length - 1] + i + a.padding >= this.width && (m += l + a.padding, p[p.length] = this.left), u[e] = {
                left:   0,
                top:    0,
                width:  i,
                height: l
              }, p[p.length - 1] += i + a.padding
            }, this), f.height += m
          }
          this.width = f.width, this.height = f.height
        }, afterFit:           i, isHorizontal: function () {
          return "top" === this.options.position || "bottom" === this.options.position
        }, draw:               function () {
          var i = this.options, a = i.labels, o = t.defaults.global, n = o.elements.line, r = this.width,
              s                                                                             = this.lineWidths;
          if (i.display) {
            var l                                                                  = this.ctx, h = {x: this.left + (r - s[0]) / 2, y: this.top + a.padding, line: 0},
                d = e.getValueOrDefault, c = d(a.fontColor, o.defaultFontColor), u = d(a.fontSize, o.defaultFontSize),
                f                                                                  = d(a.fontStyle, o.defaultFontStyle), g = d(a.fontFamily, o.defaultFontFamily),
                p                                                                  = e.fontString(u, f, g);
            if (this.isHorizontal()) {
              l.textAlign = "left", l.textBaseline = "top", l.lineWidth = .5, l.strokeStyle = c, l.fillStyle = c, l.font = p;
              var m = a.boxWidth, b = this.legendHitBoxes;
              e.each(this.legendItems, function (t, e) {
                var i = l.measureText(t.text).width, c = m + u / 2 + i, f = h.x, g = h.y;
                f + c >= r && (g = h.y += u + a.padding, h.line++, f = h.x = this.left + (r - s[h.line]) / 2), l.save(), l.fillStyle = d(t.fillStyle, o.defaultColor), l.lineCap = d(t.lineCap, n.borderCapStyle), l.lineDashOffset = d(t.lineDashOffset, n.borderDashOffset), l.lineJoin = d(t.lineJoin, n.borderJoinStyle), l.lineWidth = d(t.lineWidth, n.borderWidth), l.strokeStyle = d(t.strokeStyle, o.defaultColor), l.setLineDash && l.setLineDash(d(t.lineDash, n.borderDash)), l.strokeRect(f, g, m, u), l.fillRect(f, g, m, u), l.restore(), b[e].left = f, b[e].top = g, l.fillText(t.text, m + u / 2 + f, g), t.hidden && (l.beginPath(), l.lineWidth = 2, l.moveTo(m + u / 2 + f, g + u / 2), l.lineTo(m + u / 2 + f + i, g + u / 2), l.stroke()), h.x += c + a.padding
              }, this)
            }
          }
        }, handleEvent:        function (t) {
          var i = e.getRelativePosition(t, this.chart.chart), a = i.x, o = i.y, n = this.options;
          if (a >= this.left && a <= this.right && o >= this.top && o <= this.bottom) for (var r = this.legendHitBoxes, s = 0; s < r.length; ++s) {
            var l = r[s];
            if (a >= l.left && a <= l.left + l.width && o >= l.top && o <= l.top + l.height) {
              n.onClick && n.onClick.call(this, t, this.legendItems[s]);
              break
            }
          }
        }
      })
    }
  }, {}], 29:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.plugins = [], t.pluginService = {
        register:         function (e) {
          var i = t.plugins;
          -1 === i.indexOf(e) && i.push(e)
        }, remove:        function (e) {
          var i = t.plugins, a = i.indexOf(e);
          -1 !== a && i.splice(a, 1)
        }, notifyPlugins: function (i, a, o) {
          e.each(t.plugins, function (t) {
            t[i] && "function" == typeof t[i] && t[i].apply(o, a)
          }, o)
        }
      };
      var i        = e.noop;
      t.PluginBase = t.Element.extend({
        beforeInit:   i,
        afterInit:    i,
        beforeUpdate: i,
        afterUpdate:  i,
        beforeDraw:   i,
        afterDraw:    i,
        destroy:      i
      })
    }
  }, {}], 30:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers;
      t.defaults.scale = {
        display:    !0,
        position:   "left",
        gridLines:  {
          display:         !0,
          color:           "rgba(0, 0, 0, 0.1)",
          lineWidth:       1,
          drawBorder:      !0,
          drawOnChartArea: !0,
          drawTicks:       !0,
          tickMarkLength:  10,
          zeroLineWidth:   1,
          zeroLineColor:   "rgba(0,0,0,0.25)",
          offsetGridLines: !1
        },
        scaleLabel: {labelString: "", display: !1},
        ticks:      {
          beginAtZero:     !1,
          minRotation:     0,
          maxRotation:     50,
          mirror:          !1,
          padding:         10,
          reverse:         !1,
          display:         !0,
          autoSkip:        !0,
          autoSkipPadding: 0,
          labelOffset:     0,
          callback:        function (t) {
            return "" + t
          }
        }
      }, t.Scale = t.Element.extend({
        beforeUpdate:                function () {
          e.callCallback(this.options.beforeUpdate, [this])
        },
        update:                      function (t, i, a) {
          return this.beforeUpdate(), this.maxWidth = t, this.maxHeight = i, this.margins = e.extend({
            left:   0,
            right:  0,
            top:    0,
            bottom: 0
          }, a), this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this.beforeDataLimits(), this.determineDataLimits(), this.afterDataLimits(), this.beforeBuildTicks(), this.buildTicks(), this.afterBuildTicks(), this.beforeTickToLabelConversion(), this.convertTicksToLabels(), this.afterTickToLabelConversion(), this.beforeCalculateTickRotation(), this.calculateTickRotation(), this.afterCalculateTickRotation(), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate(), this.minSize
        },
        afterUpdate:                 function () {
          e.callCallback(this.options.afterUpdate, [this])
        },
        beforeSetDimensions:         function () {
          e.callCallback(this.options.beforeSetDimensions, [this])
        },
        setDimensions:               function () {
          this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0
        },
        afterSetDimensions:          function () {
          e.callCallback(this.options.afterSetDimensions, [this])
        },
        beforeDataLimits:            function () {
          e.callCallback(this.options.beforeDataLimits, [this])
        },
        determineDataLimits:         e.noop,
        afterDataLimits:             function () {
          e.callCallback(this.options.afterDataLimits, [this])
        },
        beforeBuildTicks:            function () {
          e.callCallback(this.options.beforeBuildTicks, [this])
        },
        buildTicks:                  e.noop,
        afterBuildTicks:             function () {
          e.callCallback(this.options.afterBuildTicks, [this])
        },
        beforeTickToLabelConversion: function () {
          e.callCallback(this.options.beforeTickToLabelConversion, [this])
        },
        convertTicksToLabels:        function () {
          this.ticks = this.ticks.map(function (t, e, i) {
            return this.options.ticks.userCallback ? this.options.ticks.userCallback(t, e, i) : this.options.ticks.callback(t, e, i)
          }, this)
        },
        afterTickToLabelConversion:  function () {
          e.callCallback(this.options.afterTickToLabelConversion, [this])
        },
        beforeCalculateTickRotation: function () {
          e.callCallback(this.options.beforeCalculateTickRotation, [this])
        },
        calculateTickRotation:       function () {
          var i                                                             = this.ctx, a                                               = t.defaults.global, o = this.options.ticks,
              n                                                             = e.getValueOrDefault(o.fontSize, a.defaultFontSize),
              r                                                             = e.getValueOrDefault(o.fontStyle, a.defaultFontStyle),
              s = e.getValueOrDefault(o.fontFamily, a.defaultFontFamily), l = e.fontString(n, r, s);
          i.font                                                            = l;
          var h, d                                                          = i.measureText(this.ticks[0]).width, c                  = i.measureText(this.ticks[this.ticks.length - 1]).width;
          if (this.labelRotation = o.minRotation || 0, this.paddingRight = 0, this.paddingLeft = 0, this.options.display && this.isHorizontal()) {
            this.paddingRight = c / 2 + 3, this.paddingLeft = d / 2 + 3, this.longestTextCache || (this.longestTextCache = {});
            for (var u, f, g = e.longestText(i, l, this.ticks, this.longestTextCache), p = g, m = this.getPixelForTick(1) - this.getPixelForTick(0) - 6; p > m && this.labelRotation < o.maxRotation;) {
              if (u = Math.cos(e.toRadians(this.labelRotation)), f = Math.sin(e.toRadians(this.labelRotation)), h = u * d, h + n / 2 > this.yLabelWidth && (this.paddingLeft = h + n / 2), this.paddingRight = n / 2, f * g > this.maxHeight) {
                this.labelRotation--;
                break
              }
              this.labelRotation++, p = u * g
            }
          }
          this.margins && (this.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0), this.paddingRight = Math.max(this.paddingRight - this.margins.right, 0))
        },
        afterCalculateTickRotation:  function () {
          e.callCallback(this.options.afterCalculateTickRotation, [this])
        },
        beforeFit:                   function () {
          e.callCallback(this.options.beforeFit, [this])
        },
        fit:                         function () {
          var i = this.minSize = {width: 0, height: 0}, a = this.options, o = t.defaults.global, n = a.ticks,
              r                                                                                    = a.scaleLabel, s                                                                  = a.display, l = this.isHorizontal(),
              h                                                                                    = e.getValueOrDefault(n.fontSize, o.defaultFontSize),
              d                                                                                    = e.getValueOrDefault(n.fontStyle, o.defaultFontStyle),
              c                                                                                    = e.getValueOrDefault(n.fontFamily, o.defaultFontFamily),
              u                                                                                    = e.fontString(h, d, c),
              f                                                                                    = e.getValueOrDefault(r.fontSize, o.defaultFontSize),
              g                                                                                    = e.getValueOrDefault(r.fontStyle, o.defaultFontStyle),
              p                                                                                    = e.getValueOrDefault(r.fontFamily, o.defaultFontFamily),
              m                                                                                    = (e.fontString(f, g, p), a.gridLines.tickMarkLength);
          if (i.width = l ? this.isFullWidth() ? this.maxWidth - this.margins.left - this.margins.right : this.maxWidth : s ? m : 0, i.height = l ? s ? m : 0 : this.maxHeight, r.display && s && (l ? i.height += 1.5 * f : i.width += 1.5 * f), n.display && s) {
            this.longestTextCache || (this.longestTextCache = {});
            var b = e.longestText(this.ctx, u, this.ticks, this.longestTextCache);
            if (l) {
              this.longestLabelWidth = b;
              var v                  = Math.sin(e.toRadians(this.labelRotation)) * this.longestLabelWidth + 1.5 * h;
              i.height = Math.min(this.maxHeight, i.height + v), this.ctx.font = u;
              var x                                                = this.ctx.measureText(this.ticks[0]).width,
                  y                                                = this.ctx.measureText(this.ticks[this.ticks.length - 1]).width,
                  k = Math.cos(e.toRadians(this.labelRotation)), S = Math.sin(e.toRadians(this.labelRotation));
              this.paddingLeft = 0 !== this.labelRotation ? k * x + 3 : x / 2 + 3, this.paddingRight = 0 !== this.labelRotation ? S * (h / 2) + 3 : y / 2 + 3
            } else {
              var C = this.maxWidth - i.width;
              n.mirror ? b = 0 : b += this.options.ticks.padding, C > b ? i.width += b : i.width = this.maxWidth, this.paddingTop = h / 2, this.paddingBottom = h / 2
            }
          }
          this.margins && (this.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0), this.paddingTop = Math.max(this.paddingTop - this.margins.top, 0), this.paddingRight = Math.max(this.paddingRight - this.margins.right, 0), this.paddingBottom = Math.max(this.paddingBottom - this.margins.bottom, 0)), this.width = i.width, this.height = i.height
        },
        afterFit:                    function () {
          e.callCallback(this.options.afterFit, [this])
        },
        isHorizontal:                function () {
          return "top" === this.options.position || "bottom" === this.options.position
        },
        isFullWidth:                 function () {
          return this.options.fullWidth
        },
        getRightValue:               function i(t) {
          return null === t || void 0 === t ? NaN : "number" == typeof t && isNaN(t) ? NaN : "object" == typeof t ? t instanceof Date || t.isValid ? t : i(this.isHorizontal() ? t.x : t.y) : t
        },
        getLabelForIndex:            e.noop,
        getPixelForValue:            e.noop,
        getValueForPixel:            e.noop,
        getPixelForTick:             function (t, e) {
          if (this.isHorizontal()) {
            var i = this.width - (this.paddingLeft + this.paddingRight),
                a = i / Math.max(this.ticks.length - (this.options.gridLines.offsetGridLines ? 0 : 1), 1),
                o = a * t + this.paddingLeft;
            e && (o += a / 2);
            var n = this.left + Math.round(o);
            return n += this.isFullWidth() ? this.margins.left : 0
          }
          var r = this.height - (this.paddingTop + this.paddingBottom);
          return this.top + t * (r / (this.ticks.length - 1))
        },
        getPixelForDecimal:          function (t) {
          if (this.isHorizontal()) {
            var e = this.width - (this.paddingLeft + this.paddingRight), i = e * t + this.paddingLeft,
                a                                                          = this.left + Math.round(i);
            return a += this.isFullWidth() ? this.margins.left : 0
          }
          return this.top + t * this.height
        },
        getBasePixel:                function () {
          var t = this, e = t.min, i = t.max;
          return t.getPixelForValue(t.beginAtZero ? 0 : 0 > e && 0 > i ? i : e > 0 && i > 0 ? e : 0)
        },
        draw:                        function (i) {
          var a = this.options;
          if (a.display) {
            var o, n, r, s, l, h = this.ctx, d = t.defaults.global, c = a.ticks, u = a.gridLines, f = a.scaleLabel,
                g                                                                                   = 0 !== this.labelRotation, p                                                     = c.autoSkip;
            c.maxTicksLimit && (l = c.maxTicksLimit);
            var m                                                             = e.getValueOrDefault(c.fontColor, d.defaultFontColor),
                b                                                             = e.getValueOrDefault(c.fontSize, d.defaultFontSize),
                v                                                             = e.getValueOrDefault(c.fontStyle, d.defaultFontStyle),
                x = e.getValueOrDefault(c.fontFamily, d.defaultFontFamily), y = e.fontString(b, v, x),
                k                                                             = u.tickMarkLength, S                                       = e.getValueOrDefault(f.fontColor, d.defaultFontColor),
                C                                                             = e.getValueOrDefault(f.fontSize, d.defaultFontSize),
                w                                                             = e.getValueOrDefault(f.fontStyle, d.defaultFontStyle),
                M                                                             = e.getValueOrDefault(f.fontFamily, d.defaultFontFamily), D = e.fontString(C, w, M),
                A                                                             = e.toRadians(this.labelRotation), I                        = Math.cos(A), F = (Math.sin(A), this.longestLabelWidth * I);
            if (h.fillStyle = m, this.isHorizontal()) {
              o     = !0;
              var _ = "bottom" === a.position ? this.top : this.bottom - k,
                  P = "bottom" === a.position ? this.top + k : this.bottom;
              if (n = !1, g && (F /= 2), (F + c.autoSkipPadding) * this.ticks.length > this.width - (this.paddingLeft + this.paddingRight) && (n = 1 + Math.floor((F + c.autoSkipPadding) * this.ticks.length / (this.width - (this.paddingLeft + this.paddingRight)))), l && this.ticks.length > l) for (; !n || this.ticks.length / (n || 1) > l;) n || (n = 1), n += 1;
              p || (n = !1), e.each(this.ticks, function (t, r) {
                var s = this.ticks.length === r + 1;
                if ((!(n > 1 && r % n > 0 || r % n == 0 && r + n >= this.ticks.length) || s) && void 0 !== t && null !== t) {
                  var d = this.getPixelForTick(r), f = this.getPixelForTick(r, u.offsetGridLines);
                  u.display && (r === (void 0 !== this.zeroLineIndex ? this.zeroLineIndex : 0) ? (h.lineWidth = u.zeroLineWidth, h.strokeStyle = u.zeroLineColor, o = !0) : o && (h.lineWidth = u.lineWidth, h.strokeStyle = u.color, o = !1), d += e.aliasPixel(h.lineWidth), h.beginPath(), u.drawTicks && (h.moveTo(d, _), h.lineTo(d, P)), u.drawOnChartArea && (h.moveTo(d, i.top), h.lineTo(d, i.bottom)), h.stroke()), c.display && (h.save(), h.translate(f + c.labelOffset, g ? this.top + 12 : "top" === a.position ? this.bottom - k : this.top + k), h.rotate(-1 * A), h.font = y, h.textAlign = g ? "right" : "center", h.textBaseline = g ? "middle" : "top" === a.position ? "bottom" : "top", h.fillText(t, 0, 0), h.restore())
                }
              }, this), f.display && (h.textAlign = "center", h.textBaseline = "middle", h.fillStyle = S, h.font = D, r = this.left + (this.right - this.left) / 2, s = "bottom" === a.position ? this.bottom - C / 2 : this.top + C / 2, h.fillText(f.labelString, r, s))
            } else {
              o     = !0;
              var T = "right" === a.position ? this.left : this.right - 5,
                  V = "right" === a.position ? this.left + 5 : this.right;
              if (e.each(this.ticks, function (t, n) {
                  if (void 0 !== t && null !== t) {
                    var r = this.getPixelForTick(n);
                    if (u.display && (n === (void 0 !== this.zeroLineIndex ? this.zeroLineIndex : 0) ? (h.lineWidth = u.zeroLineWidth, h.strokeStyle = u.zeroLineColor, o = !0) : o && (h.lineWidth = u.lineWidth, h.strokeStyle = u.color, o = !1), r += e.aliasPixel(h.lineWidth), h.beginPath(), u.drawTicks && (h.moveTo(T, r), h.lineTo(V, r)), u.drawOnChartArea && (h.moveTo(i.left, r), h.lineTo(i.right, r)), h.stroke()), c.display) {
                      var s, l = this.getPixelForTick(n, u.offsetGridLines);
                      h.save(), "left" === a.position ? c.mirror ? (s = this.right + c.padding, h.textAlign = "left") : (s = this.right - c.padding, h.textAlign = "right") : c.mirror ? (s = this.left - c.padding, h.textAlign = "right") : (s = this.left + c.padding, h.textAlign = "left"), h.translate(s, l + c.labelOffset), h.rotate(-1 * A), h.font = y, h.textBaseline = "middle", h.fillText(t, 0, 0), h.restore()
                    }
                  }
                }, this), f.display) {
                r = "left" === a.position ? this.left + C / 2 : this.right - C / 2, s = this.top + (this.bottom - this.top) / 2;
                var R = "left" === a.position ? -.5 * Math.PI : .5 * Math.PI;
                h.save(), h.translate(r, s), h.rotate(R), h.textAlign = "center", h.fillStyle = S, h.font = D, h.textBaseline = "middle", h.fillText(f.labelString, 0, 0), h.restore()
              }
            }
            if (u.drawBorder) {
              h.lineWidth = u.lineWidth, h.strokeStyle = u.color;
              var O = this.left, W = this.right, L = this.top, B = this.bottom, z = e.aliasPixel(h.lineWidth);
              this.isHorizontal() ? (L = B = "top" === a.position ? this.bottom : this.top, L += z, B += z) : (O = W = "left" === a.position ? this.right : this.left, O += z, W += z), h.beginPath(), h.moveTo(O, L), h.lineTo(W, B), h.stroke()
            }
          }
        }
      })
    }
  }, {}], 31:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e          = t.helpers;
      t.scaleService = {
        constructors:           {}, defaults: {}, registerScaleType: function (t, i, a) {
          this.constructors[t] = i, this.defaults[t] = e.clone(a)
        }, getScaleConstructor: function (t) {
          return this.constructors.hasOwnProperty(t) ? this.constructors[t] : void 0
        }, getScaleDefaults:    function (i) {
          return this.defaults.hasOwnProperty(i) ? e.scaleMerge(t.defaults.scale, this.defaults[i]) : {}
        }, updateScaleDefaults: function (t, i) {
          var a = this.defaults;
          a.hasOwnProperty(t) && (a[t] = e.extend(a[t], i))
        }, addScalesToLayout:   function (i) {
          e.each(i.scales, function (e) {
            t.layoutService.addBox(i, e)
          })
        }
      }
    }
  }, {}], 32:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e                   = t.helpers;
      t.defaults.global.title = {display: !1, position: "top", fullWidth: !0, fontStyle: "bold", padding: 10, text: ""};
      var i                   = e.noop;
      t.Title                 = t.Element.extend({
        initialize:          function (i) {
          e.extend(this, i), this.options = e.configMerge(t.defaults.global.title, i.options), this.legendHitBoxes = []
        },
        beforeUpdate:        i,
        update:              function (t, e, i) {
          return this.beforeUpdate(), this.maxWidth = t, this.maxHeight = e, this.margins = i, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this.beforeBuildLabels(), this.buildLabels(), this.afterBuildLabels(), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate(), this.minSize
        },
        afterUpdate:         i,
        beforeSetDimensions: i,
        setDimensions:       function () {
          this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0, this.minSize = {
            width:  0,
            height: 0
          }
        },
        afterSetDimensions:  i,
        beforeBuildLabels:   i,
        buildLabels:         i,
        afterBuildLabels:    i,
        beforeFit:           i,
        fit:                 function () {
          var i = this, a = (i.ctx, e.getValueOrDefault), o = i.options, n = t.defaults.global, r = o.display,
              s                                                                                   = a(o.fontSize, n.defaultFontSize), l = i.minSize;
          i.isHorizontal() ? (l.width = i.maxWidth, l.height = r ? s + 2 * o.padding : 0) : (l.width = r ? s + 2 * o.padding : 0, l.height = i.maxHeight), i.width = l.width, i.height = l.height
        },
        afterFit:            i,
        isHorizontal:        function () {
          var t = this.options.position;
          return "top" === t || "bottom" === t
        },
        draw:                function () {
          var i = this, a = i.ctx, o = e.getValueOrDefault, n = i.options, r = t.defaults.global;
          if (n.display) {
            var s, l, h                                                                                  = o(n.fontSize, r.defaultFontSize), d = o(n.fontStyle, r.defaultFontStyle),
                c = o(n.fontFamily, r.defaultFontFamily), u = e.fontString(h, d, c), f = 0, g = i.top, p = i.left,
                m                                                                                        = i.bottom, b                                                                          = i.right;
            a.fillStyle = o(n.fontColor, r.defaultFontColor), a.font = u, i.isHorizontal() ? (s = p + (b - p) / 2, l = g + (m - g) / 2) : (s = "left" === n.position ? p + h / 2 : b - h / 2, l = g + (m - g) / 2, f = Math.PI * ("left" === n.position ? -.5 : .5)), a.save(), a.translate(s, l), a.rotate(f), a.textAlign = "center", a.textBaseline = "middle", a.fillText(n.text, 0, 0), a.restore()
          }
        }
      })
    }
  }, {}], 33:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      function e(t, e) {
        return e && (i.isArray(e) ? t = t.concat(e) : t.push(e)), t
      }

      var i = t.helpers;
      t.defaults.global.tooltips = {
        enabled:            !0,
        custom:             null,
        mode:               "single",
        backgroundColor:    "rgba(0,0,0,0.8)",
        titleFontStyle:     "bold",
        titleSpacing:       2,
        titleMarginBottom:  6,
        titleColor:         "#fff",
        titleAlign:         "left",
        bodySpacing:        2,
        bodyColor:          "#fff",
        bodyAlign:          "left",
        footerFontStyle:    "bold",
        footerSpacing:      2,
        footerMarginTop:    6,
        footerColor:        "#fff",
        footerAlign:        "left",
        yPadding:           6,
        xPadding:           6,
        yAlign:             "center",
        xAlign:             "center",
        caretSize:          5,
        cornerRadius:       6,
        multiKeyBackground: "#fff",
        callbacks:          {
          beforeTitle:  i.noop,
          title:        function (t, e) {
            var i = "";
            return t.length > 0 && (t[0].xLabel ? i = t[0].xLabel : e.labels.length > 0 && t[0].index < e.labels.length && (i = e.labels[t[0].index])), i
          },
          afterTitle:   i.noop,
          beforeBody:   i.noop,
          beforeLabel:  i.noop,
          label:        function (t, e) {
            return (e.datasets[t.datasetIndex].label || "") + ": " + t.yLabel
          },
          afterLabel:   i.noop,
          afterBody:    i.noop,
          beforeFooter: i.noop,
          footer:       i.noop,
          afterFooter:  i.noop
        }
      }, t.Tooltip = t.Element.extend({
        initialize:            function () {
          var e = t.defaults.global, a = this._options, o = a.tooltips;
          i.extend(this, {
            _model: {
              xPadding:              o.xPadding,
              yPadding:              o.yPadding,
              xAlign:                o.yAlign,
              yAlign:                o.xAlign,
              bodyColor:             o.bodyColor,
              _bodyFontFamily:       i.getValueOrDefault(o.bodyFontFamily, e.defaultFontFamily),
              _bodyFontStyle:        i.getValueOrDefault(o.bodyFontStyle, e.defaultFontStyle),
              _bodyAlign:            o.bodyAlign,
              bodyFontSize:          i.getValueOrDefault(o.bodyFontSize, e.defaultFontSize),
              bodySpacing:           o.bodySpacing,
              titleColor:            o.titleColor,
              _titleFontFamily:      i.getValueOrDefault(o.titleFontFamily, e.defaultFontFamily),
              _titleFontStyle:       i.getValueOrDefault(o.titleFontStyle, e.defaultFontStyle),
              titleFontSize:         i.getValueOrDefault(o.titleFontSize, e.defaultFontSize),
              _titleAlign:           o.titleAlign,
              titleSpacing:          o.titleSpacing,
              titleMarginBottom:     o.titleMarginBottom,
              footerColor:           o.footerColor,
              _footerFontFamily:     i.getValueOrDefault(o.footerFontFamily, e.defaultFontFamily),
              _footerFontStyle:      i.getValueOrDefault(o.footerFontStyle, e.defaultFontStyle),
              footerFontSize:        i.getValueOrDefault(o.footerFontSize, e.defaultFontSize),
              _footerAlign:          o.footerAlign,
              footerSpacing:         o.footerSpacing,
              footerMarginTop:       o.footerMarginTop,
              caretSize:             o.caretSize,
              cornerRadius:          o.cornerRadius,
              backgroundColor:       o.backgroundColor,
              opacity:               0,
              legendColorBackground: o.multiKeyBackground
            }
          })
        }, getTitle:           function () {
          var t                                                                         = this._options.tooltips.callbacks.beforeTitle.apply(this, arguments),
              i                                                                         = this._options.tooltips.callbacks.title.apply(this, arguments),
              a = this._options.tooltips.callbacks.afterTitle.apply(this, arguments), o = [];
          return o = e(o, t), o = e(o, i), o = e(o, a)
        }, getBeforeBody:      function () {
          var t = this._options.tooltips.callbacks.beforeBody.apply(this, arguments);
          return i.isArray(t) ? t : void 0 !== t ? [t] : []
        }, getBody:            function (t, e) {
          var a = [];
          return i.each(t, function (t) {
            i.pushAllIfDefined(this._options.tooltips.callbacks.beforeLabel.call(this, t, e), a), i.pushAllIfDefined(this._options.tooltips.callbacks.label.call(this, t, e), a), i.pushAllIfDefined(this._options.tooltips.callbacks.afterLabel.call(this, t, e), a)
          }, this), a
        }, getAfterBody:       function () {
          var t = this._options.tooltips.callbacks.afterBody.apply(this, arguments);
          return i.isArray(t) ? t : void 0 !== t ? [t] : []
        }, getFooter:          function () {
          var t                                                                          = this._options.tooltips.callbacks.beforeFooter.apply(this, arguments),
              i                                                                          = this._options.tooltips.callbacks.footer.apply(this, arguments),
              a = this._options.tooltips.callbacks.afterFooter.apply(this, arguments), o = [];
          return o = e(o, t), o = e(o, i), o = e(o, a)
        }, getAveragePosition: function (t) {
          if (!t.length) return !1;
          var e = [], a = [];
          i.each(t, function (t) {
            if (t && t.hasValue()) {
              var i = t.tooltipPosition();
              e.push(i.x), a.push(i.y)
            }
          });
          for (var o = 0, n = 0, r = 0; r < e.length; r++) o += e[r], n += a[r];
          return {x: Math.round(o / e.length), y: Math.round(n / e.length)}
        }, update:             function (t) {
          if (this._active.length) {
            this._model.opacity = 1;
            var e, a            = this._active[0], o = [], n = [];
            if ("single" === this._options.tooltips.mode) {
              var r = a._yScale || a._scale;
              n.push({
                xLabel:       a._xScale ? a._xScale.getLabelForIndex(a._index, a._datasetIndex) : "",
                yLabel:       r ? r.getLabelForIndex(a._index, a._datasetIndex) : "",
                index:        a._index,
                datasetIndex: a._datasetIndex
              }), e = this.getAveragePosition(this._active)
            } else i.each(this._data.datasets, function (t, e) {
              if (this._chartInstance.isDatasetVisible(e)) {
                var i = this._chartInstance.getDatasetMeta(e), o = i.data[a._index];
                if (o) {
                  var r = a._yScale || a._scale;
                  n.push({
                    xLabel:       o._xScale ? o._xScale.getLabelForIndex(o._index, o._datasetIndex) : "",
                    yLabel:       r ? r.getLabelForIndex(o._index, o._datasetIndex) : "",
                    index:        a._index,
                    datasetIndex: e
                  })
                }
              }
            }, this), i.each(this._active, function (t) {
              t && o.push({borderColor: t._view.borderColor, backgroundColor: t._view.backgroundColor})
            }, null), e = this.getAveragePosition(this._active);
            i.extend(this._model, {
              title:      this.getTitle(n, this._data),
              beforeBody: this.getBeforeBody(n, this._data),
              body:       this.getBody(n, this._data),
              afterBody:  this.getAfterBody(n, this._data),
              footer:     this.getFooter(n, this._data)
            }), i.extend(this._model, {
              x:            Math.round(e.x),
              y:            Math.round(e.y),
              caretPadding: i.getValueOrDefault(e.padding, 2),
              labelColors:  o
            });
            var s = this.getTooltipSize(this._model);
            this.determineAlignment(s), i.extend(this._model, this.getBackgroundPoint(this._model, s))
          } else this._model.opacity = 0;
          return t && this._options.tooltips.custom && this._options.tooltips.custom.call(this, this._model), this
        }, getTooltipSize:     function (t) {
          var e = this._chart.ctx, a = {height: 2 * t.yPadding, width: 0},
              o                      = t.body.length + t.beforeBody.length + t.afterBody.length;
          return a.height += t.title.length * t.titleFontSize, a.height += (t.title.length - 1) * t.titleSpacing, a.height += t.title.length ? t.titleMarginBottom : 0, a.height += o * t.bodyFontSize, a.height += o ? (o - 1) * t.bodySpacing : 0, a.height += t.footer.length ? t.footerMarginTop : 0, a.height += t.footer.length * t.footerFontSize, a.height += t.footer.length ? (t.footer.length - 1) * t.footerSpacing : 0, e.font = i.fontString(t.titleFontSize, t._titleFontStyle, t._titleFontFamily), i.each(t.title, function (t) {
            a.width = Math.max(a.width, e.measureText(t).width)
          }), e.font = i.fontString(t.bodyFontSize, t._bodyFontStyle, t._bodyFontFamily), i.each(t.beforeBody.concat(t.afterBody), function (t) {
            a.width = Math.max(a.width, e.measureText(t).width)
          }), i.each(t.body, function (i) {
            a.width = Math.max(a.width, e.measureText(i).width + ("single" !== this._options.tooltips.mode ? t.bodyFontSize + 2 : 0))
          }, this), e.font = i.fontString(t.footerFontSize, t._footerFontStyle, t._footerFontFamily), i.each(t.footer, function (t) {
            a.width = Math.max(a.width, e.measureText(t).width)
          }), a.width += 2 * t.xPadding, a
        }, determineAlignment: function (t) {
          this._model.y < t.height ? this._model.yAlign = "top" : this._model.y > this._chart.height - t.height && (this._model.yAlign = "bottom");
          var e, i, a, o, n, r = this,
              s                = (this._chartInstance.chartArea.left + this._chartInstance.chartArea.right) / 2,
              l                = (this._chartInstance.chartArea.top + this._chartInstance.chartArea.bottom) / 2;
          "center" === this._model.yAlign ? (e = function (t) {
            return s >= t
          }, i = function (t) {
            return t > s
          }) : (e = function (e) {
            return e <= t.width / 2
          }, i = function (e) {
            return e >= r._chart.width - t.width / 2
          }), a = function (e) {
            return e + t.width > r._chart.width
          }, o = function (e) {
            return e - t.width < 0
          }, n = function (t) {
            return l >= t ? "top" : "bottom"
          }, e(this._model.x) ? (this._model.xAlign = "left", a(this._model.x) && (this._model.xAlign = "center",
            this._model.yAlign = n(this._model.y))) : i(this._model.x) && (this._model.xAlign = "right", o(this._model.x) && (this._model.xAlign = "center", this._model.yAlign = n(this._model.y)))
        }, getBackgroundPoint: function (t, e) {
          var i = {x: t.x, y: t.y};
          return "right" === t.xAlign ? i.x -= e.width : "center" === t.xAlign && (i.x -= e.width / 2), "top" === t.yAlign ? i.y += t.caretPadding + t.caretSize : "bottom" === t.yAlign ? i.y -= e.height + t.caretPadding + t.caretSize : i.y -= e.height / 2, "center" === t.yAlign ? "left" === t.xAlign ? i.x += t.caretPadding + t.caretSize : "right" === t.xAlign && (i.x -= t.caretPadding + t.caretSize) : "left" === t.xAlign ? i.x -= t.cornerRadius + t.caretPadding : "right" === t.xAlign && (i.x += t.cornerRadius + t.caretPadding), i
        }, drawCaret:          function (t, e, a, o) {
          var n, r, s, l, h, d, c = this._view, u = this._chart.ctx;
          "center" === c.yAlign ? ("left" === c.xAlign ? (n = t.x, r = n - c.caretSize, s = n) : (n = t.x + e.width, r = n + c.caretSize, s = n), h = t.y + e.height / 2, l = h - c.caretSize, d = h + c.caretSize) : ("left" === c.xAlign ? (n = t.x + c.cornerRadius, r = n + c.caretSize, s = r + c.caretSize) : "right" === c.xAlign ? (n = t.x + e.width - c.cornerRadius, r = n - c.caretSize, s = r - c.caretSize) : (r = t.x + e.width / 2, n = r - c.caretSize, s = r + c.caretSize), "top" === c.yAlign ? (l = t.y, h = l - c.caretSize, d = l) : (l = t.y + e.height, h = l + c.caretSize, d = l));
          var f = i.color(c.backgroundColor);
          u.fillStyle = f.alpha(a * f.alpha()).rgbString(), u.beginPath(), u.moveTo(n, l), u.lineTo(r, h), u.lineTo(s, d), u.closePath(), u.fill()
        }, drawTitle:          function (t, e, a, o) {
          if (e.title.length) {
            a.textAlign = e._titleAlign, a.textBaseline = "top";
            var n = i.color(e.titleColor);
            a.fillStyle = n.alpha(o * n.alpha()).rgbString(), a.font = i.fontString(e.titleFontSize, e._titleFontStyle, e._titleFontFamily), i.each(e.title, function (i, o) {
              a.fillText(i, t.x, t.y), t.y += e.titleFontSize + e.titleSpacing, o + 1 === e.title.length && (t.y += e.titleMarginBottom - e.titleSpacing)
            })
          }
        }, drawBody:           function (t, e, a, o) {
          a.textAlign = e._bodyAlign, a.textBaseline = "top";
          var n = i.color(e.bodyColor);
          a.fillStyle = n.alpha(o * n.alpha()).rgbString(), a.font = i.fontString(e.bodyFontSize, e._bodyFontStyle, e._bodyFontFamily), i.each(e.beforeBody, function (i) {
            a.fillText(i, t.x, t.y), t.y += e.bodyFontSize + e.bodySpacing
          }), i.each(e.body, function (n, r) {
            "single" !== this._options.tooltips.mode && (a.fillStyle = i.color(e.legendColorBackground).alpha(o).rgbaString(), a.fillRect(t.x, t.y, e.bodyFontSize, e.bodyFontSize), a.strokeStyle = i.color(e.labelColors[r].borderColor).alpha(o).rgbaString(), a.strokeRect(t.x, t.y, e.bodyFontSize, e.bodyFontSize), a.fillStyle = i.color(e.labelColors[r].backgroundColor).alpha(o).rgbaString(), a.fillRect(t.x + 1, t.y + 1, e.bodyFontSize - 2, e.bodyFontSize - 2), a.fillStyle = i.color(e.bodyColor).alpha(o).rgbaString()), a.fillText(n, t.x + ("single" !== this._options.tooltips.mode ? e.bodyFontSize + 2 : 0), t.y), t.y += e.bodyFontSize + e.bodySpacing
          }, this), i.each(e.afterBody, function (i) {
            a.fillText(i, t.x, t.y), t.y += e.bodyFontSize
          }), t.y -= e.bodySpacing
        }, drawFooter:         function (t, e, a, o) {
          if (e.footer.length) {
            t.y += e.footerMarginTop, a.textAlign = e._footerAlign, a.textBaseline = "top";
            var n = i.color(e.footerColor);
            a.fillStyle = n.alpha(o * n.alpha()).rgbString(), a.font = i.fontString(e.footerFontSize, e._footerFontStyle, e._footerFontFamily), i.each(e.footer, function (i) {
              a.fillText(i, t.x, t.y), t.y += e.footerFontSize + e.footerSpacing
            })
          }
        }, draw:               function () {
          var t = this._chart.ctx, e = this._view;
          if (0 !== e.opacity) {
            var a = e.caretPadding, o = this.getTooltipSize(e), n = {x: e.x, y: e.y},
                r                                                 = Math.abs(e.opacity < .001) ? 0 : e.opacity;
            if (this._options.tooltips.enabled) {
              var s = i.color(e.backgroundColor);
              t.fillStyle = s.alpha(r * s.alpha()).rgbString(), i.drawRoundedRectangle(t, n.x, n.y, o.width, o.height, e.cornerRadius), t.fill(), this.drawCaret(n, o, r, a), n.x += e.xPadding, n.y += e.yPadding, this.drawTitle(n, e, t, r), this.drawBody(n, e, t, r), this.drawFooter(n, e, t, r)
            }
          }
        }
      })
    }
  }, {}], 34:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t, e) {
      var i = t.helpers, a = t.defaults.global;
      a.elements.arc = {
        backgroundColor: a.defaultColor,
        borderColor:     "#fff",
        borderWidth:     2
      }, t.elements.Arc = t.Element.extend({
        inLabelRange:       function (t) {
          var e = this._view;
          return !!e && Math.pow(t - e.x, 2) < Math.pow(e.radius + e.hoverRadius, 2)
        }, inRange:         function (t, e) {
          var a = this._view;
          if (a) {
            for (var o = i.getAngleFromPoint(a, {
              x: t,
              y: e
            }), n      = o.angle, r = o.distance, s = a.startAngle, l = a.endAngle; s > l;) l += 2 * Math.PI;
            for (; n > l;) n -= 2 * Math.PI;
            for (; s > n;) n += 2 * Math.PI;
            var h = n >= s && l >= n, d = r >= a.innerRadius && r <= a.outerRadius;
            return h && d
          }
          return !1
        }, tooltipPosition: function () {
          var t = this._view, e = t.startAngle + (t.endAngle - t.startAngle) / 2,
              i                 = (t.outerRadius - t.innerRadius) / 2 + t.innerRadius;
          return {x: t.x + Math.cos(e) * i, y: t.y + Math.sin(e) * i}
        }, draw:            function () {
          var t = this._chart.ctx, e = this._view, i = e.startAngle, a = e.endAngle;
          t.beginPath(), t.arc(e.x, e.y, e.outerRadius, i, a), t.arc(e.x, e.y, e.innerRadius, a, i, !0), t.closePath(), t.strokeStyle = e.borderColor, t.lineWidth = e.borderWidth, t.fillStyle = e.backgroundColor, t.fill(), t.lineJoin = "bevel", e.borderWidth && t.stroke()
        }
      })
    }
  }, {}], 35:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = t.defaults.global;
      t.defaults.global.elements.line = {
        tension:          .4,
        backgroundColor:  i.defaultColor,
        borderWidth:      3,
        borderColor:      i.defaultColor,
        borderCapStyle:   "butt",
        borderDash:       [],
        borderDashOffset: 0,
        borderJoinStyle:  "miter",
        fill:             !0
      }, t.elements.Line = t.Element.extend({
        lineToNextPoint: function (t, e, i, a, o) {
          var n = this._chart.ctx;
          e._view.skip ? a.call(this, t, e, i) : t._view.skip ? o.call(this, t, e, i) : 0 === e._view.tension ? n.lineTo(e._view.x, e._view.y) : n.bezierCurveTo(t._view.controlPointNextX, t._view.controlPointNextY, e._view.controlPointPreviousX, e._view.controlPointPreviousY, e._view.x, e._view.y)
        }, draw:         function () {
          function t(t) {
            r._view.skip || s._view.skip ? t && n.lineTo(a._view.scaleZero.x, a._view.scaleZero.y) : n.bezierCurveTo(s._view.controlPointNextX, s._view.controlPointNextY, r._view.controlPointPreviousX, r._view.controlPointPreviousY, r._view.x, r._view.y)
          }

          var a = this, o = this._view, n = this._chart.ctx, r = this._children[0],
              s                                                = this._children[this._children.length - 1];
          n.save(), this._children.length > 0 && o.fill && (n.beginPath(), e.each(this._children, function (t, i) {
            var a = e.previousItem(this._children, i), r = e.nextItem(this._children, i);
            0 === i ? (this._loop ? n.moveTo(o.scaleZero.x, o.scaleZero.y) : n.moveTo(t._view.x, o.scaleZero), t._view.skip ? this._loop || n.moveTo(r._view.x, this._view.scaleZero) : n.lineTo(t._view.x, t._view.y)) : this.lineToNextPoint(a, t, r, function (t, e, i) {
              this._loop ? n.lineTo(this._view.scaleZero.x, this._view.scaleZero.y) : (n.lineTo(t._view.x, this._view.scaleZero), n.moveTo(i._view.x, this._view.scaleZero))
            }, function (t, e) {
              n.lineTo(e._view.x, e._view.y)
            })
          }, this), this._loop ? t(!0) : (n.lineTo(this._children[this._children.length - 1]._view.x, o.scaleZero), n.lineTo(this._children[0]._view.x, o.scaleZero)), n.fillStyle = o.backgroundColor || i.defaultColor, n.closePath(), n.fill());
          var l = i.elements.line;
          n.lineCap = o.borderCapStyle || l.borderCapStyle, n.setLineDash && n.setLineDash(o.borderDash || l.borderDash), n.lineDashOffset = o.borderDashOffset || l.borderDashOffset, n.lineJoin = o.borderJoinStyle || l.borderJoinStyle, n.lineWidth = o.borderWidth || l.borderWidth, n.strokeStyle = o.borderColor || i.defaultColor, n.beginPath(), e.each(this._children, function (t, i) {
            var a = e.previousItem(this._children, i), o = e.nextItem(this._children, i);
            0 === i ? n.moveTo(t._view.x, t._view.y) : this.lineToNextPoint(a, t, o, function (t, e, i) {
              n.moveTo(i._view.x, i._view.y)
            }, function (t, e) {
              n.moveTo(e._view.x, e._view.y)
            })
          }, this), this._loop && this._children.length > 0 && t(), n.stroke(), n.restore()
        }
      })
    }
  }, {}], 36:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = t.defaults.global, a = i.defaultColor;
      i.elements.point = {
        radius:           3,
        pointStyle:       "circle",
        backgroundColor:  a,
        borderWidth:      1,
        borderColor:      a,
        hitRadius:        1,
        hoverRadius:      4,
        hoverBorderWidth: 1
      }, t.elements.Point = t.Element.extend({
        inRange:            function (t, e) {
          var i = this._view;
          return !!i && Math.pow(t - i.x, 2) + Math.pow(e - i.y, 2) < Math.pow(i.hitRadius + i.radius, 2)
        }, inLabelRange:    function (t) {
          var e = this._view;
          return !!e && Math.pow(t - e.x, 2) < Math.pow(e.radius + e.hitRadius, 2)
        }, tooltipPosition: function () {
          var t = this._view;
          return {x: t.x, y: t.y, padding: t.radius + t.borderWidth}
        }, draw:            function () {
          var t, o, n, r, s, l, h = this._view, d = this._chart.ctx, c = h.pointStyle, u = h.radius, f = h.x, g = h.y;
          if (!h.skip) {
            if ("object" == typeof c && ("[object HTMLImageElement]" === (t = c.toString()) || "[object HTMLCanvasElement]" === t)) return void d.drawImage(c, f - c.width / 2, g - c.height / 2);
            if (!(isNaN(u) || 0 >= u)) {
              switch (d.strokeStyle = h.borderColor || a, d.lineWidth = e.getValueOrDefault(h.borderWidth, i.elements.point.borderWidth), d.fillStyle = h.backgroundColor || a, c) {
                default:
                  d.beginPath(), d.arc(f, g, u, 0, 2 * Math.PI), d.closePath(), d.fill();
                  break;
                case"triangle":
                  d.beginPath(), o = 3 * u / Math.sqrt(3), s = o * Math.sqrt(3) / 2, d.moveTo(f - o / 2, g + s / 3), d.lineTo(f + o / 2, g + s / 3), d.lineTo(f, g - 2 * s / 3), d.closePath(), d.fill();
                  break;
                case"rect":
                  l = 1 / Math.SQRT2 * u, d.fillRect(f - l, g - l, 2 * l, 2 * l), d.strokeRect(f - l, g - l, 2 * l, 2 * l);
                  break;
                case"rectRot":
                  d.translate(f, g), d.rotate(Math.PI / 4), l = 1 / Math.SQRT2 * u, d.fillRect(-l, -l, 2 * l, 2 * l), d.strokeRect(-l, -l, 2 * l, 2 * l), d.setTransform(1, 0, 0, 1, 0, 0);
                  break;
                case"cross":
                  d.beginPath(), d.moveTo(f, g + u), d.lineTo(f, g - u), d.moveTo(f - u, g), d.lineTo(f + u, g), d.closePath();
                  break;
                case"crossRot":
                  d.beginPath(), n = Math.cos(Math.PI / 4) * u, r = Math.sin(Math.PI / 4) * u, d.moveTo(f - n, g - r), d.lineTo(f + n, g + r), d.moveTo(f - n, g + r), d.lineTo(f + n, g - r), d.closePath();
                  break;
                case"star":
                  d.beginPath(), d.moveTo(f, g + u), d.lineTo(f, g - u), d.moveTo(f - u, g), d.lineTo(f + u, g), n = Math.cos(Math.PI / 4) * u, r = Math.sin(Math.PI / 4) * u, d.moveTo(f - n, g - r), d.lineTo(f + n, g + r), d.moveTo(f - n, g + r), d.lineTo(f + n, g - r), d.closePath();
                  break;
                case"line":
                  d.beginPath(), d.moveTo(f - u, g), d.lineTo(f + u, g), d.closePath();
                  break;
                case"dash":
                  d.beginPath(), d.moveTo(f, g), d.lineTo(f + u, g), d.closePath()
              }
              d.stroke()
            }
          }
        }
      })
    }
  }, {}], 37:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = (t.helpers, t.defaults.global);
      e.elements.rectangle = {
        backgroundColor: e.defaultColor,
        borderWidth:     0,
        borderColor:     e.defaultColor,
        borderSkipped:   "bottom"
      }, t.elements.Rectangle = t.Element.extend({
        draw:               function () {
          function t(t) {
            return l[(d + t) % 4]
          }

          var e = this._chart.ctx, i = this._view, a = i.width / 2, o = i.x - a, n = i.x + a,
              r                                                                    = i.base - (i.base - i.y), s = i.borderWidth / 2;
          i.borderWidth && (o += s, n -= s, r += s), e.beginPath(), e.fillStyle = i.backgroundColor, e.strokeStyle = i.borderColor, e.lineWidth = i.borderWidth;
          var l = [[o, i.base], [o, r], [n, r], [n, i.base]], h = ["bottom", "left", "top", "right"],
              d                                                 = h.indexOf(i.borderSkipped, 0);
          -1 === d && (d = 0), e.moveTo.apply(e, t(0));
          for (var c = 1; 4 > c; c++) e.lineTo.apply(e, t(c));
          e.fill(), i.borderWidth && e.stroke()
        }, height:          function () {
          var t = this._view;
          return t.base - t.y
        }, inRange:         function (t, e) {
          var i = this._view;
          return !!i && (i.y < i.base ? t >= i.x - i.width / 2 && t <= i.x + i.width / 2 && e >= i.y && e <= i.base : t >= i.x - i.width / 2 && t <= i.x + i.width / 2 && e >= i.base && e <= i.y)
        }, inLabelRange:    function (t) {
          var e = this._view;
          return !!e && (t >= e.x - e.width / 2 && t <= e.x + e.width / 2)
        }, tooltipPosition: function () {
          var t = this._view;
          return {x: t.x, y: t.y}
        }
      })
    }
  }, {}], 38:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = {position: "bottom"}, a = t.Scale.extend({
        determineDataLimits: function () {
          this.minIndex = 0, this.maxIndex = this.chart.data.labels.length - 1;
          var t;
          void 0 !== this.options.ticks.min && (t = e.indexOf(this.chart.data.labels, this.options.ticks.min), this.minIndex = -1 !== t ? t : this.minIndex), void 0 !== this.options.ticks.max && (t = e.indexOf(this.chart.data.labels, this.options.ticks.max), this.maxIndex = -1 !== t ? t : this.maxIndex), this.min = this.chart.data.labels[this.minIndex], this.max = this.chart.data.labels[this.maxIndex]
        }, buildTicks:       function (t) {
          this.ticks = 0 === this.minIndex && this.maxIndex === this.chart.data.labels.length - 1 ? this.chart.data.labels : this.chart.data.labels.slice(this.minIndex, this.maxIndex + 1)
        }, getLabelForIndex: function (t, e) {
          return this.ticks[t]
        }, getPixelForValue: function (t, e, i, a) {
          var o = Math.max(this.maxIndex + 1 - this.minIndex - (this.options.gridLines.offsetGridLines ? 0 : 1), 1);
          if (this.isHorizontal()) {
            var n = this.width - (this.paddingLeft + this.paddingRight), r = n / o,
                s                                                          = r * (e - this.minIndex) + this.paddingLeft;
            return this.options.gridLines.offsetGridLines && a && (s += r / 2), this.left + Math.round(s)
          }
          var l = this.height - (this.paddingTop + this.paddingBottom), h = l / o,
              d                                                           = h * (e - this.minIndex) + this.paddingTop;
          return this.options.gridLines.offsetGridLines && a && (d += h / 2), this.top + Math.round(d)
        }, getPixelForTick:  function (t, e) {
          return this.getPixelForValue(this.ticks[t], t + this.minIndex, null, e)
        }, getValueForPixel: function (t) {
          var i = Math.max(this.ticks.length - (this.options.gridLines.offsetGridLines ? 0 : 1), 1),
              a = this.isHorizontal(),
              o = a ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom),
              n = o / i;
          return this.options.gridLines.offsetGridLines && (t -= n / 2), t -= a ? this.paddingLeft : this.paddingTop, 0 >= t ? 0 : Math.round(t / n)
        }
      });
      t.scaleService.registerScaleType("category", a, i)
    }
  }, {}], 39:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = {
        position: "left", ticks: {
          callback: function (t, i, a) {
            var o = a.length > 3 ? a[2] - a[1] : a[1] - a[0];
            Math.abs(o) > 1 && t !== Math.floor(t) && (o = t - Math.floor(t));
            var n = e.log10(Math.abs(o)), r = "";
            if (0 !== t) {
              var s = -1 * Math.floor(n);
              s = Math.max(Math.min(s, 20), 0), r = t.toFixed(s)
            } else r = "0";
            return r
          }
        }
      }, a  = t.Scale.extend({
        determineDataLimits:     function () {
          function t(t) {
            return l ? t.xAxisID === i.id : t.yAxisID === i.id
          }

          var i = this, a = i.options, o = a.ticks, n = i.chart, r = n.data, s = r.datasets, l = i.isHorizontal();
          if (i.min = null, i.max = null, a.stacked) {
            var h = {}, d = !1, c = !1;
            e.each(s, function (o, r) {
              var s = n.getDatasetMeta(r);
              void 0 === h[s.type] && (h[s.type] = {positiveValues: [], negativeValues: []});
              var l = h[s.type].positiveValues, u = h[s.type].negativeValues;
              n.isDatasetVisible(r) && t(s) && e.each(o.data, function (t, e) {
                var o = +i.getRightValue(t);
                isNaN(o) || s.data[e].hidden || (l[e] = l[e] || 0, u[e] = u[e] || 0, a.relativePoints ? l[e] = 100 : 0 > o ? (c = !0, u[e] += o) : (d = !0, l[e] += o))
              })
            }), e.each(h, function (t) {
              var a = t.positiveValues.concat(t.negativeValues), o = e.min(a), n = e.max(a);
              i.min = null === i.min ? o : Math.min(i.min, o), i.max = null === i.max ? n : Math.max(i.max, n)
            })
          } else e.each(s, function (a, o) {
            var r = n.getDatasetMeta(o);
            n.isDatasetVisible(o) && t(r) && e.each(a.data, function (t, e) {
              var a = +i.getRightValue(t);
              isNaN(a) || r.data[e].hidden || (null === i.min ? i.min = a : a < i.min && (i.min = a), null === i.max ? i.max = a : a > i.max && (i.max = a))
            })
          });
          if (o.beginAtZero) {
            var u = e.sign(i.min), f = e.sign(i.max);
            0 > u && 0 > f ? i.max = 0 : u > 0 && f > 0 && (i.min = 0)
          }
          void 0 !== o.min ? i.min = o.min : void 0 !== o.suggestedMin && (i.min = Math.min(i.min, o.suggestedMin)), void 0 !== o.max ? i.max = o.max : void 0 !== o.suggestedMax && (i.max = Math.max(i.max, o.suggestedMax)), i.min === i.max && (i.max++, o.beginAtZero || i.min--)
        }, buildTicks:           function () {
          var i, a = this, o = a.options, n = o.ticks, r = e.getValueOrDefault, s = a.isHorizontal(), l = a.ticks = [];
          if (s) i = Math.min(n.maxTicksLimit ? n.maxTicksLimit : 11, Math.ceil(a.width / 50)); else {
            var h = r(n.fontSize, t.defaults.global.defaultFontSize);
            i     = Math.min(n.maxTicksLimit ? n.maxTicksLimit : 11, Math.ceil(a.height / (2 * h)))
          }
          i = Math.max(2, i);
          var d;
          if (n.fixedStepSize && n.fixedStepSize > 0 || n.stepSize && n.stepSize > 0) d = r(n.fixedStepSize, n.stepSize); else {
            var u = e.niceNum(a.max - a.min, !1);
            d     = e.niceNum(u / (i - 1), !0)
          }
          var f = Math.floor(a.min / d) * d, g = Math.ceil(a.max / d) * d, p = (g - f) / d;
          p = e.almostEquals(p, Math.round(p), d / 1e3) ? Math.round(p) : Math.ceil(p), l.push(void 0 !== n.min ? n.min : f);
          for (var m = 1; p > m; ++m) l.push(f + m * d);
          l.push(void 0 !== n.max ? n.max : g), s || l.reverse(), a.max = e.max(l), a.min = e.min(l), n.reverse ? (l.reverse(), a.start = a.max, a.end = a.min) : (a.start = a.min, a.end = a.max)
        }, getLabelForIndex:     function (t, e) {
          return +this.getRightValue(this.chart.data.datasets[e].data[t])
        }, convertTicksToLabels: function () {
          var e = this;
          e.ticksAsNumbers = e.ticks.slice(), e.zeroLineIndex = e.ticks.indexOf(0), t.Scale.prototype.convertTicksToLabels.call(e)
        }, getPixelForValue:     function (t, e, i, a) {
          var o, n, r = this, s = r.paddingLeft, l = r.paddingBottom, h = r.start, d = +r.getRightValue(t),
              c                                                                      = r.end - h;
          return r.isHorizontal() ? (n = r.width - (s + r.paddingRight), o = r.left + n / c * (d - h), Math.round(o + s)) : (n = r.height - (r.paddingTop + l), o = r.bottom - l - n / c * (d - h), Math.round(o))
        }, getValueForPixel:     function (t) {
          var e = this, i = e.isHorizontal(), a = e.paddingLeft, o = e.paddingBottom,
              n                                                    = i ? e.width - (a + e.paddingRight) : e.height - (e.paddingTop + o),
              r                                                    = (i ? t - e.left - a : e.bottom - o - t) / n;
          return e.start + (e.end - e.start) * r
        }, getPixelForTick:      function (t, e) {
          return this.getPixelForValue(this.ticksAsNumbers[t], null, null, e)
        }
      });
      t.scaleService.registerScaleType("linear", a, i)
    }
  }, {}], 40:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = {
        position: "left", ticks: {
          callback: function (t, i, a) {
            var o = t / Math.pow(10, Math.floor(e.log10(t)));
            return 1 === o || 2 === o || 5 === o || 0 === i || i === a.length - 1 ? t.toExponential() : ""
          }
        }
      }, a  = t.Scale.extend({
        determineDataLimits:     function () {
          function t(t) {
            return h ? t.xAxisID === i.id : t.yAxisID === i.id
          }

          var i = this, a = i.options, o = a.ticks, n = i.chart, r = n.data, s = r.datasets, l = e.getValueOrDefault,
              h                                                                                = i.isHorizontal();
          if (i.min = null, i.max = null, a.stacked) {
            var d = {};
            e.each(s, function (o, r) {
              var s = n.getDatasetMeta(r);
              n.isDatasetVisible(r) && t(s) && (void 0 === d[s.type] && (d[s.type] = []), e.each(o.data, function (t, e) {
                var o = d[s.type], n = +i.getRightValue(t);
                isNaN(n) || s.data[e].hidden || (o[e] = o[e] || 0, a.relativePoints ? o[e] = 100 : o[e] += n)
              }))
            }), e.each(d, function (t) {
              var a = e.min(t), o = e.max(t);
              i.min = null === i.min ? a : Math.min(i.min, a), i.max = null === i.max ? o : Math.max(i.max, o)
            })
          } else e.each(s, function (a, o) {
            var r = n.getDatasetMeta(o);
            n.isDatasetVisible(o) && t(r) && e.each(a.data, function (t, e) {
              var a = +i.getRightValue(t);
              isNaN(a) || r.data[e].hidden || (null === i.min ? i.min = a : a < i.min && (i.min = a), null === i.max ? i.max = a : a > i.max && (i.max = a))
            })
          });
          i.min = l(o.min, i.min), i.max = l(o.max, i.max), i.min === i.max && (0 !== i.min && null !== i.min ? (i.min = Math.pow(10, Math.floor(e.log10(i.min)) - 1), i.max = Math.pow(10, Math.floor(e.log10(i.max)) + 1)) : (i.min = 1, i.max = 10))
        }, buildTicks:           function () {
          for (var t = this, i = t.options, a = i.ticks, o = e.getValueOrDefault, n = t.ticks = [], r = o(a.min, Math.pow(10, Math.floor(e.log10(t.min)))); r < t.max;) {
            n.push(r);
            var s = Math.floor(e.log10(r)), l = Math.floor(r / Math.pow(10, s)) + 1;
            10 === l && (l = 1, ++s), r = l * Math.pow(10, s)
          }
          var h = o(a.max, r);
          n.push(h), t.isHorizontal() || n.reverse(), t.max = e.max(n), t.min = e.min(n), a.reverse ? (n.reverse(), t.start = t.max, t.end = t.min) : (t.start = t.min, t.end = t.max)
        }, convertTicksToLabels: function () {
          this.tickValues = this.ticks.slice(), t.Scale.prototype.convertTicksToLabels.call(this)
        }, getLabelForIndex:     function (t, e) {
          return +this.getRightValue(this.chart.data.datasets[e].data[t])
        }, getPixelForTick:      function (t, e) {
          return this.getPixelForValue(this.tickValues[t], null, null, e)
        }, getPixelForValue:     function (t, i, a, o) {
          var n, r, s = this, l = s.start, h = +s.getRightValue(t), d = e.log10(s.end) - e.log10(l), c = s.paddingTop,
              u                                                                                        = s.paddingBottom, f                                                                   = s.paddingLeft;
          return s.isHorizontal() ? 0 === h ? r = s.left + f : (n = s.width - (f + s.paddingRight), r = s.left + n / d * (e.log10(h) - e.log10(l)), r += f) : 0 === h ? r = s.top + c : (n = s.height - (c + u), r = s.bottom - u - n / d * (e.log10(h) - e.log10(l))), r
        }, getValueForPixel:     function (t) {
          var i, a, o = this, n = e.log10(o.end) - e.log10(o.start);
          return o.isHorizontal() ? (a = o.width - (o.paddingLeft + o.paddingRight), i = o.start * Math.pow(10, (t - o.left - o.paddingLeft) * n / a)) : (a = o.height - (o.paddingTop + o.paddingBottom), i = Math.pow(10, (o.bottom - o.paddingBottom - t) * n / a) / o.start), i
        }
      });
      t.scaleService.registerScaleType("logarithmic", a, i)
    }
  }, {}], 41:                                             [function (t, e, i) {
    "use strict";
    e.exports = function (t) {
      var e = t.helpers, i = t.defaults.global, a = {
        display:     !0,
        animate:     !0,
        lineArc:     !1,
        position:    "chartArea",
        angleLines:  {display: !0, color: "rgba(0, 0, 0, 0.1)", lineWidth: 1},
        ticks:       {
          showLabelBackdrop: !0,
          backdropColor:     "rgba(255,255,255,0.75)",
          backdropPaddingY:  2,
          backdropPaddingX:  2
        },
        pointLabels: {
          fontSize: 10, callback: function (t) {
            return t
          }
        }
      }, o  = t.Scale.extend({
        getValueCount:                    function () {
          return this.chart.data.labels.length
        }, setDimensions:                 function () {
          var t = this.options;
          this.width = this.maxWidth, this.height = this.maxHeight, this.xCenter = Math.round(this.width / 2), this.yCenter = Math.round(this.height / 2);
          var a            = e.min([this.height, this.width]),
              o            = e.getValueOrDefault(t.ticks.fontSize, i.defaultFontSize);
          this.drawingArea = t.display ? a / 2 - (o / 2 + t.ticks.backdropPaddingY) : a / 2
        }, determineDataLimits:           function () {
          if (this.min = null, this.max = null, e.each(this.chart.data.datasets, function (t, i) {
              if (this.chart.isDatasetVisible(i)) {
                var a = this.chart.getDatasetMeta(i);
                e.each(t.data, function (t, e) {
                  var i = +this.getRightValue(t);
                  isNaN(i) || a.data[e].hidden || (null === this.min ? this.min = i : i < this.min && (this.min = i), null === this.max ? this.max = i : i > this.max && (this.max = i))
                }, this)
              }
            }, this), this.options.ticks.beginAtZero) {
            var t = e.sign(this.min), i = e.sign(this.max);
            0 > t && 0 > i ? this.max = 0 : t > 0 && i > 0 && (this.min = 0)
          }
          void 0 !== this.options.ticks.min ? this.min = this.options.ticks.min : void 0 !== this.options.ticks.suggestedMin && (this.min = Math.min(this.min, this.options.ticks.suggestedMin)), void 0 !== this.options.ticks.max ? this.max = this.options.ticks.max : void 0 !== this.options.ticks.suggestedMax && (this.max = Math.max(this.max, this.options.ticks.suggestedMax)), this.min === this.max && (this.min--, this.max++)
        }, buildTicks:                    function () {
          this.ticks                                                               = [];
          var t                                                                    = e.getValueOrDefault(this.options.ticks.fontSize, i.defaultFontSize),
              a                                                                    = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * t)));
          a                                                                        = Math.max(2, a);
          var o                                                                    = e.niceNum(this.max - this.min, !1), n = e.niceNum(o / (a - 1), !0),
              r = Math.floor(this.min / n) * n, s = Math.ceil(this.max / n) * n, l = Math.ceil((s - r) / n);
          this.ticks.push(void 0 !== this.options.ticks.min ? this.options.ticks.min : r);
          for (var h = 1; l > h; ++h) this.ticks.push(r + h * n);
          this.ticks.push(void 0 !== this.options.ticks.max ? this.options.ticks.max : s), this.max = e.max(this.ticks), this.min = e.min(this.ticks), this.options.ticks.reverse ? (this.ticks.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), this.zeroLineIndex = this.ticks.indexOf(0)
        }, convertTicksToLabels:          function () {
          t.Scale.prototype.convertTicksToLabels.call(this), this.pointLabels = this.chart.data.labels.map(this.options.pointLabels.callback, this)
        }, getLabelForIndex:              function (t, e) {
          return +this.getRightValue(this.chart.data.datasets[e].data[t])
        }, fit:                           function () {
          var t, a, o, n, r, s, l, h, d, c, u, f, g                   = this.options.pointLabels,
              p                                                       = e.getValueOrDefault(g.fontSize, i.defaultFontSize),
              m                                                       = e.getValueOrDefault(g.fontStyle, i.defaultFontStyle),
              b                                                       = e.getValueOrDefault(g.fontFamily, i.defaultFontFamily),
              v                                                       = e.fontString(p, m, b),
              x = e.min([this.height / 2 - p - 5, this.width / 2]), y = this.width,
              k                                                       = 0;
          for (this.ctx.font = v, a = 0; a < this.getValueCount(); a++) t = this.getPointPosition(a, x), o = this.ctx.measureText(this.pointLabels[a] ? this.pointLabels[a] : "").width + 5, 0 === a || a === this.getValueCount() / 2 ? (n = o / 2, t.x + n > y && (y = t.x + n, r = a), t.x - n < k && (k = t.x - n, l = a)) : a < this.getValueCount() / 2 ? t.x + o > y && (y = t.x + o, r = a) : a > this.getValueCount() / 2 && t.x - o < k && (k = t.x - o, l = a);
          d = k, c = Math.ceil(y - this.width), s = this.getIndexAngle(r), h = this.getIndexAngle(l), u = c / Math.sin(s + Math.PI / 2), f = d / Math.sin(h + Math.PI / 2), u = e.isNumber(u) ? u : 0, f = e.isNumber(f) ? f : 0, this.drawingArea = Math.round(x - (f + u) / 2), this.setCenterPoint(f, u)
        }, setCenterPoint:                function (t, e) {
          var i = this.width - e - this.drawingArea, a = t + this.drawingArea;
          this.xCenter = Math.round((a + i) / 2 + this.left), this.yCenter = Math.round(this.height / 2 + this.top)
        }, getIndexAngle:                 function (t) {
          return t * (2 * Math.PI / this.getValueCount()) - Math.PI / 2
        }, getDistanceFromCenterForValue: function (t) {
          if (null === t) return 0;
          var e = this.drawingArea / (this.max - this.min);
          return this.options.reverse ? (this.max - t) * e : (t - this.min) * e
        }, getPointPosition:              function (t, e) {
          var i = this.getIndexAngle(t);
          return {x: Math.round(Math.cos(i) * e) + this.xCenter, y: Math.round(Math.sin(i) * e) + this.yCenter}
        }, getPointPositionForValue:      function (t, e) {
          return this.getPointPosition(t, this.getDistanceFromCenterForValue(e))
        }, getBasePosition:               function () {
          var t = this, e = t.min, i = t.max;
          return t.getPointPositionForValue(0, t.beginAtZero ? 0 : 0 > e && 0 > i ? i : e > 0 && i > 0 ? e : 0)
        }, draw:                          function () {
          if (this.options.display) {
            var t = this.ctx;
            if (e.each(this.ticks, function (a, o) {
                if (o > 0 || this.options.reverse) {
                  var n = this.getDistanceFromCenterForValue(this.ticks[o]), r = this.yCenter - n;
                  if (this.options.gridLines.display) if (t.strokeStyle = this.options.gridLines.color, t.lineWidth = this.options.gridLines.lineWidth, this.options.lineArc) t.beginPath(), t.arc(this.xCenter, this.yCenter, n, 0, 2 * Math.PI), t.closePath(), t.stroke(); else {
                    t.beginPath();
                    for (var s = 0; s < this.getValueCount(); s++) {
                      var l = this.getPointPosition(s, this.getDistanceFromCenterForValue(this.ticks[o]));
                      0 === s ? t.moveTo(l.x, l.y) : t.lineTo(l.x, l.y)
                    }
                    t.closePath(), t.stroke()
                  }
                  if (this.options.ticks.display) {
                    var h = e.getValueOrDefault(this.options.ticks.fontColor, i.defaultFontColor),
                        d = e.getValueOrDefault(this.options.ticks.fontSize, i.defaultFontSize),
                        c = e.getValueOrDefault(this.options.ticks.fontStyle, i.defaultFontStyle),
                        u = e.getValueOrDefault(this.options.ticks.fontFamily, i.defaultFontFamily),
                        f = e.fontString(d, c, u);
                    if (t.font = f, this.options.ticks.showLabelBackdrop) {
                      var g = t.measureText(a).width;
                      t.fillStyle = this.options.ticks.backdropColor, t.fillRect(this.xCenter - g / 2 - this.options.ticks.backdropPaddingX, r - d / 2 - this.options.ticks.backdropPaddingY, g + 2 * this.options.ticks.backdropPaddingX, d + 2 * this.options.ticks.backdropPaddingY)
                    }
                    t.textAlign = "center", t.textBaseline = "middle", t.fillStyle = h, t.fillText(a, this.xCenter, r)
                  }
                }
              }, this), !this.options.lineArc) {
              t.lineWidth = this.options.angleLines.lineWidth, t.strokeStyle = this.options.angleLines.color;
              for (var a = this.getValueCount() - 1; a >= 0; a--) {
                if (this.options.angleLines.display) {
                  var o = this.getPointPosition(a, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max));
                  t.beginPath(), t.moveTo(this.xCenter, this.yCenter), t.lineTo(o.x, o.y), t.stroke(), t.closePath()
                }
                var n = this.getPointPosition(a, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max) + 5),
                    r = e.getValueOrDefault(this.options.pointLabels.fontColor, i.defaultFontColor),
                    s = e.getValueOrDefault(this.options.pointLabels.fontSize, i.defaultFontSize),
                    l = e.getValueOrDefault(this.options.pointLabels.fontStyle, i.defaultFontStyle),
                    h = e.getValueOrDefault(this.options.pointLabels.fontFamily, i.defaultFontFamily),
                    d = e.fontString(s, l, h);
                t.font = d, t.fillStyle = r;
                var c = this.pointLabels.length, u = this.pointLabels.length / 2, f = u / 2, g = f > a || a > c - f,
                    p                                                                          = a === f || a === c - f;
                t.textAlign = 0 === a ? "center" : a === u ? "center" : u > a ? "left" : "right", t.textBaseline = p ? "middle" : g ? "bottom" : "top", t.fillText(this.pointLabels[a] ? this.pointLabels[a] : "", n.x, n.y)
              }
            }
          }
        }
      });
      t.scaleService.registerScaleType("radialLinear", o, a)
    }
  }, {}], 42:                                             [function (t, e, i) {
    "use strict";
    var a = t("moment");
    a = "function" == typeof a ? a : window.moment, e.exports = function (t) {
      var e = t.helpers, i = {
        units: [{name: "millisecond", steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]}, {
          name:  "second",
          steps: [1, 2, 5, 10, 30]
        }, {name: "minute", steps: [1, 2, 5, 10, 30]}, {name: "hour", steps: [1, 2, 3, 6, 12]}, {
          name:  "day",
          steps: [1, 2, 5]
        }, {name: "week", maxStep: 4}, {name: "month", maxStep: 3}, {name: "quarter", maxStep: 4}, {
          name:    "year",
          maxStep: !1
        }]
      }, o  = {
        position: "bottom",
        time:     {
          parser:         !1,
          format:         !1,
          unit:           !1,
          round:          !1,
          displayFormat:  !1,
          isoWeekday:     !1,
          displayFormats: {
            millisecond: "h:mm:ss.SSS a",
            second:      "h:mm:ss a",
            minute:      "h:mm:ss a",
            hour:        "MMM D, hA",
            day:         "ll",
            week:        "ll",
            month:       "MMM YYYY",
            quarter:     "[Q]Q - YYYY",
            year:        "YYYY"
          }
        },
        ticks:    {autoSkip: !1}
      }, n  = t.Scale.extend({
        initialize:              function () {
          if (!a) throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com");
          t.Scale.prototype.initialize.call(this)
        }, getLabelMoment:       function (t, e) {
          return this.labelMoments[t][e]
        }, getMomentStartOf:     function (t) {
          return "week" === this.options.time.unit && !1 !== this.options.time.isoWeekday ? t.clone().startOf("isoWeek").isoWeekday(this.options.time.isoWeekday) : t.clone().startOf(this.tickUnit)
        }, determineDataLimits:  function () {
          this.labelMoments = [];
          var t             = [];
          this.chart.data.labels && this.chart.data.labels.length > 0 ? (e.each(this.chart.data.labels, function (e, i) {
            var a = this.parseTime(e);
            a.isValid() && (this.options.time.round && a.startOf(this.options.time.round), t.push(a))
          }, this), this.firstTick = a.min.call(this, t), this.lastTick = a.max.call(this, t)) : (this.firstTick = null, this.lastTick = null), e.each(this.chart.data.datasets, function (i, o) {
            var n = [], r = this.chart.isDatasetVisible(o);
            "object" == typeof i.data[0] && null !== i.data[0] ? e.each(i.data, function (t, e) {
              var i = this.parseTime(this.getRightValue(t));
              i.isValid() && (this.options.time.round && i.startOf(this.options.time.round), n.push(i), r && (this.firstTick = null !== this.firstTick ? a.min(this.firstTick, i) : i, this.lastTick = null !== this.lastTick ? a.max(this.lastTick, i) : i))
            }, this) : n = t, this.labelMoments.push(n)
          }, this), this.options.time.min && (this.firstTick = this.parseTime(this.options.time.min)), this.options.time.max && (this.lastTick = this.parseTime(this.options.time.max)), this.firstTick = (this.firstTick || a()).clone(), this.lastTick = (this.lastTick || a()).clone()
        }, buildTicks:           function (a) {
          this.ctx.save();
          var o = e.getValueOrDefault(this.options.ticks.fontSize, t.defaults.global.defaultFontSize),
              n = e.getValueOrDefault(this.options.ticks.fontStyle, t.defaults.global.defaultFontStyle),
              r = e.getValueOrDefault(this.options.ticks.fontFamily, t.defaults.global.defaultFontFamily),
              s = e.fontString(o, n, r);
          if (this.ctx.font = s, this.ticks = [], this.unitScale = 1, this.scaleSizeInUnits = 0, this.options.time.unit) this.tickUnit = this.options.time.unit || "day", this.displayFormat = this.options.time.displayFormats[this.tickUnit], this.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, !0), this.unitScale = e.getValueOrDefault(this.options.time.unitStepSize, 1); else {
            var l                                                     = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom),
                h = this.tickFormatFunction(this.firstTick, 0, []), d = this.ctx.measureText(h).width;
            d                                                         = d * Math.cos(e.toRadians(this.options.ticks.maxRotation)) + o * Math.sin(e.toRadians(this.options.ticks.maxRotation));
            var f                                                     = l / d;
            this.tickUnit = "millisecond", this.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, !0), this.displayFormat = this.options.time.displayFormats[this.tickUnit];
            for (var g = 0, p = i.units[g]; g < i.units.length;) {
              if (this.unitScale = 1, e.isArray(p.steps) && Math.ceil(this.scaleSizeInUnits / f) < e.max(p.steps)) {
                for (var m = 0; m < p.steps.length; ++m) if (p.steps[m] >= Math.ceil(this.scaleSizeInUnits / f)) {
                  this.unitScale = e.getValueOrDefault(this.options.time.unitStepSize, p.steps[m]);
                  break
                }
                break
              }
              if (!1 === p.maxStep || Math.ceil(this.scaleSizeInUnits / f) < p.maxStep) {
                this.unitScale = e.getValueOrDefault(this.options.time.unitStepSize, Math.ceil(this.scaleSizeInUnits / f));
                break
              }
              ++g, p = i.units[g], this.tickUnit = p.name;
              var b = this.firstTick.diff(this.getMomentStartOf(this.firstTick), this.tickUnit, !0),
                  v = this.getMomentStartOf(this.lastTick.clone().add(1, this.tickUnit)).diff(this.lastTick, this.tickUnit, !0);
              this.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, !0) + b + v, this.displayFormat = this.options.time.displayFormats[p.name]
            }
          }
          var x;
          if (this.options.time.min ? x = this.getMomentStartOf(this.firstTick) : (this.firstTick = this.getMomentStartOf(this.firstTick), x = this.firstTick), !this.options.time.max) {
            0 !== this.getMomentStartOf(this.lastTick).diff(this.lastTick, this.tickUnit, !0) && (this.lastTick = this.getMomentStartOf(this.lastTick.add(1, this.tickUnit)))
          }
          this.smallestLabelSeparation = this.width, e.each(this.chart.data.datasets, function (t, e) {
            for (var i = 1; i < this.labelMoments[e].length; i++) this.smallestLabelSeparation = Math.min(this.smallestLabelSeparation, this.labelMoments[e][i].diff(this.labelMoments[e][i - 1], this.tickUnit, !0))
          }, this), this.options.time.displayFormat && (this.displayFormat = this.options.time.displayFormat), this.ticks.push(this.firstTick.clone());
          for (var k = 1; k <= this.scaleSizeInUnits; ++k) {
            var S = x.clone().add(k, this.tickUnit);
            if (this.options.time.max && S.diff(this.lastTick, this.tickUnit, !0) >= 0) break;
            k % this.unitScale == 0 && this.ticks.push(S)
          }
          (0 !== this.ticks[this.ticks.length - 1].diff(this.lastTick, this.tickUnit) || 0 === this.scaleSizeInUnits) && (this.options.time.max ? (this.ticks.push(this.lastTick.clone()), this.scaleSizeInUnits = this.lastTick.diff(this.ticks[0], this.tickUnit, !0)) : (this.ticks.push(this.lastTick.clone()), this.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, !0))), this.ctx.restore()
        }, getLabelForIndex:     function (t, e) {
          var i = this.chart.data.labels && t < this.chart.data.labels.length ? this.chart.data.labels[t] : "";
          return "object" == typeof this.chart.data.datasets[e].data[0] && (i = this.getRightValue(this.chart.data.datasets[e].data[t])), this.options.time.tooltipFormat && (i = this.parseTime(i).format(this.options.time.tooltipFormat)), i
        }, tickFormatFunction:   function (t, i, a) {
          var o = t.format(this.displayFormat), n = this.options.ticks,
              r                                   = e.getValueOrDefault(n.callback, n.userCallback);
          return r ? r(o, i, a) : o
        }, convertTicksToLabels: function () {
          this.tickMoments = this.ticks, this.ticks = this.ticks.map(this.tickFormatFunction, this)
        }, getPixelForValue:     function (t, e, i, a) {
          var o = t && t.isValid && t.isValid() ? t : this.getLabelMoment(i, e);
          if (o) {
            var n = o.diff(this.firstTick, this.tickUnit, !0), r = n / this.scaleSizeInUnits;
            if (this.isHorizontal()) {
              var s = this.width - (this.paddingLeft + this.paddingRight),
                  l = (Math.max(this.ticks.length - 1, 1), s * r + this.paddingLeft);
              return this.left + Math.round(l)
            }
            var h = this.height - (this.paddingTop + this.paddingBottom),
                d = (Math.max(this.ticks.length - 1, 1), h * r + this.paddingTop);
            return this.top + Math.round(d)
          }
        }, getPixelForTick:      function (t, e) {
          return this.getPixelForValue(this.tickMoments[t], null, null, e)
        }, getValueForPixel:     function (t) {
          var e = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom),
              i = (t - (this.isHorizontal() ? this.left + this.paddingLeft : this.top + this.paddingTop)) / e;
          return i *= this.scaleSizeInUnits, this.firstTick.clone().add(a.duration(i, this.tickUnit).asSeconds(), "seconds")
        }, parseTime:            function (t) {
          return "string" == typeof this.options.time.parser ? a(t, this.options.time.parser) : "function" == typeof this.options.time.parser ? this.options.time.parser(t) : "function" == typeof t.getMonth || "number" == typeof t ? a(t) : t.isValid && t.isValid() ? t : "string" != typeof this.options.time.format && this.options.time.format.call ? this.options.time.format(t) : a(t, this.options.time.format)
        }
      });
      t.scaleService.registerScaleType("time", n, o)
    }
  }, {moment: 1}]
}, {}, [7]);
var Point3D   = function (x, y, z) {
  this.x = x, this.y = y, this.z = z
}, Rotation3D = Point3D, Dimension3D = function (w, h, d) {
  this.w = w, this.h = h, this.d = d
}, Coin       = function (settings) {
  function createPlane(dimension, origin, position, rotation, idOrClass) {
    return Sprite3D.create(idOrClass).size(dimension.w, dimension.h).origin(origin.x, origin.y, origin.z).position(position.x, position.y, position.z).rotation(rotation.x, rotation.y, rotation.z).update()
  }

  function createBox(dimension, origin, position, rotation, idOrClass) {
    return Sprite3D.box(dimension.w, dimension.h, dimension.d, idOrClass).origin(origin.x, origin.y, origin.z).position(position.x, position.y, position.z).rotation(rotation.x, rotation.y, rotation.z).update()
  }

  var stage, obj, shadow, self                                              = this, objDimension                         = settings.dimension || new Dimension3D(0, 0, 0),
      objPosition                                                           = settings.position || new Point3D(0, 0, 0),
      objRotation = settings.rotation || new Rotation3D(0, 0, 0), direction = 1;
  return this.isSupported = function () {
    return Sprite3D.isSupported()
  }, this.toss = function (endsHead, callback) {
    if (!this.isInTheAir) {
      interval && clearInterval(interval), this.isInTheAir = !0;
      var rotationSpeedX = 25 + Math.floor(5 * Math.random()), rotationSpeedZ = 3,
          height                                                              = 700 + Math.floor(350 * Math.random()), radius              = objDimension.w / 2,
          interval                                                            = setInterval(function () {
            var z = obj.z(), easing = Easing.Exponential.EaseOut((height - z) / height);
            if (direction < 0 && z <= 0) {
              var rotationX = 15 + Math.floor(15 * Math.random());
              obj.rotation(rotationX, endsHead ? 0 : -180, obj.rotationZ()).position(objPosition.x, objPosition.y, Math.sin(Math.abs(rotationX) * Math.PI / 180) * radius * 2).update(), direction = 1, clearInterval(interval), rotationSpeedZ = 1 + Math.floor(4 * Math.random()), interval = setInterval(function () {
                var rotationX = obj.rotationX(), absRotationX = Math.abs(rotationX), radius = objDimension.w / 2;
                absRotationX > 0 ? obj.z(Math.sin(absRotationX * Math.PI / 180) * radius * 2).rotation(rotationX > 0 ? -(absRotationX - 1) : absRotationX - 1, obj.rotationY(), obj.rotationZ() + rotationSpeedZ).update() : (clearInterval(interval), self.isInTheAir = !1, $(".coin .front").addClass("done"), callback && callback.call())
              }, 25)
            } else {
              var moveZUp = Math.max(.6, 25 * easing), moveZDown = Math.max(.6, 15 * easing),
                  appliedEasing                                  = Math.max(.6, easing);
              direction = z < height ? direction : -direction, direction > 0 ? obj.rotation(obj.rotationX() - rotationSpeedX * appliedEasing, obj.rotationY() - .2 * appliedEasing, obj.rotationZ() - rotationSpeedZ * appliedEasing).move(0, 0, moveZUp * direction).update() : obj.rotation(obj.rotationX() - rotationSpeedX * appliedEasing, obj.rotationY() - .2 * appliedEasing, obj.rotationZ() - rotationSpeedZ * appliedEasing).move(0, 0, moveZDown * direction).update()
            }
            $(shadow).css({opacity: (1500 - z) / 1500})
          }, 25)
    }
  }, this.init = function () {
    if (!this.isSupported()) return null;
    var $stage = $(settings.stage);
    stage = Sprite3D.stage($stage.get(0)), shadow = createPlane(new Dimension3D(objDimension.w + 40, objDimension.h + 40, 0), new Point3D(-$stage.width() / 2, -$stage.height() / 2, 1500), new Point3D(objPosition.x - objDimension.w / 2, objPosition.y - objDimension.h / 2, 0), new Rotation3D(0, 0, 0), ".shadow"), obj = createBox(objDimension, new Point3D(-$stage.width() / 2, -$stage.height() / 2, 1500), objPosition, objRotation, ".coin");
    for (var i = 0; i < 80; ++i) {
      var radius = objDimension.w / 2, radian = 4.5 * Math.PI / 180, distance = radius * Math.cos(radian / 2),
          w                                                                   = 2 * radius * Math.sin(radian / 2), h                            = objDimension.d,
          x                                                                   = Math.ceil(distance * Math.cos(radian * i)), y = Math.ceil(distance * Math.sin(radian * i)),
          side                                                                = createPlane(new Dimension3D(w, h, 0), new Point3D(w / 2, h / 2, 0), new Point3D(x, y, 0), new Rotation3D(90, 4.5 * i + 90, 0), ".side");
      obj.appendChild(side)
    }
    return stage.appendChild(shadow), stage.appendChild(obj), this
  }, this.init()
};
angular.module("chat.controller", []).controller("chat.controller", ["$scope", "$rootScope", "$interval", "$sanitize", "$http", "$filter", "chatService", "glob", "$timeout", "$compile", "settingsService", function ($scope, $rootScope, $interval, $sanitize, $http, $filter, chatService, glob, $timeout, $compile, settingsService) {
  $scope.chat = {message: ""}, $scope.ROOM_NAMES = ["Beginners", "General", "Polish", "Russian", "French", "Turkish", "German", "Portuguese", "Balkan", "Spanish", "Predictor"], $scope.changeRoom = function (room) {
    $scope.prev = $rootScope.user.currentRoom, $http({
      method: "POST",
      url:    "/chat/changeRoom",
      data:   {room: room}
    }).then(function () {
      $rootScope.growl.success("Changed!"), $scope.chatRoom = room, $rootScope.autoScrollChat(), settingsService.saveData()
    }, function (res) {
      $rootScope.growl.warning(res.data), $scope.chatRoom = $scope.prev, $rootScope.autoScrollChat()
    })
  };
  var emojis = [{key: "kappa", img: "img/kappa.png"}, {key: "Kappa", img: "img/kappa.png"}, {
    key: "rip",
    img: "img/rip.png"
  }, {key: "RIP", img: "img/rip.png"}, {key: "ghost", img: "img/ghost.png"}, {
    key: "beer",
    img: "img/beer.png"
  }, {key: ":*", img: "img/kiss.png"}, {key: "lol", img: "img/lol.png"}, {
    key: "$$$",
    img: "img/money.png"
  }, {key: "monkey", img: "img/monkey.png"}, {key: "noevil", img: "img/noevil.png"}, {
    key: "octopus",
    img: "img/octopus.png"
  }, {key: "panda", img: "img/panda.png"}, {key: "pumpkin", img: "img/pumpkin.png"}, {
    key: ":p",
    img: "img/monkey.png"
  }, {key: "turban", img: "img/turban.png"}, {key: ":)", img: "img/smiley.png"}];
  $scope.names = [], $scope.messages = [], $scope.$on("chatUpdate", function () {
    try {
      if (!$scope.hover) {
        $scope.messages = chatService.messages;
        for (var i = 0; i < $scope.messages.length; i++) {
          for (var z = 0; z < emojis.length; z++) $scope.messages[i].message.indexOf(emojis[z].key) > -1 && !$scope.messages[i].emojified && ($scope.messages[i].message = $scope.messages[i].message.replace(emojis[z].key, '<img src="' + emojis[z].img + '" title="' + emojis[z].key + '" class="emoji">'), $scope.messages[i].emojified = !0);
          if (-1 != $scope.messages[i].message.indexOf("(!") && -1 != $scope.messages[i].message.indexOf(")")) {
            var test_str                                                = $scope.messages[i].message, start_pos = test_str.indexOf("(!") + 2,
                end_pos = test_str.indexOf(")", start_pos), text_to_get = test_str.substring(start_pos, end_pos);
            if ($rootScope.user && $rootScope.user.displayName == text_to_get) {
              var string                 = '<span class="highlight">@' + text_to_get + "</span>";
              $scope.messages[i].message = $scope.messages[i].message.replace("(!" + text_to_get + ")", string)
            } else $scope.messages[i].message = $scope.messages[i].message.replace("(!" + text_to_get + ")", "@" + text_to_get)
          }
          for (var added = !1, z = 0; z < $scope.names.length; z++) $scope.names[z].label == $scope.messages[i].username && (added = !0), "Announcement" != $scope.messages[i].username && "System Message" != $scope.messages[i].username || (added = !0);
          if (!added) {
            for (; $scope.names.length > 50;) $scope.names.splice(0, 1);
            $scope.names.push({label: $scope.messages[i].username})
          }
        }
      }
    } catch (e) {
    }
    $scope.hover || $scope.scrolled || $timeout(function () {
      $rootScope.autoScrollChat()
    })
  }), chatService.getHistory().then(function () {
    $scope.messages = chatService.messages, $timeout(function () {
      $rootScope.autoScrollChat()
    }, 500)
  }, function (err) {
  }), $scope.getFactionTitle = function (f) {
    return "c" == f ? "Counter Terrorist" : "t" == f ? "Terrorist" : "z" == f ? "Zombie" : void 0
  }, $scope.isNew = function (time) {
    return moment().diff(moment(time), "hours") < 24
  }, $scope.sendMessage = function () {
    if (!$rootScope.user) return glob.printwarning("error_not_logged_in");
    $("mentio-menu > ul").is(":visible") || ($scope.chat.message.length > 0 ? -1 == $scope.chat.message.indexOf($rootScope.user.referralcode) ? (chatService.sendMessage($scope.chat.message).then(function () {
    }, function (err) {
      glob.printwarning(err)
    }), $scope.chat.message = "") : $rootScope.growl.warning($filter("translate")("chat_refWarn")) : $rootScope.growl.warning($filter("translate")("chat_warn")))
  }, $rootScope.sendMessage = function (message) {
    $scope.chat.message = message, $scope.sendMessage()
  }, $rootScope.autoScrollChat = function (animated) {
    $timeout(function () {
      animated ? $(".chat > .messages").stop().animate({scrollTop: $(".chat > .messages")[0].scrollHeight}, 500) : $(".chat > .messages").scrollTop($(".chat > .messages")[0].scrollHeight)
    })
  }, $scope.currentUser = {}, $scope.menuOpen = !1, $(document).on("click", function (event) {
    $("div.custom-menu").remove(), $timeout(function () {
      $scope.menuOpen = !1
    })
  }), $scope.mainMenu = function (userID, messageID, steamID, avatar, name, msg) {
    if (!msg || !msg.system) {
      if ($scope.currentUser = {
          userID:  userID,
          id:      userID,
          steamID: steamID,
          avatar:  avatar,
          name:    name
        }, event.preventDefault(), $("div.custom-menu").remove(), "mod" == $rootScope.user.role || "support" == $rootScope.user.role) {
        var menu = '<div class="custom-menu"><span ng-click="chat.message = \'/remove ' + messageID + "'; sendMessage();\">Delete Message</span>";
        menu += "<span ng-click=\"openPage('https://steamcommunity.com/profiles/" + steamID + '\')";">Visit Steam Profile</span>', menu += '<span ng-click="$root.openGifting(currentUser);">Send a Gift</span>', menu += "<span ng-click=\"chat.message = '/permmute " + userID + "'; sendMessage();\">Perm Mute</span>", menu += "<span ng-click=\"chat.message = '/tempmute " + userID + "'; sendMessage();\">Temp Mute (20min)</span>", menu += "<span ng-click=\"chat.message = '/unmute " + userID + "'; sendMessage();\">Un-Mute</span>", menu += "</div>", $scope.selectedAlready
      } else if ("admin" == $rootScope.user.role) {
        var menu = '<div class="custom-menu"><span ng-click="chat.message = \'/remove ' + messageID + "'; sendMessage();\">Delete Message</span>";
        menu += "<span ng-click=\"openPage('https://steamcommunity.com/profiles/" + steamID + '\')";">Visit Steam Profile</span>', menu += '<span ng-click="$root.openGifting(currentUser);">Send a Gift</span>', menu += "<span ng-click=\"chat.message = '/ban " + userID + "'; sendMessage();\">Ban</span>", menu += "<span ng-click=\"chat.message = '/permmute " + userID + "'; sendMessage();\">Perm Mute</span>", menu += "<span ng-click=\"chat.message = '/tempmute " + userID + "'; sendMessage();\">Temp Mute (20min)</span>", menu += "<span ng-click=\"chat.message = '/unmute " + userID + "'; sendMessage();\">Un-Mute</span>", menu += "</div>"
      } else if (!$rootScope.user.role || "user" == $rootScope.user.role) {
        var menu = '<div class="custom-menu"><span ng-click="openPage(\'https://steamcommunity.com/profiles/' + steamID + '\')";">Visit Steam Profile</span>';
        menu += "</div>"
      }
      $("body").append($compile(menu)($scope)), $(".custom-menu").css({
        top:  event.pageY + "px",
        left: event.pageX + "px"
      }), $scope.menuOpen = !0
    }
  }, $scope.sendGift = function () {
    $rootScope.openGift($scope.currentUser)
  }, $scope.openPage = function (url) {
    window.open(url, "_blank")
  }, socket.on("system_kickUser", function () {
    window.location = "/auth/logout?error=You've been kicked!"
  });
  var elem = $(".chat .messages");
  $scope.scrolled = !1, $(".chat .messages").scroll(function () {
    elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight() ? $scope.scrolled = !1 : $scope.scrolled = !0
  }), $scope.hover = !1;
  var newInterval, timer;
  $(".chat .messages").on("mouseover", function () {
    $interval.cancel(newInterval), $scope.scrolled ? ($timeout.cancel(timer), timer = $timeout(function () {
      0 != $(".chat .messages:hover").length && ($scope.hover = !0, $scope.messages = $.extend([], $scope.messages), $(".chat > .messages").stop())
    }, 200), newInterval = $interval(function () {
      $(".chat .messages").is(":hover") || $scope.menuOpen || ($interval.cancel(newInterval), $scope.hover = !1, $scope.messages = chatService.messages, $rootScope.autoScrollChat(!0))
    }, 100)) : ($interval.cancel(newInterval), $scope.hover = !1, $scope.messages = chatService.messages)
  }), $scope.getPeopleText = function (item) {
    return "(!" + item.label + ")"
  }
}]), angular.module("chat.directive", []).directive("chat", function () {
  return {
    restrict:    "E",
    replace:     "true",
    controller:  "chat.controller",
    templateUrl: "chat/views/chat.tpl.html",
    scope:       {}
  }
}), angular.module("chat", ["chat.controller", "chat.directive", "chat.service"]), angular.module("chat.service", []).factory("chatService", ["$rootScope", "$http", "$q", "glob", "$translate", function ($rootScope, $http, $q, glob, $translate) {
  function parseMessage(msg) {
    return msg.message = _.escape(msg.message), msg.username = _.escape(msg.username), msg.timestamp = moment(msg.timestamp).valueOf(), "action" == msg.type && (msg = createActionMessage(msg)), msg
  }

  function createActionMessage(d) {
    var message = $translate.instant("chat_" + d.action + "_message", {
      source: d.source.username,
      target: d.target.username
    });
    return {
      username:  "Bolt.gg",
      avatar:    "/img/favicon_src.png",
      timestamp: moment(d.timestamp).valueOf(),
      system:    !0,
      message:   message
    }
  }

  function messageArrived(d) {
    chatService.messages.unshift(parseMessage(d)), chatService.messages = chatService.messages.slice(0, 50), $rootScope.$broadcast("chatUpdate")
  }

  var ansocket = new glob.ansocket($rootScope), chatService = {messages: []};
  chatService.getMessages = function () {
    return chatService.messages
  }, chatService.getHistory = function () {
    var q = $q.defer();
    return glob.get("/api2/v1/chat/recent", {}, function (res) {
      conf.dummy_data && (res = testMessages), res.forEach(function (msg, i) {
        res[i] = parseMessage(msg)
      }), chatService.messages = res, $rootScope.$broadcast("chatUpdate"), q.resolve()
    }, function (err) {
      q.reject(err)
    }), q.promise
  }, socket.on("chat_slowmode", function () {
    debounce = 5e3, setTimeout(function () {
      debounce = 500
    }, 6e4)
  });
  var debounce = 1e3;
  return chatService.sendMessage = function (msg) {
    var q = $q.defer();
    return msg ? (ansocket.post("chat/newMessage", {message: msg, uuid: generateUUID()}, function (resp) {
      "/" == msg[0] && resp.success && glob.printsuccess("success")
    }, function (resp) {
      return glob.printerror("error_validation"), !0
    }), q.resolve()) : q.reject("error_message_short"), q.promise
  }, ansocket.$on("chat/message", messageArrived), ansocket.$on("reward/new", function (data) {
    data.type = "reward", messageArrived(data)
  }), ansocket.$on("chat/action", function (data) {
    var d = data;
    if ("remove" == d.action) for (var i = chatService.messages.length - 1; i >= 0; i--) {
      var msg = chatService.messages[i];
      msg.id == d.messageId && chatService.messages.splice(i, 1)
    } else messageArrived(d)
  }), chatService
}]);
var testAppState  = [{
  section:  "api",
  service:  !0,
  services: {deposit: !0, upgrade: !0, withdrawal: !1}
}, {section: "socket", service: !0, services: {actions: !1, chat: !1}}, {
  section:  "auth",
  service:  !0,
  services: {login: !1, logout: !1}
}], testBets      = [{
  avatar:     "http://www.petpaw.com.au/wp-content/uploads/2015/05/Polish-Hound.jpg",
  username:   "Blood Hound",
  name:       "Blood Hound",
  amount:     123.1,
  type:       0,
  userID:     "hi-im-user-id-0",
  timestamp:  9928124311,
  id:         "afkej-19",
  bet:        123.1,
  cashedOut:  !0,
  multiplier: 13.33,
  profit:     123.123,
  payout:     13.33,
  condition:  "<",
  target:     33,
  roll:       12.22
}, {
  avatar:    "https://lumiere-a.akamaihd.net/v1/images/character_themuppets_kermit_09279e8e.jpeg?region=0,0,300,300",
  username:  "Hi, I'm Dummy",
  name:      "Hi, I'm Dummy",
  amount:    26.5,
  type:      1,
  userID:    "hi-im-user-id-1",
  timestamp: 42812123412341,
  id:        "afkej-19",
  bet:       26.5,
  cashedOut: !1,
  payout:    52,
  condition: ">",
  target:    72,
  roll:      71
}, {
  avatar:     "https://cdn-images-1.medium.com/max/800/1*W224BAvYV_th2pF_DSXekQ.png",
  username:   "Void",
  name:       "Void",
  amount:     1.67,
  type:       1,
  userID:     "hi-im-user-id-2",
  timestamp:  428444443,
  id:         "afkej-19",
  bet:        1.67,
  cashedOut:  !0,
  multiplier: 24.1,
  profit:     4123.123,
  payout:     24.1,
  condition:  ">",
  target:     66,
  roll:       50
}], testItems     = [{
  icon_url:         "-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXH5ApeO4YmlhxYQknCRvCo04DEVlxkKgpopbmkOVUw7PTbTi5B7c7kxL-bmODxIbjehG5u5Mx2gv2Potj3i1Di_hFtMm2iIYTBJgU3Zg2Er1TvkOvm1566vM6YzSFgsikh7GGdwUIxojBz1A",
  id:               "9514602436",
  inspectURL:       "steam://rungame/730/76561202255233023/+csgo_econ_action_preview%20S76561198342302528A9514602436D4642086055419879892",
  itemType:         null,
  manipulated:      !1,
  market_hash_name: "StatTrak™ SCAR-20 | Powercore (Factory New)",
  name:             "StatTrak™ SCAR-20 | Powercore",
  name_color:       "CF6A32",
  price:            .49,
  steam_type:       "StatTrak™ Restricted Sniper Rifle",
  tradable:         1
}, {
  icon_url:         "-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXH5ApeO4YmlhxYQknCRvCo04DEVlxkKgpotLu8JAllx8zJfAJF7dG7lb-PmOfkP77DqXtZ6dZ02dbN_Iv9nBrmrkFqYD_xcI_GcQ5rYg6DrAO6xL_mgJ_uvZ2YnXtq6CJ34nqPmkS2n1gSOSUsT3Uj",
  id:               "9514602536",
  inspectURL:       "steam://rungame/730/76561202255233023/+csgo_econ_action_preview%20S76561198342302528A9514602436D4642086055419879892",
  itemType:         null,
  manipulated:      !1,
  market_hash_name: "Bayonet | Gamma Dopler (Factory New)",
  name:             "StatTrak™ Bayonet | Gamma Dopler",
  name_color:       "CF6A32",
  price:            100,
  steam_type:       "StatTrak™ Restricted Sniper Rifle",
  tradable:         1
}, {
  icon_url:         "-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXH5ApeO4YmlhxYQknCRvCo04DEVlxkKgposr-kLAtl7PLFTi5B7dCzh7-JhfbiPITdn2xZ_Pp9i_vG8MKji1a1_0VqamymI4LEelRrNFHT-ATvyO680Me-uMjIzXQw6HV04CragVXp1igFofN6",
  id:               "9514602546",
  inspectURL:       "steam://rungame/730/76561202255233023/+csgo_econ_action_preview%20S76561198342302528A9514602436D4642086055419879892",
  itemType:         null,
  manipulated:      !1,
  market_hash_name: "StatTrak™ Desert Eagle | Golden Koi (Factory New)",
  name:             "StatTrak™ Desert Eagle | Golden Koi",
  name_color:       "CF6A32",
  price:            118.28,
  steam_type:       "StatTrak™ Restricted Sniper Rifle",
  tradable:         1
}], testCoinflips = [];
testBets.forEach(function (bet, i) {
  testCoinflips.push({
    creatorUserID:    0,
    challengerUserID: 1,
    winningUserID:    i % 2,
    players:          [{
      img:   bet.avatar,
      name:  bet.username,
      items: $.extend(!0, [], testItems)
    }, {img: testBets[(i + 1) % 3].avatar, name: testBets[(i + 1) % 3].username, items: $.extend(!0, [], testItems)}],
    amount:           bet.amount
  })
});
var testActiveCoinflips = [];
testCoinflips.forEach(function (flip) {
  for (var i = 0; i < 7; i++) {
    var c = $.extend({}, flip);
    c.amount = Math.floor(1e4 * Math.random()) / 100, testActiveCoinflips.push(c)
  }
});
var testMessages = [];
testBets.forEach(function (bet, n) {
  for (var msg = "Suspendisse varius nunc sed convallis tristique", i = 0; i < n; i++) msg += msg;
  testMessages.push({
    type:       "message",
    message:    msg,
    userSignup: 0 == n ? void 0 : 11,
    avatar:     bet.avatar,
    username:   bet.username,
    userID:     42,
    room:       "General",
    levelInfo:  {level: 5},
    pro:        n == testBets.length - 1 || void 0,
    level:      n == testBets.length - 1 ? "ADM" : void 0,
    timestamp:  42
  })
});
for (var lotOfTestItems = [], i = 0; i < 5; i++) lotOfTestItems = lotOfTestItems.concat($.extend(!0, [], testItems));
var rwWinner = $.extend(!0, {}, testBets[1]);
rwWinner.topic = "Winner", testMessages.push({
  type:      "reward",
  topic:     "Ultra Giveaway",
  createdBy: testBets[0],
  items:     lotOfTestItems,
  recipient: rwWinner,
  timestamp: (new Date).valueOf()
});
for (var testLeaderboard = {}, testTradeHistory = {
  page:     1,
  nextPage: !0,
  results:  []
}, hisTypes              = ["deposit", "withdrawal"], i = 0; i < 10; i++) testTradeHistory.results.push({
  type:        hisTypes[i % hisTypes.length],
  value:       100 * Math.random() * i,
  tradeStatus: i,
  timestamp:   123123123,
  offerId:     "i-am-an-offer-id-42",
  items:       i % 3 ? testItems.concat($.extend(!0, [], testItems)) : testItems
});
for (var testUserUpgradeHistory = {
  page:     1,
  nextPage: !0,
  results:  []
}, i                            = 0; i < 10; i++) testUserUpgradeHistory.results.push({
  id:           "i-am-upgrade-game-id",
  provablyFair: "i-am-long-hashed-pair",
  hash:         "i-am-long-server-seed-qwerty",
  salt:         "i-am-long-client-seed-qwerty",
  timestamp:    123123123,
  from:         i % 2 ? testItems : [testItems[i % 3]],
  to:           i % 3 ? testItems.concat($.extend(!0, [], testItems)) : [testItems[i % 3]],
  won:          !!(i % 2)
});
var testScSong            = {
  username:  testBets[1].username,
  userID:    "424242",
  artistImg: "https://i1.sndcdn.com/artworks-000074671889-adrb19-t500x500.jpg",
  streamURL: "https://api2.soundcloud.com/tracks/141509213/stream?client_id=3a020f65a5843e6e136adaae75572992",
  songURL:   "https://soundcloud.com/stephen-marley/ragga-rock-stone",
  artist:    "Stephen Marley",
  title:     "Rock Stone ft. Capleton and Sizzla"
}, testPendingWithdrawals = [];
testBets.forEach(function (bet) {
  testPendingWithdrawals.push({
    user:        bet,
    items:       testItems,
    id:          424242,
    timestamp:   bet.timestamp,
    botUsername: "Imabot",
    value:       bet.amount,
    type:        "withdrawal"
  })
});
for (var testUpgradeHistory = [], i = 0; i < 3; i++) {
  var nexti = (i + 1) % 3;
  testUpgradeHistory.push({user: testBets[i % 3], userItem: testItems[i], upgradeItem: testItems[nexti]})
}
var testGvItems = $.extend(!0, [], lotOfTestItems);
testGvItems.forEach(function (item, i) {
  var now   = (new Date).valueOf();
  item.date = {start: now + 4788e4 * (i - 4), end: now + 4788e4 * (i - 3)}
});
var testGiveaway = {items: testGvItems};
if (angular.module("fair.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
    $stateProvider.state("app.fair", {
      url:         "/fair",
      templateUrl: "fair/views/fair.tpl.html",
      controller:  "fair.controller",
      scope:       {}
    })
  }]), angular.module("fair.controller", []).controller("fair.controller", ["$scope", "$rootScope", "$translate", "$filter", "$http", "glob", function ($scope, $rootScope, $translate, $filter, $http, glob) {
    $rootScope.title = "Bolt.GG | " + $translate.instant("fair_title"), $scope.glob = glob
  }]), angular.module("fair", ["fair.config", "fair.controller"]), angular.module("faq.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
    $stateProvider.state("app.faq", {
      url:         "/faq",
      templateUrl: "faq/views/faq.tpl.html",
      controller:  "faq.controller",
      scope:       {}
    })
  }]), angular.module("faq.controller", []).controller("faq.controller", ["$scope", "$rootScope", "$translate", "$filter", "$http", "$timeout", function ($scope, $rootScope, $translate, $filter, $http, $timeout) {
    $rootScope.title = "Bolt.GG | " + $translate.instant("faq_title"), $scope.toggleQuestion = function (number) {
      $scope.question != number ? $scope.question = number : $scope.question = 0
    }, $rootScope.user && zE(function () {
      zE.identify({name: $rootScope.user.steamId, email: $rootScope.user.email})
    });
    var showTimer;
    zE(function () {
      function show() {
        zE.show()
      }

      $rootScope.postInitialLoad ? show() : showTimer = $timeout(show, 1e3)
    }), $scope.$on("$destroy", function () {
      zE(function () {
        zE.hide(), $timeout.cancel(showTimer)
      })
    })
  }]), angular.module("faq", ["faq.config", "faq.controller"]), angular.module("app").config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
    $stateProvider.state("app.gaterms", {url: "/gaterms", templateUrl: "gaterms/views/gaterms.tpl.html"})
  }]), angular.module("giveaway.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
    $stateProvider.state("app.giveaway", {
      url:         "/giveaway",
      templateUrl: "giveaway/views/giveaway.tpl.html",
      controller:  "giveaway.controller",
      scope:       {}
    })
  }]), angular.module("giveaway.controller", []).controller("giveaway.controller", ["$scope", "$rootScope", "$interval", "$timeout", "$translate", "$filter", "$http", "glob", function ($scope, $rootScope, $interval, $timeout, $translate, $filter, $http, glob) {
    $rootScope.title = "Giveaway | Bolt.gg", $scope.glob = glob;
    var itemTemplate = {
      icon_url:         "-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fQO2rw57DX1xtIBYZsu2kLVdjhKfLcj4av43il9Paw_SsZOuGxjNSuMR02eiR8I3x2wa1r10sPT561KKRmw",
      market_hash_name: "Bolt.gg | Credit (Factory New)"
    }, prices        = [.05, .1, .2, .3, .4, .5, 1, 5, 50];
    $scope.items = [], prices.forEach(function (price) {
      var item = $.extend(!0, {}, itemTemplate);
      item.price = price, $scope.items.push(item)
    }), $scope.canJoin = function (item) {
      if (item) {
        var now = (new Date).valueOf();
        return item.joined ? "ga_joined" : now <= item.end && now >= item.start ? "ga_join_ga" : now < item.start ? "ga_not_yet" : now > item.end ? "ga_missed" : void 0
      }
    }, glob.get("/api2/v1/ga", null, function (resp) {
      if ($scope.giveaway = resp, void 0 === $scope.giveaway.available || $scope.giveaway.available || glob.printwarning("error_invalid_location"), $scope.giveaway.giveaways.forEach(function (ga, i) {
          if (ga.gift_index = i % 5 + 1, ga.end = moment(ga.end).valueOf(), ga.start = moment(ga.start).valueOf(), ga.joined && (ga.claimedItem = ga.item, conf.dummy_data)) {
            var randItem   = $scope.items[glob.randomRange(0, $scope.items.length - 1)];
            ga.claimedItem = $.extend(!0, {}, randItem)
          }
        }), conf.dummy_data) {
        var joinableGa = $scope.giveaway.giveaways[2];
        joinableGa.joined = !1, delete joinableGa.claimedItem;
        var now = (new Date).valueOf();
        joinableGa.end = now + 36e5, joinableGa.start = now - 36e5
      }
    }), $scope.join = function (ga) {
    }, $scope.claimable = function (ga) {
      return !ga.claimedItem && "ga_join_ga" == $scope.canJoin(ga)
    }, $scope.claim = function (ga) {
      if (void 0 !== $scope.giveaway.available && !$scope.giveaway.available) return glob.printwarning("error_invalid_location");
      if ($scope.claimable(ga)) ga.loading = !0, glob.post("/api2/v1/ga/join", {gaId: ga.id}, function (resp) {
        ga.joined = !0, ga.spin_items = $scope.items;
        var assets = [];
        ga.spin_items.forEach(function (it) {
          assets.push("https://steamcommunity-a.akamaihd.net/economy/image/" + it.icon_url + "/250/250")
        }), glob.preloadAssets(assets, null, function () {
          ga.animate = !0, ga.loading = !1, $scope.$apply(), $timeout(function () {
            ga.spinResults = $.extend(!0, [], $scope.items), ga.spinResults.winner = resp, ga.spinResults.winner.winner = !0, ga.spinResults = [ga.spinResults]
          }, 500)
        })
      }, function () {
        ga.loading = !1
      }); else {
        var string = $scope.canJoin(ga), printFn = "ga_missed" == string ? glob.printwarning : glob.printsuccess;
        printFn("ga_not_yet" == string ? "Available " + moment(ga.start).fromNow() : string)
      }
    }, $scope.spinOver = function () {
    }, $scope.$on("$destroy", function () {
      $rootScope.switchTheme($rootScope.app.theme)
    }), $timeout(function () {
      glob.giveawayAnnounce && (glob.giveawayAnnounce.destroy(), glob.giveawayAnnounce = null)
    })
  }]), angular.module("giveaway", ["giveaway.config", "giveaway.controller"]), conf && conf.dev_mode) var dlog = console.log.bind(window.console); else var dlog = function () {
};
var Appglob;
angular.module("glob", []).factory("glob", ["$http", "$timeout", "$rootScope", "$filter", "$translate", "growl", "$sanitize", function ($http, $timeout, $rootScope, $filter, $translate, growl, $sanitize) {
  var ret = Appglob = {
    sidebar_width:         315,
    withdraw_break:        1090,
    tablet_width:          950,
    mobile_width:          800,
    calcViewWidth:         function () {
      return "none" == $rootScope.sidebarView ? $rootScope.win_width : $rootScope.win_width - ret.sidebar_width
    },
    printsuccess:          function (val, append, infinite) {
      return ret.growl.success($translate.instant(val, append), infinite)
    },
    printwarning:          function (val, append, ttl) {
      return val || (val = "error_unknown"), "error_no_csgo" == val && (ttl = 1e4), "error_email_not_set" != val && "error_missing_email" != val || $rootScope.openTradeURL(), ret.growl.warning($translate.instant(val, append), ttl)
    },
    growl:                 {
      warning:    function (message, ttl) {
        return growl.warning($sanitize(message), {ttl: !0 === ttl ? -1 : ttl || 5e3, disableCountDown: !0})
      }, success: function (message, infinite) {
        return growl.success($sanitize(message), {ttl: infinite ? -1 : 5e3, disableCountDown: !0})
      }, error:   function (message) {
        return growl.warning($sanitize(message), {ttl: -1, disableCountDown: !0})
      }, update:  function (message) {
        return growl.success($sanitize(message), {ttl: 5e3, disableCountDown: !0, referenceId: 1})
      }
    },
    bannerGrowl:           null,
    parseBanner:           function (obj) {
      if (obj && obj.message) {
        var str = obj.message, splitstr = str.split("||");
        splitstr.length > 1 && (obj.message = splitstr[0].trim(), $.extend(obj, JSON.parse(splitstr[1])));
        var str = obj.message;
        obj.gleamid && (str += " <a>Click here</a> to enter."), ret.bannerGrowl && ret.bannerGrowl.rawText === str || (ret.bannerGrowl && ret.bannerGrowl.destroy(), obj.banner_logged_only && !$rootScope.user || (ret.bannerGrowl = growl.info(str, {
          ttl:              -1,
          disableCountDown: !0
        }), ret.bannerGrowl.rawText = str))
      }
    },
    prepareUrl:            prepareUrl,
    isMobileOrTablet:      function () {
      if (void 0 == ret.agentChecked) {
        var check = !1;
        !function (a) {
          (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) && (check = !0)
        }(navigator.userAgent || navigator.vendor || window.opera), ret.agentChecked = check
      }
      return ret.agentChecked || ret.win_width <= tablet_width
    },
    delayedEx:             function (autoreset) {
      var delayed = !1, queue = [], timer = null, that = this;
      this.run = function (fn) {
        fn && (delayed ? queue.push(fn) : fn())
      }, this.pause = function () {
        delayed = !0, $timeout.cancel(timer), timer = $timeout(function () {
          that.continue()
        }, autoreset || 15e3)
      }, this.continue = function () {
        delayed = !1, $timeout.cancel(timer), queue.forEach(function (fn) {
          fn()
        }), queue.length = 0
      }
    },
    tinyParallelEx:        function (array, cb) {
      var executed = 0;
      array.forEach(function (singleFn) {
        singleFn(function () {
          ++executed == array.length && cb()
        })
      })
    },
    softThrottle:          function (fn, threshhold, scope) {
      var timer, callpool = [];
      return function () {
        function run() {
          var callobj = callpool.splice(0, 1)[0];
          timer = null, callobj && (callobj.fn.apply(context, callobj.args), timer = $timeout(run, threshhold))
        }

        var context = scope || this, args = arguments;
        callpool.push({fn: fn, args: args}), timer || run()
      }
    },
    animationThrottle:     function (fps) {
      var startTime, now, then, elapsed, self = this, fpsInterval = 1e3 / fps, attemptStep = function (action) {
        self.running && (now = Date.now(), elapsed = now - then, elapsed >= fpsInterval ? (then = now - elapsed % fpsInterval, !1 !== action() ? requestAnimationFrame(function () {
          attemptStep(action)
        }) : self.running = !1) : requestAnimationFrame(function () {
          attemptStep(action)
        }))
      };
      this.run = function (action) {
        self.running || (then = Date.now(), startTime = Date.now(), self.running = !0, attemptStep(action))
      }, this.stop = function () {
        self.running = !1
      }
    },
    audioMuted:            !0,
    toggleAudio:           function () {
      this.audioMuted ? (objeach(audioTracks, function (name, track) {
        track.preloaded || (dlog("Preloading audio", name, track), track.audio.addEventListener("play", function () {
          track.audio.pause(), track.audio.removeEventListener("play", arguments.callee, !1)
        }, !1), track.audio.volume = 0, track.audio.play(), track.preloaded = !0)
      }), this.audioMuted = !1) : this.audioMuted = !0
    },
    sound:                 function (name) {
      if (!this.audioMuted) {
        var sound = audioTracks[name].audio;
        sound.volume = audioTracks[name].volume, sound.currentTime = 0, sound.play()
      }
    },
    ansocket:              function ($scope, soc) {
      soc || (soc = socket);
      var that = this, glob = ret;
      this.listeners = [], this.$on = this.on = function (msg, cb) {
        function listenerfn(data) {
          dlog("SOCKET received " + msg, "DATA", data), cb(data), $scope.$apply()
        }

        soc.on(msg, listenerfn), this.listeners.push([msg, listenerfn]), dlog(soc.io.uri + " SOCKET now listening on " + msg)
      }, this.$emit = this.emit = function (msg, data) {
        soc.emit(msg, data), dlog(soc.io.uri + " SOCKET emmited " + msg, data)
      }, this.post = function (url, params, cb, cberr) {
        var progress = url.substr(url.lastIndexOf("/") + 1) + "InProgress";
        glob[progress] = !0, dlog(soc.io.uri + " Socket POST", url, "PARAMS", params), socket.emit(url, params, function (resp) {
          if (dlog("Socket " + url + " RESPONSE", resp), resp.success) glob[progress] = !1, cb && cb(resp); else {
            var err = resp.error;
            if (glob[progress] = !1, console.log.call(console, err), cberr) var handled = cberr(err);
            if (!handled) {
              var errval
              ;errval = err && err.data ? err.data : err, "string" == typeof errval && (errval = "error_" + errval), glob.printwarning(errval)
            }
          }
          $scope.$apply()
        })
      }, $scope.$on("$destroy", function () {
        that.listeners.forEach(function (listener) {
          soc.removeListener(listener[0], listener[1]), dlog("SOCKET is NOT listening on " + listener[0])
        })
      })
    },
    post:                  function (url, params, cb, cberr, headers) {
      var progress = url.substr(url.lastIndexOf("/") + 1) + "InProgress", that = this;
      this[progress] = !0, dlog("POSTING", url, "PARAMS", params), $http({
        url:             url,
        data:            params,
        method:          "POST",
        withCredentials: !0
      }).success(function (resp) {
        dlog(url + " RESPONSE", resp), that[progress] = !1, cb && cb(resp)
      }).error(function (err) {
        that[progress] = !1, console.log.apply(console, arguments);
        var errval;
        errval = err && err.data ? err.data : err, "string" == typeof errval && (errval = "error_" + errval), that.printwarning(errval), cberr && cberr(err)
      })
    },
    get:                   function (url, params, cb, cberr, headers) {
      var progress = "get" + url.substr(url.lastIndexOf("/") + 1) + "InProgress";
      dlog("GETTING", url, "PARAMS", params);
      var that = this;
      that[progress] = !0, $http({
        url:             url,
        method:          "GET",
        params:          params,
        headers:         headers,
        withCredentials: !0
      }).success(function (resp) {
        that[progress] = !1, dlog("RESPONSE " + url, resp), cb(resp)
      }).error(function (err) {
        if (that[progress] = !1, console.log.apply(console, arguments), cberr) var handled = cberr(err);
        if (!handled) {
          var errval;
          errval = err && err.data ? err.data : err, "string" == typeof errval && (errval = "error_" + errval), that.printwarning(errval)
        }
      })
    },
    getter:                function (url, paginated) {
      this.results, this.get = function (params, nextpage, cb) {
        var that = this;
        if (nextpage || (nextpage = 0), that.pagination || (that.pagination = nextpage ? {page: 0} : {page: 1}, that.pagination.next = !0), paginated) {
          if (this.pagination.inprogress) return;
          if (nextpage < 0 && 1 == this.pagination.page) return;
          if (nextpage > 0 && !this.pagination.next) return;
          params.page = parseInt(this.pagination.page) + nextpage, this.pagination.inprogress = !0
        }
        this.pagination.page = params.page, ret.get(url, params, function (resp) {
          resp ? (that.pagination = resp.pagination, that.pagination.page >= resp.pagination.pageCount ? that.pagination.next = !1 : that.pagination.next = !0) : that.pagination.next = !1, that.pagination.inprogress = !1, cb && cb(resp)
        }, void 0, function () {
          that.pagination.inprogress = !1
        })
      }
    },
    preloadAssets:         function (arrayOfAssets, progressFn, completeFn) {
      function stepDone() {
        progress++, progressFn && progressFn(progress / arrayOfAssets.length), progress == arrayOfAssets.length && completeFn && completeFn()
      }

      var progress = 0;
      arrayOfAssets.forEach(function (asset) {
        if (~asset.indexOf(".png") || ~asset.indexOf(".gif") || ~asset.indexOf("steamcommunity")) $("<img/>").on("load", function () {
          dlog("PRELOADED IMAGE " + asset), stepDone()
        }).on("error", function () {
          stepDone()
        }).attr("src", asset); else if (~asset.indexOf(".css")) {
          var head = document.getElementsByTagName("head")[0], link = document.createElement("link");
          link.rel = "stylesheet", link.type = "text/css", link.href = asset, link.media = "all", head.appendChild(link), stepDone()
        }
      })
    },
    splitName:             function (name, part) {
      if (!name) return "";
      var res  = {}, wearToTag = {
        "battle-scarred": "bs",
        "well-worn":      "ww",
        "field-tested":   "ft",
        "minimal wear":   "mw",
        "factory new":    "fn"
      }, split = name.split(" | ");
      if (res.fname = split[0], "fname" == part) return res.fname;
      var lnamewear = split[1];
      if (lnamewear) {
        ~lnamewear.indexOf("(") ? (res.lname = lnamewear.substring(0, lnamewear.lastIndexOf("(")).trim(), res.wear = lnamewear.substring(lnamewear.lastIndexOf("(") + 1, lnamewear.lastIndexOf(")")).trim(), res.short_wear = res.swear = wearToTag[res.wear.toLowerCase()]) : res.lname = lnamewear
      }
      return part ? res[part] || "" : res
    },
    transform:             function (el, string) {
      el.style.transform = string, el.style.mozTransform = string, el.style.webkitTransform = string, el.style.msTransform = string
    },
    clamp:                 function (num, min, max) {
      return Math.min(Math.max(num, min), max)
    },
    randomRange:           function (min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min
    },
    storageAvailable:      function (type) {
      try {
        var storage = window.localStorage, x = "__storage_test__";
        return storage.setItem(x, x), storage.removeItem(x), !0
      } catch (e) {
        return e instanceof DOMException && (22 === e.code || 1014 === e.code || "QuotaExceededError" === e.name || "NS_ERROR_DOM_QUOTA_REACHED" === e.name) && 0 !== storage.length
      }
    }(),
    nativeNotifsClass:     function () {
      this.spawn = function (theIcon, theTitle, theBody, tag, cb) {
      }
    },
    sendGoogleTransaction: function (type, transaction) {
      var items = transaction.theirItems, total = $rootScope.itemsValue(items);
      ga("ecommerce:addTransaction", {
        id:          transaction.id,
        affiliation: type,
        revenue:     total
      }), items.forEach(function (item) {
        ga("ecommerce:addItem", {
          id:       transaction.id,
          name:     item.market_hash_name,
          sku:      item.id,
          price:    item.price,
          quantity: "1"
        })
      }), ga("ecommerce:send"), window.google_trackConversion && window.google_trackConversion({
        google_conversion_id:       835294419,
        google_conversion_language: "en",
        google_conversion_format:   "3",
        google_conversion_color:    "ffffff",
        google_conversion_label:    "20jdCJHU_XQQ06mmjgM",
        google_conversion_value:    total,
        google_conversion_currency: "USD",
        google_remarketing_only:    !1
      })
    },
    simpleItem:            function (item) {
      return {id: item.id, market_hash_name: item.market_hash_name, icon_url: item.icon_url}
    },
    shuffle:               function (array) {
      for (var temporaryValue, randomIndex, currentIndex = array.length; 0 !== currentIndex;) randomIndex = Math.floor(Math.random() * currentIndex), currentIndex -= 1, temporaryValue = array[currentIndex], array[currentIndex] = array[randomIndex], array[randomIndex] = temporaryValue;
      return array
    },
    JSONparse:             function (data) {
      var parsed;
      try {
        parsed = JSON.parse(data)
      } catch (e) {
      }
      return parsed
    },
    signature:             "a59f8a8cad0039d5a36ed0a881aecec01df359a5eed90e0b2a260b40cf3b6953"
  };
  return ret.printerror = ret.printwarning, ret.historyQ = new ret.delayedEx, ret
}]), angular.module("history.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.history", {
    url:         "/history",
    templateUrl: "history/views/history.tpl.html",
    controller:  "history.controller",
    scope:       {}
  })
}]), angular.module("history.controller", []).controller("history.controller", ["$scope", "$rootScope", "$timeout", "$translate", "$filter", "glob", function ($scope, $rootScope, $timeout, $translate, $filter, glob) {
  function getHistory(type, nextpage) {
    var endPoint;
    if ("trade" == type ? endPoint = "/api2/v1/user/inventory/trades/" : "upgrade" == type && (endPoint = "/api2/v1/user/upgrade/history/"), nextpage) {
      if (!$scope.history[type] || !$scope.history[type].nextPage) return;
      endPoint += $scope.history[type].page + 1
    }
    $scope.fetchInProgress = !0, glob.get(endPoint, null, function (res) {
      if ($scope.fetchInProgress = !1, !conf.dummy_data || res.results && res.results.length || ("trade" == type && (res = $.extend(!0, {}, testTradeHistory)), "upgrade" == type && (res = $.extend(!0, {}, testUserUpgradeHistory))), parseHistory(res), nextpage) {
        var cachedList = $scope.history[type].results;
        $scope.history[type] = res, $scope.history[type].results = cachedList.concat($scope.history[type].results)
      } else $scope.history[type] = res
    }, function (err) {
      $scope.fetchInProgress = !1, $scope.history[type] && ($scope.history[type].nextPage = !1)
    })
  }

  function parseHistory(res) {
    res.results && res.results.forEach(function (entry) {
      entry.timestamp = moment(entry.timestamp).valueOf(), entry.from && entry.from.sort(function (a, b) {
        return b.price - a.price
      }), entry.to && entry.to.sort(function (a, b) {
        return b.price - a.price
      })
    })
  }

  $rootScope.title = "Bolt.GG | " + $translate.instant("history_title"), $scope.history = {}, $scope.changeTab = function (t) {
    $scope.tab = t, getHistory(t)
  }, $scope.changeTab("trade"), $scope.getHistory = getHistory, $scope.refresh = function (type) {
    type && ($scope.history[type] = [], getHistory(type))
  }, $scope.tradeOfferStatusClass = function (entry) {
    var s = parseInt(entry.tradeStatus), goodStates = [3], badStates = [5, 6, 7, 8, 10];
    return ~goodStates.indexOf(s) ? "success" : ~badStates.indexOf(s) ? "fail" : null
  }
}]), angular.module("history", ["history.config", "history.controller"]), function () {
  "use strict";
  var e       = function () {
    this.init()
  };
  e.prototype = {
    init:                  function () {
      var e = this || n;
      return e._counter = 0, e._codecs = {}, e._howls = [], e._muted = !1, e._volume = 1, e._canPlayEvent = "canplaythrough", e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, e.masterGain = null, e.noAudio = !1, e.usingWebAudio = !0, e.autoSuspend = !0, e.ctx = null, e.mobileAutoEnable = !0, e._setup(), e
    }, volume:             function (e) {
      var o = this || n;
      if (e = parseFloat(e), o.ctx || _(), void 0 !== e && e >= 0 && e <= 1) {
        if (o._volume = e, o._muted) return o;
        o.usingWebAudio && (o.masterGain.gain.value = e);
        for (var t = 0; t < o._howls.length; t++) if (!o._howls[t]._webAudio) for (var r = o._howls[t]._getSoundIds(), a = 0; a < r.length; a++) {
          var u = o._howls[t]._soundById(r[a]);
          u && u._node && (u._node.volume = u._volume * e)
        }
        return o
      }
      return o._volume
    }, mute:               function (e) {
      var o = this || n;
      o.ctx || _(), o._muted = e, o.usingWebAudio && (o.masterGain.gain.value = e ? 0 : o._volume);
      for (var t = 0; t < o._howls.length; t++) if (!o._howls[t]._webAudio) for (var r = o._howls[t]._getSoundIds(), a = 0; a < r.length; a++) {
        var u = o._howls[t]._soundById(r[a]);
        u && u._node && (u._node.muted = !!e || u._muted)
      }
      return o
    }, unload:             function () {
      for (var e = this || n, o = e._howls.length - 1; o >= 0; o--) e._howls[o].unload();
      return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(), e.ctx = null, _()), e
    }, codecs:             function (e) {
      return (this || n)._codecs[e.replace(/^x-/, "")]
    }, _setup:             function () {
      var e = this || n;
      if (e.state = e.ctx ? e.ctx.state || "running" : "running", e._autoSuspend(), !e.usingWebAudio) if ("undefined" != typeof Audio) try {
        var o = new Audio;
        void 0 === o.oncanplaythrough && (e._canPlayEvent = "canplay")
      } catch (n) {
        e.noAudio = !0
      } else e.noAudio = !0;
      try {
        var o = new Audio;
        o.muted && (e.noAudio = !0)
      } catch (e) {
      }
      return e.noAudio || e._setupCodecs(), e
    }, _setupCodecs:       function () {
      var e = this || n, o = null;
      try {
        o = "undefined" != typeof Audio ? new Audio : null
      } catch (n) {
        return e
      }
      if (!o || "function" != typeof o.canPlayType) return e;
      var t = o.canPlayType("audio/mpeg;").replace(/^no$/, ""),
          r = e._navigator && e._navigator.userAgent.match(/OPR\/([0-6].)/g),
          a = r && parseInt(r[0].split("/")[1], 10) < 33;
      return e._codecs = {
        mp3:   !(a || !t && !o.canPlayType("audio/mp3;").replace(/^no$/, "")),
        mpeg:  !!t,
        opus:  !!o.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
        ogg:   !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
        oga:   !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
        wav:   !!o.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
        aac:   !!o.canPlayType("audio/aac;").replace(/^no$/, ""),
        caf:   !!o.canPlayType("audio/x-caf;").replace(/^no$/, ""),
        m4a:   !!(o.canPlayType("audio/x-m4a;") || o.canPlayType("audio/m4a;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
        mp4:   !!(o.canPlayType("audio/x-mp4;") || o.canPlayType("audio/mp4;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
        weba:  !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
        webm:  !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
        dolby: !!o.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
        flac:  !!(o.canPlayType("audio/x-flac;") || o.canPlayType("audio/flac;")).replace(/^no$/, "")
      }, e
    }, _enableMobileAudio: function () {
      var e = this || n,
          o = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(e._navigator && e._navigator.userAgent),
          t = !!("ontouchend" in window || e._navigator && e._navigator.maxTouchPoints > 0 || e._navigator && e._navigator.msMaxTouchPoints > 0);
      if (!e._mobileEnabled && e.ctx && (o || t)) {
        e._mobileEnabled = !1, e._mobileUnloaded || 44100 === e.ctx.sampleRate || (e._mobileUnloaded = !0, e.unload()), e._scratchBuffer = e.ctx.createBuffer(1, 1, 22050);
        var r = function () {
          var n = e.ctx.createBufferSource();
          n.buffer = e._scratchBuffer, n.connect(e.ctx.destination), void 0 === n.start ? n.noteOn(0) : n.start(0), n.onended = function () {
            n.disconnect(0), e._mobileEnabled = !0, e.mobileAutoEnable = !1, document.removeEventListener("touchend", r, !0)
          }
        };
        return document.addEventListener("touchend", r, !0), e
      }
    }, _autoSuspend:       function () {
      var e = this;
      if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && n.usingWebAudio) {
        for (var o = 0; o < e._howls.length; o++) if (e._howls[o]._webAudio) for (var t = 0; t < e._howls[o]._sounds.length; t++) if (!e._howls[o]._sounds[t]._paused) return e;
        return e._suspendTimer && clearTimeout(e._suspendTimer), e._suspendTimer = setTimeout(function () {
          e.autoSuspend && (e._suspendTimer = null, e.state = "suspending", e.ctx.suspend().then(function () {
            e.state = "suspended", e._resumeAfterSuspend && (delete e._resumeAfterSuspend, e._autoResume())
          }))
        }, 3e4), e
      }
    }, _autoResume:        function () {
      var e = this;
      if (e.ctx && void 0 !== e.ctx.resume && n.usingWebAudio) return "running" === e.state && e._suspendTimer ? (clearTimeout(e._suspendTimer), e._suspendTimer = null) : "suspended" === e.state ? (e.state = "resuming", e.ctx.resume().then(function () {
        e.state = "running";
        for (var n = 0; n < e._howls.length; n++) e._howls[n]._emit("resume")
      }), e._suspendTimer && (clearTimeout(e._suspendTimer), e._suspendTimer = null)) : "suspending" === e.state && (e._resumeAfterSuspend = !0), e
    }
  };
  var n       = new e, o = function (e) {
    var n = this;
    e.src && 0 !== e.src.length && n.init(e)
  };
  o.prototype = {
    init:              function (e) {
      var o = this;
      return n.ctx || _(), o._autoplay = e.autoplay || !1, o._format = "string" != typeof e.format ? e.format : [e.format], o._html5 = e.html5 || !1, o._muted = e.mute || !1, o._loop = e.loop || !1, o._pool = e.pool || 5, o._preload = "boolean" != typeof e.preload || e.preload, o._rate = e.rate || 1, o._sprite = e.sprite || {}, o._src = "string" != typeof e.src ? e.src : [e.src], o._volume = void 0 !== e.volume ? e.volume : 1, o._duration = 0, o._state = "unloaded", o._sounds = [], o._endTimers = {}, o._queue = [], o._onend = e.onend ? [{fn: e.onend}] : [], o._onfade = e.onfade ? [{fn: e.onfade}] : [], o._onload = e.onload ? [{fn: e.onload}] : [], o._onloaderror = e.onloaderror ? [{fn: e.onloaderror}] : [], o._onpause = e.onpause ? [{fn: e.onpause}] : [], o._onplay = e.onplay ? [{fn: e.onplay}] : [], o._onstop = e.onstop ? [{fn: e.onstop}] : [], o._onmute = e.onmute ? [{fn: e.onmute}] : [], o._onvolume = e.onvolume ? [{fn: e.onvolume}] : [], o._onrate = e.onrate ? [{fn: e.onrate}] : [], o._onseek = e.onseek ? [{fn: e.onseek}] : [], o._onresume = [], o._webAudio = n.usingWebAudio && !o._html5, void 0 !== n.ctx && n.ctx && n.mobileAutoEnable && n._enableMobileAudio(), n._howls.push(o), o._autoplay && o._queue.push({
        event:  "play",
        action: function () {
          o.play()
        }
      }), o._preload && o.load(), o
    }, load:           function () {
      var e = this, o = null;
      if (n.noAudio) return void e._emit("loaderror", null, "No audio support.");
      "string" == typeof e._src && (e._src = [e._src]);
      for (var r = 0; r < e._src.length; r++) {
        var u, i;
        if (e._format && e._format[r]) u = e._format[r]; else {
          if ("string" != typeof(i = e._src[r])) {
            e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
            continue
          }
          u = /^data:audio\/([^;,]+);/i.exec(i), u || (u = /\.([^.]+)$/.exec(i.split("?", 1)[0])), u && (u = u[1].toLowerCase())
        }
        if (u && n.codecs(u)) {
          o = e._src[r];
          break
        }
      }
      return o ? (e._src = o, e._state = "loading", "https:" === window.location.protocol && "http:" === o.slice(0, 5) && (e._html5 = !0, e._webAudio = !1), new t(e), e._webAudio && a(e), e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
    }, play:           function (e, o) {
      var t = this, r = null;
      if ("number" == typeof e) r = e, e = null; else {
        if ("string" == typeof e && "loaded" === t._state && !t._sprite[e]) return null;
        if (void 0 === e) {
          e = "__default";
          for (var a = 0, u = 0; u < t._sounds.length; u++) t._sounds[u]._paused && !t._sounds[u]._ended && (a++, r = t._sounds[u]._id);
          1 === a ? e = null : r = null
        }
      }
      var i = r ? t._soundById(r) : t._inactiveSound();
      if (!i) return null;
      if (r && !e && (e = i._sprite || "__default"), "loaded" !== t._state && !t._sprite[e]) return t._queue.push({
        event:  "play",
        action: function () {
          t.play(t._soundById(i._id) ? i._id : void 0)
        }
      }), i._id;
      if (r && !i._paused) return o || setTimeout(function () {
        t._emit("play", i._id)
      }, 0), i._id;
      t._webAudio && n._autoResume();
      var d                                                                 = Math.max(0, i._seek > 0 ? i._seek : t._sprite[e][0] / 1e3),
          _ = Math.max(0, (t._sprite[e][0] + t._sprite[e][1]) / 1e3 - d), s = 1e3 * _ / Math.abs(i._rate);
      i._paused = !1, i._ended = !1, i._sprite = e, i._seek = d, i._start = t._sprite[e][0] / 1e3, i._stop = (t._sprite[e][0] + t._sprite[e][1]) / 1e3, i._loop = !(!i._loop && !t._sprite[e][2]);
      var l = i._node;
      if (t._webAudio) {
        var c = function () {
          t._refreshBuffer(i);
          var e = i._muted || t._muted ? 0 : i._volume;
          l.gain.setValueAtTime(e, n.ctx.currentTime), i._playStart = n.ctx.currentTime, void 0 === l.bufferSource.start ? i._loop ? l.bufferSource.noteGrainOn(0, d, 86400) : l.bufferSource.noteGrainOn(0, d, _) : i._loop ? l.bufferSource.start(0, d, 86400) : l.bufferSource.start(0, d, _), s !== 1 / 0 && (t._endTimers[i._id] = setTimeout(t._ended.bind(t, i), s)), o || setTimeout(function () {
            t._emit("play", i._id)
          }, 0)
        }, f  = "running" === n.state;
        if ("loaded" === t._state && f) c(); else {
          var p = f || "loaded" !== t._state ? "load" : "resume";
          t.once(p, c, f ? i._id : null), t._clearTimer(i._id)
        }
      } else {
        var v = function () {
          l.currentTime = d, l.muted = i._muted || t._muted || n._muted || l.muted, l.volume = i._volume * n.volume(), l.playbackRate = i._rate, l.play(), s !== 1 / 0 && (t._endTimers[i._id] = setTimeout(t._ended.bind(t, i), s)), o || t._emit("play", i._id)
        }, m  = "loaded" === t._state && (window && window.ejecta || !l.readyState && n._navigator.isCocoonJS);
        if (4 === l.readyState || m) v(); else {
          var h = function () {
            v(), l.removeEventListener(n._canPlayEvent, h, !1)
          };
          l.addEventListener(n._canPlayEvent, h, !1), t._clearTimer(i._id)
        }
      }
      return i._id
    }, pause:          function (e) {
      var n = this;
      if ("loaded" !== n._state) return n._queue.push({
        event: "pause", action: function () {
          n.pause(e)
        }
      }), n;
      for (var o = n._getSoundIds(e), t = 0; t < o.length; t++) {
        n._clearTimer(o[t]);
        var r = n._soundById(o[t]);
        if (r && !r._paused && (r._seek = n.seek(o[t]), r._rateSeek = 0, r._paused = !0, n._stopFade(o[t]), r._node)) if (n._webAudio) {
          if (!r._node.bufferSource) return n;
          void 0 === r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0), n._cleanBuffer(r._node)
        } else isNaN(r._node.duration) && r._node.duration !== 1 / 0 || r._node.pause();
        arguments[1] || n._emit("pause", r ? r._id : null)
      }
      return n
    }, stop:           function (e, n) {
      var o = this;
      if ("loaded" !== o._state) return o._queue.push({
        event: "stop", action: function () {
          o.stop(e)
        }
      }), o;
      for (var t = o._getSoundIds(e), r = 0; r < t.length; r++) {
        o._clearTimer(t[r]);
        var a = o._soundById(t[r]);
        if (a && (a._seek = a._start || 0, a._rateSeek = 0, a._paused = !0, a._ended = !0, o._stopFade(t[r]), a._node)) if (o._webAudio) {
          if (!a._node.bufferSource) return n || o._emit("stop", a._id), o;
          void 0 === a._node.bufferSource.stop ? a._node.bufferSource.noteOff(0) : a._node.bufferSource.stop(0), o._cleanBuffer(a._node)
        } else isNaN(a._node.duration) && a._node.duration !== 1 / 0 || (a._node.currentTime = a._start || 0, a._node.pause());
        a && !n && o._emit("stop", a._id)
      }
      return o
    }, mute:           function (e, o) {
      var t = this;
      if ("loaded" !== t._state) return t._queue.push({
        event: "mute", action: function () {
          t.mute(e, o)
        }
      }), t;
      if (void 0 === o) {
        if ("boolean" != typeof e) return t._muted;
        t._muted = e
      }
      for (var r = t._getSoundIds(o), a = 0; a < r.length; a++) {
        var u = t._soundById(r[a]);
        u && (u._muted = e, t._webAudio && u._node ? u._node.gain.setValueAtTime(e ? 0 : u._volume, n.ctx.currentTime) : u._node && (u._node.muted = !!n._muted || e), t._emit("mute", u._id))
      }
      return t
    }, volume:         function () {
      var e, o, t = this, r = arguments;
      if (0 === r.length) return t._volume;
      1 === r.length || 2 === r.length && void 0 === r[1] ? t._getSoundIds().indexOf(r[0]) >= 0 ? o = parseInt(r[0], 10) : e = parseFloat(r[0]) : r.length >= 2 && (e = parseFloat(r[0]), o = parseInt(r[1], 10));
      var a;
      if (!(void 0 !== e && e >= 0 && e <= 1)) return a = o ? t._soundById(o) : t._sounds[0], a ? a._volume : 0;
      if ("loaded" !== t._state) return t._queue.push({
        event: "volume", action: function () {
          t.volume.apply(t, r)
        }
      }), t;
      void 0 === o && (t._volume = e), o = t._getSoundIds(o);
      for (var u = 0; u < o.length; u++) (a = t._soundById(o[u])) && (a._volume = e, r[2] || t._stopFade(o[u]), t._webAudio && a._node && !a._muted ? a._node.gain.setValueAtTime(e, n.ctx.currentTime) : a._node && !a._muted && (a._node.volume = e * n.volume()), t._emit("volume", a._id));
      return t
    }, fade:           function (e, o, t, r) {
      var a = this, u = Math.abs(e - o), i = e > o ? "out" : "in", d = u / .01, _ = d > 0 ? t / d : t;
      if (_ < 4 && (d = Math.ceil(d / (4 / _)), _ = 4), "loaded" !== a._state) return a._queue.push({
        event:  "fade",
        action: function () {
          a.fade(e, o, t, r)
        }
      }), a;
      a.volume(e, r);
      for (var s = a._getSoundIds(r), l = 0; l < s.length; l++) {
        var c = a._soundById(s[l]);
        if (c) {
          if (r || a._stopFade(s[l]), a._webAudio && !c._muted) {
            var f = n.ctx.currentTime, p = f + t / 1e3;
            c._volume = e, c._node.gain.setValueAtTime(e, f), c._node.gain.linearRampToValueAtTime(o, p)
          }
          var v       = e;
          c._interval = setInterval(function (n, t) {
            d > 0 && (v += "in" === i ? .01 : -.01), v = Math.max(0, v), v = Math.min(1, v), v = Math.round(100 * v) / 100, a._webAudio ? (void 0 === r && (a._volume = v), t._volume = v) : a.volume(v, n, !0), (o < e && v <= o || o > e && v >= o) && (clearInterval(t._interval), t._interval = null, a.volume(o, n), a._emit("fade", n))
          }.bind(a, s[l], c), _)
        }
      }
      return a
    }, _stopFade:      function (e) {
      var o = this, t = o._soundById(e);
      return t && t._interval && (o._webAudio && t._node.gain.cancelScheduledValues(n.ctx.currentTime), clearInterval(t._interval), t._interval = null, o._emit("fade", e)), o
    }, loop:           function () {
      var e, n, o, t = this, r = arguments;
      if (0 === r.length) return t._loop;
      if (1 === r.length) {
        if ("boolean" != typeof r[0]) return !!(o = t._soundById(parseInt(r[0], 10))) && o._loop;
        e = r[0], t._loop = e
      } else 2 === r.length && (e = r[0], n = parseInt(r[1], 10));
      for (var a = t._getSoundIds(n), u = 0; u < a.length; u++) (o = t._soundById(a[u])) && (o._loop = e, t._webAudio && o._node && o._node.bufferSource && (o._node.bufferSource.loop = e, e && (o._node.bufferSource.loopStart = o._start || 0, o._node.bufferSource.loopEnd = o._stop)));
      return t
    }, rate:           function () {
      var e, o, t = this, r = arguments;
      if (0 === r.length) o = t._sounds[0]._id; else if (1 === r.length) {
        var a = t._getSoundIds(), u = a.indexOf(r[0]);
        u >= 0 ? o = parseInt(r[0], 10) : e = parseFloat(r[0])
      } else 2 === r.length && (e = parseFloat(r[0]), o = parseInt(r[1], 10));
      var i;
      if ("number" != typeof e) return i = t._soundById(o), i ? i._rate : t._rate;
      if ("loaded" !== t._state) return t._queue.push({
        event: "rate", action: function () {
          t.rate.apply(t, r)
        }
      }), t;
      void 0 === o && (t._rate = e), o = t._getSoundIds(o);
      for (var d = 0; d < o.length; d++) if (i = t._soundById(o[d])) {
        i._rateSeek = t.seek(o[d]), i._playStart = t._webAudio ? n.ctx.currentTime : i._playStart, i._rate = e, t._webAudio && i._node && i._node.bufferSource ? i._node.bufferSource.playbackRate.value = e : i._node && (i._node.playbackRate = e);
        var _ = t.seek(o[d]), s = (t._sprite[i._sprite][0] + t._sprite[i._sprite][1]) / 1e3 - _,
            l                   = 1e3 * s / Math.abs(i._rate);
        !t._endTimers[o[d]] && i._paused || (t._clearTimer(o[d]), t._endTimers[o[d]] = setTimeout(t._ended.bind(t, i), l)), t._emit("rate", i._id)
      }
      return t
    }, seek:           function () {
      var e, o, t = this, r = arguments;
      if (0 === r.length) o = t._sounds[0]._id; else if (1 === r.length) {
        var a = t._getSoundIds(), u = a.indexOf(r[0]);
        u >= 0 ? o = parseInt(r[0], 10) : (o = t._sounds[0]._id, e = parseFloat(r[0]))
      } else 2 === r.length && (e = parseFloat(r[0]), o = parseInt(r[1], 10));
      if (void 0 === o) return t;
      if ("loaded" !== t._state) return t._queue.push({
        event: "seek", action: function () {
          t.seek.apply(t, r)
        }
      }), t;
      var i = t._soundById(o);
      if (i) {
        if (!("number" == typeof e && e >= 0)) {
          if (t._webAudio) {
            var d = t.playing(o) ? n.ctx.currentTime - i._playStart : 0, _ = i._rateSeek ? i._rateSeek - i._seek : 0;
            return i._seek + (_ + d * Math.abs(i._rate))
          }
          return i._node.currentTime
        }
        var s = t.playing(o);
        s && t.pause(o, !0), i._seek = e, i._ended = !1, t._clearTimer(o), s && t.play(o, !0), !t._webAudio && i._node && (i._node.currentTime = e), t._emit("seek", o)
      }
      return t
    }, playing:        function (e) {
      var n = this;
      if ("number" == typeof e) {
        var o = n._soundById(e);
        return !!o && !o._paused
      }
      for (var t = 0; t < n._sounds.length; t++) if (!n._sounds[t]._paused) return !0;
      return !1
    }, duration:       function (e) {
      var n = this, o = n._duration, t = n._soundById(e);
      return t && (o = n._sprite[t._sprite][1] / 1e3), o
    }, state:          function () {
      return this._state
    }, unload:         function () {
      for (var e = this, o = e._sounds, t = 0; t < o.length; t++) {
        o[t]._paused || e.stop(o[t]._id), e._webAudio || (o[t]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA", o[t]._node.removeEventListener("error", o[t]._errorFn, !1), o[t]._node.removeEventListener(n._canPlayEvent, o[t]._loadFn, !1)), delete o[t]._node, e._clearTimer(o[t]._id);
        var a = n._howls.indexOf(e);
        a >= 0 && n._howls.splice(a, 1)
      }
      var u = !0;
      for (t = 0; t < n._howls.length; t++) if (n._howls[t]._src === e._src) {
        u = !1;
        break
      }
      return r && u && delete r[e._src], n.noAudio = !1, e._state = "unloaded", e._sounds = [], e = null, null
    }, on:             function (e, n, o, t) {
      var r = this, a = r["_on" + e];
      return "function" == typeof n && a.push(t ? {id: o, fn: n, once: t} : {id: o, fn: n}), r
    }, off:            function (e, n, o) {
      var t = this, r = t["_on" + e], a = 0;
      if (n) {
        for (a = 0; a < r.length; a++) if (n === r[a].fn && o === r[a].id) {
          r.splice(a, 1);
          break
        }
      } else if (e) t["_on" + e] = []; else {
        var u = Object.keys(t);
        for (a = 0; a < u.length; a++) 0 === u[a].indexOf("_on") && Array.isArray(t[u[a]]) && (t[u[a]] = [])
      }
      return t
    }, once:           function (e, n, o) {
      var t = this;
      return t.on(e, n, o, 1), t
    }, _emit:          function (e, n, o) {
      for (var t = this, r = t["_on" + e], a = r.length - 1; a >= 0; a--) r[a].id && r[a].id !== n && "load" !== e || (setTimeout(function (e) {
        e.call(this, n, o)
      }.bind(t, r[a].fn), 0), r[a].once && t.off(e, r[a].fn, r[a].id));
      return t
    }, _loadQueue:     function () {
      var e = this;
      if (e._queue.length > 0) {
        var n = e._queue[0];
        e.once(n.event, function () {
          e._queue.shift(), e._loadQueue()
        }), n.action()
      }
      return e
    }, _ended:         function (e) {
      var o = this, t = e._sprite, r = !(!e._loop && !o._sprite[t][2]);
      if (o._emit("end", e._id), !o._webAudio && r && o.stop(e._id, !0).play(e._id), o._webAudio && r) {
        o._emit("play", e._id), e._seek = e._start || 0, e._rateSeek = 0, e._playStart = n.ctx.currentTime;
        var a               = 1e3 * (e._stop - e._start) / Math.abs(e._rate);
        o._endTimers[e._id] = setTimeout(o._ended.bind(o, e), a)
      }
      return o._webAudio && !r && (e._paused = !0, e._ended = !0, e._seek = e._start || 0, e._rateSeek = 0, o._clearTimer(e._id), o._cleanBuffer(e._node), n._autoSuspend()), o._webAudio || r || o.stop(e._id), o
    }, _clearTimer:    function (e) {
      var n = this;
      return n._endTimers[e] && (clearTimeout(n._endTimers[e]), delete n._endTimers[e]), n
    }, _soundById:     function (e) {
      for (var n = this, o = 0; o < n._sounds.length; o++) if (e === n._sounds[o]._id) return n._sounds[o];
      return null
    }, _inactiveSound: function () {
      var e = this;
      e._drain();
      for (var n = 0; n < e._sounds.length; n++) if (e._sounds[n]._ended) return e._sounds[n].reset();
      return new t(e)
    }, _drain:         function () {
      var e = this, n = e._pool, o = 0, t = 0;
      if (!(e._sounds.length < n)) {
        for (t = 0; t < e._sounds.length; t++) e._sounds[t]._ended && o++;
        for (t = e._sounds.length - 1; t >= 0; t--) {
          if (o <= n) return;
          e._sounds[t]._ended && (e._webAudio && e._sounds[t]._node && e._sounds[t]._node.disconnect(0), e._sounds.splice(t, 1), o--)
        }
      }
    }, _getSoundIds:   function (e) {
      var n = this;
      if (void 0 === e) {
        for (var o = [], t = 0; t < n._sounds.length; t++) o.push(n._sounds[t]._id);
        return o
      }
      return [e]
    }, _refreshBuffer: function (e) {
      var o = this;
      return e._node.bufferSource = n.ctx.createBufferSource(), e._node.bufferSource.buffer = r[o._src], e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node), e._node.bufferSource.loop = e._loop, e._loop && (e._node.bufferSource.loopStart = e._start || 0, e._node.bufferSource.loopEnd = e._stop), e._node.bufferSource.playbackRate.value = e._rate, o
    }, _cleanBuffer:   function (e) {
      var n = this;
      if (n._scratchBuffer) {
        e.bufferSource.onended = null, e.bufferSource.disconnect(0);
        try {
          e.bufferSource.buffer = n._scratchBuffer
        } catch (e) {
        }
      }
      return e.bufferSource = null, n
    }
  };
  var t       = function (e) {
    this._parent = e, this.init()
  };
  t.prototype = {
    init:              function () {
      var e = this, o = e._parent;
      return e._muted = o._muted, e._loop = o._loop, e._volume = o._volume, e._muted = o._muted, e._rate = o._rate, e._seek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++n._counter, o._sounds.push(e), e.create(), e
    }, create:         function () {
      var e = this, o = e._parent, t = n._muted || e._muted || e._parent._muted ? 0 : e._volume;
      return o._webAudio ? (e._node = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(), e._node.gain.setValueAtTime(t, n.ctx.currentTime), e._node.paused = !0, e._node.connect(n.masterGain)) : (e._node = new Audio, e._errorFn = e._errorListener.bind(e), e._node.addEventListener("error", e._errorFn, !1), e._loadFn = e._loadListener.bind(e), e._node.addEventListener(n._canPlayEvent, e._loadFn, !1), e._node.src = o._src, e._node.preload = "auto", e._node.volume = t * n.volume(), e._node.load()), e
    }, reset:          function () {
      var e = this, o = e._parent;
      return e._muted = o._muted, e._loop = o._loop, e._volume = o._volume, e._muted = o._muted, e._rate = o._rate, e._seek = 0, e._rateSeek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++n._counter, e
    }, _errorListener: function () {
      var e = this;
      e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0), e._node.removeEventListener("error", e._errorListener, !1)
    }, _loadListener:  function () {
      var e = this, o = e._parent;
      o._duration = Math.ceil(10 * e._node.duration) / 10, 0 === Object.keys(o._sprite).length && (o._sprite = {__default: [0, 1e3 * o._duration]}), "loaded" !== o._state && (o._state = "loaded", o._emit("load"), o._loadQueue()), e._node.removeEventListener(n._canPlayEvent, e._loadFn, !1)
    }
  };
  var r       = {}, a = function (e) {
    var n = e._src;
    if (r[n]) return e._duration = r[n].duration, void d(e);
    if (/^data:[^;]+;base64,/.test(n)) {
      for (var o = atob(n.split(",")[1]), t = new Uint8Array(o.length), a = 0; a < o.length; ++a) t[a] = o.charCodeAt(a);
      i(t.buffer, e)
    } else {
      var _ = new XMLHttpRequest;
      _.open("GET", n, !0), _.responseType = "arraybuffer", _.onload = function () {
        var n = (_.status + "")[0];
        if ("0" !== n && "2" !== n && "3" !== n) return void e._emit("loaderror", null, "Failed loading audio file with status: " + _.status + ".");
        i(_.response, e)
      }, _.onerror = function () {
        e._webAudio && (e._html5 = !0, e._webAudio = !1, e._sounds = [], delete r[n], e.load())
      }, u(_)
    }
  }, u        = function (e) {
    try {
      e.send()
    } catch (n) {
      e.onerror()
    }
  }, i        = function (e, o) {
    n.ctx.decodeAudioData(e, function (e) {
      e && o._sounds.length > 0 && (r[o._src] = e, d(o, e))
    }, function () {
      o._emit("loaderror", null, "Decoding audio data failed.")
    })
  }, d        = function (e, n) {
    n && !e._duration && (e._duration = n.duration), 0 === Object.keys(e._sprite).length && (e._sprite = {__default: [0, 1e3 * e._duration]}), "loaded" !== e._state && (e._state = "loaded", e._emit("load"), e._loadQueue())
  }, _        = function () {
    try {
      "undefined" != typeof AudioContext ? n.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? n.ctx = new webkitAudioContext : n.usingWebAudio = !1
    } catch (e) {
      n.usingWebAudio = !1
    }
    var e                                                                              = /iP(hone|od|ad)/.test(n._navigator && n._navigator.platform),
        o = n._navigator && n._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/), t = o ? parseInt(o[1], 10) : null;
    if (e && t && t < 9) {
      var r = /safari/.test(n._navigator && n._navigator.userAgent.toLowerCase());
      (n._navigator && n._navigator.standalone && !r || n._navigator && !n._navigator.standalone && !r) && (n.usingWebAudio = !1)
    }
    n.usingWebAudio && (n.masterGain = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(), n.masterGain.gain.value = 1, n.masterGain.connect(n.ctx.destination)), n._setup()
  };
  "function" == typeof define && define.amd && define([], function () {
    return {Howler: n, Howl: o}
  }), "undefined" != typeof exports && (exports.Howler = n, exports.Howl = o), "undefined" != typeof window ? (window.HowlerGlobal = e, window.Howler = n, window.Howl = o, window.Sound = t) : "undefined" != typeof global && (global.HowlerGlobal = e, global.Howler = n, global.Howl = o, global.Sound = t)
}(), function () {
  "use strict";
  HowlerGlobal.prototype._pos = [0, 0, 0], HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0], HowlerGlobal.prototype.stereo = function (n) {
    var e = this;
    if (!e.ctx || !e.ctx.listener) return e;
    for (var o = e._howls.length - 1; o >= 0; o--) e._howls[o].stereo(n);
    return e
  }, HowlerGlobal.prototype.pos = function (n, e, o) {
    var t = this;
    return t.ctx && t.ctx.listener ? (e = "number" != typeof e ? t._pos[1] : e, o = "number" != typeof o ? t._pos[2] : o, "number" != typeof n ? t._pos : (t._pos = [n, e, o], t.ctx.listener.setPosition(t._pos[0], t._pos[1], t._pos[2]), t)) : t
  }, HowlerGlobal.prototype.orientation = function (n, e, o, t, r, i) {
    var a = this;
    if (!a.ctx || !a.ctx.listener) return a;
    var p = a._orientation;
    return e = "number" != typeof e ? p[1] : e, o = "number" != typeof o ? p[2] : o, t = "number" != typeof t ? p[3] : t, r = "number" != typeof r ? p[4] : r, i = "number" != typeof i ? p[5] : i, "number" != typeof n ? p : (a._orientation = [n, e, o, t, r, i], a.ctx.listener.setOrientation(n, e, o, t, r, i), a)
  }, Howl.prototype.init = function (n) {
    return function (e) {
      var o = this;
      return o._orientation = e.orientation || [1, 0, 0], o._stereo = e.stereo || null, o._pos = e.pos || null, o._pannerAttr = {
        coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : 360,
        coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : 360,
        coneOuterGain:  void 0 !== e.coneOuterGain ? e.coneOuterGain : 0,
        distanceModel:  void 0 !== e.distanceModel ? e.distanceModel : "inverse",
        maxDistance:    void 0 !== e.maxDistance ? e.maxDistance : 1e4,
        panningModel:   void 0 !== e.panningModel ? e.panningModel : "HRTF",
        refDistance:    void 0 !== e.refDistance ? e.refDistance : 1,
        rolloffFactor:  void 0 !== e.rolloffFactor ? e.rolloffFactor : 1
      }, o._onstereo = e.onstereo ? [{fn: e.onstereo}] : [], o._onpos = e.onpos ? [{fn: e.onpos}] : [], o._onorientation = e.onorientation ? [{fn: e.onorientation}] : [], n.call(this, e)
    }
  }(Howl.prototype.init), Howl.prototype.stereo = function (e, o) {
    var t = this;
    if (!t._webAudio) return t;
    if ("loaded" !== t._state) return t._queue.push({
      event: "stereo", action: function () {
        t.stereo(e, o)
      }
    }), t;
    var r = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
    if (void 0 === o) {
      if ("number" != typeof e) return t._stereo;
      t._stereo = e, t._pos = [e, 0, 0]
    }
    for (var i = t._getSoundIds(o), a = 0; a < i.length; a++) {
      var p = t._soundById(i[a]);
      if (p) {
        if ("number" != typeof e) return p._stereo;
        p._stereo = e, p._pos = [e, 0, 0], p._node && (p._pannerAttr.panningModel = "equalpower", p._panner && p._panner.pan || n(p, r), "spatial" === r ? p._panner.setPosition(e, 0, 0) : p._panner.pan.value = e), t._emit("stereo", p._id)
      }
    }
    return t
  }, Howl.prototype.pos = function (e, o, t, r) {
    var i = this;
    if (!i._webAudio) return i;
    if ("loaded" !== i._state) return i._queue.push({
      event: "pos", action: function () {
        i.pos(e, o, t, r)
      }
    }), i;
    if (o = "number" != typeof o ? 0 : o, t = "number" != typeof t ? -.5 : t, void 0 === r) {
      if ("number" != typeof e) return i._pos;
      i._pos = [e, o, t]
    }
    for (var a = i._getSoundIds(r), p = 0; p < a.length; p++) {
      var s = i._soundById(a[p]);
      if (s) {
        if ("number" != typeof e) return s._pos;
        s._pos = [e, o, t], s._node && (s._panner && !s._panner.pan || n(s, "spatial"), s._panner.setPosition(e, o, t)), i._emit("pos", s._id)
      }
    }
    return i
  }, Howl.prototype.orientation = function (e, o, t, r) {
    var i = this;
    if (!i._webAudio) return i;
    if ("loaded" !== i._state) return i._queue.push({
      event: "orientation", action: function () {
        i.orientation(e, o, t, r)
      }
    }), i;
    if (o = "number" != typeof o ? i._orientation[1] : o, t = "number" != typeof t ? i._orientation[2] : t, void 0 === r) {
      if ("number" != typeof e) return i._orientation;
      i._orientation = [e, o, t]
    }
    for (var a = i._getSoundIds(r), p = 0; p < a.length; p++) {
      var s = i._soundById(a[p]);
      if (s) {
        if ("number" != typeof e) return s._orientation;
        s._orientation = [e, o, t], s._node && (s._panner || (s._pos || (s._pos = i._pos || [0, 0, -.5]), n(s, "spatial")), s._panner.setOrientation(e, o, t)), i._emit("orientation", s._id)
      }
    }
    return i
  }, Howl.prototype.pannerAttr = function () {
    var e, o, t, r = this, i = arguments;
    if (!r._webAudio) return r;
    if (0 === i.length) return r._pannerAttr;
    if (1 === i.length) {
      if ("object" != typeof i[0]) return t = r._soundById(parseInt(i[0], 10)), t ? t._pannerAttr : r._pannerAttr;
      e = i[0], void 0 === o && (r._pannerAttr = {
        coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : r._coneInnerAngle,
        coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : r._coneOuterAngle,
        coneOuterGain:  void 0 !== e.coneOuterGain ? e.coneOuterGain : r._coneOuterGain,
        distanceModel:  void 0 !== e.distanceModel ? e.distanceModel : r._distanceModel,
        maxDistance:    void 0 !== e.maxDistance ? e.maxDistance : r._maxDistance,
        panningModel:   void 0 !== e.panningModel ? e.panningModel : r._panningModel,
        refDistance:    void 0 !== e.refDistance ? e.refDistance : r._refDistance,
        rolloffFactor:  void 0 !== e.rolloffFactor ? e.rolloffFactor : r._rolloffFactor
      })
    } else 2 === i.length && (e = i[0], o = parseInt(i[1], 10));
    for (var a = r._getSoundIds(o), p = 0; p < a.length; p++) if (t = r._soundById(a[p])) {
      var s = t._pannerAttr;
      s     = {
        coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : s.coneInnerAngle,
        coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : s.coneOuterAngle,
        coneOuterGain:  void 0 !== e.coneOuterGain ? e.coneOuterGain : s.coneOuterGain,
        distanceModel:  void 0 !== e.distanceModel ? e.distanceModel : s.distanceModel,
        maxDistance:    void 0 !== e.maxDistance ? e.maxDistance : s.maxDistance,
        panningModel:   void 0 !== e.panningModel ? e.panningModel : s.panningModel,
        refDistance:    void 0 !== e.refDistance ? e.refDistance : s.refDistance,
        rolloffFactor:  void 0 !== e.rolloffFactor ? e.rolloffFactor : s.rolloffFactor
      };
      var l = t._panner;
      l ? (l.coneInnerAngle = s.coneInnerAngle, l.coneOuterAngle = s.coneOuterAngle, l.coneOuterGain = s.coneOuterGain, l.distanceModel = s.distanceModel, l.maxDistance = s.maxDistance, l.panningModel = s.panningModel, l.refDistance = s.refDistance, l.rolloffFactor = s.rolloffFactor) : (t._pos || (t._pos = r._pos || [0, 0, -.5]), n(t, "spatial"))
    }
    return r
  }, Sound.prototype.init = function (n) {
    return function () {
      var e = this, o = e._parent;
      e._orientation = o._orientation, e._stereo = o._stereo, e._pos = o._pos, e._pannerAttr = o._pannerAttr, n.call(this), e._stereo ? o.stereo(e._stereo) : e._pos && o.pos(e._pos[0], e._pos[1], e._pos[2], e._id)
    }
  }(Sound.prototype.init), Sound.prototype.reset = function (n) {
    return function () {
      var e = this, o = e._parent;
      return e._orientation = o._orientation, e._pos = o._pos, e._pannerAttr = o._pannerAttr, n.call(this)
    }
  }(Sound.prototype.reset);
  var n = function (n, e) {
    e = e || "spatial", "spatial" === e ? (n._panner = Howler.ctx.createPanner(), n._panner.coneInnerAngle = n._pannerAttr.coneInnerAngle, n._panner.coneOuterAngle = n._pannerAttr.coneOuterAngle, n._panner.coneOuterGain = n._pannerAttr.coneOuterGain, n._panner.distanceModel = n._pannerAttr.distanceModel, n._panner.maxDistance = n._pannerAttr.maxDistance, n._panner.panningModel = n._pannerAttr.panningModel, n._panner.refDistance = n._pannerAttr.refDistance, n._panner.rolloffFactor = n._pannerAttr.rolloffFactor, n._panner.setPosition(n._pos[0], n._pos[1], n._pos[2]), n._panner.setOrientation(n._orientation[0], n._orientation[1], n._orientation[2])) : (n._panner = Howler.ctx.createStereoPanner(), n._panner.pan.value = n._stereo), n._panner.connect(n._node), n._paused || n._parent.pause(n._id, !0).play(n._id)
  }
}(), function (jQuery, undefined) {
  function clamp(value, prop, allowEmpty) {
    var type = propTypes[prop.type] || {};
    return null == value ? allowEmpty || !prop.def ? null : prop.def : (value = type.floor ? ~~value : parseFloat(value), isNaN(value) ? prop.def : type.mod ? (value + type.mod) % type.mod : 0 > value ? 0 : type.max < value ? type.max : value)
  }

  function stringParse(string) {
    var inst = color(), rgba = inst._rgba = [];
    return string = string.toLowerCase(), each(stringParsers, function (i, parser) {
      var parsed, match = parser.re.exec(string), values = match && parser.parse(match),
          spaceName                                      = parser.space || "rgba";
      if (values) return parsed = inst[spaceName](values), inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache], rgba = inst._rgba = parsed._rgba, !1
    }), rgba.length ? ("0,0,0,0" === rgba.join() && jQuery.extend(rgba, colors.transparent), inst) : colors[string]
  }

  function hue2rgb(p, q, h) {
    return h = (h + 1) % 1, 6 * h < 1 ? p + (q - p) * h * 6 : 2 * h < 1 ? q : 3 * h < 2 ? p + (q - p) * (2 / 3 - h) * 6 : p
  }

  var colors, rplusequals = /^([\-+])=\s*(\d+\.?\d*)/, stringParsers = [{
        re:    /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (execResult) {
          return [execResult[1], execResult[2], execResult[3], execResult[4]]
        }
      }, {
        re:    /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (execResult) {
          return [2.55 * execResult[1], 2.55 * execResult[2], 2.55 * execResult[3], execResult[4]]
        }
      }, {
        re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (execResult) {
          return [parseInt(execResult[1], 16), parseInt(execResult[2], 16), parseInt(execResult[3], 16)]
        }
      }, {
        re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (execResult) {
          return [parseInt(execResult[1] + execResult[1], 16), parseInt(execResult[2] + execResult[2], 16), parseInt(execResult[3] + execResult[3], 16)]
        }
      }, {
        re:    /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        space: "hsla",
        parse: function (execResult) {
          return [execResult[1], execResult[2] / 100, execResult[3] / 100, execResult[4]]
        }
      }], color                                                      = jQuery.Color = function (color, green, blue, alpha) {
        return new jQuery.Color.fn.parse(color, green, blue, alpha)
      }, spaces    = {
        rgba: {
          props: {
            red:   {idx: 0, type: "byte"},
            green: {idx: 1, type: "byte"},
            blue:  {idx: 2, type: "byte"}
          }
        },
        hsla: {
          props: {
            hue:        {idx: 0, type: "degrees"},
            saturation: {idx: 1, type: "percent"},
            lightness:  {idx: 2, type: "percent"}
          }
        }
      }, propTypes = {byte: {floor: !0, max: 255}, percent: {max: 1}, degrees: {mod: 360, floor: !0}},
      support      = color.support = {}, supportElem = jQuery("<p>")[0], each = jQuery.each;
  supportElem.style.cssText = "background-color:rgba(1,1,1,.5)", support.rgba = supportElem.style.backgroundColor.indexOf("rgba") > -1, each(spaces, function (spaceName, space) {
    space.cache = "_" + spaceName, space.props.alpha = {idx: 3, type: "percent", def: 1}
  }), color.fn = jQuery.extend(color.prototype, {
    parse:           function (red, green, blue, alpha) {
      if (void 0 === red) return this._rgba = [null, null, null, null], this;
      (red.jquery || red.nodeType) && (red = jQuery(red).css(green), green = void 0);
      var inst = this, type = jQuery.type(red), rgba = this._rgba = [];
      return void 0 !== green && (red = [red, green, blue, alpha], type = "array"), "string" === type ? this.parse(stringParse(red) || colors._default) : "array" === type ? (each(spaces.rgba.props, function (key, prop) {
        rgba[prop.idx] = clamp(red[prop.idx], prop)
      }), this) : "object" === type ? (red instanceof color ? each(spaces, function (spaceName, space) {
        red[space.cache] && (inst[space.cache] = red[space.cache].slice())
      }) : each(spaces, function (spaceName, space) {
        var cache = space.cache;
        each(space.props, function (key, prop) {
          if (!inst[cache] && space.to) {
            if ("alpha" === key || null == red[key]) return;
            inst[cache] = space.to(inst._rgba)
          }
          inst[cache][prop.idx] = clamp(red[key], prop, !0)
        }), inst[cache] && jQuery.inArray(null, inst[cache].slice(0, 3)) < 0 && (inst[cache][3] = 1, space.from && (inst._rgba = space.from(inst[cache])))
      }), this) : void 0
    }, is:           function (compare) {
      var is = color(compare), same = !0, inst = this;
      return each(spaces, function (_, space) {
        var localCache, isCache = is[space.cache];
        return isCache && (localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [], each(space.props, function (_, prop) {
          if (null != isCache[prop.idx]) return same = isCache[prop.idx] === localCache[prop.idx]
        })), same
      }), same
    }, _space:       function () {
      var used = [], inst = this;
      return each(spaces, function (spaceName, space) {
        inst[space.cache] && used.push(spaceName)
      }), used.pop()
    }, transition:   function (other, distance) {
      var end                                                                   = color(other), spaceName = end._space(), space = spaces[spaceName],
          startColor                                                            = 0 === this.alpha() ? color("transparent") : this,
          start = startColor[space.cache] || space.to(startColor._rgba), result = start.slice();
      return end = end[space.cache], each(space.props, function (key, prop) {
        var index = prop.idx, startValue = start[index], endValue = end[index], type = propTypes[prop.type] || {};
        null !== endValue && (null === startValue ? result[index] = endValue : (type.mod && (endValue - startValue > type.mod / 2 ? startValue += type.mod : startValue - endValue > type.mod / 2 && (startValue -= type.mod)), result[index] = clamp((endValue - startValue) * distance + startValue, prop)))
      }), this[spaceName](result)
    }, blend:        function (opaque) {
      if (1 === this._rgba[3]) return this;
      var rgb = this._rgba.slice(), a = rgb.pop(), blend = color(opaque)._rgba;
      return color(jQuery.map(rgb, function (v, i) {
        return (1 - a) * blend[i] + a * v
      }))
    }, toRgbaString: function () {
      var prefix = "rgba(", rgba = jQuery.map(this._rgba, function (v, i) {
        return null == v ? i > 2 ? 1 : 0 : v
      });
      return 1 === rgba[3] && (rgba.pop(), prefix = "rgb("), prefix + rgba.join() + ")"
    }, toHslaString: function () {
      var prefix = "hsla(", hsla = jQuery.map(this.hsla(), function (v, i) {
        return null == v && (v = i > 2 ? 1 : 0), i && i < 3 && (v = Math.round(100 * v) + "%"), v
      });
      return 1 === hsla[3] && (hsla.pop(), prefix = "hsl("), prefix + hsla.join() + ")"
    }, toHexString:  function (includeAlpha) {
      var rgba = this._rgba.slice(), alpha = rgba.pop();
      return includeAlpha && rgba.push(~~(255 * alpha)), "#" + jQuery.map(rgba, function (v) {
        return v = (v || 0).toString(16), 1 === v.length ? "0" + v : v
      }).join("")
    }, toString:     function () {
      return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
    }
  }), color.fn.parse.prototype = color.fn, spaces.hsla.to = function (rgba) {
    if (null == rgba[0] || null == rgba[1] || null == rgba[2]) return [null, null, null, rgba[3]];
    var h, s, r = rgba[0] / 255, g = rgba[1] / 255, b = rgba[2] / 255, a = rgba[3], max = Math.max(r, g, b),
        min                                                                             = Math.min(r, g, b), diff = max - min, add = max + min, l = .5 * add;
    return h = min === max ? 0 : r === max ? 60 * (g - b) / diff + 360 : g === max ? 60 * (b - r) / diff + 120 : 60 * (r - g) / diff + 240, s = 0 === diff ? 0 : l <= .5 ? diff / add : diff / (2 - add), [Math.round(h) % 360, s, l, null == a ? 1 : a]
  }, spaces.hsla.from = function (hsla) {
    if (null == hsla[0] || null == hsla[1] || null == hsla[2]) return [null, null, null, hsla[3]];
    var h = hsla[0] / 360, s = hsla[1], l = hsla[2], a = hsla[3], q = l <= .5 ? l * (1 + s) : l + s - l * s,
        p                                                           = 2 * l - q;
    return [Math.round(255 * hue2rgb(p, q, h + 1 / 3)), Math.round(255 * hue2rgb(p, q, h)), Math.round(255 * hue2rgb(p, q, h - 1 / 3)), a]
  }, each(spaces, function (spaceName, space) {
    var props = space.props, cache = space.cache, to = space.to, from = space.from;
    color.fn[spaceName] = function (value) {
      if (to && !this[cache] && (this[cache] = to(this._rgba)), void 0 === value) return this[cache].slice();
      var ret, type = jQuery.type(value), arr = "array" === type || "object" === type ? value : arguments,
          local                               = this[cache].slice();
      return each(props, function (key, prop) {
        var val = arr["object" === type ? key : prop.idx];
        null == val && (val = local[prop.idx]), local[prop.idx] = clamp(val, prop)
      }), from ? (ret = color(from(local)), ret[cache] = local, ret) : color(local)
    }, each(props, function (key, prop) {
      color.fn[key] || (color.fn[key] = function (value) {
        var match, vtype = jQuery.type(value), fn = "alpha" === key ? this._hsla ? "hsla" : "rgba" : spaceName,
            local                                 = this[fn](), cur               = local[prop.idx];
        return "undefined" === vtype ? cur : ("function" === vtype && (value = value.call(this, cur), vtype = jQuery.type(value)), null == value && prop.empty ? this : ("string" === vtype && (match = rplusequals.exec(value)) && (value = cur + parseFloat(match[2]) * ("+" === match[1] ? 1 : -1)), local[prop.idx] = value, this[fn](local)))
      })
    })
  }), color.hook = function (hook) {
    var hooks = hook.split(" ");
    each(hooks, function (i, hook) {
      jQuery.cssHooks[hook] = {
        set: function (elem, value) {
          var parsed, curElem, backgroundColor = "";
          if ("transparent" !== value && ("string" !== jQuery.type(value) || (parsed = stringParse(value)))) {
            if (value = color(parsed || value), !support.rgba && 1 !== value._rgba[3]) {
              for (curElem = "backgroundColor" === hook ? elem.parentNode : elem; ("" === backgroundColor || "transparent" === backgroundColor) && curElem && curElem.style;) try {
                backgroundColor = jQuery.css(curElem, "backgroundColor"), curElem = curElem.parentNode
              } catch (e) {
              }
              value = value.blend(backgroundColor && "transparent" !== backgroundColor ? backgroundColor : "_default")
            }
            value = value.toRgbaString()
          }
          try {
            elem.style[hook] = value
          } catch (e) {
          }
        }
      }, jQuery.fx.step[hook] = function (fx) {
        fx.colorInit || (fx.start = color(fx.elem, hook), fx.end = color(fx.end), fx.colorInit = !0), jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos))
      }
    })
  }, color.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"), jQuery.cssHooks.borderColor = {
    expand: function (value) {
      var expanded = {};
      return each(["Top", "Right", "Bottom", "Left"], function (i, part) {
        expanded["border" + part + "Color"] = value
      }), expanded
    }
  }, colors = jQuery.Color.names = {
    aqua:        "#00ffff",
    black:       "#000000",
    blue:        "#0000ff",
    fuchsia:     "#ff00ff",
    gray:        "#808080",
    green:       "#008000",
    lime:        "#00ff00",
    maroon:      "#800000",
    navy:        "#000080",
    olive:       "#808000",
    purple:      "#800080",
    red:         "#ff0000",
    silver:      "#c0c0c0",
    teal:        "#008080",
    white:       "#ffffff",
    yellow:      "#ffff00",
    transparent: [null, null, null, 0],
    _default:    "#ffffff"
  }
}(jQuery), jQuery.easing.jswing = jQuery.easing.swing, jQuery.extend(jQuery.easing, {
  def:              "easeOutQuad",
  swing:            function (x, t, b, c, d) {
    return jQuery.easing[jQuery.easing.def](x, t, b, c, d)
  },
  easeInQuad:       function (x, t, b, c, d) {
    return c * (t /= d) * t + b
  },
  easeOutQuad:      function (x, t, b, c, d) {
    return -c * (t /= d) * (t - 2) + b
  },
  easeInOutQuad:    function (x, t, b, c, d) {
    return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b
  },
  easeInCubic:      function (x, t, b, c, d) {
    return c * (t /= d) * t * t + b
  },
  easeOutCubic:     function (x, t, b, c, d) {
    return c * ((t = t / d - 1) * t * t + 1) + b
  },
  easeInOutCubic:   function (x, t, b, c, d) {
    return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b
  },
  easeInQuart:      function (x, t, b, c, d) {
    return c * (t /= d) * t * t * t + b
  },
  easeOutQuart:     function (x, t, b, c, d) {
    return -c * ((t = t / d - 1) * t * t * t - 1) + b
  },
  easeInOutQuart:   function (x, t, b, c, d) {
    return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b
  },
  easeInQuint:      function (x, t, b, c, d) {
    return c * (t /= d) * t * t * t * t + b
  },
  easeOutQuint:     function (x, t, b, c, d) {
    return c * ((t = t / d - 1) * t * t * t * t + 1) + b
  },
  easeInOutQuint:   function (x, t, b, c, d) {
    return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b
  },
  easeInSine:       function (x, t, b, c, d) {
    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b
  },
  easeOutSine:      function (x, t, b, c, d) {
    return c * Math.sin(t / d * (Math.PI / 2)) + b
  },
  easeInOutSine:    function (x, t, b, c, d) {
    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b
  },
  easeInExpo:       function (x, t, b, c, d) {
    return 0 == t ? b : c * Math.pow(2, 10 * (t / d - 1)) + b
  },
  easeOutExpo:      function (x, t, b, c, d) {
    return t == d ? b + c : c * (1 - Math.pow(2, -10 * t / d)) + b
  },
  easeInOutExpo:    function (x, t, b, c, d) {
    return 0 == t ? b : t == d ? b + c : (t /= d / 2) < 1 ? c / 2 * Math.pow(2, 10 * (t - 1)) + b : c / 2 * (2 - Math.pow(2, -10 * --t)) + b
  },
  easeInCirc:       function (x, t, b, c, d) {
    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b
  },
  easeOutCirc:      function (x, t, b, c, d) {
    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b
  },
  easeInOutCirc:    function (x, t, b, c, d) {
    return (t /= d / 2) < 1 ? -c / 2 * (Math.sqrt(1 - t * t) - 1) + b : c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b
  },
  easeInElastic:    function (x, t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (0 == t) return b;
    if (1 == (t /= d)) return b + c;
    if (p || (p = .3 * d), a < Math.abs(c)) {
      a     = c;
      var s = p / 4
    } else var s = p / (2 * Math.PI) * Math.asin(c / a);
    return -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) + b
  },
  easeOutElastic:   function (x, t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (0 == t) return b;
    if (1 == (t /= d)) return b + c;
    if (p || (p = .3 * d), a < Math.abs(c)) {
      a     = c;
      var s = p / 4
    } else var s = p / (2 * Math.PI) * Math.asin(c / a);
    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b
  },
  easeInOutElastic: function (x, t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (0 == t) return b;
    if (2 == (t /= d / 2)) return b + c;
    if (p || (p = d * (.3 * 1.5)), a < Math.abs(c)) {
      a     = c;
      var s = p / 4
    } else var s = p / (2 * Math.PI) * Math.asin(c / a);
    return t < 1 ? a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * -.5 + b : a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b
  },
  easeInBack:       function (x, t, b, c, d, s) {
    return void 0 == s && (s = 1.70158), c * (t /= d) * t * ((s + 1) * t - s) + b
  },
  easeOutBack:      function (x, t, b, c, d, s) {
    return void 0 == s && (s = 1.70158), c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b
  },
  easeInOutBack:    function (x, t, b, c, d, s) {
    return void 0 == s && (s = 1.70158), (t /= d / 2) < 1 ? c / 2 * (t * t * ((1 + (s *= 1.525)) * t - s)) + b : c / 2 * ((t -= 2) * t * ((1 + (s *= 1.525)) * t + s) + 2) + b
  },
  easeInBounce:     function (x, t, b, c, d) {
    return c - jQuery.easing.easeOutBounce(x, d - t, 0, c, d) + b
  },
  easeOutBounce:    function (x, t, b, c, d) {
    return (t /= d) < 1 / 2.75 ? c * (7.5625 * t * t) + b : t < 2 / 2.75 ? c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b : t < 2.5 / 2.75 ? c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b : c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b
  },
  easeInOutBounce:  function (x, t, b, c, d) {
    return t < d / 2 ? .5 * jQuery.easing.easeInBounce(x, 2 * t, 0, c, d) + b : .5 * jQuery.easing.easeOutBounce(x, 2 * t - d, 0, c, d) + .5 * c + b
  }
}), function ($) {
  $.fn.drag  = function (str, arg, opts) {
    var type = "string" == typeof str ? str : "", fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;
    return 0 !== type.indexOf("drag") && (type = "drag" + type), opts = (str == fn ? arg : opts) || {}, fn ? this.bind(type, opts, fn) : this.trigger(type)
  };
  var $event = $.event, $special = $event.special, drag = $special.drag = {
    defaults:       {
      which:    1,
      distance: 0,
      not:      ":input",
      handle:   null,
      relative: !1,
      drop:     !0,
      click:    !1
    }, datakey:     "dragdata", noBubble: !0, add: function (obj) {
      var data = $.data(this, drag.datakey), opts = obj.data || {};
      data.related += 1, $.each(drag.defaults, function (key, def) {
        void 0 !== opts[key] && (data[key] = opts[key])
      })
    }, remove:      function () {
      $.data(this, drag.datakey).related -= 1
    }, setup:       function () {
      if (!$.data(this, drag.datakey)) {
        var data = $.extend({related: 0}, drag.defaults);
        $.data(this, drag.datakey, data), $event.add(this, "touchstart mousedown", drag.init, data), this.attachEvent && this.attachEvent("ondragstart", drag.dontstart)
      }
    }, teardown:    function () {
      ($.data(this, drag.datakey) || {}).related || ($.removeData(this, drag.datakey), $event.remove(this, "touchstart mousedown", drag.init), drag.textselect(!0), this.detachEvent && this.detachEvent("ondragstart", drag.dontstart))
    }, init:        function (event) {
      if (!drag.touched) {
        var results, dd = event.data;
        if (!(0 != event.which && dd.which > 0 && event.which != dd.which) && !$(event.target).is(dd.not) && (!dd.handle || $(event.target).closest(dd.handle, event.currentTarget).length) && (drag.touched = "touchstart" == event.type ? this : null, dd.propagates = 1, dd.mousedown = this, dd.interactions = [drag.interaction(this, dd)], dd.target = event.target, dd.pageX = event.pageX, dd.pageY = event.pageY, dd.dragging = null, results = drag.hijack(event, "draginit", dd), dd.propagates)) return results = drag.flatten(results), results && results.length && (dd.interactions = [], $.each(results, function () {
          dd.interactions.push(drag.interaction(this, dd))
        })), dd.propagates = dd.interactions.length, !1 !== dd.drop && $special.drop && $special.drop.handler(event, dd), drag.textselect(!1), drag.touched ? $event.add(drag.touched, "touchmove touchend", drag.handler, dd) : $event.add(document, "mousemove mouseup", drag.handler, dd), !(!drag.touched || dd.live) && void 0
      }
    }, interaction: function (elem, dd) {
      var offset = $(elem)[dd.relative ? "position" : "offset"]() || {top: 0, left: 0};
      return {drag: elem, callback: new drag.callback, droppable: [], offset: offset}
    }, handler:     function (event) {
      var dd = event.data;
      switch (event.type) {
        case!dd.dragging && "touchmove":
          event.preventDefault();
        case!dd.dragging && "mousemove":
          if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2)) break;
          event.target = dd.target, drag.hijack(event, "dragstart", dd), dd.propagates && (dd.dragging = !0);
        case"touchmove":
          event.preventDefault();
        case"mousemove":
          if (dd.dragging) {
            if (drag.hijack(event, "drag", dd), dd.propagates) {
              !1 !== dd.drop && $special.drop && $special.drop.handler(event, dd);
              break
            }
            event.type = "mouseup"
          }
        case"touchend":
        case"mouseup":
        default:
          drag.touched ? $event.remove(drag.touched, "touchmove touchend", drag.handler) : $event.remove(document, "mousemove mouseup", drag.handler), dd.dragging && (!1 !== dd.drop && $special.drop && $special.drop.handler(event, dd), drag.hijack(event, "dragend", dd)), drag.textselect(!0), !1 === dd.click && dd.dragging && $.data(dd.mousedown, "suppress.click", (new Date).getTime() + 5), dd.dragging = drag.touched = !1
      }
    }, hijack:      function (event, type, dd, x, elem) {
      if (dd) {
        var result, ia, callback, orig                       = {event: event.originalEvent, type: event.type},
            mode = type.indexOf("drop") ? "drag" : "drop", i = x || 0,
            len                                              = isNaN(x) ? dd.interactions.length : x;
        event.type = type, event.originalEvent = null, dd.results = [];
        do {
          if (ia = dd.interactions[i]) {
            if ("dragend" !== type && ia.cancelled) continue;
            callback = drag.properties(event, dd, ia), ia.results = [], $(elem || ia[mode] || dd.droppable).each(function (p, subject) {
              if (callback.target = subject, event.isPropagationStopped = function () {
                  return !1
                }, result = subject ? $event.dispatch.call(subject, event, callback) : null, !1 === result ? ("drag" == mode && (ia.cancelled = !0, dd.propagates -= 1), "drop" == type && (ia[mode][p] = null)) : "dropinit" == type && ia.droppable.push(drag.element(result) || subject), "dragstart" == type && (ia.proxy = $(drag.element(result) || ia.drag)[0]), ia.results.push(result), delete event.result, "dropinit" !== type) return result
            }), dd.results[i] = drag.flatten(ia.results), "dropinit" == type && (ia.droppable = drag.flatten(ia.droppable)), "dragstart" != type || ia.cancelled || callback.update()
          }
        } while (++i < len);
        return event.type = orig.type, event.originalEvent = orig.event, drag.flatten(dd.results)
      }
    }, properties:  function (event, dd, ia) {
      var obj = ia.callback;
      return obj.drag = ia.drag, obj.proxy = ia.proxy || ia.drag, obj.startX = dd.pageX, obj.startY = dd.pageY, obj.deltaX = event.pageX - dd.pageX, obj.deltaY = event.pageY - dd.pageY, obj.originalX = ia.offset.left, obj.originalY = ia.offset.top, obj.offsetX = obj.originalX + obj.deltaX, obj.offsetY = obj.originalY + obj.deltaY, obj.drop = drag.flatten((ia.drop || []).slice()), obj.available = drag.flatten((ia.droppable || []).slice()), obj
    }, element:     function (arg) {
      if (arg && (arg.jquery || 1 == arg.nodeType)) return arg
    }, flatten:     function (arr) {
      return $.map(arr, function (member) {
        return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member
      })
    }, textselect:  function (bool) {
      $(document)[bool ? "unbind" : "bind"]("selectstart", drag.dontstart).css("MozUserSelect", bool ? "" : "none"), document.unselectable = bool ? "off" : "on"
    }, dontstart:   function () {
      return !1
    }, callback:    function () {
    }
  };
  drag.callback.prototype = {
    update: function () {
      $special.drop && this.available.length && $.each(this.available, function (i) {
        $special.drop.locate(this, i)
      })
    }
  };
  var $dispatch           = $event.dispatch;
  $event.dispatch         = function (event) {
    return $.data(this, "suppress." + event.type) - (new Date).getTime() > 0 ? void $.removeData(this, "suppress." + event.type) : $dispatch.apply(this, arguments)
  };
  var touchHooks          = $event.fixHooks.touchstart = $event.fixHooks.touchmove = $event.fixHooks.touchend = $event.fixHooks.touchcancel = {
    props:  "clientX clientY pageX pageY screenX screenY".split(" "),
    filter: function (event, orig) {
      if (orig) {
        var touched = orig.touches && orig.touches[0] || orig.changedTouches && orig.changedTouches[0] || null;
        touched && $.each(touchHooks.props, function (i, prop) {
          event[prop] = touched[prop]
        })
      }
      return event
    }
  };
  $special.draginit = $special.dragstart = $special.dragend = drag
}(jQuery), function ($) {
  var $event = $.event, drag = $event.special.drag, origadd = drag.add, origteardown = drag.teardown;
  drag.noBubble = !1, drag.livekey = "livedrag", drag.add = function (obj) {
    origadd.apply(this, arguments);
    var data = $.data(this, drag.datakey);
    !data.live && obj.selector && (data.live = !0, $event.add(this, "draginit." + drag.livekey, drag.delegate))
  }, drag.teardown = function () {
    origteardown.apply(this, arguments);
    var data = $.data(this, drag.datakey) || {};
    data.live && ($event.remove(this, "draginit." + drag.livekey, drag.delegate), data.live = !1)
  }, drag.delegate = function (event) {
    var target, elems = [], events = $.data(this, "events") || {};
    return $.each(events || [], function (key, arr) {
      0 === key.indexOf("drag") && $.each(arr || [], function (i, obj) {
        (target = $(event.target).closest(obj.selector, event.currentTarget)[0]) && ($event.add(target, obj.origType + "." + drag.livekey, obj.origHandler || obj.handler, obj.data), $.inArray(target, elems) < 0 && elems.push(target))
      })
    }), !!elems.length && $(elems).bind("dragend." + drag.livekey, function () {
      $event.remove(this, "." + drag.livekey)
    })
  }
}(jQuery), function ($) {
  $.path = {};
  var V  = {
    rotate:   function (p, degrees) {
      var radians = degrees * Math.PI / 180, c = Math.cos(radians), s = Math.sin(radians);
      return [c * p[0] - s * p[1], s * p[0] + c * p[1]]
    }, scale: function (p, n) {
      return [n * p[0], n * p[1]]
    }, add:   function (a, b) {
      return [a[0] + b[0], a[1] + b[1]]
    }, minus: function (a, b) {
      return [a[0] - b[0], a[1] - b[1]]
    }
  };
  $.path.bezier = function (params, rotate) {
    params.start = $.extend({angle: 0, length: .3333}, params.start), params.end = $.extend({
      angle:  0,
      length: .3333
    }, params.end), this.p1 = [params.start.x, params.start.y], this.p4 = [params.end.x, params.end.y];
    var v14 = V.minus(this.p4, this.p1), v12 = V.scale(v14, params.start.length), v41 = V.scale(v14, -1),
        v43                                                                           = V.scale(v41, params.end.length);
    v12 = V.rotate(v12, params.start.angle), this.p2 = V.add(this.p1, v12), v43 = V.rotate(v43, params.end.angle), this.p3 = V.add(this.p4, v43), this.f1 = function (t) {
      return t * t * t
    }, this.f2 = function (t) {
      return 3 * t * t * (1 - t)
    }, this.f3 = function (t) {
      return 3 * t * (1 - t) * (1 - t)
    }, this.f4 = function (t) {
      return (1 - t) * (1 - t) * (1 - t)
    }, this.css = function (p) {
      var f1 = this.f1(p), f2 = this.f2(p), f3 = this.f3(p), f4 = this.f4(p), css = {};
      return rotate && (css.prevX = this.x, css.prevY = this.y), css.x = this.x = this.p1[0] * f1 + this.p2[0] * f2 + this.p3[0] * f3 + this.p4[0] * f4 + .5 | 0, css.y = this.y = this.p1[1] * f1 + this.p2[1] * f2 + this.p3[1] * f3 + this.p4[1] * f4 + .5 | 0, css.left = css.x + "px", css.top = css.y + "px", css
    }
  }, $.path.arc = function (params, rotate) {
    for (var i in params) this[i] = params[i];
    for (this.dir = this.dir || 1; this.start > this.end && this.dir > 0;) this.start -= 360;
    for (; this.start < this.end && this.dir < 0;) this.start += 360;
    this.css = function (p) {
      var a = (this.start * p + this.end * (1 - p)) * Math.PI / 180, css = {};
      return rotate && (css.prevX = this.x, css.prevY = this.y), css.x = this.x = Math.sin(a) * this.radius + this.center[0] + .5 | 0, css.y = this.y = Math.cos(a) * this.radius + this.center[1] + .5 | 0, css.left = css.x + "px", css.top = css.y + "px", css
    }
  }, $.fx.step.path = function (fx) {
    var css = fx.end.css(1 - fx.pos);
    null != css.prevX && $.cssHooks.transform.set(fx.elem, "rotate(" + Math.atan2(css.prevY - css.y, css.prevX - css.x) + ")"), fx.elem.style.top = css.top, fx.elem.style.left = css.left
  }
}(jQuery), function (a, b) {
  "object" == typeof exports && "undefined" != typeof module && "function" == typeof require ? b(require("../moment")) : "function" == typeof define && define.amd ? define(["moment"], b) : b(a.moment)
}(this, function (a) {
  "use strict";

  function b(a, b) {
    var c = a.split("_");
    return b % 10 == 1 && b % 100 != 11 ? c[0] : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? c[1] : c[2]
  }

  function c(a, c, d) {
    var e = {
      mm: c ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
      hh: c ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
      dd: "дзень_дні_дзён",
      MM: "месяц_месяцы_месяцаў",
      yy: "год_гады_гадоў"
    };
    return "m" === d ? c ? "хвіліна" : "хвіліну" : "h" === d ? c ? "гадзіна" : "гадзіну" : a + " " + b(e[d], +a)
  }

  function d(a, b, c) {
    return a + " " + g({mm: "munutenn", MM: "miz", dd: "devezh"}[c], a)
  }

  function e(a) {
    switch (f(a)) {
      case 1:
      case 3:
      case 4:
      case 5:
      case 9:
        return a + " bloaz";
      default:
        return a + " vloaz"
    }
  }

  function f(a) {
    return a > 9 ? f(a % 10) : a
  }

  function g(a, b) {
    return 2 === b ? h(a) : a
  }

  function h(a) {
    var b = {m: "v", b: "v", d: "z"};
    return void 0 === b[a.charAt(0)] ? a : b[a.charAt(0)] + a.substring(1)
  }

  function i(a, b, c) {
    var d = a + " ";
    switch (c) {
      case"m":
        return b ? "jedna minuta" : "jedne minute";
      case"mm":
        return d += 1 === a ? "minuta" : 2 === a || 3 === a || 4 === a ? "minute" : "minuta";
      case"h":
        return b ? "jedan sat" : "jednog sata";
      case"hh":
        return d += 1 === a ? "sat" : 2 === a || 3 === a || 4 === a ? "sata" : "sati";
      case"dd":
        return d += 1 === a ? "dan" : "dana";
      case"MM":
        return d += 1 === a ? "mjesec" : 2 === a || 3 === a || 4 === a ? "mjeseca" : "mjeseci";
      case"yy":
        return d += 1 === a ? "godina" : 2 === a || 3 === a || 4 === a ? "godine" : "godina"
    }
  }

  function j(a) {
    return a > 1 && 5 > a && 1 != ~~(a / 10)
  }

  function k(a, b, c, d) {
    var e = a + " ";
    switch (c) {
      case"s":
        return b || d ? "pár sekund" : "pár sekundami";
      case"m":
        return b ? "minuta" : d ? "minutu" : "minutou";
      case"mm":
        return b || d ? e + (j(a) ? "minuty" : "minut") : e + "minutami";
      case"h":
        return b ? "hodina" : d ? "hodinu" : "hodinou";
      case"hh":
        return b || d ? e + (j(a) ? "hodiny" : "hodin") : e + "hodinami";
      case"d":
        return b || d ? "den" : "dnem";
      case"dd":
        return b || d ? e + (j(a) ? "dny" : "dní") : e + "dny";
      case"M":
        return b || d ? "měsíc" : "měsícem";
      case"MM":
        return b || d ? e + (j(a) ? "měsíce" : "měsíců") : e + "měsíci";
      case"y":
        return b || d ? "rok" : "rokem";
      case"yy":
        return b || d ? e + (j(a) ? "roky" : "let") : e + "lety"
    }
  }

  function l(a, b, c, d) {
    var e = {
      m:  ["eine Minute", "einer Minute"],
      h:  ["eine Stunde", "einer Stunde"],
      d:  ["ein Tag", "einem Tag"],
      dd: [a + " Tage", a + " Tagen"],
      M:  ["ein Monat", "einem Monat"],
      MM: [a + " Monate", a + " Monaten"],
      y:  ["ein Jahr", "einem Jahr"],
      yy: [a + " Jahre", a + " Jahren"]
    };
    return b ? e[c][0] : e[c][1]
  }

  function m(a, b, c, d) {
    var e = {
      m:  ["eine Minute", "einer Minute"],
      h:  ["eine Stunde", "einer Stunde"],
      d:  ["ein Tag", "einem Tag"],
      dd: [a + " Tage", a + " Tagen"],
      M:  ["ein Monat", "einem Monat"],
      MM: [a + " Monate", a + " Monaten"],
      y:  ["ein Jahr", "einem Jahr"],
      yy: [a + " Jahre", a + " Jahren"]
    };
    return b ? e[c][0] : e[c][1]
  }

  function n(a) {
    return a instanceof Function || "[object Function]" === Object.prototype.toString.call(a)
  }

  function o(a, b, c, d) {
    var e = {
      s:  ["mõne sekundi", "mõni sekund", "paar sekundit"],
      m:  ["ühe minuti", "üks minut"],
      mm: [a + " minuti", a + " minutit"],
      h:  ["ühe tunni", "tund aega", "üks tund"],
      hh: [a + " tunni", a + " tundi"],
      d:  ["ühe päeva", "üks päev"],
      M:  ["kuu aja", "kuu aega", "üks kuu"],
      MM: [a + " kuu", a + " kuud"],
      y:  ["ühe aasta", "aasta", "üks aasta"],
      yy: [a + " aasta", a + " aastat"]
    };
    return b ? e[c][2] ? e[c][2] : e[c][1] : d ? e[c][0] : e[c][1]
  }

  function p(a, b, c, d) {
    var e = "";
    switch (c) {
      case"s":
        return d ? "muutaman sekunnin" : "muutama sekunti";
      case"m":
        return d ? "minuutin" : "minuutti";
      case"mm":
        e = d ? "minuutin" : "minuuttia";
        break;
      case"h":
        return d ? "tunnin" : "tunti";
      case"hh":
        e = d ? "tunnin" : "tuntia";
        break;
      case"d":
        return d ? "päivän" : "päivä";
      case"dd":
        e = d ? "päivän" : "päivää";
        break;
      case"M":
        return d ? "kuukauden" : "kuukausi";
      case"MM":
        e = d ? "kuukauden" : "kuukautta";
        break;
      case"y":
        return d ? "vuoden" : "vuosi";
      case"yy":
        e = d ? "vuoden" : "vuotta"
    }
    return e = q(a, d) + " " + e
  }

  function q(a, b) {
    return 10 > a ? b ? va[a] : ua[a] : a
  }

  function r(a, b, c) {
    var d = a + " ";
    switch (c) {
      case"m":
        return b ? "jedna minuta" : "jedne minute";
      case"mm":
        return d += 1 === a ? "minuta" : 2 === a || 3 === a || 4 === a ? "minute" : "minuta";
      case"h":
        return b ? "jedan sat" : "jednog sata";
      case"hh":
        return d += 1 === a ? "sat" : 2 === a || 3 === a || 4 === a ? "sata" : "sati";
      case"dd":
        return d += 1 === a ? "dan" : "dana";
      case"MM":
        return d += 1 === a ? "mjesec" : 2 === a || 3 === a || 4 === a ? "mjeseca" : "mjeseci";
      case"yy":
        return d += 1 === a ? "godina" : 2 === a || 3 === a || 4 === a ? "godine" : "godina"
    }
  }

  function s(a, b, c, d) {
    var e = a;
    switch (c) {
      case"s":
        return d || b ? "néhány másodperc" : "néhány másodperce";
      case"m":
        return "egy" + (d || b ? " perc" : " perce");
      case"mm":
        return e + (d || b ? " perc" : " perce");
      case"h":
        return "egy" + (d || b ? " óra" : " órája");
      case"hh":
        return e + (d || b ? " óra" : " órája");
      case"d":
        return "egy" + (d || b ? " nap" : " napja");
      case"dd":
        return e + (d || b ? " nap" : " napja");
      case"M":
        return "egy" + (d || b ? " hónap" : " hónapja");
      case"MM":
        return e + (d || b ? " hónap" : " hónapja");
      case"y":
        return "egy" + (d || b ? " év" : " éve");
      case"yy":
        return e + (d || b ? " év" : " éve")
    }
    return ""
  }

  function t(a) {
    return (a ? "" : "[múlt] ") + "[" + Fa[this.day()] + "] LT[-kor]"
  }

  function u(a) {
    return a % 100 == 11 || a % 10 != 1
  }

  function v(a, b, c, d) {
    var e = a + " ";
    switch (c) {
      case"s":
        return b || d ? "nokkrar sekúndur" : "nokkrum sekúndum";
      case"m":
        return b ? "mínúta" : "mínútu";
      case"mm":
        return u(a) ? e + (b || d ? "mínútur" : "mínútum") : b ? e + "mínúta" : e + "mínútu";
      case"hh":
        return u(a) ? e + (b || d ? "klukkustundir" : "klukkustundum") : e + "klukkustund";
      case"d":
        return b ? "dagur" : d ? "dag" : "degi";
      case"dd":
        return u(a) ? b ? e + "dagar" : e + (d ? "daga" : "dögum") : b ? e + "dagur" : e + (d ? "dag" : "degi");
      case"M":
        return b ? "mánuður" : d ? "mánuð" : "mánuði";
      case"MM":
        return u(a) ? b ? e + "mánuðir" : e + (d ? "mánuði" : "mánuðum") : b ? e + "mánuður" : e + (d ? "mánuð" : "mánuði");
      case"y":
        return b || d ? "ár" : "ári";
      case"yy":
        return u(a) ? e + (b || d ? "ár" : "árum") : e + (b || d ? "ár" : "ári")
    }
  }

  function w(a, b, c, d) {
    var e = {
      m: ["eng Minutt", "enger Minutt"],
      h: ["eng Stonn", "enger Stonn"],
      d: ["een Dag", "engem Dag"],
      M: ["ee Mount", "engem Mount"],
      y: ["ee Joer", "engem Joer"]
    };
    return b ? e[c][0] : e[c][1]
  }

  function x(a) {
    return z(a.substr(0, a.indexOf(" "))) ? "a " + a : "an " + a
  }

  function y(a) {
    return z(a.substr(0, a.indexOf(" "))) ? "viru " + a : "virun " + a
  }

  function z(a) {
    if (a = parseInt(a, 10), isNaN(a)) return !1;
    if (0 > a) return !0;
    if (10 > a) return a >= 4 && 7 >= a;
    if (100 > a) {
      var b = a % 10, c = a / 10;
      return z(0 === b ? c : b)
    }
    if (1e4 > a) {
      for (; a >= 10;) a /= 10;
      return z(a)
    }
    return a /= 1e3, z(a)
  }

  function A(a, b, c, d) {
    return b ? "kelios sekundės" : d ? "kelių sekundžių" : "kelias sekundes"
  }

  function B(a, b, c, d) {
    return b ? D(c)[0] : d ? D(c)[1] : D(c)[2]
  }

  function C(a) {
    return a % 10 == 0 || a > 10 && 20 > a
  }

  function D(a) {
    return Ha[a].split("_")
  }

  function E(a, b, c, d) {
    var e = a + " ";
    return 1 === a ? e + B(a, b, c[0], d) : b ? e + (C(a) ? D(c)[1] : D(c)[0]) : d ? e + D(c)[1] : e + (C(a) ? D(c)[1] : D(c)[2])
  }

  function F(a, b, c) {
    return c ? b % 10 == 1 && 11 !== b ? a[2] : a[3] : b % 10 == 1 && 11 !== b ? a[0] : a[1]
  }

  function G(a, b, c) {
    return a + " " + F(Ia[c], a, b)
  }

  function H(a, b, c) {
    return F(Ia[c], a, b)
  }

  function I(a, b) {
    return b ? "dažas sekundes" : "dažām sekundēm"
  }

  function J(a, b, c, d) {
    var e = "";
    if (b) switch (c) {
      case"s":
        e = "काही सेकंद";
        break;
      case"m":
        e = "एक मिनिट";
        break;
      case"mm":
        e = "%d मिनिटे";
        break;
      case"h":
        e = "एक तास";
        break;
      case"hh":
        e = "%d तास";
        break;
      case"d":
        e = "एक दिवस";
        break;
      case"dd":
        e = "%d दिवस";
        break;
      case"M":
        e = "एक महिना";
        break;
      case"MM":
        e = "%d महिने";
        break;
      case"y":
        e = "एक वर्ष";
        break;
      case"yy":
        e = "%d वर्षे"
    } else switch (c) {
      case"s":
        e = "काही सेकंदां";
        break;
      case"m":
        e = "एका मिनिटा";
        break;
      case"mm":
        e = "%d मिनिटां";
        break;
      case"h":
        e = "एका तासा";
        break;
      case"hh":
        e = "%d तासां";
        break;
      case"d":
        e = "एका दिवसा";
        break;
      case"dd":
        e = "%d दिवसां";
        break;
      case"M":
        e = "एका महिन्या";
        break;
      case"MM":
        e = "%d महिन्यां";
        break;
      case"y":
        e = "एका वर्षा";
        break;
      case"yy":
        e = "%d वर्षां"
    }
    return e.replace(/%d/i, a)
  }

  function K(a) {
    return 5 > a % 10 && a % 10 > 1 && ~~(a / 10) % 10 != 1
  }

  function L(a, b, c) {
    var d = a + " ";
    switch (c) {
      case"m":
        return b ? "minuta" : "minutę";
      case"mm":
        return d + (K(a) ? "minuty" : "minut");
      case"h":
        return b ? "godzina" : "godzinę";
      case"hh":
        return d + (K(a) ? "godziny" : "godzin");
      case"MM":
        return d + (K(a) ? "miesiące" : "miesięcy");
      case"yy":
        return d + (K(a) ? "lata" : "lat")
    }
  }

  function M(a, b, c) {
    var d = {mm: "minute", hh: "ore", dd: "zile", MM: "luni", yy: "ani"}, e = " ";
    return (a % 100 >= 20 || a >= 100 && a % 100 == 0) && (e = " de "), a + e + d[c]
  }

  function N(a, b) {
    var c = a.split("_");
    return b % 10 == 1 && b % 100 != 11 ? c[0] : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? c[1] : c[2]
  }

  function O(a, b, c) {
    var d = {
      mm: b ? "минута_минуты_минут" : "минуту_минуты_минут",
      hh: "час_часа_часов",
      dd: "день_дня_дней",
      MM: "месяц_месяца_месяцев",
      yy: "год_года_лет"
    };
    return "m" === c ? b ? "минута" : "минуту" : a + " " + N(d[c], +a)
  }

  function P(a) {
    return a > 1 && 5 > a
  }

  function Q(a, b, c, d) {
    var e = a + " ";
    switch (c) {
      case"s":
        return b || d ? "pár sekúnd" : "pár sekundami";
      case"m":
        return b ? "minúta" : d ? "minútu" : "minútou";
      case"mm":
        return b || d ? e + (P(a) ? "minúty" : "minút") : e + "minútami";
      case"h":
        return b ? "hodina" : d ? "hodinu" : "hodinou";
      case"hh":
        return b || d ? e + (P(a) ? "hodiny" : "hodín") : e + "hodinami";
      case"d":
        return b || d ? "deň" : "dňom";
      case"dd":
        return b || d ? e + (P(a) ? "dni" : "dní") : e + "dňami";
      case"M":
        return b || d ? "mesiac" : "mesiacom";
      case"MM":
        return b || d ? e + (P(a) ? "mesiace" : "mesiacov") : e + "mesiacmi";
      case"y":
        return b || d ? "rok" : "rokom";
      case"yy":
        return b || d ? e + (P(a) ? "roky" : "rokov") : e + "rokmi"
    }
  }

  function R(a, b, c, d) {
    var e = a + " ";
    switch (c) {
      case"s":
        return b || d ? "nekaj sekund" : "nekaj sekundami";
      case"m":
        return b ? "ena minuta" : "eno minuto";
      case"mm":
        return e += 1 === a ? b ? "minuta" : "minuto" : 2 === a ? b || d ? "minuti" : "minutama" : 5 > a ? b || d ? "minute" : "minutami" : b || d ? "minut" : "minutami";
      case"h":
        return b ? "ena ura" : "eno uro";
      case"hh":
        return e += 1 === a ? b ? "ura" : "uro" : 2 === a ? b || d ? "uri" : "urama" : 5 > a ? b || d ? "ure" : "urami" : b || d ? "ur" : "urami";
      case"d":
        return b || d ? "en dan" : "enim dnem";
      case"dd":
        return e += 1 === a ? b || d ? "dan" : "dnem" : 2 === a ? b || d ? "dni" : "dnevoma" : b || d ? "dni" : "dnevi";
      case"M":
        return b || d ? "en mesec" : "enim mesecem";
      case"MM":
        return e += 1 === a ? b || d ? "mesec" : "mesecem" : 2 === a ? b || d ? "meseca" : "mesecema" : 5 > a ? b || d ? "mesece" : "meseci" : b || d ? "mesecev" : "meseci";
      case"y":
        return b || d ? "eno leto" : "enim letom";
      case"yy":
        return e += 1 === a ? b || d ? "leto" : "letom" : 2 === a ? b || d ? "leti" : "letoma" : 5 > a ? b || d ? "leta" : "leti" : b || d ? "let" : "leti"
    }
  }

  function S(a) {
    var b = a;
    return b = -1 !== a.indexOf("jaj") ? b.slice(0, -3) + "leS" : -1 !== a.indexOf("jar") ? b.slice(0, -3) + "waQ" : -1 !== a.indexOf("DIS") ? b.slice(0, -3) + "nem" : b + " pIq"
  }

  function T(a) {
    var b = a;
    return b = -1 !== a.indexOf("jaj") ? b.slice(0, -3) + "Hu’" : -1 !== a.indexOf("jar") ? b.slice(0, -3) + "wen" : -1 !== a.indexOf("DIS") ? b.slice(0, -3) + "ben" : b + " ret"
  }

  function U(a, b, c, d) {
    var e = V(a);
    switch (c) {
      case"mm":
        return e + " tup";
      case"hh":
        return e + " rep";
      case"dd":
        return e + " jaj";
      case"MM":
        return e + " jar";
      case"yy":
        return e + " DIS"
    }
  }

  function V(a) {
    var b = Math.floor(a % 1e3 / 100), c = Math.floor(a % 100 / 10), d = a % 10, e = "";
    return b > 0 && (e += bb[b] + "vatlh"), c > 0 && (e += ("" !== e ? " " : "") + bb[c] + "maH"), d > 0 && (e += ("" !== e ? " " : "") + bb[d]), "" === e ? "pagh" : e
  }

  function W(a, b, c, d) {
    var e = {
      s:  ["viensas secunds", "'iensas secunds"],
      m:  ["'n míut", "'iens míut"],
      mm: [a + " míuts", a + " míuts"],
      h:  ["'n þora", "'iensa þora"],
      hh: [a + " þoras", a + " þoras"],
      d:  ["'n ziua", "'iensa ziua"],
      dd: [a + " ziuas", a + " ziuas"],
      M:  ["'n mes", "'iens mes"],
      MM: [a + " mesen", a + " mesen"],
      y:  ["'n ar", "'iens ar"],
      yy: [a + " ars", a + " ars"]
    };
    return d ? e[c][0] : b ? e[c][0] : e[c][1]
  }

  function X(a, b) {
    var c = a.split("_");
    return b % 10 == 1 && b % 100 != 11 ? c[0] : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? c[1] : c[2]
  }

  function Y(a, b, c) {
    var d = {
      mm: b ? "хвилина_хвилини_хвилин" : "хвилину_хвилини_хвилин",
      hh: b ? "година_години_годин" : "годину_години_годин",
      dd: "день_дні_днів",
      MM: "місяць_місяці_місяців",
      yy: "рік_роки_років"
    };
    return "m" === c ? b ? "хвилина" : "хвилину" : "h" === c ? b ? "година" : "годину" : a + " " + X(d[c], +a)
  }

  function Z(a, b) {
    return {
      nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
      accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
      genitive:   "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")
    }[/(\[[ВвУу]\]) ?dddd/.test(b) ? "accusative" : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(b) ? "genitive" : "nominative"][a.day()]
  }

  function $(a) {
    return function () {
      return a + "о" + (11 === this.hours() ? "б" : "") + "] LT"
    }
  }

  var _                                                                                         = (a.defineLocale("af", {
        months:         "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
        weekdays:       "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
        weekdaysShort:  "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
        weekdaysMin:    "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
        meridiemParse:  /vm|nm/i,
        isPM:           function (a) {
          return /^nm$/i.test(a)
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? c ? "vm" : "VM" : c ? "nm" : "NM"
        },
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Vandag om] LT",
          nextDay:  "[Môre om] LT",
          nextWeek: "dddd [om] LT",
          lastDay:  "[Gister om] LT",
          lastWeek: "[Laas] dddd [om] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "oor %s",
          past:   "%s gelede",
          s:      "'n paar sekondes",
          m:      "'n minuut",
          mm:     "%d minute",
          h:      "'n uur",
          hh:     "%d ure",
          d:      "'n dag",
          dd:     "%d dae",
          M:      "'n maand",
          MM:     "%d maande",
          y:      "'n jaar",
          yy:     "%d jaar"
        },
        ordinalParse:   /\d{1,2}(ste|de)/,
        ordinal:        function (a) {
          return a + (1 === a || 8 === a || a >= 20 ? "ste" : "de")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("ar-ma", {
        months:         "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
        monthsShort:    "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
        weekdays:       "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
        weekdaysShort:  "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
        weekdaysMin:    "ح_ن_ث_ر_خ_ج_س".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[اليوم على الساعة] LT",
          nextDay:  "[غدا على الساعة] LT",
          nextWeek: "dddd [على الساعة] LT",
          lastDay:  "[أمس على الساعة] LT",
          lastWeek: "dddd [على الساعة] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "في %s",
          past:   "منذ %s",
          s:      "ثوان",
          m:      "دقيقة",
          mm:     "%d دقائق",
          h:      "ساعة",
          hh:     "%d ساعات",
          d:      "يوم",
          dd:     "%d أيام",
          M:      "شهر",
          MM:     "%d أشهر",
          y:      "سنة",
          yy:     "%d سنوات"
        },
        week:           {dow: 6, doy: 12}
      }), {1: "١", 2: "٢", 3: "٣", 4: "٤", 5: "٥", 6: "٦", 7: "٧", 8: "٨", 9: "٩", 0: "٠"}), aa = {
        "١": "1",
        "٢": "2",
        "٣": "3",
        "٤": "4",
        "٥": "5",
        "٦": "6",
        "٧": "7",
        "٨": "8",
        "٩": "9",
        "٠": "0"
      },
      ba                                                                                        = (a.defineLocale("ar-sa", {
        months:         "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
        monthsShort:    "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
        weekdays:       "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
        weekdaysShort:  "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
        weekdaysMin:    "ح_ن_ث_ر_خ_ج_س".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse:  /ص|م/,
        isPM:           function (a) {
          return "م" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "ص" : "م"
        },
        calendar:       {
          sameDay:  "[اليوم على الساعة] LT",
          nextDay:  "[غدا على الساعة] LT",
          nextWeek: "dddd [على الساعة] LT",
          lastDay:  "[أمس على الساعة] LT",
          lastWeek: "dddd [على الساعة] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "في %s",
          past:   "منذ %s",
          s:      "ثوان",
          m:      "دقيقة",
          mm:     "%d دقائق",
          h:      "ساعة",
          hh:     "%d ساعات",
          d:      "يوم",
          dd:     "%d أيام",
          M:      "شهر",
          MM:     "%d أشهر",
          y:      "سنة",
          yy:     "%d سنوات"
        },
        preparse:       function (a) {
          return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (a) {
            return aa[a]
          }).replace(/،/g, ",")
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return _[a]
          }).replace(/,/g, "،")
        },
        week:           {dow: 6, doy: 12}
      }), a.defineLocale("ar-tn", {
        months:         "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
        monthsShort:    "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
        weekdays:       "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
        weekdaysShort:  "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
        weekdaysMin:    "ح_ن_ث_ر_خ_ج_س".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[اليوم على الساعة] LT",
          nextDay:  "[غدا على الساعة] LT",
          nextWeek: "dddd [على الساعة] LT",
          lastDay:  "[أمس على الساعة] LT",
          lastWeek: "dddd [على الساعة] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "في %s",
          past:   "منذ %s",
          s:      "ثوان",
          m:      "دقيقة",
          mm:     "%d دقائق",
          h:      "ساعة",
          hh:     "%d ساعات",
          d:      "يوم",
          dd:     "%d أيام",
          M:      "شهر",
          MM:     "%d أشهر",
          y:      "سنة",
          yy:     "%d سنوات"
        },
        week:           {dow: 1, doy: 4}
      }), {1: "١", 2: "٢", 3: "٣", 4: "٤", 5: "٥", 6: "٦", 7: "٧", 8: "٨", 9: "٩", 0: "٠"}), ca = {
        "١": "1",
        "٢": "2",
        "٣": "3",
        "٤": "4",
        "٥": "5",
        "٦": "6",
        "٧": "7",
        "٨": "8",
        "٩": "9",
        "٠": "0"
      },
      da                                                                                        = function (a) {
        return 0 === a ? 0 : 1 === a ? 1 : 2 === a ? 2 : a % 100 >= 3 && 10 >= a % 100 ? 3 : a % 100 >= 11 ? 4 : 5
      }, ea                                                                                     = {
        s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
        m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
        h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
        d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
        M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
        y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
      },
      fa                                                                                        = function (a) {
        return function (b, c, d, e) {
          var f = da(b), g = ea[a][da(b)];
          return 2 === f && (g = g[c ? 0 : 1]), g.replace(/%d/i, b)
        }
      },
      ga                                                                                        = ["كانون الثاني يناير", "شباط فبراير", "آذار مارس", "نيسان أبريل", "أيار مايو", "حزيران يونيو", "تموز يوليو", "آب أغسطس", "أيلول سبتمبر", "تشرين الأول أكتوبر", "تشرين الثاني نوفمبر", "كانون الأول ديسمبر"],
      ha                                                                                        = (a.defineLocale("ar", {
        months:         ga,
        monthsShort:    ga,
        weekdays:       "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
        weekdaysShort:  "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
        weekdaysMin:    "ح_ن_ث_ر_خ_ج_س".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "D/‏M/‏YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse:  /ص|م/,
        isPM:           function (a) {
          return "م" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "ص" : "م"
        },
        calendar:       {
          sameDay:  "[اليوم عند الساعة] LT",
          nextDay:  "[غدًا عند الساعة] LT",
          nextWeek: "dddd [عند الساعة] LT",
          lastDay:  "[أمس عند الساعة] LT",
          lastWeek: "dddd [عند الساعة] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "بعد %s",
          past:   "منذ %s",
          s:      fa("s"),
          m:      fa("m"),
          mm:     fa("m"),
          h:      fa("h"),
          hh:     fa("h"),
          d:      fa("d"),
          dd:     fa("d"),
          M:      fa("M"),
          MM:     fa("M"),
          y:      fa("y"),
          yy:     fa("y")
        },
        preparse:       function (a) {
          return a.replace(/\u200f/g, "").replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (a) {
            return ca[a]
          }).replace(/،/g, ",")
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return ba[a]
          }).replace(/,/g, "،")
        },
        week:           {dow: 6, doy: 12}
      }), {
        1:   "-inci",
        5:   "-inci",
        8:   "-inci",
        70:  "-inci",
        80:  "-inci",
        2:   "-nci",
        7:   "-nci",
        20:  "-nci",
        50:  "-nci",
        3:   "-üncü",
        4:   "-üncü",
        100: "-üncü",
        6:   "-ncı",
        9:   "-uncu",
        10:  "-uncu",
        30:  "-uncu",
        60:  "-ıncı",
        90:  "-ıncı"
      }),
      ia                                                                                        = (a.defineLocale("az", {
        months:         "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
        monthsShort:    "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
        weekdays:       "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
        weekdaysShort:  "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
        weekdaysMin:    "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[bugün saat] LT",
          nextDay:  "[sabah saat] LT",
          nextWeek: "[gələn həftə] dddd [saat] LT",
          lastDay:  "[dünən] LT",
          lastWeek: "[keçən həftə] dddd [saat] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s sonra",
          past:   "%s əvvəl",
          s:      "birneçə saniyyə",
          m:      "bir dəqiqə",
          mm:     "%d dəqiqə",
          h:      "bir saat",
          hh:     "%d saat",
          d:      "bir gün",
          dd:     "%d gün",
          M:      "bir ay",
          MM:     "%d ay",
          y:      "bir il",
          yy:     "%d il"
        },
        meridiemParse:  /gecə|səhər|gündüz|axşam/,
        isPM:           function (a) {
          return /^(gündüz|axşam)$/.test(a)
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "gecə" : 12 > a ? "səhər" : 17 > a ? "gündüz" : "axşam"
        },
        ordinalParse:   /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal:        function (a) {
          if (0 === a) return a + "-ıncı";
          var b = a % 10, c = a % 100 - b, d = a >= 100 ? 100 : null;
          return a + (ha[b] || ha[c] || ha[d])
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("be", {
        months:         {
          format:     "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),
          standalone: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")
        },
        monthsShort:    "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
        weekdays:       {
          format:     "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),
          standalone: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
          isFormat:   /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort:  "нд_пн_ат_ср_чц_пт_сб".split("_"),
        weekdaysMin:    "нд_пн_ат_ср_чц_пт_сб".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY г.",
          LLL:  "D MMMM YYYY г., HH:mm",
          LLLL: "dddd, D MMMM YYYY г., HH:mm"
        },
        calendar:       {
          sameDay:  "[Сёння ў] LT",
          nextDay:  "[Заўтра ў] LT",
          lastDay:  "[Учора ў] LT",
          nextWeek: function () {
            return "[У] dddd [ў] LT"
          },
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 5:
              case 6:
                return "[У мінулую] dddd [ў] LT";
              case 1:
              case 2:
              case 4:
                return "[У мінулы] dddd [ў] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "праз %s",
          past:   "%s таму",
          s:      "некалькі секунд",
          m:      c,
          mm:     c,
          h:      c,
          hh:     c,
          d:      "дзень",
          dd:     c,
          M:      "месяц",
          MM:     c,
          y:      "год",
          yy:     c
        },
        meridiemParse:  /ночы|раніцы|дня|вечара/,
        isPM:           function (a) {
          return /^(дня|вечара)$/.test(a)
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "ночы" : 12 > a ? "раніцы" : 17 > a ? "дня" : "вечара"
        },
        ordinalParse:   /\d{1,2}-(і|ы|га)/,
        ordinal:        function (a, b) {
          switch (b) {
            case"M":
            case"d":
            case"DDD":
            case"w":
            case"W":
              return a % 10 != 2 && a % 10 != 3 || a % 100 == 12 || a % 100 == 13 ? a + "-ы" : a + "-і";
            case"D":
              return a + "-га";
            default:
              return a
          }
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("bg", {
        months:         "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
        monthsShort:    "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
        weekdays:       "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
        weekdaysShort:  "нед_пон_вто_сря_чет_пет_съб".split("_"),
        weekdaysMin:    "нд_пн_вт_ср_чт_пт_сб".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "D.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY H:mm",
          LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:  "[Днес в] LT",
          nextDay:  "[Утре в] LT",
          nextWeek: "dddd [в] LT",
          lastDay:  "[Вчера в] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 6:
                return "[В изминалата] dddd [в] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[В изминалия] dddd [в] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "след %s",
          past:   "преди %s",
          s:      "няколко секунди",
          m:      "минута",
          mm:     "%d минути",
          h:      "час",
          hh:     "%d часа",
          d:      "ден",
          dd:     "%d дни",
          M:      "месец",
          MM:     "%d месеца",
          y:      "година",
          yy:     "%d години"
        },
        ordinalParse:   /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal:        function (a) {
          var b = a % 10, c = a % 100;
          return 0 === a ? a + "-ев" : 0 === c ? a + "-ен" : c > 10 && 20 > c ? a + "-ти" : 1 === b ? a + "-ви" : 2 === b ? a + "-ри" : 7 === b || 8 === b ? a + "-ми" : a + "-ти"
        },
        week:           {dow: 1, doy: 7}
      }), {1: "১", 2: "২", 3: "৩", 4: "৪", 5: "৫", 6: "৬", 7: "৭", 8: "৮", 9: "৯", 0: "০"}), ja = {
        "১": "1",
        "২": "2",
        "৩": "3",
        "৪": "4",
        "৫": "5",
        "৬": "6",
        "৭": "7",
        "৮": "8",
        "৯": "9",
        "০": "0"
      },
      ka                                                                                        = (a.defineLocale("bn", {
        months:         "জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
        monthsShort:    "জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্".split("_"),
        weekdays:       "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার".split("_"),
        weekdaysShort:  "রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি".split("_"),
        weekdaysMin:    "রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি".split("_"),
        longDateFormat: {
          LT:   "A h:mm সময়",
          LTS:  "A h:mm:ss সময়",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm সময়",
          LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
        },
        calendar:       {
          sameDay:  "[আজ] LT",
          nextDay:  "[আগামীকাল] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[গতকাল] LT",
          lastWeek: "[গত] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s পরে",
          past:   "%s আগে",
          s:      "কয়েক সেকেন্ড",
          m:      "এক মিনিট",
          mm:     "%d মিনিট",
          h:      "এক ঘন্টা",
          hh:     "%d ঘন্টা",
          d:      "এক দিন",
          dd:     "%d দিন",
          M:      "এক মাস",
          MM:     "%d মাস",
          y:      "এক বছর",
          yy:     "%d বছর"
        },
        preparse:       function (a) {
          return a.replace(/[১২৩৪৫৬৭৮৯০]/g, function (a) {
            return ja[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return ia[a]
          })
        },
        meridiemParse:  /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "রাত" === b && a >= 4 || "দুপুর" === b && 5 > a || "বিকাল" === b ? a + 12 : a
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "রাত" : 10 > a ? "সকাল" : 17 > a ? "দুপুর" : 20 > a ? "বিকাল" : "রাত"
        },
        week:           {dow: 0, doy: 6}
      }), {1: "༡", 2: "༢", 3: "༣", 4: "༤", 5: "༥", 6: "༦", 7: "༧", 8: "༨", 9: "༩", 0: "༠"}), la = {
        "༡": "1",
        "༢": "2",
        "༣": "3",
        "༤": "4",
        "༥": "5",
        "༦": "6",
        "༧": "7",
        "༨": "8",
        "༩": "9",
        "༠": "0"
      },
      ma                                                                                        = (a.defineLocale("bo", {
        months:         "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
        monthsShort:    "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
        weekdays:       "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),
        weekdaysShort:  "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
        weekdaysMin:    "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
        longDateFormat: {
          LT:   "A h:mm",
          LTS:  "A h:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm",
          LLLL: "dddd, D MMMM YYYY, A h:mm"
        },
        calendar:       {
          sameDay:  "[དི་རིང] LT",
          nextDay:  "[སང་ཉིན] LT",
          nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
          lastDay:  "[ཁ་སང] LT",
          lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s ལ་",
          past:   "%s སྔན་ལ",
          s:      "ལམ་སང",
          m:      "སྐར་མ་གཅིག",
          mm:     "%d སྐར་མ",
          h:      "ཆུ་ཚོད་གཅིག",
          hh:     "%d ཆུ་ཚོད",
          d:      "ཉིན་གཅིག",
          dd:     "%d ཉིན་",
          M:      "ཟླ་བ་གཅིག",
          MM:     "%d ཟླ་བ",
          y:      "ལོ་གཅིག",
          yy:     "%d ལོ"
        },
        preparse:       function (a) {
          return a.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (a) {
            return la[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return ka[a]
          })
        },
        meridiemParse:  /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "མཚན་མོ" === b && a >= 4 || "ཉིན་གུང" === b && 5 > a || "དགོང་དག" === b ? a + 12 : a
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "མཚན་མོ" : 10 > a ? "ཞོགས་ཀས" : 17 > a ? "ཉིན་གུང" : 20 > a ? "དགོང་དག" : "མཚན་མོ"
        },
        week:           {dow: 0, doy: 6}
      }), a.defineLocale("br", {
        months:         "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
        monthsShort:    "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
        weekdays:       "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
        weekdaysShort:  "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
        weekdaysMin:    "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
        longDateFormat: {
          LT:   "h[e]mm A",
          LTS:  "h[e]mm:ss A",
          L:    "DD/MM/YYYY",
          LL:   "D [a viz] MMMM YYYY",
          LLL:  "D [a viz] MMMM YYYY h[e]mm A",
          LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A"
        },
        calendar:       {
          sameDay:  "[Hiziv da] LT",
          nextDay:  "[Warc'hoazh da] LT",
          nextWeek: "dddd [da] LT",
          lastDay:  "[Dec'h da] LT",
          lastWeek: "dddd [paset da] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "a-benn %s",
          past:   "%s 'zo",
          s:      "un nebeud segondennoù",
          m:      "ur vunutenn",
          mm:     d,
          h:      "un eur",
          hh:     "%d eur",
          d:      "un devezh",
          dd:     d,
          M:      "ur miz",
          MM:     d,
          y:      "ur bloaz",
          yy:     e
        },
        ordinalParse:   /\d{1,2}(añ|vet)/,
        ordinal:        function (a) {
          return a + (1 === a ? "añ" : "vet")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("bs", {
        months:         "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
        monthsShort:    "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
        weekdays:       "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
        weekdaysShort:  "ned._pon._uto._sri._čet._pet._sub.".split("_"),
        weekdaysMin:    "ne_po_ut_sr_če_pe_su".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[danas u] LT", nextDay: "[sutra u] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[u] [nedjelju] [u] LT";
              case 3:
                return "[u] [srijedu] [u] LT";
              case 6:
                return "[u] [subotu] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[u] dddd [u] LT"
            }
          }, lastDay:  "[jučer u] LT", lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
                return "[prošlu] dddd [u] LT";
              case 6:
                return "[prošle] [subote] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[prošli] dddd [u] LT"
            }
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "prije %s",
          s:      "par sekundi",
          m:      i,
          mm:     i,
          h:      i,
          hh:     i,
          d:      "dan",
          dd:     i,
          M:      "mjesec",
          MM:     i,
          y:      "godinu",
          yy:     i
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("ca", {
        months:         "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
        monthsShort:    "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
        weekdays:       "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
        weekdaysShort:  "dg._dl._dt._dc._dj._dv._ds.".split("_"),
        weekdaysMin:    "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY H:mm",
          LLLL: "dddd D MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     function () {
            return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
          }, nextDay:  function () {
            return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT"
          }, nextWeek: function () {
            return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
          }, lastDay:  function () {
            return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
          }, lastWeek: function () {
            return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "en %s",
          past:   "fa %s",
          s:      "uns segons",
          m:      "un minut",
          mm:     "%d minuts",
          h:      "una hora",
          hh:     "%d hores",
          d:      "un dia",
          dd:     "%d dies",
          M:      "un mes",
          MM:     "%d mesos",
          y:      "un any",
          yy:     "%d anys"
        },
        ordinalParse:   /\d{1,2}(r|n|t|è|a)/,
        ordinal:        function (a, b) {
          var c = 1 === a ? "r" : 2 === a ? "n" : 3 === a ? "r" : 4 === a ? "t" : "è";
          return ("w" === b || "W" === b) && (c = "a"), a + c
        },
        week:           {dow: 1, doy: 4}
      }), "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_")),
      na                                                                                        = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"),
      oa                                                                                        = (a.defineLocale("cs", {
        months:           ma,
        monthsShort:      na,
        monthsParse:      function (a, b) {
          var c, d = [];
          for (c = 0; 12 > c; c++) d[c] = new RegExp("^" + a[c] + "$|^" + b[c] + "$", "i");
          return d
        }(ma, na),
        shortMonthsParse: function (a) {
          var b, c = [];
          for (b = 0; 12 > b; b++) c[b] = new RegExp("^" + a[b] + "$", "i");
          return c
        }(na),
        longMonthsParse:  function (a) {
          var b, c = [];
          for (b = 0; 12 > b; b++) c[b] = new RegExp("^" + a[b] + "$", "i");
          return c
        }(ma),
        weekdays:         "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
        weekdaysShort:    "ne_po_út_st_čt_pá_so".split("_"),
        weekdaysMin:      "ne_po_út_st_čt_pá_so".split("_"),
        longDateFormat:   {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd D. MMMM YYYY H:mm"
        },
        calendar:         {
          sameDay:     "[dnes v] LT", nextDay: "[zítra v] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[v neděli v] LT";
              case 1:
              case 2:
                return "[v] dddd [v] LT";
              case 3:
                return "[ve středu v] LT";
              case 4:
                return "[ve čtvrtek v] LT";
              case 5:
                return "[v pátek v] LT";
              case 6:
                return "[v sobotu v] LT"
            }
          }, lastDay:  "[včera v] LT", lastWeek: function () {
            switch (this.day()) {
              case 0:
                return "[minulou neděli v] LT";
              case 1:
              case 2:
                return "[minulé] dddd [v] LT";
              case 3:
                return "[minulou středu v] LT";
              case 4:
              case 5:
                return "[minulý] dddd [v] LT";
              case 6:
                return "[minulou sobotu v] LT"
            }
          }, sameElse: "L"
        },
        relativeTime:     {
          future: "za %s",
          past:   "před %s",
          s:      k,
          m:      k,
          mm:     k,
          h:      k,
          hh:     k,
          d:      k,
          dd:     k,
          M:      k,
          MM:     k,
          y:      k,
          yy:     k
        },
        ordinalParse:     /\d{1,2}\./,
        ordinal:          "%d.",
        week:             {dow: 1, doy: 4}
      }), a.defineLocale("cv", {
        months:         "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),
        monthsShort:    "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),
        weekdays:       "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),
        weekdaysShort:  "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
        weekdaysMin:    "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD-MM-YYYY",
          LL:   "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
          LLL:  "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
          LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
        },
        calendar:       {
          sameDay:  "[Паян] LT [сехетре]",
          nextDay:  "[Ыран] LT [сехетре]",
          lastDay:  "[Ӗнер] LT [сехетре]",
          nextWeek: "[Ҫитес] dddd LT [сехетре]",
          lastWeek: "[Иртнӗ] dddd LT [сехетре]",
          sameElse: "L"
        },
        relativeTime:   {
          future: function (a) {
            return a + (/сехет$/i.exec(a) ? "рен" : /ҫул$/i.exec(a) ? "тан" : "ран")
          },
          past:   "%s каялла",
          s:      "пӗр-ик ҫеккунт",
          m:      "пӗр минут",
          mm:     "%d минут",
          h:      "пӗр сехет",
          hh:     "%d сехет",
          d:      "пӗр кун",
          dd:     "%d кун",
          M:      "пӗр уйӑх",
          MM:     "%d уйӑх",
          y:      "пӗр ҫул",
          yy:     "%d ҫул"
        },
        ordinalParse:   /\d{1,2}-мӗш/,
        ordinal:        "%d-мӗш",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("cy", {
        months:         "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
        monthsShort:    "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
        weekdays:       "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
        weekdaysShort:  "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
        weekdaysMin:    "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Heddiw am] LT",
          nextDay:  "[Yfory am] LT",
          nextWeek: "dddd [am] LT",
          lastDay:  "[Ddoe am] LT",
          lastWeek: "dddd [diwethaf am] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "mewn %s",
          past:   "%s yn ôl",
          s:      "ychydig eiliadau",
          m:      "munud",
          mm:     "%d munud",
          h:      "awr",
          hh:     "%d awr",
          d:      "diwrnod",
          dd:     "%d diwrnod",
          M:      "mis",
          MM:     "%d mis",
          y:      "blwyddyn",
          yy:     "%d flynedd"
        },
        ordinalParse:   /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        ordinal:        function (a) {
          var b = a, c = "",
              d        = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"];
          return b > 20 ? c = 40 === b || 50 === b || 60 === b || 80 === b || 100 === b ? "fed" : "ain" : b > 0 && (c = d[b]), a + c
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("da", {
        months:         "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
        monthsShort:    "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
        weekdays:       "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
        weekdaysShort:  "søn_man_tir_ons_tor_fre_lør".split("_"),
        weekdaysMin:    "sø_ma_ti_on_to_fr_lø".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY HH:mm",
          LLLL: "dddd [d.] D. MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[I dag kl.] LT",
          nextDay:  "[I morgen kl.] LT",
          nextWeek: "dddd [kl.] LT",
          lastDay:  "[I går kl.] LT",
          lastWeek: "[sidste] dddd [kl] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "om %s",
          past:   "%s siden",
          s:      "få sekunder",
          m:      "et minut",
          mm:     "%d minutter",
          h:      "en time",
          hh:     "%d timer",
          d:      "en dag",
          dd:     "%d dage",
          M:      "en måned",
          MM:     "%d måneder",
          y:      "et år",
          yy:     "%d år"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("de-at", {
        months:         "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort:    "Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
        weekdays:       "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
        weekdaysShort:  "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
        weekdaysMin:    "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY HH:mm",
          LLLL: "dddd, D. MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[heute um] LT [Uhr]",
          sameElse: "L",
          nextDay:  "[morgen um] LT [Uhr]",
          nextWeek: "dddd [um] LT [Uhr]",
          lastDay:  "[gestern um] LT [Uhr]",
          lastWeek: "[letzten] dddd [um] LT [Uhr]"
        },
        relativeTime:   {
          future: "in %s",
          past:   "vor %s",
          s:      "ein paar Sekunden",
          m:      l,
          mm:     "%d Minuten",
          h:      l,
          hh:     "%d Stunden",
          d:      l,
          dd:     l,
          M:      l,
          MM:     l,
          y:      l,
          yy:     l
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("de", {
        months:         "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort:    "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
        weekdays:       "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
        weekdaysShort:  "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
        weekdaysMin:    "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY HH:mm",
          LLLL: "dddd, D. MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[heute um] LT [Uhr]",
          sameElse: "L",
          nextDay:  "[morgen um] LT [Uhr]",
          nextWeek: "dddd [um] LT [Uhr]",
          lastDay:  "[gestern um] LT [Uhr]",
          lastWeek: "[letzten] dddd [um] LT [Uhr]"
        },
        relativeTime:   {
          future: "in %s",
          past:   "vor %s",
          s:      "ein paar Sekunden",
          m:      m,
          mm:     "%d Minuten",
          h:      m,
          hh:     "%d Stunden",
          d:      m,
          dd:     m,
          M:      m,
          MM:     m,
          y:      m,
          yy:     m
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), ["ޖެނުއަރީ", "ފެބްރުއަރީ", "މާރިޗު", "އޭޕްރީލު", "މޭ", "ޖޫން", "ޖުލައި", "އޯގަސްޓު", "ސެޕްޓެމްބަރު", "އޮކްޓޯބަރު", "ނޮވެމްބަރު", "ޑިސެމްބަރު"]),
      pa                                                                                        = ["އާދިއްތަ", "ހޯމަ", "އަންގާރަ", "ބުދަ", "ބުރާސްފަތި", "ހުކުރު", "ހޮނިހިރު"],
      qa                                                                                        = (a.defineLocale("dv", {
        months:         oa,
        monthsShort:    oa,
        weekdays:       pa,
        weekdaysShort:  pa,
        weekdaysMin:    "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "D/M/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse:  /މކ|މފ/,
        isPM:           function (a) {
          return "މފ" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "މކ" : "މފ"
        },
        calendar:       {
          sameDay:  "[މިއަދު] LT",
          nextDay:  "[މާދަމާ] LT",
          nextWeek: "dddd LT",
          lastDay:  "[އިއްޔެ] LT",
          lastWeek: "[ފާއިތުވި] dddd LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "ތެރޭގައި %s",
          past:   "ކުރިން %s",
          s:      "ސިކުންތުކޮޅެއް",
          m:      "މިނިޓެއް",
          mm:     "މިނިޓު %d",
          h:      "ގަޑިއިރެއް",
          hh:     "ގަޑިއިރު %d",
          d:      "ދުވަހެއް",
          dd:     "ދުވަސް %d",
          M:      "މަހެއް",
          MM:     "މަސް %d",
          y:      "އަހަރެއް",
          yy:     "އަހަރު %d"
        },
        preparse:       function (a) {
          return a.replace(/،/g, ",")
        },
        postformat:     function (a) {
          return a.replace(/,/g, "،")
        },
        week:           {dow: 7, doy: 12}
      }), a.defineLocale("el", {
        monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
        monthsGenitiveEl:   "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
        months:             function (a, b) {
          return /D/.test(b.substring(0, b.indexOf("MMMM"))) ? this._monthsGenitiveEl[a.month()] : this._monthsNominativeEl[a.month()]
        },
        monthsShort:        "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
        weekdays:           "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
        weekdaysShort:      "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
        weekdaysMin:        "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
        meridiem:           function (a, b, c) {
          return a > 11 ? c ? "μμ" : "ΜΜ" : c ? "πμ" : "ΠΜ"
        },
        isPM:               function (a) {
          return "μ" === (a + "").toLowerCase()[0]
        },
        meridiemParse:      /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat:     {
          LT:   "h:mm A",
          LTS:  "h:mm:ss A",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY h:mm A",
          LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendarEl:         {
          sameDay:  "[Σήμερα {}] LT",
          nextDay:  "[Αύριο {}] LT",
          nextWeek: "dddd [{}] LT",
          lastDay:  "[Χθες {}] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 6:
                return "[το προηγούμενο] dddd [{}] LT";
              default:
                return "[την προηγούμενη] dddd [{}] LT"
            }
          },
          sameElse: "L"
        },
        calendar:           function (a, b) {
          var c = this._calendarEl[a], d = b && b.hours();
          return n(c) && (c = c.apply(b)), c.replace("{}", d % 12 == 1 ? "στη" : "στις")
        },
        relativeTime:       {
          future: "σε %s",
          past:   "%s πριν",
          s:      "λίγα δευτερόλεπτα",
          m:      "ένα λεπτό",
          mm:     "%d λεπτά",
          h:      "μία ώρα",
          hh:     "%d ώρες",
          d:      "μία μέρα",
          dd:     "%d μέρες",
          M:      "ένας μήνας",
          MM:     "%d μήνες",
          y:      "ένας χρόνος",
          yy:     "%d χρόνια"
        },
        ordinalParse:       /\d{1,2}η/,
        ordinal:            "%dη",
        week:               {dow: 1, doy: 4}
      }), a.defineLocale("en-au", {
        months:         "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays:       "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort:  "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin:    "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "h:mm A",
          LTS:  "h:mm:ss A",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY h:mm A",
          LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar:       {
          sameDay:  "[Today at] LT",
          nextDay:  "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay:  "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "in %s",
          past:   "%s ago",
          s:      "a few seconds",
          m:      "a minute",
          mm:     "%d minutes",
          h:      "an hour",
          hh:     "%d hours",
          d:      "a day",
          dd:     "%d days",
          M:      "a month",
          MM:     "%d months",
          y:      "a year",
          yy:     "%d years"
        },
        ordinalParse:   /\d{1,2}(st|nd|rd|th)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("en-ca", {
        months:         "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays:       "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort:  "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin:    "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "h:mm A",
          LTS:  "h:mm:ss A",
          L:    "YYYY-MM-DD",
          LL:   "MMMM D, YYYY",
          LLL:  "MMMM D, YYYY h:mm A",
          LLLL: "dddd, MMMM D, YYYY h:mm A"
        },
        calendar:       {
          sameDay:  "[Today at] LT",
          nextDay:  "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay:  "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "in %s",
          past:   "%s ago",
          s:      "a few seconds",
          m:      "a minute",
          mm:     "%d minutes",
          h:      "an hour",
          hh:     "%d hours",
          d:      "a day",
          dd:     "%d days",
          M:      "a month",
          MM:     "%d months",
          y:      "a year",
          yy:     "%d years"
        },
        ordinalParse:   /\d{1,2}(st|nd|rd|th)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
        }
      }), a.defineLocale("en-gb", {
        months:         "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays:       "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort:  "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin:    "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Today at] LT",
          nextDay:  "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay:  "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "in %s",
          past:   "%s ago",
          s:      "a few seconds",
          m:      "a minute",
          mm:     "%d minutes",
          h:      "an hour",
          hh:     "%d hours",
          d:      "a day",
          dd:     "%d days",
          M:      "a month",
          MM:     "%d months",
          y:      "a year",
          yy:     "%d years"
        },
        ordinalParse:   /\d{1,2}(st|nd|rd|th)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("en-ie", {
        months:         "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays:       "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort:  "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin:    "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD-MM-YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Today at] LT",
          nextDay:  "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay:  "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "in %s",
          past:   "%s ago",
          s:      "a few seconds",
          m:      "a minute",
          mm:     "%d minutes",
          h:      "an hour",
          hh:     "%d hours",
          d:      "a day",
          dd:     "%d days",
          M:      "a month",
          MM:     "%d months",
          y:      "a year",
          yy:     "%d years"
        },
        ordinalParse:   /\d{1,2}(st|nd|rd|th)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("en-nz", {
        months:         "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays:       "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort:  "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin:    "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "h:mm A",
          LTS:  "h:mm:ss A",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY h:mm A",
          LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar:       {
          sameDay:  "[Today at] LT",
          nextDay:  "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay:  "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "in %s",
          past:   "%s ago",
          s:      "a few seconds",
          m:      "a minute",
          mm:     "%d minutes",
          h:      "an hour",
          hh:     "%d hours",
          d:      "a day",
          dd:     "%d days",
          M:      "a month",
          MM:     "%d months",
          y:      "a year",
          yy:     "%d years"
        },
        ordinalParse:   /\d{1,2}(st|nd|rd|th)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("eo", {
        months:         "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
        monthsShort:    "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split("_"),
        weekdays:       "Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato".split("_"),
        weekdaysShort:  "Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab".split("_"),
        weekdaysMin:    "Di_Lu_Ma_Me_Ĵa_Ve_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "YYYY-MM-DD",
          LL:   "D[-an de] MMMM, YYYY",
          LLL:  "D[-an de] MMMM, YYYY HH:mm",
          LLLL: "dddd, [la] D[-an de] MMMM, YYYY HH:mm"
        },
        meridiemParse:  /[ap]\.t\.m/i,
        isPM:           function (a) {
          return "p" === a.charAt(0).toLowerCase()
        },
        meridiem:       function (a, b, c) {
          return a > 11 ? c ? "p.t.m." : "P.T.M." : c ? "a.t.m." : "A.T.M."
        },
        calendar:       {
          sameDay:  "[Hodiaŭ je] LT",
          nextDay:  "[Morgaŭ je] LT",
          nextWeek: "dddd [je] LT",
          lastDay:  "[Hieraŭ je] LT",
          lastWeek: "[pasinta] dddd [je] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "je %s",
          past:   "antaŭ %s",
          s:      "sekundoj",
          m:      "minuto",
          mm:     "%d minutoj",
          h:      "horo",
          hh:     "%d horoj",
          d:      "tago",
          dd:     "%d tagoj",
          M:      "monato",
          MM:     "%d monatoj",
          y:      "jaro",
          yy:     "%d jaroj"
        },
        ordinalParse:   /\d{1,2}a/,
        ordinal:        "%da",
        week:           {dow: 1, doy: 7}
      }), "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")),
      ra                                                                                        = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
      sa                                                                                        = (a.defineLocale("es", {
        months:         "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
        monthsShort:    function (a, b) {
          return /-MMM-/.test(b) ? ra[a.month()] : qa[a.month()]
        },
        weekdays:       "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
        weekdaysShort:  "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
        weekdaysMin:    "do_lu_ma_mi_ju_vi_sá".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D [de] MMMM [de] YYYY",
          LLL:  "D [de] MMMM [de] YYYY H:mm",
          LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
        },
        calendar:       {
          sameDay:     function () {
            return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
          }, nextDay:  function () {
            return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
          }, nextWeek: function () {
            return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
          }, lastDay:  function () {
            return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
          }, lastWeek: function () {
            return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "en %s",
          past:   "hace %s",
          s:      "unos segundos",
          m:      "un minuto",
          mm:     "%d minutos",
          h:      "una hora",
          hh:     "%d horas",
          d:      "un día",
          dd:     "%d días",
          M:      "un mes",
          MM:     "%d meses",
          y:      "un año",
          yy:     "%d años"
        },
        ordinalParse:   /\d{1,2}º/,
        ordinal:        "%dº",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("et", {
        months:         "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
        monthsShort:    "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
        weekdays:       "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
        weekdaysShort:  "P_E_T_K_N_R_L".split("_"),
        weekdaysMin:    "P_E_T_K_N_R_L".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:  "[Täna,] LT",
          nextDay:  "[Homme,] LT",
          nextWeek: "[Järgmine] dddd LT",
          lastDay:  "[Eile,] LT",
          lastWeek: "[Eelmine] dddd LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s pärast",
          past:   "%s tagasi",
          s:      o,
          m:      o,
          mm:     o,
          h:      o,
          hh:     o,
          d:      o,
          dd:     "%d päeva",
          M:      o,
          MM:     o,
          y:      o,
          yy:     o
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("eu", {
        months:         "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
        monthsShort:    "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
        weekdays:       "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
        weekdaysShort:  "ig._al._ar._az._og._ol._lr.".split("_"),
        weekdaysMin:    "ig_al_ar_az_og_ol_lr".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "YYYY-MM-DD",
          LL:   "YYYY[ko] MMMM[ren] D[a]",
          LLL:  "YYYY[ko] MMMM[ren] D[a] HH:mm",
          LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
          l:    "YYYY-M-D",
          ll:   "YYYY[ko] MMM D[a]",
          lll:  "YYYY[ko] MMM D[a] HH:mm",
          llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
        },
        calendar:       {
          sameDay:  "[gaur] LT[etan]",
          nextDay:  "[bihar] LT[etan]",
          nextWeek: "dddd LT[etan]",
          lastDay:  "[atzo] LT[etan]",
          lastWeek: "[aurreko] dddd LT[etan]",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s barru",
          past:   "duela %s",
          s:      "segundo batzuk",
          m:      "minutu bat",
          mm:     "%d minutu",
          h:      "ordu bat",
          hh:     "%d ordu",
          d:      "egun bat",
          dd:     "%d egun",
          M:      "hilabete bat",
          MM:     "%d hilabete",
          y:      "urte bat",
          yy:     "%d urte"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), {1: "۱", 2: "۲", 3: "۳", 4: "۴", 5: "۵", 6: "۶", 7: "۷", 8: "۸", 9: "۹", 0: "۰"}), ta = {
        "۱": "1",
        "۲": "2",
        "۳": "3",
        "۴": "4",
        "۵": "5",
        "۶": "6",
        "۷": "7",
        "۸": "8",
        "۹": "9",
        "۰": "0"
      },
      ua                                                                                        = (a.defineLocale("fa", {
        months:         "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
        monthsShort:    "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
        weekdays:       "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
        weekdaysShort:  "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
        weekdaysMin:    "ی_د_س_چ_پ_ج_ش".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        meridiemParse:  /قبل از ظهر|بعد از ظهر/,
        isPM:           function (a) {
          return /بعد از ظهر/.test(a)
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "قبل از ظهر" : "بعد از ظهر"
        },
        calendar:       {
          sameDay:  "[امروز ساعت] LT",
          nextDay:  "[فردا ساعت] LT",
          nextWeek: "dddd [ساعت] LT",
          lastDay:  "[دیروز ساعت] LT",
          lastWeek: "dddd [پیش] [ساعت] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "در %s",
          past:   "%s پیش",
          s:      "چندین ثانیه",
          m:      "یک دقیقه",
          mm:     "%d دقیقه",
          h:      "یک ساعت",
          hh:     "%d ساعت",
          d:      "یک روز",
          dd:     "%d روز",
          M:      "یک ماه",
          MM:     "%d ماه",
          y:      "یک سال",
          yy:     "%d سال"
        },
        preparse:       function (a) {
          return a.replace(/[۰-۹]/g, function (a) {
            return ta[a]
          }).replace(/،/g, ",")
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return sa[a]
          }).replace(/,/g, "،")
        },
        ordinalParse:   /\d{1,2}م/,
        ordinal:        "%dم",
        week:           {dow: 6, doy: 12}
      }), "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" ")),
      va                                                                                        = ["nolla", "yhden", "kahden", "kolmen", "neljän", "viiden", "kuuden", ua[7], ua[8], ua[9]],
      wa                                                                                        = (a.defineLocale("fi", {
        months:         "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
        monthsShort:    "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
        weekdays:       "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
        weekdaysShort:  "su_ma_ti_ke_to_pe_la".split("_"),
        weekdaysMin:    "su_ma_ti_ke_to_pe_la".split("_"),
        longDateFormat: {
          LT:   "HH.mm",
          LTS:  "HH.mm.ss",
          L:    "DD.MM.YYYY",
          LL:   "Do MMMM[ta] YYYY",
          LLL:  "Do MMMM[ta] YYYY, [klo] HH.mm",
          LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
          l:    "D.M.YYYY",
          ll:   "Do MMM YYYY",
          lll:  "Do MMM YYYY, [klo] HH.mm",
          llll: "ddd, Do MMM YYYY, [klo] HH.mm"
        },
        calendar:       {
          sameDay:  "[tänään] [klo] LT",
          nextDay:  "[huomenna] [klo] LT",
          nextWeek: "dddd [klo] LT",
          lastDay:  "[eilen] [klo] LT",
          lastWeek: "[viime] dddd[na] [klo] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s päästä",
          past:   "%s sitten",
          s:      p,
          m:      p,
          mm:     p,
          h:      p,
          hh:     p,
          d:      p,
          dd:     p,
          M:      p,
          MM:     p,
          y:      p,
          yy:     p
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("fo", {
        months:         "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort:    "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
        weekdays:       "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
        weekdaysShort:  "sun_mán_týs_mik_hós_frí_ley".split("_"),
        weekdaysMin:    "su_má_tý_mi_hó_fr_le".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D. MMMM, YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Í dag kl.] LT",
          nextDay:  "[Í morgin kl.] LT",
          nextWeek: "dddd [kl.] LT",
          lastDay:  "[Í gjár kl.] LT",
          lastWeek: "[síðstu] dddd [kl] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "um %s",
          past:   "%s síðani",
          s:      "fá sekund",
          m:      "ein minutt",
          mm:     "%d minuttir",
          h:      "ein tími",
          hh:     "%d tímar",
          d:      "ein dagur",
          dd:     "%d dagar",
          M:      "ein mánaði",
          MM:     "%d mánaðir",
          y:      "eitt ár",
          yy:     "%d ár"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("fr-ca", {
        months:         "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
        monthsShort:    "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
        weekdays:       "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort:  "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin:    "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "YYYY-MM-DD",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Aujourd'hui à] LT",
          nextDay:  "[Demain à] LT",
          nextWeek: "dddd [à] LT",
          lastDay:  "[Hier à] LT",
          lastWeek: "dddd [dernier à] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dans %s",
          past:   "il y a %s",
          s:      "quelques secondes",
          m:      "une minute",
          mm:     "%d minutes",
          h:      "une heure",
          hh:     "%d heures",
          d:      "un jour",
          dd:     "%d jours",
          M:      "un mois",
          MM:     "%d mois",
          y:      "un an",
          yy:     "%d ans"
        },
        ordinalParse:   /\d{1,2}(er|e)/,
        ordinal:        function (a) {
          return a + (1 === a ? "er" : "e")
        }
      }), a.defineLocale("fr-ch", {
        months:         "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
        monthsShort:    "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
        weekdays:       "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort:  "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin:    "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Aujourd'hui à] LT",
          nextDay:  "[Demain à] LT",
          nextWeek: "dddd [à] LT",
          lastDay:  "[Hier à] LT",
          lastWeek: "dddd [dernier à] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dans %s",
          past:   "il y a %s",
          s:      "quelques secondes",
          m:      "une minute",
          mm:     "%d minutes",
          h:      "une heure",
          hh:     "%d heures",
          d:      "un jour",
          dd:     "%d jours",
          M:      "un mois",
          MM:     "%d mois",
          y:      "un an",
          yy:     "%d ans"
        },
        ordinalParse:   /\d{1,2}(er|e)/,
        ordinal:        function (a) {
          return a + (1 === a ? "er" : "e")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("fr", {
        months:         "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
        monthsShort:    "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
        weekdays:       "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort:  "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin:    "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Aujourd'hui à] LT",
          nextDay:  "[Demain à] LT",
          nextWeek: "dddd [à] LT",
          lastDay:  "[Hier à] LT",
          lastWeek: "dddd [dernier à] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dans %s",
          past:   "il y a %s",
          s:      "quelques secondes",
          m:      "une minute",
          mm:     "%d minutes",
          h:      "une heure",
          hh:     "%d heures",
          d:      "un jour",
          dd:     "%d jours",
          M:      "un mois",
          MM:     "%d mois",
          y:      "un an",
          yy:     "%d ans"
        },
        ordinalParse:   /\d{1,2}(er|)/,
        ordinal:        function (a) {
          return a + (1 === a ? "er" : "")
        },
        week:           {dow: 1, doy: 4}
      }), "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_")),
      xa                                                                                        = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
      ya                                                                                        = (a.defineLocale("fy", {
        months:         "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
        monthsShort:    function (a, b) {
          return /-MMM-/.test(b) ? xa[a.month()] : wa[a.month()]
        },
        weekdays:       "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
        weekdaysShort:  "si._mo._ti._wo._to._fr._so.".split("_"),
        weekdaysMin:    "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD-MM-YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[hjoed om] LT",
          nextDay:  "[moarn om] LT",
          nextWeek: "dddd [om] LT",
          lastDay:  "[juster om] LT",
          lastWeek: "[ôfrûne] dddd [om] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "oer %s",
          past:   "%s lyn",
          s:      "in pear sekonden",
          m:      "ien minút",
          mm:     "%d minuten",
          h:      "ien oere",
          hh:     "%d oeren",
          d:      "ien dei",
          dd:     "%d dagen",
          M:      "ien moanne",
          MM:     "%d moannen",
          y:      "ien jier",
          yy:     "%d jierren"
        },
        ordinalParse:   /\d{1,2}(ste|de)/,
        ordinal:        function (a) {
          return a + (1 === a || 8 === a || a >= 20 ? "ste" : "de")
        },
        week:           {dow: 1, doy: 4}
      }), ["Am Faoilleach", "An Gearran", "Am Màrt", "An Giblean", "An Cèitean", "An t-Ògmhios", "An t-Iuchar", "An Lùnastal", "An t-Sultain", "An Dàmhair", "An t-Samhain", "An Dùbhlachd"]),
      za                                                                                        = ["Faoi", "Gear", "Màrt", "Gibl", "Cèit", "Ògmh", "Iuch", "Lùn", "Sult", "Dàmh", "Samh", "Dùbh"],
      Aa                                                                                        = ["Didòmhnaich", "Diluain", "Dimàirt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"],
      Ba                                                                                        = ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
      Ca                                                                                        = ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"],
      Da                                                                                        = (a.defineLocale("gd", {
        months:           ya,
        monthsShort:      za,
        monthsParseExact: !0,
        weekdays:         Aa,
        weekdaysShort:    Ba,
        weekdaysMin:      Ca,
        longDateFormat:   {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:         {
          sameDay:  "[An-diugh aig] LT",
          nextDay:  "[A-màireach aig] LT",
          nextWeek: "dddd [aig] LT",
          lastDay:  "[An-dè aig] LT",
          lastWeek: "dddd [seo chaidh] [aig] LT",
          sameElse: "L"
        },
        relativeTime:     {
          future: "ann an %s",
          past:   "bho chionn %s",
          s:      "beagan diogan",
          m:      "mionaid",
          mm:     "%d mionaidean",
          h:      "uair",
          hh:     "%d uairean",
          d:      "latha",
          dd:     "%d latha",
          M:      "mìos",
          MM:     "%d mìosan",
          y:      "bliadhna",
          yy:     "%d bliadhna"
        },
        ordinalParse:     /\d{1,2}(d|na|mh)/,
        ordinal:          function (a) {
          return a + (1 === a ? "d" : a % 10 == 2 ? "na" : "mh")
        },
        week:             {dow: 1, doy: 4}
      }), a.defineLocale("gl", {
        months:         "Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split("_"),
        monthsShort:    "Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
        weekdays:       "Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado".split("_"),
        weekdaysShort:  "Dom._Lun._Mar._Mér._Xov._Ven._Sáb.".split("_"),
        weekdaysMin:    "Do_Lu_Ma_Mé_Xo_Ve_Sá".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY H:mm",
          LLLL: "dddd D MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     function () {
            return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT"
          }, nextDay:  function () {
            return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT"
          }, nextWeek: function () {
            return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT"
          }, lastDay:  function () {
            return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT"
          }, lastWeek: function () {
            return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT"
          }, sameElse: "L"
        },
        relativeTime:   {
          future: function (a) {
            return "uns segundos" === a ? "nuns segundos" : "en " + a
          },
          past:   "hai %s",
          s:      "uns segundos",
          m:      "un minuto",
          mm:     "%d minutos",
          h:      "unha hora",
          hh:     "%d horas",
          d:      "un día",
          dd:     "%d días",
          M:      "un mes",
          MM:     "%d meses",
          y:      "un ano",
          yy:     "%d anos"
        },
        ordinalParse:   /\d{1,2}º/,
        ordinal:        "%dº",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("he", {
        months:         "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
        monthsShort:    "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
        weekdays:       "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
        weekdaysShort:  "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
        weekdaysMin:    "א_ב_ג_ד_ה_ו_ש".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D [ב]MMMM YYYY",
          LLL:  "D [ב]MMMM YYYY HH:mm",
          LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
          l:    "D/M/YYYY",
          ll:   "D MMM YYYY",
          lll:  "D MMM YYYY HH:mm",
          llll: "ddd, D MMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[היום ב־]LT",
          nextDay:  "[מחר ב־]LT",
          nextWeek: "dddd [בשעה] LT",
          lastDay:  "[אתמול ב־]LT",
          lastWeek: "[ביום] dddd [האחרון בשעה] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "בעוד %s",
          past:   "לפני %s",
          s:      "מספר שניות",
          m:      "דקה",
          mm:     "%d דקות",
          h:      "שעה",
          hh:     function (a) {
            return 2 === a ? "שעתיים" : a + " שעות"
          },
          d:      "יום",
          dd:     function (a) {
            return 2 === a ? "יומיים" : a + " ימים"
          },
          M:      "חודש",
          MM:     function (a) {
            return 2 === a ? "חודשיים" : a + " חודשים"
          },
          y:      "שנה",
          yy:     function (a) {
            return 2 === a ? "שנתיים" : a % 10 == 0 && 10 !== a ? a + " שנה" : a + " שנים"
          }
        },
        meridiemParse:  /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM:           function (a) {
          return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(a)
        },
        meridiem:       function (a, b, c) {
          return 5 > a ? "לפנות בוקר" : 10 > a ? "בבוקר" : 12 > a ? c ? 'לפנה"צ' : "לפני הצהריים" : 18 > a ? c ? 'אחה"צ' : "אחרי הצהריים" : "בערב"
        }
      }), {1: "१", 2: "२", 3: "३", 4: "४", 5: "५", 6: "६", 7: "७", 8: "८", 9: "९", 0: "०"}), Ea = {
        "१": "1",
        "२": "2",
        "३": "3",
        "४": "4",
        "५": "5",
        "६": "6",
        "७": "7",
        "८": "8",
        "९": "9",
        "०": "0"
      },
      Fa                                                                                        = (a.defineLocale("hi", {
        months:         "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),
        monthsShort:    "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
        weekdays:       "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
        weekdaysShort:  "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
        weekdaysMin:    "र_सो_मं_बु_गु_शु_श".split("_"),
        longDateFormat: {
          LT:   "A h:mm बजे",
          LTS:  "A h:mm:ss बजे",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm बजे",
          LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
        },
        calendar:       {
          sameDay:  "[आज] LT",
          nextDay:  "[कल] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[कल] LT",
          lastWeek: "[पिछले] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s में",
          past:   "%s पहले",
          s:      "कुछ ही क्षण",
          m:      "एक मिनट",
          mm:     "%d मिनट",
          h:      "एक घंटा",
          hh:     "%d घंटे",
          d:      "एक दिन",
          dd:     "%d दिन",
          M:      "एक महीने",
          MM:     "%d महीने",
          y:      "एक वर्ष",
          yy:     "%d वर्ष"
        },
        preparse:       function (a) {
          return a.replace(/[१२३४५६७८९०]/g, function (a) {
            return Ea[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return Da[a]
          })
        },
        meridiemParse:  /रात|सुबह|दोपहर|शाम/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "रात" === b ? 4 > a ? a : a + 12 : "सुबह" === b ? a : "दोपहर" === b ? a >= 10 ? a : a + 12 : "शाम" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "रात" : 10 > a ? "सुबह" : 17 > a ? "दोपहर" : 20 > a ? "शाम" : "रात"
        },
        week:           {dow: 0, doy: 6}
      }), a.defineLocale("hr", {
        months:         {
          format:     "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),
          standalone: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")
        },
        monthsShort:    "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
        weekdays:       "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
        weekdaysShort:  "ned._pon._uto._sri._čet._pet._sub.".split("_"),
        weekdaysMin:    "ne_po_ut_sr_če_pe_su".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[danas u] LT", nextDay: "[sutra u] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[u] [nedjelju] [u] LT";
              case 3:
                return "[u] [srijedu] [u] LT";
              case 6:
                return "[u] [subotu] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[u] dddd [u] LT"
            }
          }, lastDay:  "[jučer u] LT", lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
                return "[prošlu] dddd [u] LT";
              case 6:
                return "[prošle] [subote] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[prošli] dddd [u] LT"
            }
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "prije %s",
          s:      "par sekundi",
          m:      r,
          mm:     r,
          h:      r,
          hh:     r,
          d:      "dan",
          dd:     r,
          M:      "mjesec",
          MM:     r,
          y:      "godinu",
          yy:     r
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ")),
      Ga                                                                                        = (a.defineLocale("hu", {
        months:         "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
        monthsShort:    "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
        weekdays:       "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
        weekdaysShort:  "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
        weekdaysMin:    "v_h_k_sze_cs_p_szo".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "YYYY.MM.DD.",
          LL:   "YYYY. MMMM D.",
          LLL:  "YYYY. MMMM D. H:mm",
          LLLL: "YYYY. MMMM D., dddd H:mm"
        },
        meridiemParse:  /de|du/i,
        isPM:           function (a) {
          return "u" === a.charAt(1).toLowerCase()
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? !0 === c ? "de" : "DE" : !0 === c ? "du" : "DU"
        },
        calendar:       {
          sameDay:     "[ma] LT[-kor]", nextDay: "[holnap] LT[-kor]", nextWeek: function () {
            return t.call(this, !0)
          }, lastDay:  "[tegnap] LT[-kor]", lastWeek: function () {
            return t.call(this, !1)
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "%s múlva",
          past:   "%s",
          s:      s,
          m:      s,
          mm:     s,
          h:      s,
          hh:     s,
          d:      s,
          dd:     s,
          M:      s,
          MM:     s,
          y:      s,
          yy:     s
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("hy-am", {
        months:         {
          format:     "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),
          standalone: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")
        },
        monthsShort:    "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),
        weekdays:       "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),
        weekdaysShort:  "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
        weekdaysMin:    "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY թ.",
          LLL:  "D MMMM YYYY թ., HH:mm",
          LLLL: "dddd, D MMMM YYYY թ., HH:mm"
        },
        calendar:       {
          sameDay:  "[այսօր] LT",
          nextDay:  "[վաղը] LT",
          lastDay:  "[երեկ] LT",
          nextWeek: function () {
            return "dddd [օրը ժամը] LT"
          },
          lastWeek: function () {
            return "[անցած] dddd [օրը ժամը] LT"
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s հետո",
          past:   "%s առաջ",
          s:      "մի քանի վայրկյան",
          m:      "րոպե",
          mm:     "%d րոպե",
          h:      "ժամ",
          hh:     "%d ժամ",
          d:      "օր",
          dd:     "%d օր",
          M:      "ամիս",
          MM:     "%d ամիս",
          y:      "տարի",
          yy:     "%d տարի"
        },
        meridiemParse:  /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM:           function (a) {
          return /^(ցերեկվա|երեկոյան)$/.test(a)
        },
        meridiem:       function (a) {
          return 4 > a ? "գիշերվա" : 12 > a ? "առավոտվա" : 17 > a ? "ցերեկվա" : "երեկոյան"
        },
        ordinalParse:   /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal:        function (a, b) {
          switch (b) {
            case"DDD":
            case"w":
            case"W":
            case"DDDo":
              return 1 === a ? a + "-ին" : a + "-րդ";
            default:
              return a
          }
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("id", {
        months:         "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
        weekdays:       "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
        weekdaysShort:  "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
        weekdaysMin:    "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
          LT:   "HH.mm",
          LTS:  "HH.mm.ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY [pukul] HH.mm",
          LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse:  /pagi|siang|sore|malam/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "pagi" === b ? a : "siang" === b ? a >= 11 ? a : a + 12 : "sore" === b || "malam" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 11 > a ? "pagi" : 15 > a ? "siang" : 19 > a ? "sore" : "malam"
        },
        calendar:       {
          sameDay:  "[Hari ini pukul] LT",
          nextDay:  "[Besok pukul] LT",
          nextWeek: "dddd [pukul] LT",
          lastDay:  "[Kemarin pukul] LT",
          lastWeek: "dddd [lalu pukul] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dalam %s",
          past:   "%s yang lalu",
          s:      "beberapa detik",
          m:      "semenit",
          mm:     "%d menit",
          h:      "sejam",
          hh:     "%d jam",
          d:      "sehari",
          dd:     "%d hari",
          M:      "sebulan",
          MM:     "%d bulan",
          y:      "setahun",
          yy:     "%d tahun"
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("is", {
        months:         "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
        monthsShort:    "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
        weekdays:       "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
        weekdaysShort:  "sun_mán_þri_mið_fim_fös_lau".split("_"),
        weekdaysMin:    "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY [kl.] H:mm",
          LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
        },
        calendar:       {
          sameDay:  "[í dag kl.] LT",
          nextDay:  "[á morgun kl.] LT",
          nextWeek: "dddd [kl.] LT",
          lastDay:  "[í gær kl.] LT",
          lastWeek: "[síðasta] dddd [kl.] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "eftir %s",
          past:   "fyrir %s síðan",
          s:      v,
          m:      v,
          mm:     v,
          h:      "klukkustund",
          hh:     v,
          d:      v,
          dd:     v,
          M:      v,
          MM:     v,
          y:      v,
          yy:     v
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("it", {
        months:         "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
        monthsShort:    "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
        weekdays:       "Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato".split("_"),
        weekdaysShort:  "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
        weekdaysMin:    "Do_Lu_Ma_Me_Gi_Ve_Sa".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Oggi alle] LT",
          nextDay:  "[Domani alle] LT",
          nextWeek: "dddd [alle] LT",
          lastDay:  "[Ieri alle] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return "[la scorsa] dddd [alle] LT";
              default:
                return "[lo scorso] dddd [alle] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: function (a) {
            return (/^[0-9].+$/.test(a) ? "tra" : "in") + " " + a
          },
          past:   "%s fa",
          s:      "alcuni secondi",
          m:      "un minuto",
          mm:     "%d minuti",
          h:      "un'ora",
          hh:     "%d ore",
          d:      "un giorno",
          dd:     "%d giorni",
          M:      "un mese",
          MM:     "%d mesi",
          y:      "un anno",
          yy:     "%d anni"
        },
        ordinalParse:   /\d{1,2}º/,
        ordinal:        "%dº",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("ja", {
        months:         "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
        monthsShort:    "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
        weekdays:       "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
        weekdaysShort:  "日_月_火_水_木_金_土".split("_"),
        weekdaysMin:    "日_月_火_水_木_金_土".split("_"),
        longDateFormat: {
          LT:   "Ah時m分",
          LTS:  "Ah時m分s秒",
          L:    "YYYY/MM/DD",
          LL:   "YYYY年M月D日",
          LLL:  "YYYY年M月D日Ah時m分",
          LLLL: "YYYY年M月D日Ah時m分 dddd"
        },
        meridiemParse:  /午前|午後/i,
        isPM:           function (a) {
          return "午後" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "午前" : "午後"
        },
        calendar:       {
          sameDay:  "[今日] LT",
          nextDay:  "[明日] LT",
          nextWeek: "[来週]dddd LT",
          lastDay:  "[昨日] LT",
          lastWeek: "[前週]dddd LT",
          sameElse: "L"
        },
        ordinalParse:   /\d{1,2}日/,
        ordinal:        function (a, b) {
          switch (b) {
            case"d":
            case"D":
            case"DDD":
              return a + "日";
            default:
              return a
          }
        },
        relativeTime:   {
          future: "%s後",
          past:   "%s前",
          s:      "数秒",
          m:      "1分",
          mm:     "%d分",
          h:      "1時間",
          hh:     "%d時間",
          d:      "1日",
          dd:     "%d日",
          M:      "1ヶ月",
          MM:     "%dヶ月",
          y:      "1年",
          yy:     "%d年"
        }
      }), a.defineLocale("jv", {
        months:         "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
        monthsShort:    "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
        weekdays:       "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
        weekdaysShort:  "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
        weekdaysMin:    "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
        longDateFormat: {
          LT:   "HH.mm",
          LTS:  "HH.mm.ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY [pukul] HH.mm",
          LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse:  /enjing|siyang|sonten|ndalu/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "enjing" === b ? a : "siyang" === b ? a >= 11 ? a : a + 12 : "sonten" === b || "ndalu" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 11 > a ? "enjing" : 15 > a ? "siyang" : 19 > a ? "sonten" : "ndalu"
        },
        calendar:       {
          sameDay:  "[Dinten puniko pukul] LT",
          nextDay:  "[Mbenjang pukul] LT",
          nextWeek: "dddd [pukul] LT",
          lastDay:  "[Kala wingi pukul] LT",
          lastWeek: "dddd [kepengker pukul] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "wonten ing %s",
          past:   "%s ingkang kepengker",
          s:      "sawetawis detik",
          m:      "setunggal menit",
          mm:     "%d menit",
          h:      "setunggal jam",
          hh:     "%d jam",
          d:      "sedinten",
          dd:     "%d dinten",
          M:      "sewulan",
          MM:     "%d wulan",
          y:      "setaun",
          yy:     "%d taun"
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("ka", {
        months:         {
          standalone: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),
          format:     "იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split("_")
        },
        monthsShort:    "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
        weekdays:       {
          standalone: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),
          format:     "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),
          isFormat:   /(წინა|შემდეგ)/
        },
        weekdaysShort:  "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
        weekdaysMin:    "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
        longDateFormat: {
          LT:   "h:mm A",
          LTS:  "h:mm:ss A",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY h:mm A",
          LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar:       {
          sameDay:  "[დღეს] LT[-ზე]",
          nextDay:  "[ხვალ] LT[-ზე]",
          lastDay:  "[გუშინ] LT[-ზე]",
          nextWeek: "[შემდეგ] dddd LT[-ზე]",
          lastWeek: "[წინა] dddd LT-ზე",
          sameElse: "L"
        },
        relativeTime:   {
          future: function (a) {
            return /(წამი|წუთი|საათი|წელი)/.test(a) ? a.replace(/ი$/, "ში") : a + "ში"
          },
          past:   function (a) {
            return /(წამი|წუთი|საათი|დღე|თვე)/.test(a) ? a.replace(/(ი|ე)$/, "ის წინ") : /წელი/.test(a) ? a.replace(/წელი$/, "წლის წინ") : void 0
          },
          s:      "რამდენიმე წამი",
          m:      "წუთი",
          mm:     "%d წუთი",
          h:      "საათი",
          hh:     "%d საათი",
          d:      "დღე",
          dd:     "%d დღე",
          M:      "თვე",
          MM:     "%d თვე",
          y:      "წელი",
          yy:     "%d წელი"
        },
        ordinalParse:   /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal:        function (a) {
          return 0 === a ? a : 1 === a ? a + "-ლი" : 20 > a || 100 >= a && a % 20 == 0 || a % 100 == 0 ? "მე-" + a : a + "-ე"
        },
        week:           {dow: 1, doy: 7}
      }), {
        0:   "-ші",
        1:   "-ші",
        2:   "-ші",
        3:   "-ші",
        4:   "-ші",
        5:   "-ші",
        6:   "-шы",
        7:   "-ші",
        8:   "-ші",
        9:   "-шы",
        10:  "-шы",
        20:  "-шы",
        30:  "-шы",
        40:  "-шы",
        50:  "-ші",
        60:  "-шы",
        70:  "-ші",
        80:  "-ші",
        90:  "-шы",
        100: "-ші"
      }),
      Ha                                                                                        = (a.defineLocale("kk", {
        months:         "Қаңтар_Ақпан_Наурыз_Сәуір_Мамыр_Маусым_Шілде_Тамыз_Қыркүйек_Қазан_Қараша_Желтоқсан".split("_"),
        monthsShort:    "Қаң_Ақп_Нау_Сәу_Мам_Мау_Шіл_Там_Қыр_Қаз_Қар_Жел".split("_"),
        weekdays:       "Жексенбі_Дүйсенбі_Сейсенбі_Сәрсенбі_Бейсенбі_Жұма_Сенбі".split("_"),
        weekdaysShort:  "Жек_Дүй_Сей_Сәр_Бей_Жұм_Сен".split("_"),
        weekdaysMin:    "Жк_Дй_Сй_Ср_Бй_Жм_Сн".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Бүгін сағат] LT",
          nextDay:  "[Ертең сағат] LT",
          nextWeek: "dddd [сағат] LT",
          lastDay:  "[Кеше сағат] LT",
          lastWeek: "[Өткен аптаның] dddd [сағат] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s ішінде",
          past:   "%s бұрын",
          s:      "бірнеше секунд",
          m:      "бір минут",
          mm:     "%d минут",
          h:      "бір сағат",
          hh:     "%d сағат",
          d:      "бір күн",
          dd:     "%d күн",
          M:      "бір ай",
          MM:     "%d ай",
          y:      "бір жыл",
          yy:     "%d жыл"
        },
        ordinalParse:   /\d{1,2}-(ші|шы)/,
        ordinal:        function (a) {
          var b = a % 10, c = a >= 100 ? 100 : null;
          return a + (Ga[a] || Ga[b] || Ga[c])
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("km", {
        months:         "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
        monthsShort:    "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
        weekdays:       "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
        weekdaysShort:  "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
        weekdaysMin:    "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[ថ្ងៃនេះ ម៉ោង] LT",
          nextDay:  "[ស្អែក ម៉ោង] LT",
          nextWeek: "dddd [ម៉ោង] LT",
          lastDay:  "[ម្សិលមិញ ម៉ោង] LT",
          lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%sទៀត",
          past:   "%sមុន",
          s:      "ប៉ុន្មានវិនាទី",
          m:      "មួយនាទី",
          mm:     "%d នាទី",
          h:      "មួយម៉ោង",
          hh:     "%d ម៉ោង",
          d:      "មួយថ្ងៃ",
          dd:     "%d ថ្ងៃ",
          M:      "មួយខែ",
          MM:     "%d ខែ",
          y:      "មួយឆ្នាំ",
          yy:     "%d ឆ្នាំ"
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("ko", {
        months:         "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
        monthsShort:    "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
        weekdays:       "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
        weekdaysShort:  "일_월_화_수_목_금_토".split("_"),
        weekdaysMin:    "일_월_화_수_목_금_토".split("_"),
        longDateFormat: {
          LT:   "A h시 m분",
          LTS:  "A h시 m분 s초",
          L:    "YYYY.MM.DD",
          LL:   "YYYY년 MMMM D일",
          LLL:  "YYYY년 MMMM D일 A h시 m분",
          LLLL: "YYYY년 MMMM D일 dddd A h시 m분"
        },
        calendar:       {
          sameDay:  "오늘 LT",
          nextDay:  "내일 LT",
          nextWeek: "dddd LT",
          lastDay:  "어제 LT",
          lastWeek: "지난주 dddd LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s 후",
          past:   "%s 전",
          s:      "몇초",
          ss:     "%d초",
          m:      "일분",
          mm:     "%d분",
          h:      "한시간",
          hh:     "%d시간",
          d:      "하루",
          dd:     "%d일",
          M:      "한달",
          MM:     "%d달",
          y:      "일년",
          yy:     "%d년"
        },
        ordinalParse:   /\d{1,2}일/,
        ordinal:        "%d일",
        meridiemParse:  /오전|오후/,
        isPM:           function (a) {
          return "오후" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "오전" : "오후"
        }
      }), a.defineLocale("lb", {
        months:         "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort:    "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
        weekdays:       "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
        weekdaysShort:  "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
        weekdaysMin:    "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
        longDateFormat: {
          LT:   "H:mm [Auer]",
          LTS:  "H:mm:ss [Auer]",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm [Auer]",
          LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
        },
        calendar:       {
          sameDay:  "[Haut um] LT",
          sameElse: "L",
          nextDay:  "[Muer um] LT",
          nextWeek: "dddd [um] LT",
          lastDay:  "[Gëschter um] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 2:
              case 4:
                return "[Leschten] dddd [um] LT";
              default:
                return "[Leschte] dddd [um] LT"
            }
          }
        },
        relativeTime:   {
          future: x,
          past:   y,
          s:      "e puer Sekonnen",
          m:      w,
          mm:     "%d Minutten",
          h:      w,
          hh:     "%d Stonnen",
          d:      w,
          dd:     "%d Deeg",
          M:      w,
          MM:     "%d Méint",
          y:      w,
          yy:     "%d Joer"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("lo", {
        months:         "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
        monthsShort:    "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
        weekdays:       "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
        weekdaysShort:  "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
        weekdaysMin:    "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "ວັນdddd D MMMM YYYY HH:mm"
        },
        meridiemParse:  /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM:           function (a) {
          return "ຕອນແລງ" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "ຕອນເຊົ້າ" : "ຕອນແລງ"
        },
        calendar:       {
          sameDay:  "[ມື້ນີ້ເວລາ] LT",
          nextDay:  "[ມື້ອື່ນເວລາ] LT",
          nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
          lastDay:  "[ມື້ວານນີ້ເວລາ] LT",
          lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "ອີກ %s",
          past:   "%sຜ່ານມາ",
          s:      "ບໍ່ເທົ່າໃດວິນາທີ",
          m:      "1 ນາທີ",
          mm:     "%d ນາທີ",
          h:      "1 ຊົ່ວໂມງ",
          hh:     "%d ຊົ່ວໂມງ",
          d:      "1 ມື້",
          dd:     "%d ມື້",
          M:      "1 ເດືອນ",
          MM:     "%d ເດືອນ",
          y:      "1 ປີ",
          yy:     "%d ປີ"
        },
        ordinalParse:   /(ທີ່)\d{1,2}/,
        ordinal:        function (a) {
          return "ທີ່" + a
        }
      }), {
        m:  "minutė_minutės_minutę",
        mm: "minutės_minučių_minutes",
        h:  "valanda_valandos_valandą",
        hh: "valandos_valandų_valandas",
        d:  "diena_dienos_dieną",
        dd: "dienos_dienų_dienas",
        M:  "mėnuo_mėnesio_mėnesį",
        MM: "mėnesiai_mėnesių_mėnesius",
        y:  "metai_metų_metus",
        yy: "metai_metų_metus"
      }),
      Ia                                                                                        = (a.defineLocale("lt", {
        months:         {
          format:     "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),
          standalone: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_")
        },
        monthsShort:    "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
        weekdays:       {
          format:     "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),
          standalone: "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),
          isFormat:   /dddd HH:mm/
        },
        weekdaysShort:  "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
        weekdaysMin:    "S_P_A_T_K_Pn_Š".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "YYYY-MM-DD",
          LL:   "YYYY [m.] MMMM D [d.]",
          LLL:  "YYYY [m.] MMMM D [d.], HH:mm [val.]",
          LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
          l:    "YYYY-MM-DD",
          ll:   "YYYY [m.] MMMM D [d.]",
          lll:  "YYYY [m.] MMMM D [d.], HH:mm [val.]",
          llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
        },
        calendar:       {
          sameDay:  "[Šiandien] LT",
          nextDay:  "[Rytoj] LT",
          nextWeek: "dddd LT",
          lastDay:  "[Vakar] LT",
          lastWeek: "[Praėjusį] dddd LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "po %s",
          past:   "prieš %s",
          s:      A,
          m:      B,
          mm:     E,
          h:      B,
          hh:     E,
          d:      B,
          dd:     E,
          M:      B,
          MM:     E,
          y:      B,
          yy:     E
        },
        ordinalParse:   /\d{1,2}-oji/,
        ordinal:        function (a) {
          return a + "-oji"
        },
        week:           {dow: 1, doy: 4}
      }), {
        m:  "minūtes_minūtēm_minūte_minūtes".split("_"),
        mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
        h:  "stundas_stundām_stunda_stundas".split("_"),
        hh: "stundas_stundām_stunda_stundas".split("_"),
        d:  "dienas_dienām_diena_dienas".split("_"),
        dd: "dienas_dienām_diena_dienas".split("_"),
        M:  "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
        MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
        y:  "gada_gadiem_gads_gadi".split("_"),
        yy: "gada_gadiem_gads_gadi".split("_")
      }),
      Ja                                                                                        = (a.defineLocale("lv", {
        months:         "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
        monthsShort:    "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
        weekdays:       "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
        weekdaysShort:  "Sv_P_O_T_C_Pk_S".split("_"),
        weekdaysMin:    "Sv_P_O_T_C_Pk_S".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY.",
          LL:   "YYYY. [gada] D. MMMM",
          LLL:  "YYYY. [gada] D. MMMM, HH:mm",
          LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
        },
        calendar:       {
          sameDay:  "[Šodien pulksten] LT",
          nextDay:  "[Rīt pulksten] LT",
          nextWeek: "dddd [pulksten] LT",
          lastDay:  "[Vakar pulksten] LT",
          lastWeek: "[Pagājušā] dddd [pulksten] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "pēc %s",
          past:   "pirms %s",
          s:      I,
          m:      H,
          mm:     G,
          h:      H,
          hh:     G,
          d:      H,
          dd:     G,
          M:      H,
          MM:     G,
          y:      H,
          yy:     G
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), {
        words:                     {
          m:  ["jedan minut", "jednog minuta"],
          mm: ["minut", "minuta", "minuta"],
          h:  ["jedan sat", "jednog sata"],
          hh: ["sat", "sata", "sati"],
          dd: ["dan", "dana", "dana"],
          MM: ["mjesec", "mjeseca", "mjeseci"],
          yy: ["godina", "godine", "godina"]
        }, correctGrammaticalCase: function (a, b) {
          return 1 === a ? b[0] : a >= 2 && 4 >= a ? b[1] : b[2]
        }, translate:              function (a, b, c) {
          var d = Ja.words[c];
          return 1 === c.length ? b ? d[0] : d[1] : a + " " + Ja.correctGrammaticalCase(a, d)
        }
      }),
      Ka                                                                                        = (a.defineLocale("me", {
        months:         ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"],
        monthsShort:    ["jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec."],
        weekdays:       ["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"],
        weekdaysShort:  ["ned.", "pon.", "uto.", "sri.", "čet.", "pet.", "sub."],
        weekdaysMin:    ["ne", "po", "ut", "sr", "če", "pe", "su"],
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[danas u] LT", nextDay: "[sjutra u] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[u] [nedjelju] [u] LT";
              case 3:
                return "[u] [srijedu] [u] LT";
              case 6:
                return "[u] [subotu] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[u] dddd [u] LT"
            }
          }, lastDay:  "[juče u] LT", lastWeek: function () {
            return ["[prošle] [nedjelje] [u] LT", "[prošlog] [ponedjeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srijede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "prije %s",
          s:      "nekoliko sekundi",
          m:      Ja.translate,
          mm:     Ja.translate,
          h:      Ja.translate,
          hh:     Ja.translate,
          d:      "dan",
          dd:     Ja.translate,
          M:      "mjesec",
          MM:     Ja.translate,
          y:      "godinu",
          yy:     Ja.translate
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("mk", {
        months:         "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
        monthsShort:    "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
        weekdays:       "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
        weekdaysShort:  "нед_пон_вто_сре_чет_пет_саб".split("_"),
        weekdaysMin:    "нe_пo_вт_ср_че_пе_сa".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "D.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY H:mm",
          LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:  "[Денес во] LT",
          nextDay:  "[Утре во] LT",
          nextWeek: "[Во] dddd [во] LT",
          lastDay:  "[Вчера во] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 6:
                return "[Изминатата] dddd [во] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[Изминатиот] dddd [во] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "после %s",
          past:   "пред %s",
          s:      "неколку секунди",
          m:      "минута",
          mm:     "%d минути",
          h:      "час",
          hh:     "%d часа",
          d:      "ден",
          dd:     "%d дена",
          M:      "месец",
          MM:     "%d месеци",
          y:      "година",
          yy:     "%d години"
        },
        ordinalParse:   /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal:        function (a) {
          var b = a % 10, c = a % 100;
          return 0 === a ? a + "-ев" : 0 === c ? a + "-ен" : c > 10 && 20 > c ? a + "-ти" : 1 === b ? a + "-ви" : 2 === b ? a + "-ри" : 7 === b || 8 === b ? a + "-ми" : a + "-ти"
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("ml", {
        months:         "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),
        monthsShort:    "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
        weekdays:       "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),
        weekdaysShort:  "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
        weekdaysMin:    "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
        longDateFormat: {
          LT:   "A h:mm -നു",
          LTS:  "A h:mm:ss -നു",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm -നു",
          LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
        },
        calendar:       {
          sameDay:  "[ഇന്ന്] LT",
          nextDay:  "[നാളെ] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[ഇന്നലെ] LT",
          lastWeek: "[കഴിഞ്ഞ] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s കഴിഞ്ഞ്",
          past:   "%s മുൻപ്",
          s:      "അൽപ നിമിഷങ്ങൾ",
          m:      "ഒരു മിനിറ്റ്",
          mm:     "%d മിനിറ്റ്",
          h:      "ഒരു മണിക്കൂർ",
          hh:     "%d മണിക്കൂർ",
          d:      "ഒരു ദിവസം",
          dd:     "%d ദിവസം",
          M:      "ഒരു മാസം",
          MM:     "%d മാസം",
          y:      "ഒരു വർഷം",
          yy:     "%d വർഷം"
        },
        meridiemParse:  /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "രാത്രി" === b && a >= 4 || "ഉച്ച കഴിഞ്ഞ്" === b || "വൈകുന്നേരം" === b ? a + 12 : a
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "രാത്രി" : 12 > a ? "രാവിലെ" : 17 > a ? "ഉച്ച കഴിഞ്ഞ്" : 20 > a ? "വൈകുന്നേരം" : "രാത്രി"
        }
      }), {1: "१", 2: "२", 3: "३", 4: "४", 5: "५", 6: "६", 7: "७", 8: "८", 9: "९", 0: "०"}), La = {
        "१": "1",
        "२": "2",
        "३": "3",
        "४": "4",
        "५": "5",
        "६": "6",
        "७": "7",
        "८": "8",
        "९": "9",
        "०": "0"
      },
      Ma                                                                                        = (a.defineLocale("mr", {
        months:         "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
        monthsShort:    "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
        weekdays:       "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
        weekdaysShort:  "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
        weekdaysMin:    "र_सो_मं_बु_गु_शु_श".split("_"),
        longDateFormat: {
          LT:   "A h:mm वाजता",
          LTS:  "A h:mm:ss वाजता",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm वाजता",
          LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
        },
        calendar:       {
          sameDay:  "[आज] LT",
          nextDay:  "[उद्या] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[काल] LT",
          lastWeek: "[मागील] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%sमध्ये",
          past:   "%sपूर्वी",
          s:      J,
          m:      J,
          mm:     J,
          h:      J,
          hh:     J,
          d:      J,
          dd:     J,
          M:      J,
          MM:     J,
          y:      J,
          yy:     J
        },
        preparse:       function (a) {
          return a.replace(/[१२३४५६७८९०]/g, function (a) {
            return La[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return Ka[a]
          })
        },
        meridiemParse:  /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "रात्री" === b ? 4 > a ? a : a + 12 : "सकाळी" === b ? a : "दुपारी" === b ? a >= 10 ? a : a + 12 : "सायंकाळी" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "रात्री" : 10 > a ? "सकाळी" : 17 > a ? "दुपारी" : 20 > a ? "सायंकाळी" : "रात्री"
        },
        week:           {dow: 0, doy: 6}
      }), a.defineLocale("ms-my", {
        months:         "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
        monthsShort:    "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
        weekdays:       "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
        weekdaysShort:  "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
        weekdaysMin:    "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
          LT:   "HH.mm",
          LTS:  "HH.mm.ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY [pukul] HH.mm",
          LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse:  /pagi|tengahari|petang|malam/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "pagi" === b ? a : "tengahari" === b ? a >= 11 ? a : a + 12 : "petang" === b || "malam" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 11 > a ? "pagi" : 15 > a ? "tengahari" : 19 > a ? "petang" : "malam"
        },
        calendar:       {
          sameDay:  "[Hari ini pukul] LT",
          nextDay:  "[Esok pukul] LT",
          nextWeek: "dddd [pukul] LT",
          lastDay:  "[Kelmarin pukul] LT",
          lastWeek: "dddd [lepas pukul] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dalam %s",
          past:   "%s yang lepas",
          s:      "beberapa saat",
          m:      "seminit",
          mm:     "%d minit",
          h:      "sejam",
          hh:     "%d jam",
          d:      "sehari",
          dd:     "%d hari",
          M:      "sebulan",
          MM:     "%d bulan",
          y:      "setahun",
          yy:     "%d tahun"
        },
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("ms", {
        months:         "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
        monthsShort:    "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
        weekdays:       "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
        weekdaysShort:  "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
        weekdaysMin:    "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
          LT:   "HH.mm",
          LTS:  "HH.mm.ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY [pukul] HH.mm",
          LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse:  /pagi|tengahari|petang|malam/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "pagi" === b ? a : "tengahari" === b ? a >= 11 ? a : a + 12 : "petang" === b || "malam" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 11 > a ? "pagi" : 15 > a ? "tengahari" : 19 > a ? "petang" : "malam"
        },
        calendar:       {
          sameDay:  "[Hari ini pukul] LT",
          nextDay:  "[Esok pukul] LT",
          nextWeek: "dddd [pukul] LT",
          lastDay:  "[Kelmarin pukul] LT",
          lastWeek: "dddd [lepas pukul] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "dalam %s",
          past:   "%s yang lepas",
          s:      "beberapa saat",
          m:      "seminit",
          mm:     "%d minit",
          h:      "sejam",
          hh:     "%d jam",
          d:      "sehari",
          dd:     "%d hari",
          M:      "sebulan",
          MM:     "%d bulan",
          y:      "setahun",
          yy:     "%d tahun"
        },
        week:           {dow: 1, doy: 7}
      }), {1: "၁", 2: "၂", 3: "၃", 4: "၄", 5: "၅", 6: "၆", 7: "၇", 8: "၈", 9: "၉", 0: "၀"}), Na = {
        "၁": "1",
        "၂": "2",
        "၃": "3",
        "၄": "4",
        "၅": "5",
        "၆": "6",
        "၇": "7",
        "၈": "8",
        "၉": "9",
        "၀": "0"
      },
      Oa                                                                                        = (a.defineLocale("my", {
        months:         "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),
        monthsShort:    "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
        weekdays:       "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
        weekdaysShort:  "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
        weekdaysMin:    "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[ယနေ.] LT [မှာ]",
          nextDay:  "[မနက်ဖြန်] LT [မှာ]",
          nextWeek: "dddd LT [မှာ]",
          lastDay:  "[မနေ.က] LT [မှာ]",
          lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
          sameElse: "L"
        },
        relativeTime:   {
          future: "လာမည့် %s မှာ",
          past:   "လွန်ခဲ့သော %s က",
          s:      "စက္ကန်.အနည်းငယ်",
          m:      "တစ်မိနစ်",
          mm:     "%d မိနစ်",
          h:      "တစ်နာရီ",
          hh:     "%d နာရီ",
          d:      "တစ်ရက်",
          dd:     "%d ရက်",
          M:      "တစ်လ",
          MM:     "%d လ",
          y:      "တစ်နှစ်",
          yy:     "%d နှစ်"
        },
        preparse:       function (a) {
          return a.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (a) {
            return Na[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return Ma[a]
          })
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("nb", {
        months:         "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort:    "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
        weekdays:       "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
        weekdaysShort:  "sø._ma._ti._on._to._fr._lø.".split("_"),
        weekdaysMin:    "sø_ma_ti_on_to_fr_lø".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY [kl.] HH:mm",
          LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
        },
        calendar:       {
          sameDay:  "[i dag kl.] LT",
          nextDay:  "[i morgen kl.] LT",
          nextWeek: "dddd [kl.] LT",
          lastDay:  "[i går kl.] LT",
          lastWeek: "[forrige] dddd [kl.] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "om %s",
          past:   "for %s siden",
          s:      "noen sekunder",
          m:      "ett minutt",
          mm:     "%d minutter",
          h:      "en time",
          hh:     "%d timer",
          d:      "en dag",
          dd:     "%d dager",
          M:      "en måned",
          MM:     "%d måneder",
          y:      "ett år",
          yy:     "%d år"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), {1: "१", 2: "२", 3: "३", 4: "४", 5: "५", 6: "६", 7: "७", 8: "८", 9: "९", 0: "०"}), Pa = {
        "१": "1",
        "२": "2",
        "३": "3",
        "४": "4",
        "५": "5",
        "६": "6",
        "७": "7",
        "८": "8",
        "९": "9",
        "०": "0"
      },
      Qa                                                                                        = (a.defineLocale("ne", {
        months:         "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),
        monthsShort:    "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),
        weekdays:       "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
        weekdaysShort:  "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
        weekdaysMin:    "आ._सो._मं._बु._बि._शु._श.".split("_"),
        longDateFormat: {
          LT:   "Aको h:mm बजे",
          LTS:  "Aको h:mm:ss बजे",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, Aको h:mm बजे",
          LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
        },
        preparse:       function (a) {
          return a.replace(/[१२३४५६७८९०]/g, function (a) {
            return Pa[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return Oa[a]
          })
        },
        meridiemParse:  /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "राति" === b ? 4 > a ? a : a + 12 : "बिहान" === b ? a : "दिउँसो" === b ? a >= 10 ? a : a + 12 : "साँझ" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 3 > a ? "राति" : 12 > a ? "बिहान" : 16 > a ? "दिउँसो" : 20 > a ? "साँझ" : "राति"
        },
        calendar:       {
          sameDay:  "[आज] LT",
          nextDay:  "[भोलि] LT",
          nextWeek: "[आउँदो] dddd[,] LT",
          lastDay:  "[हिजो] LT",
          lastWeek: "[गएको] dddd[,] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%sमा",
          past:   "%s अगाडि",
          s:      "केही क्षण",
          m:      "एक मिनेट",
          mm:     "%d मिनेट",
          h:      "एक घण्टा",
          hh:     "%d घण्टा",
          d:      "एक दिन",
          dd:     "%d दिन",
          M:      "एक महिना",
          MM:     "%d महिना",
          y:      "एक बर्ष",
          yy:     "%d बर्ष"
        },
        week:           {dow: 0, doy: 6}
      }), "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_")),
      Ra                                                                                        = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
      Sa                                                                                        = (a.defineLocale("nl", {
        months:         "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
        monthsShort:    function (a, b) {
          return /-MMM-/.test(b) ? Ra[a.month()] : Qa[a.month()]
        },
        weekdays:       "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
        weekdaysShort:  "zo._ma._di._wo._do._vr._za.".split("_"),
        weekdaysMin:    "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD-MM-YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[vandaag om] LT",
          nextDay:  "[morgen om] LT",
          nextWeek: "dddd [om] LT",
          lastDay:  "[gisteren om] LT",
          lastWeek: "[afgelopen] dddd [om] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "over %s",
          past:   "%s geleden",
          s:      "een paar seconden",
          m:      "één minuut",
          mm:     "%d minuten",
          h:      "één uur",
          hh:     "%d uur",
          d:      "één dag",
          dd:     "%d dagen",
          M:      "één maand",
          MM:     "%d maanden",
          y:      "één jaar",
          yy:     "%d jaar"
        },
        ordinalParse:   /\d{1,2}(ste|de)/,
        ordinal:        function (a) {
          return a + (1 === a || 8 === a || a >= 20 ? "ste" : "de")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("nn", {
        months:         "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort:    "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
        weekdays:       "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
        weekdaysShort:  "sun_mån_tys_ons_tor_fre_lau".split("_"),
        weekdaysMin:    "su_må_ty_on_to_fr_lø".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY [kl.] H:mm",
          LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
        },
        calendar:       {
          sameDay:  "[I dag klokka] LT",
          nextDay:  "[I morgon klokka] LT",
          nextWeek: "dddd [klokka] LT",
          lastDay:  "[I går klokka] LT",
          lastWeek: "[Føregåande] dddd [klokka] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "om %s",
          past:   "for %s sidan",
          s:      "nokre sekund",
          m:      "eit minutt",
          mm:     "%d minutt",
          h:      "ein time",
          hh:     "%d timar",
          d:      "ein dag",
          dd:     "%d dagar",
          M:      "ein månad",
          MM:     "%d månader",
          y:      "eit år",
          yy:     "%d år"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), {1: "੧", 2: "੨", 3: "੩", 4: "੪", 5: "੫", 6: "੬", 7: "੭", 8: "੮", 9: "੯", 0: "੦"}), Ta = {
        "੧": "1",
        "੨": "2",
        "੩": "3",
        "੪": "4",
        "੫": "5",
        "੬": "6",
        "੭": "7",
        "੮": "8",
        "੯": "9",
        "੦": "0"
      },
      Ua                                                                                        = (a.defineLocale("pa-in", {
        months:         "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
        monthsShort:    "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
        weekdays:       "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),
        weekdaysShort:  "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
        weekdaysMin:    "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
        longDateFormat: {
          LT:   "A h:mm ਵਜੇ",
          LTS:  "A h:mm:ss ਵਜੇ",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm ਵਜੇ",
          LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ"
        },
        calendar:       {
          sameDay:  "[ਅਜ] LT",
          nextDay:  "[ਕਲ] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[ਕਲ] LT",
          lastWeek: "[ਪਿਛਲੇ] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s ਵਿੱਚ",
          past:   "%s ਪਿਛਲੇ",
          s:      "ਕੁਝ ਸਕਿੰਟ",
          m:      "ਇਕ ਮਿੰਟ",
          mm:     "%d ਮਿੰਟ",
          h:      "ਇੱਕ ਘੰਟਾ",
          hh:     "%d ਘੰਟੇ",
          d:      "ਇੱਕ ਦਿਨ",
          dd:     "%d ਦਿਨ",
          M:      "ਇੱਕ ਮਹੀਨਾ",
          MM:     "%d ਮਹੀਨੇ",
          y:      "ਇੱਕ ਸਾਲ",
          yy:     "%d ਸਾਲ"
        },
        preparse:       function (a) {
          return a.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (a) {
            return Ta[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return Sa[a]
          })
        },
        meridiemParse:  /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "ਰਾਤ" === b ? 4 > a ? a : a + 12 : "ਸਵੇਰ" === b ? a : "ਦੁਪਹਿਰ" === b ? a >= 10 ? a : a + 12 : "ਸ਼ਾਮ" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "ਰਾਤ" : 10 > a ? "ਸਵੇਰ" : 17 > a ? "ਦੁਪਹਿਰ" : 20 > a ? "ਸ਼ਾਮ" : "ਰਾਤ"
        },
        week:           {dow: 0, doy: 6}
      }), "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_")),
      Va                                                                                        = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"),
      Wa                                                                                        = (a.defineLocale("pl", {
        months:         function (a, b) {
          return "" === b ? "(" + Va[a.month()] + "|" + Ua[a.month()] + ")" : /D MMMM/.test(b) ? Va[a.month()] : Ua[a.month()]
        },
        monthsShort:    "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
        weekdays:       "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
        weekdaysShort:  "nie_pon_wt_śr_czw_pt_sb".split("_"),
        weekdaysMin:    "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Dziś o] LT",
          nextDay:  "[Jutro o] LT",
          nextWeek: "[W] dddd [o] LT",
          lastDay:  "[Wczoraj o] LT",
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return "[W zeszłą niedzielę o] LT";
              case 3:
                return "[W zeszłą środę o] LT";
              case 6:
                return "[W zeszłą sobotę o] LT";
              default:
                return "[W zeszły] dddd [o] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "%s temu",
          s:      "kilka sekund",
          m:      L,
          mm:     L,
          h:      L,
          hh:     L,
          d:      "1 dzień",
          dd:     "%d dni",
          M:      "miesiąc",
          MM:     L,
          y:      "rok",
          yy:     L
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {
          dow: 1,
          doy: 4
        }
      }), a.defineLocale("pt-br", {
        months:         "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
        monthsShort:    "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
        weekdays:       "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
        weekdaysShort:  "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
        weekdaysMin:    "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D [de] MMMM [de] YYYY",
          LLL:  "D [de] MMMM [de] YYYY [às] HH:mm",
          LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
        },
        calendar:       {
          sameDay:  "[Hoje às] LT",
          nextDay:  "[Amanhã às] LT",
          nextWeek: "dddd [às] LT",
          lastDay:  "[Ontem às] LT",
          lastWeek: function () {
            return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "em %s",
          past:   "%s atrás",
          s:      "poucos segundos",
          m:      "um minuto",
          mm:     "%d minutos",
          h:      "uma hora",
          hh:     "%d horas",
          d:      "um dia",
          dd:     "%d dias",
          M:      "um mês",
          MM:     "%d meses",
          y:      "um ano",
          yy:     "%d anos"
        },
        ordinalParse:   /\d{1,2}º/,
        ordinal:        "%dº"
      }), a.defineLocale("pt", {
        months:         "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
        monthsShort:    "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
        weekdays:       "Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado".split("_"),
        weekdaysShort:  "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
        weekdaysMin:    "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D [de] MMMM [de] YYYY",
          LLL:  "D [de] MMMM [de] YYYY HH:mm",
          LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Hoje às] LT",
          nextDay:  "[Amanhã às] LT",
          nextWeek: "dddd [às] LT",
          lastDay:  "[Ontem às] LT",
          lastWeek: function () {
            return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
          },
          sameElse: "L"
        },
        relativeTime:   {
          future: "em %s",
          past:   "há %s",
          s:      "segundos",
          m:      "um minuto",
          mm:     "%d minutos",
          h:      "uma hora",
          hh:     "%d horas",
          d:      "um dia",
          dd:     "%d dias",
          M:      "um mês",
          MM:     "%d meses",
          y:      "um ano",
          yy:     "%d anos"
        },
        ordinalParse:   /\d{1,2}º/,
        ordinal:        "%dº",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("ro", {
        months:         "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
        monthsShort:    "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
        weekdays:       "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
        weekdaysShort:  "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
        weekdaysMin:    "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY H:mm",
          LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:  "[azi la] LT",
          nextDay:  "[mâine la] LT",
          nextWeek: "dddd [la] LT",
          lastDay:  "[ieri la] LT",
          lastWeek: "[fosta] dddd [la] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "peste %s",
          past:   "%s în urmă",
          s:      "câteva secunde",
          m:      "un minut",
          mm:     M,
          h:      "o oră",
          hh:     M,
          d:      "o zi",
          dd:     M,
          M:      "o lună",
          MM:     M,
          y:      "un an",
          yy:     M
        },
        week:           {dow: 1, doy: 7}
      }), [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]),
      Xa                                                                                        = (a.defineLocale("ru", {
        months:           {
          format:     "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),
          standalone: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")
        },
        monthsShort:      {
          format:     "янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек".split("_"),
          standalone: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_")
        },
        weekdays:         {
          standalone: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
          format:     "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),
          isFormat:   /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort:    "вс_пн_вт_ср_чт_пт_сб".split("_"),
        weekdaysMin:      "вс_пн_вт_ср_чт_пт_сб".split("_"),
        monthsParse:      Wa,
        longMonthsParse:  Wa,
        shortMonthsParse: Wa,
        longDateFormat:   {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY г.",
          LLL:  "D MMMM YYYY г., HH:mm",
          LLLL: "dddd, D MMMM YYYY г., HH:mm"
        },
        calendar:         {
          sameDay:  "[Сегодня в] LT",
          nextDay:  "[Завтра в] LT",
          lastDay:  "[Вчера в] LT",
          nextWeek: function (a) {
            if (a.week() === this.week()) return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
            switch (this.day()) {
              case 0:
                return "[В следующее] dddd [в] LT";
              case 1:
              case 2:
              case 4:
                return "[В следующий] dddd [в] LT";
              case 3:
              case 5:
              case 6:
                return "[В следующую] dddd [в] LT"
            }
          },
          lastWeek: function (a) {
            if (a.week() === this.week()) return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
            switch (this.day()) {
              case 0:
                return "[В прошлое] dddd [в] LT";
              case 1:
              case 2:
              case 4:
                return "[В прошлый] dddd [в] LT";
              case 3:
              case 5:
              case 6:
                return "[В прошлую] dddd [в] LT"
            }
          },
          sameElse: "L"
        },
        relativeTime:     {
          future: "через %s",
          past:   "%s назад",
          s:      "несколько секунд",
          m:      O,
          mm:     O,
          h:      "час",
          hh:     O,
          d:      "день",
          dd:     O,
          M:      "месяц",
          MM:     O,
          y:      "год",
          yy:     O
        },
        meridiemParse:    /ночи|утра|дня|вечера/i,
        isPM:             function (a) {
          return /^(дня|вечера)$/.test(a)
        },
        meridiem:         function (a, b, c) {
          return 4 > a ? "ночи" : 12 > a ? "утра" : 17 > a ? "дня" : "вечера"
        },
        ordinalParse:     /\d{1,2}-(й|го|я)/,
        ordinal:          function (a, b) {
          switch (b) {
            case"M":
            case"d":
            case"DDD":
              return a + "-й";
            case"D":
              return a + "-го";
            case"w":
            case"W":
              return a + "-я";
            default:
              return a
          }
        },
        week:             {dow: 1, doy: 7}
      }), a.defineLocale("se", {
        months:         "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),
        monthsShort:    "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),
        weekdays:       "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),
        weekdaysShort:  "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
        weekdaysMin:    "s_v_m_g_d_b_L".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "MMMM D. [b.] YYYY",
          LLL:  "MMMM D. [b.] YYYY [ti.] HH:mm",
          LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
        },
        calendar:       {
          sameDay:  "[otne ti] LT",
          nextDay:  "[ihttin ti] LT",
          nextWeek: "dddd [ti] LT",
          lastDay:  "[ikte ti] LT",
          lastWeek: "[ovddit] dddd [ti] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s geažes",
          past:   "maŋit %s",
          s:      "moadde sekunddat",
          m:      "okta minuhta",
          mm:     "%d minuhtat",
          h:      "okta diimmu",
          hh:     "%d diimmut",
          d:      "okta beaivi",
          dd:     "%d beaivvit",
          M:      "okta mánnu",
          MM:     "%d mánut",
          y:      "okta jahki",
          yy:     "%d jagit"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("si", {
        months:         "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),
        monthsShort:    "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
        weekdays:       "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),
        weekdaysShort:  "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
        weekdaysMin:    "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
        longDateFormat: {
          LT:   "a h:mm",
          LTS:  "a h:mm:ss",
          L:    "YYYY/MM/DD",
          LL:   "YYYY MMMM D",
          LLL:  "YYYY MMMM D, a h:mm",
          LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
        },
        calendar:       {
          sameDay:  "[අද] LT[ට]",
          nextDay:  "[හෙට] LT[ට]",
          nextWeek: "dddd LT[ට]",
          lastDay:  "[ඊයේ] LT[ට]",
          lastWeek: "[පසුගිය] dddd LT[ට]",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%sකින්",
          past:   "%sකට පෙර",
          s:      "තත්පර කිහිපය",
          m:      "මිනිත්තුව",
          mm:     "මිනිත්තු %d",
          h:      "පැය",
          hh:     "පැය %d",
          d:      "දිනය",
          dd:     "දින %d",
          M:      "මාසය",
          MM:     "මාස %d",
          y:      "වසර",
          yy:     "වසර %d"
        },
        ordinalParse:   /\d{1,2} වැනි/,
        ordinal:        function (a) {
          return a + " වැනි"
        },
        meridiemParse:  /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM:           function (a) {
          return "ප.ව." === a || "පස් වරු" === a
        },
        meridiem:       function (a, b, c) {
          return a > 11 ? c ? "ප.ව." : "පස් වරු" : c ? "පෙ.ව." : "පෙර වරු"
        }
      }), "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_")),
      Ya                                                                                        = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_"),
      Za                                                                                        = (a.defineLocale("sk", {
        months:         Xa,
        monthsShort:    Ya,
        weekdays:       "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
        weekdaysShort:  "ne_po_ut_st_št_pi_so".split("_"),
        weekdaysMin:    "ne_po_ut_st_št_pi_so".split("_"),
        longDateFormat: {
          LT:   "H:mm", LTS: "H:mm:ss", L: "DD.MM.YYYY", LL: "D. MMMM YYYY", LLL: "D. MMMM YYYY H:mm",
          LLLL: "dddd D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[dnes o] LT", nextDay: "[zajtra o] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[v nedeľu o] LT";
              case 1:
              case 2:
                return "[v] dddd [o] LT";
              case 3:
                return "[v stredu o] LT";
              case 4:
                return "[vo štvrtok o] LT";
              case 5:
                return "[v piatok o] LT";
              case 6:
                return "[v sobotu o] LT"
            }
          }, lastDay:  "[včera o] LT", lastWeek: function () {
            switch (this.day()) {
              case 0:
                return "[minulú nedeľu o] LT";
              case 1:
              case 2:
                return "[minulý] dddd [o] LT";
              case 3:
                return "[minulú stredu o] LT";
              case 4:
              case 5:
                return "[minulý] dddd [o] LT";
              case 6:
                return "[minulú sobotu o] LT"
            }
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "pred %s",
          s:      Q,
          m:      Q,
          mm:     Q,
          h:      Q,
          hh:     Q,
          d:      Q,
          dd:     Q,
          M:      Q,
          MM:     Q,
          y:      Q,
          yy:     Q
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("sl", {
        months:         "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
        monthsShort:    "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
        weekdays:       "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
        weekdaysShort:  "ned._pon._tor._sre._čet._pet._sob.".split("_"),
        weekdaysMin:    "ne_po_to_sr_če_pe_so".split("_"),
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[danes ob] LT", nextDay: "[jutri ob] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[v] [nedeljo] [ob] LT";
              case 3:
                return "[v] [sredo] [ob] LT";
              case 6:
                return "[v] [soboto] [ob] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[v] dddd [ob] LT"
            }
          }, lastDay:  "[včeraj ob] LT", lastWeek: function () {
            switch (this.day()) {
              case 0:
                return "[prejšnjo] [nedeljo] [ob] LT";
              case 3:
                return "[prejšnjo] [sredo] [ob] LT";
              case 6:
                return "[prejšnjo] [soboto] [ob] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[prejšnji] dddd [ob] LT"
            }
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "čez %s",
          past:   "pred %s",
          s:      R,
          m:      R,
          mm:     R,
          h:      R,
          hh:     R,
          d:      R,
          dd:     R,
          M:      R,
          MM:     R,
          y:      R,
          yy:     R
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("sq", {
        months:         "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
        monthsShort:    "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
        weekdays:       "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
        weekdaysShort:  "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
        weekdaysMin:    "D_H_Ma_Më_E_P_Sh".split("_"),
        meridiemParse:  /PD|MD/,
        isPM:           function (a) {
          return "M" === a.charAt(0)
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "PD" : "MD"
        },
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Sot në] LT",
          nextDay:  "[Nesër në] LT",
          nextWeek: "dddd [në] LT",
          lastDay:  "[Dje në] LT",
          lastWeek: "dddd [e kaluar në] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "në %s",
          past:   "%s më parë",
          s:      "disa sekonda",
          m:      "një minutë",
          mm:     "%d minuta",
          h:      "një orë",
          hh:     "%d orë",
          d:      "një ditë",
          dd:     "%d ditë",
          M:      "një muaj",
          MM:     "%d muaj",
          y:      "një vit",
          yy:     "%d vite"
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), {
        words:                     {
          m:  ["један минут", "једне минуте"],
          mm: ["минут", "минуте", "минута"],
          h:  ["један сат", "једног сата"],
          hh: ["сат", "сата", "сати"],
          dd: ["дан", "дана", "дана"],
          MM: ["месец", "месеца", "месеци"],
          yy: ["година", "године", "година"]
        }, correctGrammaticalCase: function (a, b) {
          return 1 === a ? b[0] : a >= 2 && 4 >= a ? b[1] : b[2]
        }, translate:              function (a, b, c) {
          var d = Za.words[c];
          return 1 === c.length ? b ? d[0] : d[1] : a + " " + Za.correctGrammaticalCase(a, d)
        }
      }),
      $a                                                                                        = (a.defineLocale("sr-cyrl", {
        months:         ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"],
        monthsShort:    ["јан.", "феб.", "мар.", "апр.", "мај", "јун", "јул", "авг.", "сеп.", "окт.", "нов.", "дец."],
        weekdays:       ["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"],
        weekdaysShort:  ["нед.", "пон.", "уто.", "сре.", "чет.", "пет.", "суб."],
        weekdaysMin:    ["не", "по", "ут", "ср", "че", "пе", "су"],
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[данас у] LT", nextDay: "[сутра у] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[у] [недељу] [у] LT";
              case 3:
                return "[у] [среду] [у] LT";
              case 6:
                return "[у] [суботу] [у] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[у] dddd [у] LT"
            }
          }, lastDay:  "[јуче у] LT", lastWeek: function () {
            return ["[прошле] [недеље] [у] LT", "[прошлог] [понедељка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT"][this.day()]
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "за %s",
          past:   "пре %s",
          s:      "неколико секунди",
          m:      Za.translate,
          mm:     Za.translate,
          h:      Za.translate,
          hh:     Za.translate,
          d:      "дан",
          dd:     Za.translate,
          M:      "месец",
          MM:     Za.translate,
          y:      "годину",
          yy:     Za.translate
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), {
        words:                     {
          m:  ["jedan minut", "jedne minute"],
          mm: ["minut", "minute", "minuta"],
          h:  ["jedan sat", "jednog sata"],
          hh: ["sat", "sata", "sati"],
          dd: ["dan", "dana", "dana"],
          MM: ["mesec", "meseca", "meseci"],
          yy: ["godina", "godine", "godina"]
        }, correctGrammaticalCase: function (a, b) {
          return 1 === a ? b[0] : a >= 2 && 4 >= a ? b[1] : b[2]
        }, translate:              function (a, b, c) {
          var d = $a.words[c];
          return 1 === c.length ? b ? d[0] : d[1] : a + " " + $a.correctGrammaticalCase(a, d)
        }
      }),
      _a                                                                                        = (a.defineLocale("sr", {
        months:         ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"],
        monthsShort:    ["jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec."],
        weekdays:       ["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"],
        weekdaysShort:  ["ned.", "pon.", "uto.", "sre.", "čet.", "pet.", "sub."],
        weekdaysMin:    ["ne", "po", "ut", "sr", "če", "pe", "su"],
        longDateFormat: {
          LT:   "H:mm",
          LTS:  "H:mm:ss",
          L:    "DD. MM. YYYY",
          LL:   "D. MMMM YYYY",
          LLL:  "D. MMMM YYYY H:mm",
          LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar:       {
          sameDay:     "[danas u] LT", nextDay: "[sutra u] LT", nextWeek: function () {
            switch (this.day()) {
              case 0:
                return "[u] [nedelju] [u] LT";
              case 3:
                return "[u] [sredu] [u] LT";
              case 6:
                return "[u] [subotu] [u] LT";
              case 1:
              case 2:
              case 4:
              case 5:
                return "[u] dddd [u] LT"
            }
          }, lastDay:  "[juče u] LT", lastWeek: function () {
            return ["[prošle] [nedelje] [u] LT", "[prošlog] [ponedeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
          }, sameElse: "L"
        },
        relativeTime:   {
          future: "za %s",
          past:   "pre %s",
          s:      "nekoliko sekundi",
          m:      $a.translate,
          mm:     $a.translate,
          h:      $a.translate,
          hh:     $a.translate,
          d:      "dan",
          dd:     $a.translate,
          M:      "mesec",
          MM:     $a.translate,
          y:      "godinu",
          yy:     $a.translate
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 7}
      }), a.defineLocale("sv", {
        months:         "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
        monthsShort:    "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
        weekdays:       "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
        weekdaysShort:  "sön_mån_tis_ons_tor_fre_lör".split("_"),
        weekdaysMin:    "sö_må_ti_on_to_fr_lö".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "YYYY-MM-DD",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Idag] LT",
          nextDay:  "[Imorgon] LT",
          lastDay:  "[Igår] LT",
          nextWeek: "[På] dddd LT",
          lastWeek: "[I] dddd[s] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "om %s",
          past:   "för %s sedan",
          s:      "några sekunder",
          m:      "en minut",
          mm:     "%d minuter",
          h:      "en timme",
          hh:     "%d timmar",
          d:      "en dag",
          dd:     "%d dagar",
          M:      "en månad",
          MM:     "%d månader",
          y:      "ett år",
          yy:     "%d år"
        },
        ordinalParse:   /\d{1,2}(e|a)/,
        ordinal:        function (a) {
          var b = a % 10;
          return a + (1 == ~~(a % 100 / 10) ? "e" : 1 === b ? "a" : 2 === b ? "a" : "e")
        },
        week:           {dow: 1, doy: 4}
      }), a.defineLocale("sw", {
        months:         "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),
        monthsShort:    "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),
        weekdays:       "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),
        weekdaysShort:  "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
        weekdaysMin:    "J2_J3_J4_J5_Al_Ij_J1".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[leo saa] LT",
          nextDay:  "[kesho saa] LT",
          nextWeek: "[wiki ijayo] dddd [saat] LT",
          lastDay:  "[jana] LT",
          lastWeek: "[wiki iliyopita] dddd [saat] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s baadaye",
          past:   "tokea %s",
          s:      "hivi punde",
          m:      "dakika moja",
          mm:     "dakika %d",
          h:      "saa limoja",
          hh:     "masaa %d",
          d:      "siku moja",
          dd:     "masiku %d",
          M:      "mwezi mmoja",
          MM:     "miezi %d",
          y:      "mwaka mmoja",
          yy:     "miaka %d"
        },
        week:           {dow: 1, doy: 7}
      }), {1: "௧", 2: "௨", 3: "௩", 4: "௪", 5: "௫", 6: "௬", 7: "௭", 8: "௮", 9: "௯", 0: "௦"}), ab = {
        "௧": "1",
        "௨": "2",
        "௩": "3",
        "௪": "4",
        "௫": "5",
        "௬": "6",
        "௭": "7",
        "௮": "8",
        "௯": "9",
        "௦": "0"
      },
      bb                                                                                        = (a.defineLocale("ta", {
        months:         "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
        monthsShort:    "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
        weekdays:       "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),
        weekdaysShort:  "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
        weekdaysMin:    "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, HH:mm",
          LLLL: "dddd, D MMMM YYYY, HH:mm"
        },
        calendar:       {
          sameDay:  "[இன்று] LT",
          nextDay:  "[நாளை] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[நேற்று] LT",
          lastWeek: "[கடந்த வாரம்] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s இல்",
          past:   "%s முன்",
          s:      "ஒரு சில விநாடிகள்",
          m:      "ஒரு நிமிடம்",
          mm:     "%d நிமிடங்கள்",
          h:      "ஒரு மணி நேரம்",
          hh:     "%d மணி நேரம்",
          d:      "ஒரு நாள்",
          dd:     "%d நாட்கள்",
          M:      "ஒரு மாதம்",
          MM:     "%d மாதங்கள்",
          y:      "ஒரு வருடம்",
          yy:     "%d ஆண்டுகள்"
        },
        ordinalParse:   /\d{1,2}வது/,
        ordinal:        function (a) {
          return a + "வது"
        },
        preparse:       function (a) {
          return a.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (a) {
            return ab[a]
          })
        },
        postformat:     function (a) {
          return a.replace(/\d/g, function (a) {
            return _a[a]
          })
        },
        meridiemParse:  /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem:       function (a, b, c) {
          return 2 > a ? " யாமம்" : 6 > a ? " வைகறை" : 10 > a ? " காலை" : 14 > a ? " நண்பகல்" : 18 > a ? " எற்பாடு" : 22 > a ? " மாலை" : " யாமம்"
        },
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "யாமம்" === b ? 2 > a ? a : a + 12 : "வைகறை" === b || "காலை" === b ? a : "நண்பகல்" === b && a >= 10 ? a : a + 12
        },
        week:           {dow: 0, doy: 6}
      }), a.defineLocale("te", {
        months:         "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),
        monthsShort:    "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),
        weekdays:       "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),
        weekdaysShort:  "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
        weekdaysMin:    "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
        longDateFormat: {
          LT:   "A h:mm",
          LTS:  "A h:mm:ss",
          L:    "DD/MM/YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY, A h:mm",
          LLLL: "dddd, D MMMM YYYY, A h:mm"
        },
        calendar:       {
          sameDay:  "[నేడు] LT",
          nextDay:  "[రేపు] LT",
          nextWeek: "dddd, LT",
          lastDay:  "[నిన్న] LT",
          lastWeek: "[గత] dddd, LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "%s లో",
          past:   "%s క్రితం",
          s:      "కొన్ని క్షణాలు",
          m:      "ఒక నిమిషం",
          mm:     "%d నిమిషాలు",
          h:      "ఒక గంట",
          hh:     "%d గంటలు",
          d:      "ఒక రోజు",
          dd:     "%d రోజులు",
          M:      "ఒక నెల",
          MM:     "%d నెలలు",
          y:      "ఒక సంవత్సరం",
          yy:     "%d సంవత్సరాలు"
        },
        ordinalParse:   /\d{1,2}వ/,
        ordinal:        "%dవ",
        meridiemParse:  /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour:   function (a, b) {
          return 12 === a && (a = 0), "రాత్రి" === b ? 4 > a ? a : a + 12 : "ఉదయం" === b ? a : "మధ్యాహ్నం" === b ? a >= 10 ? a : a + 12 : "సాయంత్రం" === b ? a + 12 : void 0
        },
        meridiem:       function (a, b, c) {
          return 4 > a ? "రాత్రి" : 10 > a ? "ఉదయం" : 17 > a ? "మధ్యాహ్నం" : 20 > a ? "సాయంత్రం" : "రాత్రి"
        },
        week:           {dow: 0, doy: 6}
      }), a.defineLocale("th", {
        months:         "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
        monthsShort:    "มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา".split("_"),
        weekdays:       "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
        weekdaysShort:  "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
        weekdaysMin:    "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
        longDateFormat: {
          LT:   "H นาฬิกา m นาที",
          LTS:  "H นาฬิกา m นาที s วินาที",
          L:    "YYYY/MM/DD",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY เวลา H นาฬิกา m นาที",
          LLLL: "วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที"
        },
        meridiemParse:  /ก่อนเที่ยง|หลังเที่ยง/,
        isPM:           function (a) {
          return "หลังเที่ยง" === a
        },
        meridiem:       function (a, b, c) {
          return 12 > a ? "ก่อนเที่ยง" : "หลังเที่ยง"
        },
        calendar:       {
          sameDay:  "[วันนี้ เวลา] LT",
          nextDay:  "[พรุ่งนี้ เวลา] LT",
          nextWeek: "dddd[หน้า เวลา] LT",
          lastDay:  "[เมื่อวานนี้ เวลา] LT",
          lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "อีก %s",
          past:   "%sที่แล้ว",
          s:      "ไม่กี่วินาที",
          m:      "1 นาที",
          mm:     "%d นาที",
          h:      "1 ชั่วโมง",
          hh:     "%d ชั่วโมง",
          d:      "1 วัน",
          dd:     "%d วัน",
          M:      "1 เดือน",
          MM:     "%d เดือน",
          y:      "1 ปี",
          yy:     "%d ปี"
        }
      }), a.defineLocale("tl-ph", {
        months:         "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
        monthsShort:    "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
        weekdays:       "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
        weekdaysShort:  "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
        weekdaysMin:    "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "MM/D/YYYY",
          LL:   "MMMM D, YYYY",
          LLL:  "MMMM D, YYYY HH:mm",
          LLLL: "dddd, MMMM DD, YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[Ngayon sa] LT",
          nextDay:  "[Bukas sa] LT",
          nextWeek: "dddd [sa] LT",
          lastDay:  "[Kahapon sa] LT",
          lastWeek: "dddd [huling linggo] LT",
          sameElse: "L"
        },
        relativeTime:   {
          future: "sa loob ng %s",
          past:   "%s ang nakalipas",
          s:      "ilang segundo",
          m:      "isang minuto",
          mm:     "%d minuto",
          h:      "isang oras",
          hh:     "%d oras",
          d:      "isang araw",
          dd:     "%d araw",
          M:      "isang buwan",
          MM:     "%d buwan",
          y:      "isang taon",
          yy:     "%d taon"
        },
        ordinalParse:   /\d{1,2}/,
        ordinal:        function (a) {
          return a
        },
        week:           {dow: 1, doy: 4}
      }), "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_")),
      cb                                                                                        = (a.defineLocale("tlh", {
        months:         "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),
        monthsShort:    "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),
        weekdays:       "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        weekdaysShort:  "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        weekdaysMin:    "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        longDateFormat: {
          LT:   "HH:mm",
          LTS:  "HH:mm:ss",
          L:    "DD.MM.YYYY",
          LL:   "D MMMM YYYY",
          LLL:  "D MMMM YYYY HH:mm",
          LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar:       {
          sameDay:  "[DaHjaj] LT",
          nextDay:  "[wa’leS] LT",
          nextWeek: "LLL",
          lastDay:  "[wa’Hu’] LT",
          lastWeek: "LLL",
          sameElse: "L"
        },
        relativeTime:   {
          future: S,
          past:   T,
          s:      "puS lup",
          m:      "wa’ tup",
          mm:     U,
          h:      "wa’ rep",
          hh:     U,
          d:      "wa’ jaj",
          dd:     U,
          M:      "wa’ jar",
          MM:     U,
          y:      "wa’ DIS",
          yy:     U
        },
        ordinalParse:   /\d{1,2}\./,
        ordinal:        "%d.",
        week:           {dow: 1, doy: 4}
      }), {
        1:   "'inci",
        5:   "'inci",
        8:   "'inci",
        70:  "'inci",
        80:  "'inci",
        2:   "'nci",
        7:   "'nci",
        20:  "'nci",
        50:  "'nci",
        3:   "'üncü",
        4:   "'üncü",
        100: "'üncü",
        6:   "'ncı",
        9:   "'uncu",
        10:  "'uncu",
        30:  "'uncu",
        60:  "'ıncı",
        90:  "'ıncı"
      });
  a.defineLocale("tr", {
    months:         "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
    monthsShort:    "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
    weekdays:       "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
    weekdaysShort:  "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
    weekdaysMin:    "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD.MM.YYYY",
      LL:   "D MMMM YYYY",
      LLL:  "D MMMM YYYY HH:mm",
      LLLL: "dddd, D MMMM YYYY HH:mm"
    },
    calendar:       {
      sameDay:  "[bugün saat] LT",
      nextDay:  "[yarın saat] LT",
      nextWeek: "[haftaya] dddd [saat] LT",
      lastDay:  "[dün] LT",
      lastWeek: "[geçen hafta] dddd [saat] LT",
      sameElse: "L"
    },
    relativeTime:   {
      future: "%s sonra",
      past:   "%s önce",
      s:      "birkaç saniye",
      m:      "bir dakika",
      mm:     "%d dakika",
      h:      "bir saat",
      hh:     "%d saat",
      d:      "bir gün",
      dd:     "%d gün",
      M:      "bir ay",
      MM:     "%d ay",
      y:      "bir yıl",
      yy:     "%d yıl"
    },
    ordinalParse:   /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
    ordinal:        function (a) {
      if (0 === a) return a + "'ıncı";
      var b = a % 10, c = a % 100 - b, d = a >= 100 ? 100 : null;
      return a + (cb[b] || cb[c] || cb[d])
    },
    week:           {dow: 1, doy: 7}
  }), a.defineLocale("tzl", {
    months:         "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),
    monthsShort:    "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
    weekdays:       "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),
    weekdaysShort:  "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
    weekdaysMin:    "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
    longDateFormat: {
      LT:   "HH.mm",
      LTS:  "HH.mm.ss",
      L:    "DD.MM.YYYY",
      LL:   "D. MMMM [dallas] YYYY",
      LLL:  "D. MMMM [dallas] YYYY HH.mm",
      LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
    },
    meridiemParse:  /d\'o|d\'a/i,
    isPM:           function (a) {
      return "d'o" === a.toLowerCase()
    },
    meridiem:       function (a, b, c) {
      return a > 11 ? c ? "d'o" : "D'O" : c ? "d'a" : "D'A"
    },
    calendar:       {
      sameDay:  "[oxhi à] LT",
      nextDay:  "[demà à] LT",
      nextWeek: "dddd [à] LT",
      lastDay:  "[ieiri à] LT",
      lastWeek: "[sür el] dddd [lasteu à] LT",
      sameElse: "L"
    },
    relativeTime:   {
      future: "osprei %s",
      past:   "ja%s",
      s:      W,
      m:      W,
      mm:     W,
      h:      W,
      hh:     W,
      d:      W,
      dd:     W,
      M:      W,
      MM:     W,
      y:      W,
      yy:     W
    },
    ordinalParse:   /\d{1,2}\./,
    ordinal:        "%d.",
    week:           {dow: 1, doy: 4}
  }), a.defineLocale("tzm-latn", {
    months:         "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
    monthsShort:    "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
    weekdays:       "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
    weekdaysShort:  "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
    weekdaysMin:    "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD/MM/YYYY",
      LL:   "D MMMM YYYY",
      LLL:  "D MMMM YYYY HH:mm",
      LLLL: "dddd D MMMM YYYY HH:mm"
    },
    calendar:       {
      sameDay:  "[asdkh g] LT",
      nextDay:  "[aska g] LT",
      nextWeek: "dddd [g] LT",
      lastDay:  "[assant g] LT",
      lastWeek: "dddd [g] LT",
      sameElse: "L"
    },
    relativeTime:   {
      future: "dadkh s yan %s",
      past:   "yan %s",
      s:      "imik",
      m:      "minuḍ",
      mm:     "%d minuḍ",
      h:      "saɛa",
      hh:     "%d tassaɛin",
      d:      "ass",
      dd:     "%d ossan",
      M:      "ayowr",
      MM:     "%d iyyirn",
      y:      "asgas",
      yy:     "%d isgasn"
    },
    week:           {dow: 6, doy: 12}
  }), a.defineLocale("tzm", {
    months:         "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
    monthsShort:    "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
    weekdays:       "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
    weekdaysShort:  "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
    weekdaysMin:    "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD/MM/YYYY",
      LL:   "D MMMM YYYY",
      LLL:  "D MMMM YYYY HH:mm",
      LLLL: "dddd D MMMM YYYY HH:mm"
    },
    calendar:       {
      sameDay:  "[ⴰⵙⴷⵅ ⴴ] LT",
      nextDay:  "[ⴰⵙⴽⴰ ⴴ] LT",
      nextWeek: "dddd [ⴴ] LT",
      lastDay:  "[ⴰⵚⴰⵏⵜ ⴴ] LT",
      lastWeek: "dddd [ⴴ] LT",
      sameElse: "L"
    },
    relativeTime:   {
      future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
      past:   "ⵢⴰⵏ %s",
      s:      "ⵉⵎⵉⴽ",
      m:      "ⵎⵉⵏⵓⴺ",
      mm:     "%d ⵎⵉⵏⵓⴺ",
      h:      "ⵙⴰⵄⴰ",
      hh:     "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
      d:      "ⴰⵙⵙ",
      dd:     "%d oⵙⵙⴰⵏ",
      M:      "ⴰⵢoⵓⵔ",
      MM:     "%d ⵉⵢⵢⵉⵔⵏ",
      y:      "ⴰⵙⴳⴰⵙ",
      yy:     "%d ⵉⵙⴳⴰⵙⵏ"
    },
    week:           {dow: 6, doy: 12}
  }), a.defineLocale("uk", {
    months:         {
      format:     "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),
      standalone: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")
    },
    monthsShort:    "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
    weekdays:       Z,
    weekdaysShort:  "нд_пн_вт_ср_чт_пт_сб".split("_"),
    weekdaysMin:    "нд_пн_вт_ср_чт_пт_сб".split("_"),
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD.MM.YYYY",
      LL:   "D MMMM YYYY р.",
      LLL:  "D MMMM YYYY р., HH:mm",
      LLLL: "dddd, D MMMM YYYY р., HH:mm"
    },
    calendar:       {
      sameDay:  $("[Сьогодні "),
      nextDay:  $("[Завтра "),
      lastDay:  $("[Вчора "),
      nextWeek: $("[У] dddd ["),
      lastWeek: function () {
        switch (this.day()) {
          case 0:
          case 3:
          case 5:
          case 6:
            return $("[Минулої] dddd [").call(this);
          case 1:
          case 2:
          case 4:
            return $("[Минулого] dddd [").call(this)
        }
      },
      sameElse: "L"
    },
    relativeTime:   {
      future: "за %s",
      past:   "%s тому",
      s:      "декілька секунд",
      m:      Y,
      mm:     Y,
      h:      "годину",
      hh:     Y,
      d:      "день",
      dd:     Y,
      M:      "місяць",
      MM:     Y,
      y:      "рік",
      yy:     Y
    },
    meridiemParse:  /ночі|ранку|дня|вечора/,
    isPM:           function (a) {
      return /^(дня|вечора)$/.test(a)
    },
    meridiem:       function (a, b, c) {
      return 4 > a ? "ночі" : 12 > a ? "ранку" : 17 > a ? "дня" : "вечора"
    },
    ordinalParse:   /\d{1,2}-(й|го)/,
    ordinal:        function (a, b) {
      switch (b) {
        case"M":
        case"d":
        case"DDD":
        case"w":
        case"W":
          return a + "-й";
        case"D":
          return a + "-го";
        default:
          return a
      }
    },
    week:           {dow: 1, doy: 7}
  }), a.defineLocale("uz", {
    months:         "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),
    monthsShort:    "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
    weekdays:       "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
    weekdaysShort:  "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
    weekdaysMin:    "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD/MM/YYYY",
      LL:   "D MMMM YYYY",
      LLL:  "D MMMM YYYY HH:mm",
      LLLL: "D MMMM YYYY, dddd HH:mm"
    },
    calendar:       {
      sameDay:  "[Бугун соат] LT [да]",
      nextDay:  "[Эртага] LT [да]",
      nextWeek: "dddd [куни соат] LT [да]",
      lastDay:  "[Кеча соат] LT [да]",
      lastWeek: "[Утган] dddd [куни соат] LT [да]",
      sameElse: "L"
    },
    relativeTime:   {
      future: "Якин %s ичида",
      past:   "Бир неча %s олдин",
      s:      "фурсат",
      m:      "бир дакика",
      mm:     "%d дакика",
      h:      "бир соат",
      hh:     "%d соат",
      d:      "бир кун",
      dd:     "%d кун",
      M:      "бир ой",
      MM:     "%d ой",
      y:      "бир йил",
      yy:     "%d йил"
    },
    week:           {dow: 1, doy: 7}
  }), a.defineLocale("vi", {
    months:         "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
    monthsShort:    "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
    weekdays:       "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
    weekdaysShort:  "CN_T2_T3_T4_T5_T6_T7".split("_"),
    weekdaysMin:    "CN_T2_T3_T4_T5_T6_T7".split("_"),
    meridiemParse:  /sa|ch/i,
    isPM:           function (a) {
      return /^ch$/i.test(a)
    },
    meridiem:       function (a, b, c) {
      return 12 > a ? c ? "sa" : "SA" : c ? "ch" : "CH"
    },
    longDateFormat: {
      LT:   "HH:mm",
      LTS:  "HH:mm:ss",
      L:    "DD/MM/YYYY",
      LL:   "D MMMM [năm] YYYY",
      LLL:  "D MMMM [năm] YYYY HH:mm",
      LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
      l:    "DD/M/YYYY",
      ll:   "D MMM YYYY",
      lll:  "D MMM YYYY HH:mm",
      llll: "ddd, D MMM YYYY HH:mm"
    },
    calendar:       {
      sameDay:  "[Hôm nay lúc] LT",
      nextDay:  "[Ngày mai lúc] LT",
      nextWeek: "dddd [tuần tới lúc] LT",
      lastDay:  "[Hôm qua lúc] LT",
      lastWeek: "dddd [tuần rồi lúc] LT",
      sameElse: "L"
    },
    relativeTime:   {
      future: "%s tới",
      past:   "%s trước",
      s:      "vài giây",
      m:      "một phút",
      mm:     "%d phút",
      h:      "một giờ",
      hh:     "%d giờ",
      d:      "một ngày",
      dd:     "%d ngày",
      M:      "một tháng",
      MM:     "%d tháng",
      y:      "một năm",
      yy:     "%d năm"
    },
    ordinalParse:   /\d{1,2}/,
    ordinal:        function (a) {
      return a
    },
    week:           {dow: 1, doy: 4}
  }), a.defineLocale("zh-cn", {
    months:         "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
    monthsShort:    "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
    weekdays:       "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
    weekdaysShort:  "周日_周一_周二_周三_周四_周五_周六".split("_"),
    weekdaysMin:    "日_一_二_三_四_五_六".split("_"),
    longDateFormat: {
      LT:   "Ah点mm分",
      LTS:  "Ah点m分s秒",
      L:    "YYYY-MM-DD",
      LL:   "YYYY年MMMD日",
      LLL:  "YYYY年MMMD日Ah点mm分",
      LLLL: "YYYY年MMMD日ddddAh点mm分",
      l:    "YYYY-MM-DD",
      ll:   "YYYY年MMMD日",
      lll:  "YYYY年MMMD日Ah点mm分",
      llll: "YYYY年MMMD日ddddAh点mm分"
    },
    meridiemParse:  /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour:   function (a, b) {
      return 12 === a && (a = 0), "凌晨" === b || "早上" === b || "上午" === b ? a : "下午" === b || "晚上" === b ? a + 12 : a >= 11 ? a : a + 12
    },
    meridiem:       function (a, b, c) {
      var d = 100 * a + b;
      return 600 > d ? "凌晨" : 900 > d ? "早上" : 1130 > d ? "上午" : 1230 > d ? "中午" : 1800 > d ? "下午" : "晚上"
    },
    calendar:       {
      sameDay:     function () {
        return 0 === this.minutes() ? "[今天]Ah[点整]" : "[今天]LT"
      }, nextDay:  function () {
        return 0 === this.minutes() ? "[明天]Ah[点整]" : "[明天]LT"
      }, lastDay:  function () {
        return 0 === this.minutes() ? "[昨天]Ah[点整]" : "[昨天]LT"
      }, nextWeek: function () {
        var b, c;
        return b = a().startOf("week"), c = this.unix() - b.unix() >= 604800 ? "[下]" : "[本]", 0 === this.minutes() ? c + "dddAh点整" : c + "dddAh点mm"
      }, lastWeek: function () {
        var b, c;
        return b = a().startOf("week"), c = this.unix() < b.unix() ? "[上]" : "[本]", 0 === this.minutes() ? c + "dddAh点整" : c + "dddAh点mm"
      }, sameElse: "LL"
    },
    ordinalParse:   /\d{1,2}(日|月|周)/,
    ordinal:        function (a, b) {
      switch (b) {
        case"d":
        case"D":
        case"DDD":
          return a + "日";
        case"M":
          return a + "月";
        case"w":
        case"W":
          return a + "周";
        default:
          return a
      }
    },
    relativeTime:   {
      future: "%s内",
      past:   "%s前",
      s:      "几秒",
      m:      "1 分钟",
      mm:     "%d 分钟",
      h:      "1 小时",
      hh:     "%d 小时",
      d:      "1 天",
      dd:     "%d 天",
      M:      "1 个月",
      MM:     "%d 个月",
      y:      "1 年",
      yy:     "%d 年"
    },
    week:           {dow: 1, doy: 4}
  }), a.defineLocale("zh-tw", {
    months:         "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
    monthsShort:    "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
    weekdays:       "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
    weekdaysShort:  "週日_週一_週二_週三_週四_週五_週六".split("_"),
    weekdaysMin:    "日_一_二_三_四_五_六".split("_"),
    longDateFormat: {
      LT:   "Ah點mm分",
      LTS:  "Ah點m分s秒",
      L:    "YYYY年MMMD日",
      LL:   "YYYY年MMMD日",
      LLL:  "YYYY年MMMD日Ah點mm分",
      LLLL: "YYYY年MMMD日ddddAh點mm分",
      l:    "YYYY年MMMD日",
      ll:   "YYYY年MMMD日",
      lll:  "YYYY年MMMD日Ah點mm分",
      llll: "YYYY年MMMD日ddddAh點mm分"
    },
    meridiemParse:  /早上|上午|中午|下午|晚上/,
    meridiemHour:   function (a, b) {
      return 12 === a && (a = 0), "早上" === b || "上午" === b ? a : "中午" === b ? a >= 11 ? a : a + 12 : "下午" === b || "晚上" === b ? a + 12 : void 0
    },
    meridiem:       function (a, b, c) {
      var d = 100 * a + b;
      return 900 > d ? "早上" : 1130 > d ? "上午" : 1230 > d ? "中午" : 1800 > d ? "下午" : "晚上"
    },
    calendar:       {
      sameDay:  "[今天]LT",
      nextDay:  "[明天]LT",
      nextWeek: "[下]ddddLT",
      lastDay:  "[昨天]LT",
      lastWeek: "[上]ddddLT",
      sameElse: "L"
    },
    ordinalParse:   /\d{1,2}(日|月|週)/,
    ordinal:        function (a, b) {
      switch (b) {
        case"d":
        case"D":
        case"DDD":
          return a + "日";
        case"M":
          return a + "月";
        case"w":
        case"W":
          return a + "週";
        default:
          return a
      }
    },
    relativeTime:   {
      future: "%s內",
      past:   "%s前",
      s:      "幾秒",
      m:      "一分鐘",
      mm:     "%d分鐘",
      h:      "一小時",
      hh:     "%d小時",
      d:      "一天",
      dd:     "%d天",
      M:      "一個月",
      MM:     "%d個月",
      y:      "一年",
      yy:     "%d年"
    }
  }), a.locale("en")
}), angular.module("modals.controller", []).controller("modals.controller", ["$scope", "$filter", "$interval", "$rootScope", "$uibModal", "$q", "$http", "$timeout", function ($scope, $filter, $interval, $rootScope, $uibModal, $q, $http, $timeout) {
  $rootScope.openInventory = function (mode, cb, data) {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/inventory.tpl.html",
        controller:  "modals.inventory.controller",
        windowClass: "inventoryModal " + mode + "_mode",
        resolve:     {
          params: function () {
            return {mode: mode, data: data}
          }
        }
      }).result.then(function (res) {
        cb && cb(res)
      })
    }
  }, $rootScope.openGifting = function (user, cb) {
    $rootScope.openInventory("gift", cb, {user: user})
  }, $rootScope.openConfirmGift = function (params, cb) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/confirmGift.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalConfirmGift",
      resolve:     {
        params: function () {
          return params
        }
      }
    }).result.then(function (res) {
      cb && cb(res)
    })
  }, $rootScope.openDepositType = function () {
    $uibModal.open({
      templateUrl: "modals/views/depositType.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalDepositType",
      resolve:     {
        params: function () {
          return {}
        }
      }
    })
  }, $rootScope.openGiftCards = function () {
    $uibModal.open({
      templateUrl: "modals/views/giftCards.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalGiftCards",
      resolve:     {
        params: function () {
          return {}
        }
      }
    })
  }, $rootScope.openConfirmWithdraw = function (params, cb) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/confirmWithdraw.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalConfirmWithdraw",
      resolve:     {
        params: function () {
          return params
        }
      }
    }).result.then(function (res) {
      cb && cb(res)
    })
  }, $rootScope.openConfirmCodeExchange = function (params, cb) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/confirmCodeExchange.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalConfirmWithdraw modalConfirmCodeExchange",
      resolve:     {
        params: function () {
          return params
        }
      }
    }).result.then(function (res) {
      cb && cb(res)
    })
  }, $rootScope.openJukebox = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/jukebox.tpl.html",
        controller:  "modals.jukebox.controller",
        windowClass: "jukeboxModal"
      })
    }
  }, $rootScope.openGift = function (user) {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/gift.tpl.html",
        controller:  "modals.gift.controller",
        windowClass: "gift",
        resolve:     {user: user}
      })
    }
  }, $rootScope.openTOS = function () {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/tos.tpl.html",
      controller:  "modals.tos.controller",
      windowClass: "modalTOS"
    })
  }, $rootScope.openFair = function (params) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/fair.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalFair",
      resolve:     {
        params: function () {
          return params
        }
      }
    })
  }, $rootScope.openHowto = function () {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/howto.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalHowto",
      resolve:     {
        params: function () {
          return {}
        }
      }
    })
  }, $rootScope.openTweetAnnounce = function (params) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/twttrAnnounce.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalTweetAnnounce",
      resolve:     {
        params: function () {
          return params
        }
      }
    })
  }, $rootScope.openGleam = function (params) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/gleam.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalGleam",
      resolve:     {
        params: function () {
          return params
        }
      }
    })
  }, $timeout(function () {
    $rootScope.system.gleamid && $rootScope.openGleam({gleamid: $rootScope.system.gleamid})
  }), $rootScope.openTrivia = function () {
    if ($rootScope.userAuthed && "admin" === $rootScope.user.role) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/trivia.tpl.html",
        controller:  "modals.trivia.controller",
        windowClass: "trivia"
      })
    }
  }, $rootScope.openTriviaAnswer = function (params) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/triviaAnswer.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalTriviaAnswer",
      resolve:     {
        params: function () {
          return params
        }
      }
    })
  }, $rootScope.openWelcome = function (user) {
    $uibModal.open({
      animation:   !0,
      keyboard:    !1,
      backdrop:    "static",
      templateUrl: "modals/views/welcome.tpl.html",
      controller:  "modals.welcome.controller",
      windowClass: "welcomeModal",
      resolve:     {user: user}
    })
  }, $rootScope.openLeavePromo = function (params) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/leavePromo.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalLeavePromo",
      resolve:     {
        params: function () {
          return params
        }
      }
    })
  }, $("html").bind("mouseleave", function () {
    $rootScope.user && $rootScope.user.inventoryValuePromo && !$rootScope.user.credits && ($rootScope.openLeavePromo(), $("html").unbind("mouseleave"))
  }), $rootScope.openSupport = function () {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/support.tpl.html",
      controller:  "modals.support.controller",
      windowClass: "support"
    })
  }, $rootScope.openFAQ = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/faq.tpl.html",
        controller:  "modals.faq.controller",
        windowClass: "faq"
      })
    }
  }, $rootScope.openRules = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/rules.tpl.html",
        controller:  "modals.rules.controller",
        windowClass: "rules"
      })
    }
  }, $rootScope.user, $rootScope.openDepositLockNote = function (params, cb) {
    $uibModal.open({
      animation:   !0,
      backdrop:    !0,
      templateUrl: "modals/views/depositLockNote.tpl.html",
      controller:  "modals.typical.controller",
      windowClass: "modalDepositLockNote",
      resolve:     {
        params: function () {
          return params
        }
      }
    }).result.then(function (res) {
      cb && cb(res)
    })
  }, $rootScope.openUserProfile = function (userid) {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        backdrop:    !0,
        templateUrl: "modals/views/user.tpl.html",
        controller:  "modals.user.controller",
        windowClass: "user",
        resolve:     {
          user: function () {
            var q = $q.defer();
            return $rootScope.loading = !0, $http({
              method: "GET",
              url:    "/account/getProfileData/",
              params: {userID: userid}
            }).then(function (response) {
              q.resolve(response.data), $rootScope.loading = !1
            }, function (response) {
              q.reject(response)
            }), q.promise
          }
        }
      })
    }
  }, $rootScope.openPromo = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/promo.tpl.html",
        controller:  "modals.promo.controller",
        windowClass: "modalPromo"
      })
    }
  }, $rootScope.openTradeURL = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/tradeURL.tpl.html",
        controller:  "modals.typical.controller",
        windowClass: "modalTradeURL",
        resolve:     {
          params: function () {
            return {}
          }
        }
      })
    }
  }, $rootScope.openFaucet = function () {
    if ($rootScope.userAuthed) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/faucet.tpl.html",
        controller:  "modals.faucet.controller",
        windowClass: "modalFaucet"
      })
    }
  }, $rootScope.openUserLookup = function () {
    if ($rootScope.userAuthed && ("admin" === $rootScope.user.role || "support" === $rootScope.user.role)) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/userLookup.tpl.html",
        controller:  "modals.userLookup.controller",
        windowClass: "userSearch"
      })
    }
  }, $rootScope.openItemDeposits = function () {
    if ($rootScope.userAuthed && ("admin" === $rootScope.user.role || "support" === $rootScope.user.role)) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/itemDeposits.tpl.html",
        controller:  "modals.itemDeposits.controller",
        windowClass: "itemDeposits"
      })
    }
  }, $rootScope.openSteamidMute = function () {
    if ($rootScope.userAuthed && ("admin" === $rootScope.user.role || "support" === $rootScope.user.role || "mod" === $rootScope.user.role)) {
      $uibModal.open({
        animation:   !0,
        templateUrl: "modals/views/steamidMute.tpl.html",
        controller:  "modals.steamidMute.controller",
        windowClass: "steamidMute"
      })
    }
  }
}]), angular.module("modals.directive", []).directive("modals", function () {
  return {restrict: "E", replace: "true", controller: "modals.controller", scope: {}}
}), angular.module("modals.faucet.controller", []).controller("modals.faucet.controller", ["$scope", "$filter", "$rootScope", "$uibModalInstance", "$http", "$interval", "glob", function ($scope, $filter, $rootScope, $uibModalInstance, $http, $interval, glob) {
  function setTimeLeft() {
    $scope.timeLeft = $scope.printTimeLeft()
  }

  $scope.glob = glob, $scope.canClaim = function () {
    return $scope.cooldown && $scope.cooldown <= (new Date).valueOf()
  }, $scope.printTimeLeft = function () {
    var now = (new Date).valueOf(), next = $scope.cooldown;
    if (!next || now >= next) return "00:00";
    var ms = next - now, hours = Math.floor(ms / 36e5), msleft = ms % 36e5, minutes = Math.floor(msleft / 6e4);
    return hours < 10 && (hours = "0" + hours), minutes < 10 && (minutes = "0" + minutes), hours + ":" + minutes
  };
  var timer = $interval(function () {
    setTimeLeft()
  }, 200);
  setTimeLeft(), $scope.claimFaucet = function (captcha) {
    glob.post("/faucet/claim", {captcha: captcha}, function () {
      glob.printsuccess("success"), $scope.cancel()
    }, function () {
      $scope.cancel()
    })
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }, glob.get("/faucet/cooldown", null, function (resp) {
    $scope.cooldown = (new Date).valueOf() + 1e3 * resp.cooldown
  }), $scope.$on("$destroy", function () {
    $interval.cancel(timer)
  })
}]), angular.module("modals.inventory.controller", []).controller("modals.inventory.controller", ["$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$timeout", "$http", "$uibModal", "inventoryService", "glob", "params", function ($scope, $filter, $uibModalInstance, $rootScope, $interval, $timeout, $http, $uibModal, inventoryService, glob, params) {
  function refresh(nextpage) {
    if ("inventory" === $scope.mode || "select" === $scope.mode || "gift" === $scope.mode || "cf" == $scope.mode) inventoryService.getItems(function () {
      $scope.items = $rootScope.inventory
    }); else if ("upgrade" === $scope.mode || "code_exchange" == $scope.mode) {
      var s = $scope.search;
      s.page = 0, nextpage && $scope.pagination.nextPage && (s.page = $scope.pagination.page + 1), nextpage || ($scope.items = []), glob.get("/api2/v1/upgrade/items", s, function (res) {
        !conf.dummy_data || res.items && res.items.length || (res = {
          items:    $.extend(!0, [], lotOfTestItems),
          nextPage: !0,
          page:     0
        }), $scope.items = nextpage ? $scope.items.concat(res.items) : res.items, $scope.pagination = res
      }, function () {
        $scope.pagination.nextPage = !1
      })
    } else "steam" === $scope.mode && ($scope.items = [], glob.get("/api2/v1/user/inventory/steam", {}, function (res) {
      if (!conf.dummy_data || res.items && res.items.length || (res.items = $.extend(!0, [], lotOfTestItems)), $scope.items = res.items, res.fromCache) {
        var secleft = Math.round((moment(res.validTo).valueOf() - (new Date).valueOf()) / 1e3);
        glob.printwarning("inv_steam_often_warning", {secleft: secleft})
      }
    }))
  }

  function cancel() {
    $uibModalInstance.close(!1)
  }

  $scope.glob = glob, $scope.params = params, $scope.mode = params.mode, $scope.data = params.data, $scope.mode || ($scope.mode = "inventory"), $scope.rawMode = $scope.mode, "cf_join" != $scope.mode && "cf_create" != $scope.mode || ($scope.mode = "cf"), "steam" != $scope.mode || $rootScope.user && $rootScope.user.tradeUrl || (glob.printwarning("error_tradeurl"), $rootScope.openTradeURL(), $timeout(cancel)), "inventory" == $scope.mode && $rootScope.sys && $rootScope.sys.api && $rootScope.sys.api.services && !$rootScope.sys.api.services.withdrawal && glob.printwarning("withdraw_disabled"), $scope.sorts = {
    rarity: {name: "rarity"},
    price:  {name: "price"}
  }, $scope.priceRanges = [[.15, .5], [.51, 1], [1.01, 2], [2.01, 5], [5.01, 10], [10.01, 20], [20.01, 100], [100.01, 1e4]], $scope.search = {
    sort:       "price",
    order:      "desc",
    priceRange: null
  }, "code_exchange" == $scope.mode && ($scope.search.priceRange = [0, $scope.data.cardValue]), $scope.setPriceRange = function (range) {
    $scope.search.priceRange = range, "upgrade" != $scope.mode && "code_exchange" != $scope.mode || refresh()
  }, $scope.switchOrder = function () {
    $scope.search.order = "asc" == $scope.search.order ? "desc" : "asc", "upgrade" != $scope.mode && "code_exchange" != $scope.mode || refresh()
  }, $scope.pagination = {}, $scope.refresh = refresh, refresh(), $scope.itemFilter = function (item) {
    if ("upgrade" == $scope.mode || "code_exchange" == $scope.mode) return !0;
    var priceFilter;
    priceFilter = !$scope.search.priceRange || item.price >= $scope.search.priceRange[0] && item.price <= $scope.search.priceRange[1];
    var nameFilter;
    return nameFilter = !$scope.search.query || item.market_hash_name && ~item.market_hash_name.toLowerCase().indexOf($scope.search.query.toLowerCase()), priceFilter && nameFilter
  };
  var nameRefreshTimer;
  $scope.$watch("search.query", function (newname) {
    $timeout.cancel(nameRefreshTimer), newname && (nameRefreshTimer = $timeout(refresh, 1e3))
  }), $scope.depositItems = function () {
    if ($rootScope.itemsValue($scope.selectedItems) < .15) return glob.printwarning("inv_deposit_min_warn");
    glob.post("/api2/v1/user/inventory/deposit", {items: $scope.selectedItems}, function (res) {
      glob.printsuccess("dep_sendRequest"), $scope.close()
    })
  }, $scope.withdrawItems = function () {
    $rootScope.openConfirmWithdraw({items: $scope.selectedItems}, function (answer) {
      answer ? (glob.post("/api2/v1/inventory/withdrawal", {items: $scope.selectedItems}, function (res) {
        res.requestedItemCount != res.itemsBeingWithdrawnCount && glob.printsuccess("withdraw_only_some", {
          requested: res.requestedItemCount,
          sent:      res.itemsBeingWithdrawnCount
        }, !0), glob.printsuccess("dep_sendRequest"), $scope.close(), ga("send", "event", "withdrawal", "queued")
      }), ga("send", "event", "withdrawal", "confirmed")) : ($scope.close(), ga("send", "event", "withdrawal", "cancelled"))
    })
  }, $scope.codeExchange = function () {
    var params = $.extend({}, $scope.data);
    params.items = $scope.selectedItems, $rootScope.openConfirmCodeExchange(params)
  }, $scope.sendGift = function () {
    $rootScope.openConfirmGift({items: $scope.selectedItems, user: $scope.data.user}, function (answer) {
      answer && glob.post("/api2/v1/user/sendGift", {
        to:    $scope.data.user.id,
        items: $scope.selectedItems
      }, function (res) {
        glob.printsuccess("inv_giftSent", {username: $scope.data.user.name}), $scope.close()
      })
    })
  }, $scope.itemAvailable = function (item) {
    return !("code_exchange" == $scope.mode && item.price > $scope.data.cardValue) && (("select" != $scope.mode && "gift" != $scope.mode && "upgrade" != $scope.mode && "inventory" != $scope.mode && "cf" != $scope.mode && "code_exchange" != $scope.mode || !1 !== item.available) && ("steam" != $scope.mode || !1 !== item.valid))
  }, $scope.toggleItem = function (item) {
    if (!item.selected) {
      if ("code_exchange" == $scope.mode && item.price > $scope.data.cardValue) return glob.printwarning("inv_item_exceeds_card_value");
      if (!$scope.itemAvailable(item)) return glob.printwarning("inv_item_unavailable");
      if (("select" == $scope.mode || "upgrade" == $scope.mode) && $scope.selectedItems.length >= 9) return glob.printwarning("inv_upg_too_much_items_warning");
      if ("steam" == $scope.mode && $scope.selectedItems.length >= 20) return glob.printwarning("dep_too_much_items_warning");
      if ("inventory" == $scope.mode && $scope.selectedItems.length >= 300) return glob.printwarning("wit_too_much_items_warning")
    }
    item.selected = !item.selected, item.selected ? $scope.selectedItems.push(item) : $scope.selectedItems.splice($scope.selectedItems.indexOf(item), 1)
  }, $scope.selectAll = function () {
    $scope.items.forEach(function (item) {
      item.selected || $scope.toggleItem(item)
    })
  }, $scope.cancel = cancel, $scope.close = $scope.cancel, $scope.confirm = function (items) {
    $uibModalInstance.close(items)
  }, $scope.selectedItems = [], conf.dummy_data && ($scope.deposits = testBets)
}]), angular.module("modals.itemDeposits.controller", []).controller("modals.itemDeposits.controller", ["$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$http", "glob", function ($scope, $filter, $uibModalInstance, $rootScope, $interval, $http, glob) {
  $scope.glob = glob, $scope.lookupItem = function (name) {
    glob.get("/system/getItemDeposits", {name: name}, function (resp) {
      $scope.deposits = resp
    })
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }, conf.dummy_data && ($scope.deposits = testBets)
}]), angular.module("modals", ["modals.controller", "modals.directive", "modals.inventory.controller", "modals.typical.controller", "modals.support.controller", "modals.user.controller", "modals.rules.controller", "modals.welcome.controller", "modals.tos.controller", "modals.promo.controller", "modals.userLookup.controller", "modals.steamidMute.controller", "modals.itemDeposits.controller"]), angular.module("modals.jukebox.controller", []).controller("modals.jukebox.controller", ["$scope", "$filter", "$rootScope", "$uibModalInstance", "$http", function ($scope, $filter, $rootScope, $uibModalInstance, $http) {
  $scope.juke = {url: "", price: 1}, $scope.playSong = function () {
    $scope.juke.url.length > 0 && -1 != $scope.juke.url.indexOf("soundcloud.com") ? ($scope.waitingRes = !0, $http({
      method: "POST",
      url:    "/jukebox/playSong",
      data:   {songURL: $scope.juke.url}
    }).then(function (response) {
      response.data.success && $rootScope.growl.success($filter("translate")("juke_success")), $scope.cancel(), ga("send", "event", "jukebox", "jukebox_played"), $scope.waitingRes = !1
    }, function (response) {
      $rootScope.growl.warning($filter("translate")(response.data)), $scope.waitingRes = !1
    })) : $rootScope.growl.warning($filter("translate")("juke_warnURL"))
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.promo.controller", []).controller("modals.promo.controller", ["$scope", "$filter", "$rootScope", "$uibModalInstance", "$http", function ($scope, $filter, $rootScope, $uibModalInstance, $http) {
  $rootScope.sU && $rootScope.sU.code && ($scope.code = $rootScope.sU.code), $scope.claimCode = function () {
    $scope.code.length > 0 ? ($scope.waitingRes = !0, $http({
      method: "POST",
      url:    "/account/claimCode",
      data:   {code: $scope.code}
    }).then(function (response) {
      response.data.success && $rootScope.growl.success("You have received " + response.data.reward + " bananas"), $scope.waitingRes = !1
    }, function (response) {
      $rootScope.growl.warning(response.data), $scope.waitingRes = !1
    })) : $rootScope.growl.warning("Enter a code.")
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.rules.controller", []).controller("modals.rules.controller", ["settingsService", "$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$http", function (settingsService, $scope, $filter, $uibModalInstance, $rootScope, $interval, $http) {
  $scope.accept = function () {
    settingsService.saveData({acceptedRules: !0}), $rootScope.openWelcome(), $scope.cancel()
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.steamidMute.controller", []).controller("modals.steamidMute.controller", ["$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$http", "glob", function ($scope, $filter, $uibModalInstance, $rootScope, $interval, $http, glob) {
  $scope.glob = glob, $scope.mute = function (id, perm) {
    glob.post("/system/muteUserBySteamid", {steamid: id, perm: perm}, function (resp) {
      var str = "Muted";
      perm && (str += " permanently"), glob.printsuccess(str)
    })
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.support.controller", []).controller("modals.support.controller", ["$scope", "$uibModalInstance", "$rootScope", "$filter", "$interval", "$timeout", "glob", function ($scope, $uibModalInstance, $rootScope, $filter, $interval, $timeout, glob) {
  $scope.message = {text: "", subject: "", email: ""}, $scope.sendMail = function () {
    $scope.message.subject.length > 0 && $scope.message.email.length > 0 && $scope.message.text.length > 0 ? ($scope.waitingRes = !0, glob.post("/account/sendSupportEmail", {message: $scope.message}, function () {
      $scope.waitingRes = !1, glob.printsuccess("support_msgSent"), $scope.cancel()
    }, function () {
      $scope.waitingRes = !1
    })) : glob.printwarning("support_fieldsWarn")
  }, $scope.sView = "quick", $scope.question = 0, $scope.toggleQuestion = function (number) {
    $scope.question != number ? $scope.question = number : $scope.question = 0
  }, $scope.changeView = function (view) {
    $scope.sView = view
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.tos.controller", []).controller("modals.tos.controller", ["settingsService", "$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$http", function (settingsService, $scope, $filter, $uibModalInstance, $rootScope, $interval, $http) {
  $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.typical.controller", []).controller("modals.typical.controller", ["$scope", "$filter", "$rootScope", "$uibModalInstance", "$http", "$interval", "glob", "params", "userService", function ($scope, $filter, $rootScope, $uibModalInstance, $http, $interval, glob, params, userService) {
  function settingsUpdateSuccess() {
    glob.printsuccess("success"), userService.getAccountData(), $scope.confirm()
  }

  $scope.glob = glob, $scope.params = params, $scope.gift_cards = [{
    value: 1,
    url:   "https://www.g2a.com/r/boltone"
  }, {value: 2.5, url: "https://www.g2a.com/r/bolt2dot5"}, {value: 5, url: "https://www.g2a.com/r/bolt5"}, {
    value: 10,
    url:   "https://www.g2a.com/r/bolt10"
  }, {value: 20, url: "https://www.g2a.com/r/bolt20"}, {value: 50, url: "https://www.g2a.com/r/bolt50"}, {
    value: 75,
    url:   "https://www.g2a.com/r/bolt75"
  }, {value: 100, url: "https://www.g2a.com/r/bolt100"}, {
    value: 250,
    url:   "https://www.g2a.com/r/bolt250"
  }, {value: 500, url: "https://www.g2a.com/r/bolt500"}], $scope.cancel = function () {
    $uibModalInstance.close(!1)
  }, $scope.confirm = function () {
    $uibModalInstance.close(!0)
  }, $scope.answerTrivia = function (answer) {
    glob.post("/trivia/guess", {answer: answer}, function (resp) {
      glob.printsuccess("trivia_answer_sent")
    })
  }, $scope.getInventoryPromo = function () {
    glob.post("/account/claimInventoryValuePromo", null, function (resp) {
      glob.printsuccess("rewards_claimed")
    })
  }, $scope.fetchGiftCard = function (code) {
    glob.getgiftcardInProgress = !0, glob.get("/api2/v1/giftcard/card/" + code, null, function (resp) {
      glob.getgiftcardInProgress = !1, resp.claimed ? glob.printerror("error_card_claimed") : ($scope.cancel(), $rootScope.openInventory("code_exchange", null, {
        cardValue: resp.value,
        cardCode:  code
      }))
    }, function () {
      glob.getgiftcardInProgress = !1
    })
  }, $scope.claimGiftCode = function () {
    glob.post("/api2/v1/giftcard/" + params.cardCode + "/claim", {items: params.items}, function (resp) {
      glob.printsuccess("gift_card_claimed"), $scope.cancel()
    })
  }, $scope.goToGiftcard = function (card) {
    window.open(card.url, "_blank").focus()
  }, $scope.goToGa = function () {
    window.open(params.gaUrl, "_blank").focus()
  }, $rootScope.user && ($scope.email = $rootScope.user.email || null, $scope.updateEmail = function (email, cb) {
    glob.post("/api2/v1/user/email", {email: email}, function (res) {
      cb ? cb() : settingsUpdateSuccess()
    }, cb)
  }, $scope.url = $rootScope.user.tradeUrl || null, $scope.updateURL = function (url, cb) {
    glob.post("/api2/v1/user/tradeUrl", {tradeUrl: url}, function (res) {
      cb ? cb() : settingsUpdateSuccess()
    }, cb)
  }, $scope.seed = $rootScope.user.clientSeed || null, $scope.updateSeed = function (seed, cb) {
    glob.post("/api2/v1/user/upgrade/client_seed", {seed: seed}, function (res) {
      cb ? cb() : settingsUpdateSuccess()
    }, cb)
  }), $scope.updateSettings = function () {
    var fnArray = [];
    if (null !== $scope.url && $scope.url != $rootScope.user.tradeUrl && fnArray.push(function (cb) {
        $scope.updateURL($scope.url, cb)
      }), null !== $scope.email && $scope.email != $rootScope.user.email && fnArray.push(function (cb) {
        $scope.updateEmail($scope.email, cb)
      }), !fnArray.length) return void settingsUpdateSuccess();
    $scope.updateInProg = !0, glob.tinyParallelEx(fnArray, function () {
      $scope.updateInProg = !1, settingsUpdateSuccess()
    })
  }, $scope.saveLocalStore = $rootScope.saveAppLocalStore, $scope.$watch("$root.app.overunder", $scope.saveLocalStore), $scope.$watch("$root.app.clientSeed", $scope.saveLocalStore)
}]), angular.module("modals.user.controller", []).controller("modals.user.controller", ["$scope", "$uibModalInstance", "$rootScope", "$interval", "$timeout", "user", function ($scope, $uibModalInstance, $rootScope, $interval, $timeout, user) {
  $scope.public = user, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.userLookup.controller", []).controller("modals.userLookup.controller", ["$scope", "$filter", "$rootScope", "$uibModalInstance", "$http", function ($scope, $filter, $rootScope, $uibModalInstance, $http) {
  $scope.user = null, $scope.root = "/", $scope.$watch("user", function () {
    $scope.user && $scope.user.originalObject && ($scope.userTrades(), $scope.userTrans())
  }), $scope.userTrans = function () {
    $http({
      method: "GET",
      url:    "/system/getUserTransactionHistory",
      params: {userID: $scope.user.originalObject.id}
    }).then(function (response) {
      $scope.userTransArray = response.data
    }, function (response) {
    })
  }, $scope.userTrades = function () {
    $http({
      method: "GET",
      url:    "/system/getUserTradeOfferHistory",
      params: {userID: $scope.user.originalObject.id}
    }).then(function (response) {
      $scope.userTradesArray = response.data
    }, function (response) {
    })
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("modals.welcome.controller", []).controller("modals.welcome.controller", ["settingsService", "$scope", "$filter", "$uibModalInstance", "$rootScope", "$interval", "$http", function (settingsService, $scope, $filter, $uibModalInstance, $rootScope, $interval, $http) {
  $scope.errored = !1, $scope.waitingRes = !1, $scope.claimBonus = function () {
    $scope.waitingRes = !0, $http({method: "POST", url: "/account/claimStartingCredits"}).then(function () {
      $rootScope.growl.success($filter("translate")("welcome_successClaim")), settingsService.saveData({welcomePop: !0}, !0), $scope.waitingRes = !1, $scope.cancel()
    }, function (res) {
      $rootScope.growl.warning(res.data), settingsService.saveData({welcomePop: !0}, !0), $scope.err = res.data, $scope.waitingRes = !1, $scope.errored = !0
    })
  }, $scope.cancel = function () {
    $uibModalInstance.dismiss("cancel")
  }
}]), angular.module("nav.controller", []).controller("nav.controller", ["$scope", "$rootScope", "$timeout", "$interval", "$http", "$sanitize", "userService", "settingsService", "glob", "$filter", function ($scope, $rootScope, $timeout, $interval, $http, $sanitize, userService, settingsService, glob, $filter) {
  function checkRead() {
    $scope.notificationUnread = !1;
    for (var i = 0; i < $scope.notificationList.length; i++) $scope.notificationList[i].read || ($scope.notificationUnread = !0)
  }

  function parseNotification(note) {
    "trade_offer" == note.type ? note.message = handleOfferState(note) : note.message = $translate.instant(note.type)
  }

  function handleOfferState(data) {
    function handle() {
      glob.nativeNotifs.spawn("/img/bolt_mascot.png", $translate.instant(nnote_title), $translate.instant(nnote_message), nnote_message, function (notif) {
        2 == data.steamState && window.open("https://steamcommunity.com/tradeoffer/" + data.tradeId + "/", "_blank"), 11 == data.steamState && window.open("https://support.steampowered.com/kb_article.php?ref=8078-TPHC-6195", "_blank"), notif.close()
      })
    }

    var nnote_title, nnote_message;
    return 2 == data.steamState ? (glob.printsuccess("notification_offer", data, !0), nnote_title = "native_note_offer_title", nnote_message = "native_note_offer_text", handle()) : 3 == data.steamState ? (glob.printsuccess("notification_offer_success", null, !0), nnote_title = "native_note_offer_success_title", nnote_message = "native_note_offer_success_text", handle()) : 6 == data.steamState || 10 == data.steamState ? (glob.printwarning("notification_offer_cancelled", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_cancelled_text", handle()) : 7 == data.steamState ? (glob.printwarning("notification_offer_declined", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_declined_text", handle()) : 8 == data.steamState ? (glob.printwarning("notification_offer_unavailable", data, !0), nnote_title = "native_note_offer_unsuccessfull", nnote_message = "native_note_offer_unavailable_text", handle()) : 11 == data.steamState && (glob.printsuccess("notification_offer_hold", data, !0), nnote_title = "native_note_offer_hold_title", nnote_message = "native_note_offer_hold_text", handle()), nnote_message
  }

  $scope.notificationList = [], $scope.glob = glob, $scope.userSettings = settingsService.settings, $scope.langs = $rootScope.langs, $scope.switchLocale = function (lang) {
    $rootScope.locale = lang, $rootScope.user ? ($rootScope.user.locale = lang, glob.post("/api2/v1/user/locale", {locale: lang}, function () {
      userService.getAccountData()
    })) : userService.switchLocale(lang)
  }, $scope.logout = function () {
    window.location.reload()
    window.localStorage.removeItem('auth')

  }, $rootScope.logout = $scope.logout, $scope.clickNotif = function () {
    $scope.notificationUnread && readAll()
  }, $scope.saveSettings = function () {
    settingsService.saveData({notify: $scope.userSettings.notify}, !0)
  }, $scope.notificationUnread = !1;
  var readAll = function () {
    glob.post("/notification/markRead", null, function () {
      for (var i = 0; i < $scope.notificationList.length; i++) $scope.notificationList[i].read = !0;
      $timeout(function () {
        checkRead()
      })
    })
  };
  socket.on("notification_new", function (item) {
    item.read || (parseNotification(item), $scope.notificationList.push(item)), checkRead(), $scope.$$phase || $scope.$digest()
  })
}]), angular.module("nav.directive", []).directive("navbar", function () {
  return {
    restrict:    "E",
    replace:     "true",
    controller:  "nav.controller",
    templateUrl: "nav/views/nav.tpl.html",
    scope:       {}
  }
}), angular.module("nav", ["nav.directive", "nav.controller"]);
var mod;
mod = angular.module("infinite-scroll", []), mod.value("THROTTLE_MILLISECONDS", null), mod.directive("infiniteScroll", ["$rootScope", "$window", "$timeout", "THROTTLE_MILLISECONDS", function ($rootScope, $window, $timeout, THROTTLE_MILLISECONDS) {
  return {
    scope:   {
      infiniteScroll:          "&",
      infiniteScrollContainer: "=",
      infiniteScrollDistance:  "=",
      infiniteScrollDisabled:  "="
    }, link: function (scope, elem, attrs) {
      var changeContainer, checkWhenEnabled, container, handleInfiniteScrollContainer, handleInfiniteScrollDisabled,
          handleInfiniteScrollDistance, handler, immediateCheck, scrollDistance, scrollEnabled, throttle;
      return $window = angular.element($window), scrollDistance = null, scrollEnabled = null, checkWhenEnabled = null, container = null, immediateCheck = !0, handler = function () {
        var containerBottom, containerTopOffset, elementBottom, remaining, shouldScroll;
        return container === $window ? (containerBottom = container.height() + container.scrollTop(), elementBottom = elem.offset().top + elem.height()) : (containerBottom = container.height(), containerTopOffset = 0, void 0 !== container.offset() && (containerTopOffset = container.offset().top), elementBottom = elem.offset().top - containerTopOffset + elem.height()), remaining = elementBottom - containerBottom, shouldScroll = remaining <= container.height() * scrollDistance + 1, shouldScroll ? (checkWhenEnabled = !0, scrollEnabled ? scope.$$phase || $rootScope.$$phase ? scope.infiniteScroll() : scope.$apply(scope.infiniteScroll) : void 0) : checkWhenEnabled = !1
      }, throttle = function (func, wait) {
        var later, previous, timeout;
        return timeout = null, previous = 0, later = function () {
          return previous = (new Date).getTime(), $timeout.cancel(timeout), timeout = null, func.call(), null
        }, function () {
          var now, remaining;
          return now = (new Date).getTime(), remaining = wait - (now - previous), remaining <= 0 ? (clearTimeout(timeout), $timeout.cancel(timeout), timeout = null, previous = now, func.call()) : timeout ? void 0 : timeout = $timeout(later, remaining)
        }
      }, null != THROTTLE_MILLISECONDS && (handler = throttle(handler, THROTTLE_MILLISECONDS)), scope.$on("$destroy", function () {
        return container.off("scroll", handler)
      }), handleInfiniteScrollDistance = function (v) {
        return scrollDistance = parseInt(v, 10) || 0
      }, scope.$watch("infiniteScrollDistance", handleInfiniteScrollDistance), handleInfiniteScrollDistance(scope.infiniteScrollDistance), handleInfiniteScrollDisabled = function (v) {
        if ((scrollEnabled = !v) && checkWhenEnabled) return checkWhenEnabled = !1, handler()
      }, scope.$watch("infiniteScrollDisabled", handleInfiniteScrollDisabled), handleInfiniteScrollDisabled(scope.infiniteScrollDisabled), changeContainer = function (newContainer) {
        if (null != container && container.off("scroll", handler), container = "function" == typeof newContainer.last ? newContainer.last() : newContainer, null != newContainer) return container.on("scroll", handler)
      }, changeContainer($window), handleInfiniteScrollContainer = function (newContainer) {
        if (null != newContainer && 0 !== newContainer.length) {
          if (null != (newContainer = angular.element(newContainer))) return changeContainer(newContainer);
          throw new Exception("invalid infinite-scroll-container attribute.")
        }
      }, scope.$watch("infiniteScrollContainer", handleInfiniteScrollContainer), handleInfiniteScrollContainer(scope.infiniteScrollContainer || []), null != attrs.infiniteScrollParent && changeContainer(angular.element(elem.parent())), null != attrs.infiniteScrollImmediateCheck && (immediateCheck = scope.$eval(attrs.infiniteScrollImmediateCheck)), $timeout(function () {
        if (immediateCheck) return handler()
      }, 0)
    }
  }
}]);
var pJS = function (tag_id, params) {
  var canvas_el = document.querySelector("#" + tag_id + " > .particles-js-canvas-el");
  this.pJS      = {
    canvas:        {el: canvas_el, w: canvas_el.offsetWidth, h: canvas_el.offsetHeight},
    particles:     {
      number:      {value: 400, density: {enable: !0, value_area: 800}},
      color:       {value: "#fff"},
      shape:       {
        type:    "circle",
        stroke:  {width: 0, color: "#ff0000"},
        polygon: {nb_sides: 5},
        image:   {src: "", width: 100, height: 100}
      },
      opacity:     {value: 1, random: !1, anim: {enable: !1, speed: 2, opacity_min: 0, sync: !1}},
      size:        {value: 20, random: !1, anim: {enable: !1, speed: 20, size_min: 0, sync: !1}},
      line_linked: {enable: !0, distance: 100, color: "#fff", opacity: 1, width: 1},
      move:        {
        enable:    !0,
        speed:     2,
        direction: "none",
        random:    !1,
        straight:  !1,
        out_mode:  "out",
        bounce:    !1,
        attract:   {enable: !1, rotateX: 3e3, rotateY: 3e3}
      },
      array:       []
    },
    interactivity: {
      detect_on: "canvas",
      events:    {onhover: {enable: !0, mode: "grab"}, onclick: {enable: !0, mode: "push"}, resize: !0},
      modes:     {
        grab:    {distance: 100, line_linked: {opacity: 1}},
        bubble:  {distance: 200, size: 80, duration: .4},
        repulse: {distance: 200, duration: .4},
        push:    {particles_nb: 4},
        remove:  {particles_nb: 2}
      },
      mouse:     {}
    },
    retina_detect: !1,
    fn:            {interact: {}, modes: {}, vendors: {}},
    tmp:           {}
  };
  var pJS       = this.pJS;
  params && Object.deepExtend(pJS, params), pJS.tmp.obj = {
    size_value:            pJS.particles.size.value,
    size_anim_speed:       pJS.particles.size.anim.speed,
    move_speed:            pJS.particles.move.speed,
    line_linked_distance:  pJS.particles.line_linked.distance,
    line_linked_width:     pJS.particles.line_linked.width,
    mode_grab_distance:    pJS.interactivity.modes.grab.distance,
    mode_bubble_distance:  pJS.interactivity.modes.bubble.distance,
    mode_bubble_size:      pJS.interactivity.modes.bubble.size,
    mode_repulse_distance: pJS.interactivity.modes.repulse.distance
  }, pJS.fn.retinaInit = function () {
    pJS.retina_detect && window.devicePixelRatio > 1 ? (pJS.canvas.pxratio = window.devicePixelRatio, pJS.tmp.retina = !0) : (pJS.canvas.pxratio = 1, pJS.tmp.retina = !1), pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio, pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio, pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio, pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio, pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio, pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio, pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio, pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio, pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio, pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio, pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio
  }, pJS.fn.canvasInit = function () {
    pJS.canvas.ctx = pJS.canvas.el.getContext("2d")
  }, pJS.fn.canvasSize = function () {
    pJS.canvas.el.width = pJS.canvas.w, pJS.canvas.el.height = pJS.canvas.h, pJS && pJS.interactivity.events.resize && window.addEventListener("resize", function () {
      pJS.canvas.w = pJS.canvas.el.offsetWidth, pJS.canvas.h = pJS.canvas.el.offsetHeight, pJS.tmp.retina && (pJS.canvas.w *= pJS.canvas.pxratio, pJS.canvas.h *= pJS.canvas.pxratio), pJS.canvas.el.width = pJS.canvas.w, pJS.canvas.el.height = pJS.canvas.h, pJS.particles.move.enable || (pJS.fn.particlesEmpty(), pJS.fn.particlesCreate(), pJS.fn.particlesDraw(), pJS.fn.vendors.densityAutoParticles()), pJS.fn.vendors.densityAutoParticles()
    })
  }, pJS.fn.canvasPaint = function () {
    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h)
  }, pJS.fn.canvasClear = function () {
    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h)
  }, pJS.fn.particle = function (color, opacity, position) {
    if (this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value, pJS.particles.size.anim.enable && (this.size_status = !1, this.vs = pJS.particles.size.anim.speed / 100, pJS.particles.size.anim.sync || (this.vs = this.vs * Math.random())), this.x = position ? position.x : Math.random() * pJS.canvas.w, this.y = position ? position.y : Math.random() * pJS.canvas.h, this.x > pJS.canvas.w - 2 * this.radius ? this.x = this.x - this.radius : this.x < 2 * this.radius && (this.x = this.x + this.radius), this.y > pJS.canvas.h - 2 * this.radius ? this.y = this.y - this.radius : this.y < 2 * this.radius && (this.y = this.y + this.radius), pJS.particles.move.bounce && pJS.fn.vendors.checkOverlap(this, position), this.color = {}, "object" == typeof color.value) if (color.value instanceof Array) {
      var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];
      this.color.rgb     = hexToRgb(color_selected)
    } else void 0 != color.value.r && void 0 != color.value.g && void 0 != color.value.b && (this.color.rgb = {
      r: color.value.r,
      g: color.value.g,
      b: color.value.b
    }), void 0 != color.value.h && void 0 != color.value.s && void 0 != color.value.l && (this.color.hsl = {
      h: color.value.h,
      s: color.value.s,
      l: color.value.l
    }); else "random" == color.value ? this.color.rgb = {
      r: Math.floor(256 * Math.random()) + 0,
      g: Math.floor(256 * Math.random()) + 0,
      b: Math.floor(256 * Math.random()) + 0
    } : "string" == typeof color.value && (this.color = color, this.color.rgb = hexToRgb(this.color.value));
    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value, pJS.particles.opacity.anim.enable && (this.opacity_status = !1, this.vo = pJS.particles.opacity.anim.speed / 100, pJS.particles.opacity.anim.sync || (this.vo = this.vo * Math.random()));
    var velbase = {};
    switch (pJS.particles.move.direction) {
      case"top":
        velbase = {x: 0, y: -1};
        break;
      case"top-right":
        velbase = {x: .5, y: -.5};
        break;
      case"right":
        velbase = {x: 1, y: -0};
        break;
      case"bottom-right":
        velbase = {x: .5, y: .5};
        break;
      case"bottom":
        velbase = {x: 0, y: 1};
        break;
      case"bottom-left":
        velbase = {x: -.5, y: 1};
        break;
      case"left":
        velbase = {x: -1, y: 0};
        break;
      case"top-left":
        velbase = {x: -.5, y: -.5};
        break;
      default:
        velbase = {x: 0, y: 0}
    }
    pJS.particles.move.straight ? (this.vx = velbase.x, this.vy = velbase.y, pJS.particles.move.random && (this.vx = this.vx * Math.random(), this.vy = this.vy * Math.random())) : (this.vx = velbase.x + Math.random() - .5, this.vy = velbase.y + Math.random() - .5), this.vx_i = this.vx, this.vy_i = this.vy;
    var shape_type = pJS.particles.shape.type;
    if ("object" == typeof shape_type) {
      if (shape_type instanceof Array) {
        var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];
        this.shape         = shape_selected
      }
    } else this.shape = shape_type;
    if ("image" == this.shape) {
      var sh = pJS.particles.shape;
      this.img = {
        src:   sh.image.src,
        ratio: sh.image.width / sh.image.height
      }, this.img.ratio || (this.img.ratio = 1), "svg" == pJS.tmp.img_type && void 0 != pJS.tmp.source_svg && (pJS.fn.vendors.createSvgImg(this), pJS.tmp.pushing && (this.img.loaded = !1))
    }
  }, pJS.fn.particle.prototype.draw = function () {
    var p = this;
    if (void 0 != p.radius_bubble) var radius = p.radius_bubble; else var radius = p.radius;
    if (void 0 != p.opacity_bubble) var opacity = p.opacity_bubble; else var opacity = p.opacity;
    if (p.color.rgb) var color_value = "rgba(" + p.color.rgb.r + "," + p.color.rgb.g + "," + p.color.rgb.b + "," + opacity + ")"; else var color_value = "hsla(" + p.color.hsl.h + "," + p.color.hsl.s + "%," + p.color.hsl.l + "%," + opacity + ")";
    switch (pJS.canvas.ctx.fillStyle = color_value, pJS.canvas.ctx.beginPath(), p.shape) {
      case"circle":
        pJS.canvas.ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI, !1);
        break;
      case"edge":
        pJS.canvas.ctx.rect(p.x - radius, p.y - radius, 2 * radius, 2 * radius);
        break;
      case"triangle":
        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x - radius, p.y + radius / 1.66, 2 * radius, 3, 2);
        break;
      case"polygon":
        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x - radius / (pJS.particles.shape.polygon.nb_sides / 3.5), p.y - radius / .76, 2.66 * radius / (pJS.particles.shape.polygon.nb_sides / 3), pJS.particles.shape.polygon.nb_sides, 1);
        break;
      case"star":
        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x - 2 * radius / (pJS.particles.shape.polygon.nb_sides / 4), p.y - radius / 1.52, 2 * radius * 2.66 / (pJS.particles.shape.polygon.nb_sides / 3), pJS.particles.shape.polygon.nb_sides, 2);
        break;
      case"image":
        if ("svg" == pJS.tmp.img_type) var img_obj = p.img.obj; else var img_obj = pJS.tmp.img_obj;
        img_obj && function () {
          pJS.canvas.ctx.drawImage(img_obj, p.x - radius, p.y - radius, 2 * radius, 2 * radius / p.img.ratio)
        }()
    }
    pJS.canvas.ctx.closePath(), pJS.particles.shape.stroke.width > 0 && (pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color, pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width, pJS.canvas.ctx.stroke()), pJS.canvas.ctx.fill()
  }, pJS.fn.particlesCreate = function () {
    for (var i = 0; i < pJS.particles.number.value; i++) pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value))
  }, pJS.fn.particlesUpdate = function () {
    for (var i = 0; i < pJS.particles.array.length; i++) {
      var p = pJS.particles.array[i];
      if (pJS.particles.move.enable) {
        var ms = pJS.particles.move.speed / 2;
        p.x += p.vx * ms, p.y += p.vy * ms
      }
      if (pJS.particles.opacity.anim.enable && (1 == p.opacity_status ? (p.opacity >= pJS.particles.opacity.value && (p.opacity_status = !1), p.opacity += p.vo) : (p.opacity <= pJS.particles.opacity.anim.opacity_min && (p.opacity_status = !0), p.opacity -= p.vo), p.opacity < 0 && (p.opacity = 0)), pJS.particles.size.anim.enable && (1 == p.size_status ? (p.radius >= pJS.particles.size.value && (p.size_status = !1), p.radius += p.vs) : (p.radius <= pJS.particles.size.anim.size_min && (p.size_status = !0), p.radius -= p.vs), p.radius < 0 && (p.radius = 0)), "bounce" == pJS.particles.move.out_mode) var new_pos = {
        x_left:   p.radius,
        x_right:  pJS.canvas.w,
        y_top:    p.radius,
        y_bottom: pJS.canvas.h
      }; else var new_pos = {
        x_left:   -p.radius,
        x_right:  pJS.canvas.w + p.radius,
        y_top:    -p.radius,
        y_bottom: pJS.canvas.h + p.radius
      };
      switch (p.x - p.radius > pJS.canvas.w ? (p.x = new_pos.x_left, p.y = Math.random() * pJS.canvas.h) : p.x + p.radius < 0 && (p.x = new_pos.x_right, p.y = Math.random() * pJS.canvas.h), p.y - p.radius > pJS.canvas.h ? (p.y = new_pos.y_top, p.x = Math.random() * pJS.canvas.w) : p.y + p.radius < 0 && (p.y = new_pos.y_bottom, p.x = Math.random() * pJS.canvas.w), pJS.particles.move.out_mode) {
        case"bounce":
          p.x + p.radius > pJS.canvas.w ? p.vx = -p.vx : p.x - p.radius < 0 && (p.vx = -p.vx), p.y + p.radius > pJS.canvas.h ? p.vy = -p.vy : p.y - p.radius < 0 && (p.vy = -p.vy)
      }
      if (isInArray("grab", pJS.interactivity.events.onhover.mode) && pJS.fn.modes.grabParticle(p), (isInArray("bubble", pJS.interactivity.events.onhover.mode) || isInArray("bubble", pJS.interactivity.events.onclick.mode)) && pJS.fn.modes.bubbleParticle(p), (isInArray("repulse", pJS.interactivity.events.onhover.mode) || isInArray("repulse", pJS.interactivity.events.onclick.mode)) && pJS.fn.modes.repulseParticle(p), pJS.particles.line_linked.enable || pJS.particles.move.attract.enable) for (var j = i + 1; j < pJS.particles.array.length; j++) {
        var p2 = pJS.particles.array[j];
        pJS.particles.line_linked.enable && pJS.fn.interact.linkParticles(p, p2), pJS.particles.move.attract.enable && pJS.fn.interact.attractParticles(p, p2), pJS.particles.move.bounce && pJS.fn.interact.bounceParticles(p, p2)
      }
    }
  }, pJS.fn.particlesDraw = function () {
    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h), pJS.fn.particlesUpdate();
    for (var i = 0; i < pJS.particles.array.length; i++) {
      pJS.particles.array[i].draw()
    }
  }, pJS.fn.particlesEmpty = function () {
    pJS.particles.array = []
  }, pJS.fn.particlesRefresh = function () {
    cancelRequestAnimFrame(pJS.fn.checkAnimFrame), cancelRequestAnimFrame(pJS.fn.drawAnimFrame), pJS.tmp.source_svg = void 0, pJS.tmp.img_obj = void 0, pJS.tmp.count_svg = 0, pJS.fn.particlesEmpty(), pJS.fn.canvasClear(), pJS.fn.vendors.start()
  }, pJS.fn.interact.linkParticles = function (p1, p2) {
    var dx = p1.x - p2.x, dy = p1.y - p2.y, dist = Math.sqrt(dx * dx + dy * dy);
    if (dist <= pJS.particles.line_linked.distance) {
      var opacity_line = pJS.particles.line_linked.opacity - dist / (1 / pJS.particles.line_linked.opacity) / pJS.particles.line_linked.distance;
      if (opacity_line > 0) {
        var color_line = pJS.particles.line_linked.color_rgb_line;
        pJS.canvas.ctx.strokeStyle = "rgba(" + color_line.r + "," + color_line.g + "," + color_line.b + "," + opacity_line + ")", pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width, pJS.canvas.ctx.beginPath(), pJS.canvas.ctx.moveTo(p1.x, p1.y), pJS.canvas.ctx.lineTo(p2.x, p2.y), pJS.canvas.ctx.stroke(), pJS.canvas.ctx.closePath()
      }
    }
  }, pJS.fn.interact.attractParticles = function (p1, p2) {
    var dx = p1.x - p2.x, dy = p1.y - p2.y;
    if (Math.sqrt(dx * dx + dy * dy) <= pJS.particles.line_linked.distance) {
      var ax = dx / (1e3 * pJS.particles.move.attract.rotateX), ay = dy / (1e3 * pJS.particles.move.attract.rotateY);
      p1.vx -= ax, p1.vy -= ay, p2.vx += ax, p2.vy += ay
    }
  }, pJS.fn.interact.bounceParticles = function (p1, p2) {
    var dx = p1.x - p2.x, dy = p1.y - p2.y;
    Math.sqrt(dx * dx + dy * dy) <= p1.radius + p2.radius && (p1.vx = -p1.vx, p1.vy = -p1.vy, p2.vx = -p2.vx, p2.vy = -p2.vy)
  }, pJS.fn.modes.pushParticles = function (nb, pos) {
    pJS.tmp.pushing = !0;
    for (var i = 0; i < nb; i++) pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value, {
      x: pos ? pos.pos_x : Math.random() * pJS.canvas.w,
      y: pos ? pos.pos_y : Math.random() * pJS.canvas.h
    })), i == nb - 1 && (pJS.particles.move.enable || pJS.fn.particlesDraw(), pJS.tmp.pushing = !1)
  }, pJS.fn.modes.removeParticles = function (nb) {
    pJS.particles.array.splice(0, nb), pJS.particles.move.enable || pJS.fn.particlesDraw()
  }, pJS.fn.modes.bubbleParticle = function (p) {
    function init() {
      p.opacity_bubble = p.opacity, p.radius_bubble = p.radius
    }

    function process(bubble_param, particles_param, p_obj_bubble, p_obj, id) {
      if (bubble_param != particles_param) if (pJS.tmp.bubble_duration_end) {
        if (void 0 != p_obj_bubble) {
          var value_tmp = p_obj - time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration,
              dif       = bubble_param - value_tmp;
          value = bubble_param + dif, "size" == id && (p.radius_bubble = value), "opacity" == id && (p.opacity_bubble = value)
        }
      } else if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {
        if (void 0 != p_obj_bubble) var obj = p_obj_bubble; else var obj = p_obj;
        if (obj != bubble_param) {
          var value = p_obj - time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration;
          "size" == id && (p.radius_bubble = value), "opacity" == id && (p.opacity_bubble = value)
        }
      } else "size" == id && (p.radius_bubble = void 0), "opacity" == id && (p.opacity_bubble = void 0)
    }

    if (pJS.interactivity.events.onhover.enable && isInArray("bubble", pJS.interactivity.events.onhover.mode)) {
      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x, dy_mouse = p.y - pJS.interactivity.mouse.pos_y,
          dist_mouse                                               = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),
          ratio                                                    = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;
      if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {
        if (ratio >= 0 && "mousemove" == pJS.interactivity.status) {
          if (pJS.interactivity.modes.bubble.size != pJS.particles.size.value) if (pJS.interactivity.modes.bubble.size > pJS.particles.size.value) {
            var size = p.radius + pJS.interactivity.modes.bubble.size * ratio;
            size >= 0 && (p.radius_bubble = size)
          } else {
            var dif         = p.radius - pJS.interactivity.modes.bubble.size, size = p.radius - dif * ratio;
            p.radius_bubble = size > 0 ? size : 0
          }
          if (pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value) if (pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value) {
            var opacity = pJS.interactivity.modes.bubble.opacity * ratio;
            opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity && (p.opacity_bubble = opacity)
          } else {
            var opacity = p.opacity - (pJS.particles.opacity.value - pJS.interactivity.modes.bubble.opacity) * ratio;
            opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity && (p.opacity_bubble = opacity)
          }
        }
      } else init();
      "mouseleave" == pJS.interactivity.status && init()
    } else if (pJS.interactivity.events.onclick.enable && isInArray("bubble", pJS.interactivity.events.onclick.mode)) {
      if (pJS.tmp.bubble_clicking) {
        var dx_mouse   = p.x - pJS.interactivity.mouse.click_pos_x,
            dy_mouse   = p.y - pJS.interactivity.mouse.click_pos_y,
            dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),
            time_spent = ((new Date).getTime() - pJS.interactivity.mouse.click_time) / 1e3;
        time_spent > pJS.interactivity.modes.bubble.duration && (pJS.tmp.bubble_duration_end = !0), time_spent > 2 * pJS.interactivity.modes.bubble.duration && (pJS.tmp.bubble_clicking = !1, pJS.tmp.bubble_duration_end = !1)
      }
      pJS.tmp.bubble_clicking && (process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, "size"), process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, "opacity"))
    }
  }, pJS.fn.modes.repulseParticle = function (p) {
    if (pJS.interactivity.events.onhover.enable && isInArray("repulse", pJS.interactivity.events.onhover.mode) && "mousemove" == pJS.interactivity.status) {
      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x, dy_mouse = p.y - pJS.interactivity.mouse.pos_y,
          dist_mouse                                               = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),
          normVec                                                  = {x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse},
          repulseRadius                                            = pJS.interactivity.modes.repulse.distance,
          repulseFactor                                            = clamp(1 / repulseRadius * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * 100, 0, 50),
          pos                                                      = {x: p.x + normVec.x * repulseFactor, y: p.y + normVec.y * repulseFactor};
      "bounce" == pJS.particles.move.out_mode ? (pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w && (p.x = pos.x), pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h && (p.y = pos.y)) : (p.x = pos.x, p.y = pos.y)
    } else if (pJS.interactivity.events.onclick.enable && isInArray("repulse", pJS.interactivity.events.onclick.mode)) if (pJS.tmp.repulse_finish || ++pJS.tmp.repulse_count == pJS.particles.array.length && (pJS.tmp.repulse_finish = !0), pJS.tmp.repulse_clicking) {
      var repulseRadius                                      = Math.pow(pJS.interactivity.modes.repulse.distance / 6, 3),
          dx = pJS.interactivity.mouse.click_pos_x - p.x, dy = pJS.interactivity.mouse.click_pos_y - p.y,
          d                                                  = dx * dx + dy * dy, force                       = -repulseRadius / d * 1;
      d <= repulseRadius && function () {
        var f = Math.atan2(dy, dx);
        if (p.vx = force * Math.cos(f), p.vy = force * Math.sin(f), "bounce" == pJS.particles.move.out_mode) {
          var pos = {x: p.x + p.vx, y: p.y + p.vy};
          pos.x + p.radius > pJS.canvas.w ? p.vx = -p.vx : pos.x - p.radius < 0 && (p.vx = -p.vx), pos.y + p.radius > pJS.canvas.h ? p.vy = -p.vy : pos.y - p.radius < 0 && (p.vy = -p.vy)
        }
      }()
    } else 0 == pJS.tmp.repulse_clicking && (p.vx = p.vx_i, p.vy = p.vy_i)
  }, pJS.fn.modes.grabParticle = function (p) {
    if (pJS.interactivity.events.onhover.enable && "mousemove" == pJS.interactivity.status) {
      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x, dy_mouse = p.y - pJS.interactivity.mouse.pos_y,
          dist_mouse                                               = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);
      if (dist_mouse <= pJS.interactivity.modes.grab.distance) {
        var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - dist_mouse / (1 / pJS.interactivity.modes.grab.line_linked.opacity) / pJS.interactivity.modes.grab.distance;
        if (opacity_line > 0) {
          var color_line = pJS.particles.line_linked.color_rgb_line;
          pJS.canvas.ctx.strokeStyle = "rgba(" + color_line.r + "," + color_line.g + "," + color_line.b + "," + opacity_line + ")", pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width, pJS.canvas.ctx.beginPath(), pJS.canvas.ctx.moveTo(p.x, p.y), pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y), pJS.canvas.ctx.stroke(), pJS.canvas.ctx.closePath()
        }
      }
    }
  }, pJS.fn.vendors.eventsListeners = function () {
    "window" == pJS.interactivity.detect_on ? pJS.interactivity.el = window : pJS.interactivity.el = pJS.canvas.el, (pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable) && (pJS.interactivity.el.addEventListener("mousemove", function (e) {
      if (pJS.interactivity.el == window) var pos_x = e.clientX,
                                              pos_y = e.clientY; else var pos_x = e.offsetX || e.clientX,
                                                                          pos_y = e.offsetY || e.clientY;
      pJS.interactivity.mouse.pos_x = pos_x, pJS.interactivity.mouse.pos_y = pos_y, pJS.tmp.retina && (pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio, pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio), pJS.interactivity.status = "mousemove"
    }), pJS.interactivity.el.addEventListener("mouseleave", function (e) {
      pJS.interactivity.mouse.pos_x = null, pJS.interactivity.mouse.pos_y = null, pJS.interactivity.status = "mouseleave"
    })), pJS.interactivity.events.onclick.enable && pJS.interactivity.el.addEventListener("click", function () {
      if (pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y, pJS.interactivity.mouse.click_time = (new Date).getTime(), pJS.interactivity.events.onclick.enable) switch (pJS.interactivity.events.onclick.mode) {
        case"push":
          pJS.particles.move.enable ? pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse) : 1 == pJS.interactivity.modes.push.particles_nb ? pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse) : pJS.interactivity.modes.push.particles_nb > 1 && pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);
          break;
        case"remove":
          pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);
          break;
        case"bubble":
          pJS.tmp.bubble_clicking = !0;
          break;
        case"repulse":
          pJS.tmp.repulse_clicking = !0, pJS.tmp.repulse_count = 0, pJS.tmp.repulse_finish = !1, setTimeout(function () {
            pJS.tmp.repulse_clicking = !1
          }, 1e3 * pJS.interactivity.modes.repulse.duration)
      }
    })
  }, pJS.fn.vendors.densityAutoParticles = function () {
    if (pJS.particles.number.density.enable) {
      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1e3;
      pJS.tmp.retina && (area /= 2 * pJS.canvas.pxratio);
      var nb_particles      = area * pJS.particles.number.value / pJS.particles.number.density.value_area,
          missing_particles = pJS.particles.array.length - nb_particles;
      missing_particles < 0 ? pJS.fn.modes.pushParticles(Math.abs(missing_particles)) : pJS.fn.modes.removeParticles(missing_particles)
    }
  }, pJS.fn.vendors.checkOverlap = function (p1, position) {
    for (var i = 0; i < pJS.particles.array.length; i++) {
      var p2 = pJS.particles.array[i], dx = p1.x - p2.x, dy = p1.y - p2.y;
      Math.sqrt(dx * dx + dy * dy) <= p1.radius + p2.radius && (p1.x = position ? position.x : Math.random() * pJS.canvas.w, p1.y = position ? position.y : Math.random() * pJS.canvas.h, pJS.fn.vendors.checkOverlap(p1))
    }
  }, pJS.fn.vendors.createSvgImg = function (p) {
    var svgXml                                                                                    = pJS.tmp.source_svg, rgbHex                                                       = /#([0-9A-F]{3,6})/gi,
        coloredSvgXml                                                                             = svgXml.replace(rgbHex, function (m, r, g, b) {
          if (p.color.rgb) var color_value = "rgba(" + p.color.rgb.r + "," + p.color.rgb.g + "," + p.color.rgb.b + "," + p.opacity + ")"; else var color_value = "hsla(" + p.color.hsl.h + "," + p.color.hsl.s + "%," + p.color.hsl.l + "%," + p.opacity + ")";
          return color_value
        }), svg                                                                                   = new Blob([coloredSvgXml], {type: "image/svg+xml;charset=utf-8"}),
        DOMURL = window.URL || window.webkitURL || window, url = DOMURL.createObjectURL(svg), img = new Image;
    img.addEventListener("load", function () {
      p.img.obj = img, p.img.loaded = !0, DOMURL.revokeObjectURL(url), pJS.tmp.count_svg++
    }), img.src = url
  }, pJS.fn.vendors.destroypJS = function () {
    cancelAnimationFrame(pJS.fn.drawAnimFrame), canvas_el.remove(), pJSDom = null
  }, pJS.fn.vendors.drawShape = function (c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {
    var sideCount            = sideCountNumerator * sideCountDenominator,
        decimalSides         = sideCountNumerator / sideCountDenominator,
        interiorAngleDegrees = 180 * (decimalSides - 2) / decimalSides,
        interiorAngle        = Math.PI - Math.PI * interiorAngleDegrees / 180;
    c.save(), c.beginPath(), c.translate(startX, startY), c.moveTo(0, 0);
    for (var i = 0; i < sideCount; i++) c.lineTo(sideLength, 0), c.translate(sideLength, 0), c.rotate(interiorAngle);
    c.fill(), c.restore()
  }, pJS.fn.vendors.exportImg = function () {
    window.open(pJS.canvas.el.toDataURL("image/png"), "_blank")
  }, pJS.fn.vendors.loadImg = function (type) {
    if (pJS.tmp.img_error = void 0, "" != pJS.particles.shape.image.src) if ("svg" == type) {
      var xhr = new XMLHttpRequest;
      xhr.open("GET", pJS.particles.shape.image.src), xhr.onreadystatechange = function (data) {
        4 == xhr.readyState && (200 == xhr.status ? (pJS.tmp.source_svg = data.currentTarget.response, pJS.fn.vendors.checkBeforeDraw()) : pJS.tmp.img_error = !0)
      }, xhr.send()
    } else {
      var img = new Image;
      img.addEventListener("load", function () {
        pJS.tmp.img_obj = img, pJS.fn.vendors.checkBeforeDraw()
      }), img.src = pJS.particles.shape.image.src
    } else pJS.tmp.img_error = !0
  }, pJS.fn.vendors.draw = function () {
    "image" == pJS.particles.shape.type ? "svg" == pJS.tmp.img_type ? pJS.tmp.count_svg >= pJS.particles.number.value ? (pJS.fn.particlesDraw(), pJS.particles.move.enable ? pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw) : cancelRequestAnimFrame(pJS.fn.drawAnimFrame)) : pJS.tmp.img_error || (pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw)) : void 0 != pJS.tmp.img_obj ? (pJS.fn.particlesDraw(), pJS.particles.move.enable ? pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw) : cancelRequestAnimFrame(pJS.fn.drawAnimFrame)) : pJS.tmp.img_error || (pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw)) : (pJS.fn.particlesDraw(), pJS.particles.move.enable ? pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw) : cancelRequestAnimFrame(pJS.fn.drawAnimFrame))
  }, pJS.fn.vendors.checkBeforeDraw = function () {
    "image" == pJS.particles.shape.type ? "svg" == pJS.tmp.img_type && void 0 == pJS.tmp.source_svg ? pJS.tmp.checkAnimFrame = requestAnimFrame(check) : (cancelRequestAnimFrame(pJS.tmp.checkAnimFrame), pJS.tmp.img_error || (pJS.fn.vendors.init(), pJS.fn.vendors.draw())) : (pJS.fn.vendors.init(), pJS.fn.vendors.draw())
  }, pJS.fn.vendors.init = function () {
    pJS.fn.retinaInit(), pJS.fn.canvasInit(), pJS.fn.canvasSize(), pJS.fn.canvasPaint(), pJS.fn.particlesCreate(), pJS.fn.vendors.densityAutoParticles(), pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color)
  }, pJS.fn.vendors.start = function () {
    isInArray("image", pJS.particles.shape.type) ? (pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3), pJS.fn.vendors.loadImg(pJS.tmp.img_type)) : pJS.fn.vendors.checkBeforeDraw()
  }, pJS.fn.vendors.eventsListeners(), pJS.fn.vendors.start()
};
Object.deepExtend = function (destination, source) {
  for (var property in source) source[property] && source[property].constructor && source[property].constructor === Object ? (destination[property] = destination[property] || {}, arguments.callee(destination[property], source[property])) : destination[property] = source[property];
  return destination
}, window.requestAnimFrame = function () {
  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
    window.setTimeout(callback, 1e3 / 60)
  }
}(), window.cancelRequestAnimFrame = function () {
  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || clearTimeout
}(), window.pJSDom = [], window.particlesJS = function (tag_id, params) {
  "string" != typeof tag_id && (params = tag_id, tag_id = "particles-js"), tag_id || (tag_id = "particles-js");
  var pJS_tag      = document.getElementById(tag_id),
      exist_canvas = pJS_tag.getElementsByClassName("particles-js-canvas-el");
  if (exist_canvas.length) for (; exist_canvas.length > 0;) pJS_tag.removeChild(exist_canvas[0]);
  var canvas_el = document.createElement("canvas");
  canvas_el.className = "particles-js-canvas-el", canvas_el.style.width = "100%", canvas_el.style.height = "100%", null != document.getElementById(tag_id).appendChild(canvas_el) && pJSDom.push(new pJS(tag_id, params))
}, window.particlesJS.load = function (tag_id, path_config_json, callback) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", path_config_json), xhr.onreadystatechange = function (data) {
    if (4 == xhr.readyState && 200 == xhr.status) {
      var params = JSON.parse(data.currentTarget.response);
      window.particlesJS(tag_id, params), callback && callback()
    }
  }, xhr.send()
}, angular.module("app").controller("recentUpgrades.controller", ["$scope", "$rootScope", "glob", "$stateParams", "$state", "$timeout", function ($scope, $rootScope, glob, $stateParams, $state, $timeout) {
  function priceSort(items) {
    return items.sort(function (a, b) {
      return b.price - a.price
    }), items
  }

  function parseUpgradeHistoryEntry(entry) {
    entry.timestamp = moment(entry.timestamp).valueOf(), priceSort(entry.from), priceSort(entry.to)
  }

  function onRecentUpgrade(upg) {
    function addEntry() {
      parseUpgradeHistoryEntry(upg), upg.timestamp = (new Date).valueOf(), upgradeHistory.unshift(upg), upgradeHistory = upgradeHistory.slice(0, 30), glob.upgradeHistory = upgradeHistory, upgradePaused || ($scope.upgradeHistory = upgradeHistory)
    }

    $rootScope.user && upg.user.steamId === $rootScope.user.steamId ? historyQ.run(addEntry) : addEntry()
  }

  var historyQ = glob.historyQ = new glob.delayedEx, upgradeHistory = [];
  glob.get("/api2/v1/upgrade/recent", null, function (resp) {
    resp && resp.length || !conf.dummy_data || (resp = testUpgradeHistory), upgradeHistory = resp, upgradeHistory.forEach(parseUpgradeHistoryEntry), glob.upgradeHistory = $scope.upgradeHistory = upgradeHistory
  }), socket.on("upgrade/recent", onRecentUpgrade);
  var upgradePaused = !1;
  $timeout(function () {
    var upgHistoryEl = $(".recent_upgrades .entries");
    if (upgHistoryEl.length) {
      upgHistoryEl.hover(function () {
        upgradePaused = !0, $scope.upgradeHistory = $.extend(!0, [], upgradeHistory)
      }, function () {
        upgradePaused = !1, $scope.upgradeHistory = upgradeHistory, $scope.$apply(), upgHistoryEl[0].scrollTo(0, 0)
      })
    }
  })
}]), angular.module("app").config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.ref", {
    url:                "/r/:refCode",
    templateUrl:        "ref/views/ref.tpl.html",
    controller:         "ref.controller",
    nologin:            !0,
    noanalytics:        !0,
    withRecentUpgrades: !0
  })
}]), angular.module("app").controller("ref.controller", ["$scope", "$rootScope", "glob", "$stateParams", "$state", function ($scope, $rootScope, glob, $stateParams, $state) {
  $scope.refCode = $stateParams.refCode, ~["bing", "google", "facebook"].indexOf($scope.refCode) || (ga("set", "campaignSource", "affiliate"), ga("set", "campaignName", $scope.refCode)), ga("set", "page", $state.current.url), ga("send", "pageview"), $scope.redeemRefCode = function () {
    glob.post("/api2/v1/user/referral", {code: $scope.refCode}, function () {
      glob.printsuccess("ref_code_success"), getGame(), $state.go("app.home")
    }, function () {
      $state.go("app.home")
    })
  }
}]), angular.module("rewards.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.rewards", {
    url:         "/rewards",
    templateUrl: "rewards/views/rewards.tpl.html",
    controller:  "rewards.controller",
    scope:       {}
  })
}]), angular.module("rewards.controller", []).controller("rewards.controller", ["$scope", "$rootScope", "$filter", "$http", "glob", function ($scope, $rootScope, $filter, $http, glob) {
  $rootScope.title = "Rewards | Bolt.gg", $scope.glob = glob, $scope.verifyEmail = function (email) {
    glob.post("/account/sendVerifyEmail", {email: email}, function (resp) {
      glob.printsuccess("email_verification_sent")
    })
  }, $scope.checkGroup = function () {
    glob.post("/account/checkSteamGroupMembership", null, function (resp) {
      glob.printsuccess("success")
    })
  }
}]), angular.module("rewards", ["rewards.config", "rewards.controller"]), angular.module("settings.controller", []).controller("settings.controller", ["$scope", "$rootScope", "$http", "$filter", "$timeout", "settingsService", "userService", "translateService", "glob", function ($scope, $rootScope, $http, $filter, $timeout, settingsService, userService, translateService, glob) {
  $scope.settings = settingsService.settings, $scope.glob = glob, $scope.save = function () {
    $scope.settings.tradeUrl.length > 0 && -1 == $scope.settings.tradeUrl.indexOf("steamcommunity.com/tradeoffer/new") ? $rootScope.growl.warning($filter("translate")("settings_success")) : settingsService.saveData($scope.settings)
  }, $rootScope.user && !$rootScope.user.locale && $http({
    method: "GET",
    url:    "http://ip-api.com/json"
  }).then(function (res) {
    "Russia" == res.data.country ? (translateService.changeLang("ru"), settingsService.saveData({locale: "ru"}, !0)) : "Poland" == res.data.country || "Slovakia" == res.data.country || "Czech Republic" == res.data.country || "Ukraine" == res.data.country ? (translateService.changeLang("pl"), settingsService.saveData({locale: "pl"}, !0)) : (translateService.changeLang("en-US"), settingsService.saveData({locale: "en-US"}, !0))
  }), $scope.saveSeed = function (seed, form) {
    glob.post("/dice/setClientSeed", {clientSeed: seed}, function (resp) {
      glob.printsuccess("seed_updated"), form.$setPristine()
    })
  }, $scope.calcLevelFraction = function () {
    var exp = $rootScope.user.roleInfo.exp, low = $rootScope.user.roleInfo.lowerRange,
        high                                    = $rootScope.user.roleInfo.upperRange;
    return exp > high && (exp = high), (exp - low) / (high - low)
  }
}]), angular.module("settings.directive", []).directive("settings", function () {
  return {
    restrict:    "E",
    replace:     "true",
    controller:  "settings.controller",
    templateUrl: "settings/views/settings.tpl.html",
    scope:       {}
  }
}), angular.module("settings", ["settings.controller", "settings.directive"]), angular.module("settings.service", []).factory("settingsService", ["$rootScope", "$http", "userService", "$filter", function ($rootScope, $http, userService, $filter) {
  function setData() {
    $rootScope.user && ($rootScope.user.bio && (settingsService.settings.bio = $rootScope.user.bio), $rootScope.user.tradeUrl && (settingsService.settings.tradeUrl = $rootScope.user.tradeUrl), $rootScope.user.locale && (settingsService.settings.locale = $rootScope.user.locale), $rootScope.user.thousands && (settingsService.settings.thousands = $rootScope.user.thousands), $rootScope.user.notify && (settingsService.settings.notify = $rootScope.user.notify), $rootScope.user.themePath && (settingsService.settings.themePath = $rootScope.user.themePath), $rootScope.user.clientSeed && (settingsService.settings.clientSeed = $rootScope.user.clientSeed))
  }

  var settingsService = {
    settings: {
      tradeUrl:  "",
      bio:       "",
      locale:    "en-US",
      thousands: !1,
      notify:    "on",
      themePath: "/css/app.css"
    }
  };
  return $rootScope.userAuthed && setData(), settingsService.saveData = function (data, res) {
    $http({method: "POST", url: "/account/setAccountData", data: data}).then(function (response) {
      response.data.result && !res && $rootScope.growl.success("Settings Saved!"), ga("send", "event", "account", "settings_saved"), userService.getAccountData().then(function () {
        setData()
      })
    }, function (response) {
      $rootScope.growl.warning($filter("translate")(response.data))
    })
  }, settingsService
}]), angular.module("sidebar.controller", []).controller("sidebar.controller", ["$scope", "$rootScope", "$timeout", "settingsService", "userService", "glob", function ($scope, $rootScope, $timeout, settingsService, userService, glob) {
  function closeIfMobile() {
    $rootScope.win_width <= glob.tablet_width && ($scope.sidebarView = $rootScope.sidebarView = "none")
  }

  $scope.onSociety = $rootScope.onSociety = !0, $rootScope.sidebarOpen = !1, $scope.sidebarView = "chat", $scope.$watch("$root.sidebarView", function () {
    "chat" == $rootScope.sidebarView && $timeout(function () {
      $rootScope.$broadcast("chatUpdate")
    }, 1), "none" != $rootScope.sidebarView ? $rootScope.sidebarOpen = !0 : $rootScope.sidebarOpen = !1
  }), $scope.toggle = glob.toggleSidebar = function (view) {
    $scope.sidebarView == view ? $scope.sidebarView = "none" : $scope.sidebarView = view, glob.sidebarView = $rootScope.sidebarView = $scope.sidebarView, "settings" == $scope.sidebarView && userService.getAccountData()
  }, $("html").click(function () {
    $scope.gameList && $timeout(function () {
      $scope.gameList = !1, $rootScope.user.viewedGames || settingsService.saveData({viewedGames: !0}, !0)
    })
  }), $("#gameMenu").click(function (event) {
    event.stopPropagation()
  }), closeIfMobile(), $rootScope.$on("$stateChangeSuccess", function (event, toState, toParams, fromState, fromParams) {
    closeIfMobile()
  }), function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? "http" : "https";
    d.getElementById(id) || (js = d.createElement(s), js.id = id, js.src = p + "://platform.twitter.com/widgets.js", fjs.parentNode.insertBefore(js, fjs))
  }(document, "script", "twitter-wjs")
}]), angular.module("sidebar.directive", []).directive("sidebar", function () {
  return {
    restrict:    "E",
    replace:     "true",
    controller:  "sidebar.controller",
    templateUrl: "sidebar/views/sidebar.tpl.html"
  }
}), angular.module("sidebar", ["sidebar.directive", "sidebar.controller"]), conf.itemTypes = {
  730: [{
    heading: "Knives",
    types:   ["Bayonet", "Bowie Knife", "Butterfly Knife", "Falchion Knife", "Flip Knife", "Gut Knife", "Huntsman Knife", "Karambit", "M9 Bayonet", "Shadow Daggers"]
  }, {
    heading: "Pistols",
    types:   ["CZ75-Auto", "Desert Eagle", "Dual Berettas", "Five-SeveN", "Glock-18", "P2000", "P250", "R8 Revolver", "Tec-9", "USP-S"]
  }, {heading: "Rifles", types: ["AK-47", "AUG", "FAMAS", "Galil AR", "M4A1-S", "M4A4", "SG 553"]}, {
    heading: "SMGs",
    types:   ["MAC-10", "MP7", "MP9", "P90", "PP-Bizon", "UMP-45"]
  }, {heading: "Shotguns", types: ["MAG-7", "Nova", "Sawed-Off", "XM1014"]}, {
    heading: "Sniper Rifles",
    types:   ["AWP", "G3SG1", "SCAR-20", "SSG 08"]
  }, {heading: "Machine Guns", types: ["M249", "Negev"]}],
  440: [{
    heading: null,
    types:   ["Cosmetic"]
  }, {heading: null, types: ["Other"]}, {
    heading: "Classes",
    types:   ["Scout", "Sniper", "Soldier", "Demoman", "Medic", "Heavy", "Pyro", "Spy", "Engineer"]
  }],
  570: [{
    heading: null,
    types:   ["Other"]
  }, {
    heading: "Heroes",
    types:   ["Anti-Mage", "Axe", "Bane", "Bloodseeker", "Crystal Maiden", "Drow Ranger", "Earthshaker", "Juggernaut", "Mirana", "Shadow Fiend", "Morphling", "Phantom Lancer", "Puck", "Pudge", "Razor", "Sand King", "Storm Spirit", "Sven", "Tiny", "Vengeful Spirit", "Windranger", "Zeus", "Kunkka", "Lina", "Lich", "Lion", "Shadow Shaman", "Slardar", "Tidehunter", "Witch Doctor", "Riki", "Enigma", "Tinker", "Sniper", "Necrophos", "Warlock", "Beastmaster", "Queen of Pain", "Venomancer", "Faceless Void", "Skeleton King", "Death Prophet", "Phantom Assassin", "Pugna", "Templar Assassin", "Viper", "Luna", "Dragon Knight", "Dazzle", "Clockwerk", "Leshrac", "Nature's Prophet", "Lifestealer", "Dark Seer", "Clinkz", "Omniknight", "Enchantress", "Huskar", "Night Stalker", "Broodmother", "Bounty Hunter", "Weaver", "Jakiro", "Batrider", "Chen", "Spectre", "Doom", "Ancient Apparition", "Ursa", "Spirit Breaker", "Gyrocopter", "Alchemist", "Invoker", "Silencer", "Outworld Devourer", "Lycanthrope", "Brewmaster", "Shadow Demon", "Lone Druid", "Chaos Knight", "Meepo", "Treant Protector", "Ogre Magi", "Undying", "Rubick", "Disruptor", "Nyx Assassin", "Naga Siren", "Keeper of the Light", "Wisp", "Visage", "Slark", "Medusa", "Troll Warlord", "Centaur Warrunner", "Magnus", "Timbersaw", "Bristleback", "Tusk", "Skywrath Mage", "Abaddon", "Elder Titan", "Legion Commander", "Ember Spirit", "Earth Spirit", "Abyssal Underlord", "Terrorblade", "Phoenix", "Techies", "Oracle", "Winter Wyvern", "Arc Warden"]
  }]
}, function (e) {
  if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
    var t;
    t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, t.store = e()
  }
}(function () {
  var define, module, exports;
  return function e(t, n, r) {
    function o(u, a) {
      if (!n[u]) {
        if (!t[u]) {
          var c = "function" == typeof require && require;
          if (!a && c) return c(u, !0);
          if (i) return i(u, !0);
          var f = new Error("Cannot find module '" + u + "'");
          throw f.code = "MODULE_NOT_FOUND", f
        }
        var s = n[u] = {exports: {}};
        t[u][0].call(s.exports, function (e) {
          var n = t[u][1][e];
          return o(n || e)
        }, s, s.exports, e, t, n, r)
      }
      return n[u].exports
    }

    for (var i = "function" == typeof require && require, u = 0; u < r.length; u++) o(r[u]);
    return o
  }({
    1:  [function (e, t, n) {
      "use strict";
      var r     = e("../src/store-engine"), o = e("../storages/all"), i = [e("../plugins/json2")];
      t.exports = r.createStore(o, i)
    }, {"../plugins/json2": 2, "../src/store-engine": 4, "../storages/all": 6}],
    2:  [function (e, t, n) {
      "use strict";

      function r() {
        return e("./lib/json2"), {}
      }

      t.exports = r
    }, {"./lib/json2": 3}],
    3:  [function (require, module, exports) {
      "use strict";
      var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
      };
      "object" !== ("undefined" == typeof JSON ? "undefined" : _typeof(JSON)) && (JSON = {}), function () {
        function f(e) {
          return e < 10 ? "0" + e : e
        }

        function this_value() {
          return this.valueOf()
        }

        function quote(e) {
          return rx_escapable.lastIndex = 0, rx_escapable.test(e) ? '"' + e.replace(rx_escapable, function (e) {
            var t = meta[e];
            return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
          }) + '"' : '"' + e + '"'
        }

        function str(e, t) {
          var n, r, o, i, u, a = gap, c = t[e];
          switch (c && "object" === (void 0 === c ? "undefined" : _typeof(c)) && "function" == typeof c.toJSON && (c = c.toJSON(e)), "function" == typeof rep && (c = rep.call(t, e, c)), void 0 === c ? "undefined" : _typeof(c)) {
            case"string":
              return quote(c);
            case"number":
              return isFinite(c) ? String(c) : "null";
            case"boolean":
            case"null":
              return String(c);
            case"object":
              if (!c) return "null";
              if (gap += indent, u = [], "[object Array]" === Object.prototype.toString.apply(c)) {
                for (i = c.length, n = 0; n < i; n += 1) u[n] = str(n, c) || "null";
                return o = 0 === u.length ? "[]" : gap ? "[\n" + gap + u.join(",\n" + gap) + "\n" + a + "]" : "[" + u.join(",") + "]", gap = a, o
              }
              if (rep && "object" === (void 0 === rep ? "undefined" : _typeof(rep))) for (i = rep.length, n = 0; n < i; n += 1) "string" == typeof rep[n] && (r = rep[n], (o = str(r, c)) && u.push(quote(r) + (gap ? ": " : ":") + o)); else for (r in c) Object.prototype.hasOwnProperty.call(c, r) && (o = str(r, c)) && u.push(quote(r) + (gap ? ": " : ":") + o);
              return o = 0 === u.length ? "{}" : gap ? "{\n" + gap + u.join(",\n" + gap) + "\n" + a + "}" : "{" + u.join(",") + "}", gap = a, o
          }
        }

        var rx_one = /^[\],:{}\s]*$/, rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
            rx_three                         = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
            rx_four                          = /(?:^|:|,)(?:\s*\[)+/g,
            rx_escapable                     = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            rx_dangerous                     = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
        "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function () {
          return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
        }, Boolean.prototype.toJSON = this_value, Number.prototype.toJSON = this_value, String.prototype.toJSON = this_value);
        var gap, indent, meta, rep;
        "function" != typeof JSON.stringify && (meta = {
          "\b": "\\b",
          "\t": "\\t",
          "\n": "\\n",
          "\f": "\\f",
          "\r": "\\r",
          '"':  '\\"',
          "\\": "\\\\"
        }, JSON.stringify = function (e, t, n) {
          var r;
          if (gap = "", indent = "", "number" == typeof n) for (r = 0; r < n; r += 1) indent += " "; else "string" == typeof n && (indent = n);
          if (rep = t, t && "function" != typeof t && ("object" !== (void 0 === t ? "undefined" : _typeof(t)) || "number" != typeof t.length)) throw new Error("JSON.stringify");
          return str("", {"": e})
        }), "function" != typeof JSON.parse && (JSON.parse = function (text, reviver) {
          function walk(e, t) {
            var n, r, o = e[t];
            if (o && "object" === (void 0 === o ? "undefined" : _typeof(o))) for (n in o) Object.prototype.hasOwnProperty.call(o, n) && (r = walk(o, n), void 0 !== r ? o[n] = r : delete o[n]);
            return reviver.call(e, t, o)
          }

          var j;
          if (text = String(text), rx_dangerous.lastIndex = 0, rx_dangerous.test(text) && (text = text.replace(rx_dangerous, function (e) {
              return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
            })), rx_one.test(text.replace(rx_two, "@").replace(rx_three, "]").replace(rx_four, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({"": j}, "") : j;
          throw new SyntaxError("JSON.parse")
        })
      }()
    }, {}],
    4:  [function (e, t, n) {
      "use strict";

      function r() {
        var e = "undefined" == typeof console ? null : console;
        if (e) {
          (e.warn ? e.warn : e.log).apply(e, arguments)
        }
      }

      function o(e, t, n) {
        n || (n = ""), e && !l(e) && (e = [e]), t && !l(t) && (t = [t]);
        var o = n ? "__storejs_" + n + "_" : "", i = n ? new RegExp("^" + o) : null;
        if (!/^[a-zA-Z0-9_\-]*$/.test(n)) throw new Error("store.js namespaces can only have alphanumerics + underscores and dashes");
        var h = {
          _namespacePrefix:       o, _namespaceRegexp: i, _testStorage: function (e) {
            try {
              var t = "__storejs__test__";
              e.write(t, t);
              var n = e.read(t) === t;
              return e.remove(t), n
            } catch (r) {
              return !1
            }
          }, _assignPluginFnProp: function (e, t) {
            var n   = this[t];
            this[t] = function () {
              function t() {
                if (n) return c(arguments, function (e, t) {
                  r[t] = e
                }), n.apply(o, r)
              }

              var r = u(arguments, 0), o = this, i = [t].concat(r);
              return e.apply(o, i)
            }
          }, _serialize:          function (e) {
            return JSON.stringify(e)
          }, _deserialize:        function (e, t) {
            if (!e) return t;
            var n = "";
            try {
              n = JSON.parse(e)
            } catch (r) {
              n = e
            }
            return void 0 !== n ? n : t
          }, _addStorage:         function (e) {
            this.enabled || this._testStorage(e) && (this.storage = e, this.enabled = !0)
          }, _addPlugin:          function (e) {
            var t = this;
            if (l(e)) return void c(e, function (e) {
              t._addPlugin(e)
            });
            if (!a(this.plugins, function (t) {
                return e === t
              })) {
              if (this.plugins.push(e), !p(e)) throw new Error("Plugins must be function values that return objects");
              var r = e.call(this);
              if (!d(r)) throw new Error("Plugins must return an object of function properties");
              c(r, function (n, r) {
                if (!p(n)) throw new Error("Bad plugin property: " + r + " from plugin " + e.name + ". Plugins should only return functions.");
                t._assignPluginFnProp(n, r)
              })
            }
          }, addStorage:          function (e) {
            r("store.addStorage(storage) is deprecated. Use createStore([storages])"), this._addStorage(e)
          }
        }, m  = s(h, g, {plugins: []});
        return m.raw = {}, c(m, function (e, t) {
          p(e) && (m.raw[t] = f(m, e))
        }), c(e, function (e) {
          m._addStorage(e)
        }), c(t, function (e) {
          m._addPlugin(e)
        }), m
      }

      var i = e("./util"), u = i.slice, a = i.pluck, c = i.each, f = i.bind, s = i.create, l = i.isList,
          p                                                                                  = i.isFunction, d                                                                = i.isObject;
      t.exports                                                                              = {createStore: o};
      var g                                                                                  = {
        version:         "2.0.12", enabled: !1, get: function (e, t) {
          var n = this.storage.read(this._namespacePrefix + e);
          return this._deserialize(n, t)
        }, set:          function (e, t) {
          return void 0 === t ? this.remove(e) : (this.storage.write(this._namespacePrefix + e, this._serialize(t)), t)
        }, remove:       function (e) {
          this.storage.remove(this._namespacePrefix + e)
        }, each:         function (e) {
          var t = this;
          this.storage.each(function (n, r) {
            e.call(t, t._deserialize(n), (r || "").replace(t._namespaceRegexp, ""))
          })
        }, clearAll:     function () {
          this.storage.clearAll()
        }, hasNamespace: function (e) {
          return this._namespacePrefix == "__storejs_" + e + "_"
        }, createStore:  function () {
          return o.apply(this, arguments)
        }, addPlugin:    function (e) {
          this._addPlugin(e)
        }, namespace:    function (e) {
          return o(this.storage, this.plugins, e)
        }
      }
    }, {"./util": 5}],
    5:  [function (e, t, n) {
      (function (e) {
        "use strict";

        function i(e, t) {
          return function () {
            return t.apply(e, Array.prototype.slice.call(arguments, 0))
          }
        }

        function u(e, t) {
          return Array.prototype.slice.call(e, t || 0)
        }

        function a(e, t) {
          f(e, function (e, n) {
            return t(e, n), !1
          })
        }

        function c(e, t) {
          var n = s(e) ? [] : {};
          return f(e, function (e, r) {
            return n[r] = t(e, r), !1
          }), n
        }

        function f(e, t) {
          if (s(e)) {
            for (var n = 0; n < e.length; n++) if (t(e[n], n)) return e[n]
          } else for (var r in e) if (e.hasOwnProperty(r) && t(e[r], r)) return e[r]
        }

        function s(e) {
          return null != e && "function" != typeof e && "number" == typeof e.length
        }

        function l(e) {
          return e && "[object Function]" === {}.toString.call(e)
        }

        function p(e) {
          return e && "[object Object]" === {}.toString.call(e)
        }

        var d     = function () {
          return Object.assign ? Object.assign : function (e, t, n, r) {
            for (var o = 1; o < arguments.length; o++) a(Object(arguments[o]), function (t, n) {
              e[n] = t
            });
            return e
          }
        }(), g    = function () {
          if (Object.create) return function (e, t, n, r) {
            var o = u(arguments, 1);
            return d.apply(this, [Object.create(e)].concat(o))
          };
          var e = function () {
          };
          return function (t, n, r, o) {
            var i = u(arguments, 1);
            return e.prototype = t, d.apply(this, [new e].concat(i))
          }
        }(), v    = function () {
          return String.prototype.trim ? function (e) {
            return String.prototype.trim.call(e)
          } : function (e) {
            return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
          }
        }(), h    = "undefined" != typeof window ? window : e;
        t.exports = {
          assign:     d,
          create:     g,
          trim:       v,
          bind:       i,
          slice:      u,
          each:       a,
          map:        c,
          pluck:      f,
          isList:     s,
          isFunction: l,
          isObject:   p,
          Global:     h
        }
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    6:  [function (e, t, n) {
      "use strict";
      t.exports = [e("./localStorage"), e("./oldFF-globalStorage"), e("./oldIE-userDataStorage"), e("./cookieStorage"), e("./sessionStorage"), e("./memoryStorage")]
    }, {
      "./cookieStorage":         7,
      "./localStorage":          8,
      "./memoryStorage":         9,
      "./oldFF-globalStorage":   10,
      "./oldIE-userDataStorage": 11,
      "./sessionStorage":        12
    }],
    7:  [function (e, t, n) {
      "use strict";

      function r(e) {
        if (!e || !c(e)) return null;
        var t = "(?:^|.*;\\s*)" + escape(e).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";
        return unescape(p.cookie.replace(new RegExp(t), "$1"))
      }

      function o(e) {
        for (var t = p.cookie.split(/; ?/g), n = t.length - 1; n >= 0; n--) if (l(t[n])) {
          var r = t[n].split("="), o = unescape(r[0]), i = unescape(r[1]);
          e(i, o)
        }
      }

      function i(e, t) {
        e && (p.cookie = escape(e) + "=" + escape(t) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/")
      }

      function u(e) {
        e && c(e) && (p.cookie = escape(e) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")
      }

      function a() {
        o(function (e, t) {
          u(t)
        })
      }

      function c(e) {
        return new RegExp("(?:^|;\\s*)" + escape(e).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=").test(p.cookie)
      }

      var f     = e("../src/util"), s = f.Global, l = f.trim;
      t.exports = {name: "cookieStorage", read: r, write: i, each: o, remove: u, clearAll: a};
      var p     = s.document
    }, {"../src/util": 5}],
    8:  [function (e, t, n) {
      "use strict";

      function r() {
        return s.localStorage
      }

      function o(e) {
        return r().getItem(e)
      }

      function i(e, t) {
        return r().setItem(e, t)
      }

      function u(e) {
        for (var t = r().length - 1; t >= 0; t--) {
          var n = r().key(t);
          e(o(n), n)
        }
      }

      function a(e) {
        return r().removeItem(e)
      }

      function c() {
        return r().clear()
      }

      var f     = e("../src/util"), s = f.Global;
      t.exports = {name: "localStorage", read: o, write: i, each: u, remove: a, clearAll: c}
    }, {"../src/util": 5}],
    9:  [function (e, t, n) {
      "use strict";

      function r(e) {
        return c[e]
      }

      function o(e, t) {
        c[e] = t
      }

      function i(e) {
        for (var t in c) c.hasOwnProperty(t) && e(c[t], t)
      }

      function u(e) {
        delete c[e]
      }

      function a(e) {
        c = {}
      }

      t.exports = {name: "memoryStorage", read: r, write: o, each: i, remove: u, clearAll: a};
      var c     = {}
    }, {}],
    10: [function (e, t, n) {
      "use strict";

      function r(e) {
        return s[e]
      }

      function o(e, t) {
        s[e] = t
      }

      function i(e) {
        for (var t = s.length - 1; t >= 0; t--) {
          var n = s.key(t);
          e(s[n], n)
        }
      }

      function u(e) {
        return s.removeItem(e)
      }

      function a() {
        i(function (e, t) {
          delete s[e]
        })
      }

      var c     = e("../src/util"), f = c.Global;
      t.exports = {name: "oldFF-globalStorage", read: r, write: o, each: i, remove: u, clearAll: a};
      var s     = f.globalStorage
    }, {"../src/util": 5}],
    11: [function (e, t, n) {
      "use strict";

      function r(e, t) {
        if (!v) {
          var n = c(e);
          g(function (e) {
            e.setAttribute(n, t), e.save(p)
          })
        }
      }

      function o(e) {
        if (!v) {
          var t = c(e), n = null;
          return g(function (e) {
            n = e.getAttribute(t)
          }), n
        }
      }

      function i(e) {
        g(function (t) {
          for (var n = t.XMLDocument.documentElement.attributes, r = n.length - 1; r >= 0; r--) {
            var o = n[r];
            e(t.getAttribute(o.name), o.name)
          }
        })
      }

      function u(e) {
        var t = c(e);
        g(function (e) {
          e.removeAttribute(t), e.save(p)
        })
      }

      function a() {
        g(function (e) {
          var t = e.XMLDocument.documentElement.attributes;
          e.load(p);
          for (var n = t.length - 1; n >= 0; n--) e.removeAttribute(t[n].name);
          e.save(p)
        })
      }

      function c(e) {
        return e.replace(/^\d/, "___$&").replace(h, "___")
      }

      var s                                = e("../src/util"), l = s.Global;
      t.exports                            = {name: "oldIE-userDataStorage", write: r, read: o, each: i, remove: u, clearAll: a};
      var p = "storejs", d = l.document, g = function () {
            if (!d || !d.documentElement || !d.documentElement.addBehavior) return null;
            var e, t, n, r = "script";
            try {
              t = new ActiveXObject("htmlfile"), t.open(), t.write("<" + r + ">document.w=window</" + r + '><iframe src="/favicon.ico"></iframe>'), t.close(), e = t.w.frames[0].document, n = e.createElement("div")
            } catch (o) {
              n = d.createElement("div"), e = d.body
            }
            return function (t) {
              var r = [].slice.call(arguments, 0);
              r.unshift(n), e.appendChild(n), n.addBehavior("#default#userData"), n.load(p), t.apply(this, r), e.removeChild(n)
            }
          }(), v                           = (l.navigator ? l.navigator.userAgent : "").match(/ (MSIE 8|MSIE 9|MSIE 10)\./),
          h                                = new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]", "g")
    }, {"../src/util": 5}],
    12: [function (e, t, n) {
      "use strict";

      function r() {
        return s.sessionStorage
      }

      function o(e) {
        return r().getItem(e)
      }

      function i(e, t) {
        return r().setItem(e, t)
      }

      function u(e) {
        for (var t = r().length - 1; t >= 0; t--) {
          var n = r().key(t);
          e(o(n), n)
        }
      }

      function a(e) {
        return r().removeItem(e)
      }

      function c() {
        return r().clear()
      }

      var f     = e("../src/util"), s = f.Global;
      t.exports = {name: "sessionStorage", read: o, write: i, each: u, remove: a, clearAll: c}
    }, {"../src/util": 5}]
  }, {}, [1])(1)
}), function (window, undefined) {
  "use strict";
  var MODEL = "model", NAME = "name", TYPE = "type", VENDOR = "vendor", VERSION = "version", MOBILE = "mobile",
      TABLET                                                                                        = "tablet", util                                                                       = {
        extend:      function (regexes, extensions) {
          var margedRegexes = {};
          for (var i in regexes) extensions[i] && extensions[i].length % 2 == 0 ? margedRegexes[i] = extensions[i].concat(regexes[i]) : margedRegexes[i] = regexes[i];
          return margedRegexes
        }, has:      function (str1, str2) {
          return "string" == typeof str1 && -1 !== str2.toLowerCase().indexOf(str1.toLowerCase())
        }, lowerize: function (str) {
          return str.toLowerCase()
        }, major:    function (version) {
          return "string" == typeof version ? version.replace(/[^\d\.]/g, "").split(".")[0] : void 0
        }, trim:     function (str) {
          return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
        }
      }, mapper                                                                                     = {
        rgx:    function (ua, arrays) {
          for (var j, k, p, q, matches, match, i = 0; i < arrays.length && !matches;) {
            var regex = arrays[i], props = arrays[i + 1];
            for (j = k = 0; j < regex.length && !matches;) if (matches = regex[j++].exec(ua)) for (p = 0; p < props.length; p++) match = matches[++k], q = props[p], "object" == typeof q && q.length > 0 ? 2 == q.length ? "function" == typeof q[1] ? this[q[0]] = q[1].call(this, match) : this[q[0]] = q[1] : 3 == q.length ? "function" != typeof q[1] || q[1].exec && q[1].test ? this[q[0]] = match ? match.replace(q[1], q[2]) : void 0 : this[q[0]] = match ? q[1].call(this, match, q[2]) : void 0 : 4 == q.length && (this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : void 0) : this[q] = match || void 0;
            i += 2
          }
        }, str: function (str, map) {
          for (var i in map) if ("object" == typeof map[i] && map[i].length > 0) {
            for (var j = 0; j < map[i].length; j++) if (util.has(map[i][j], str)) return "?" === i ? void 0 : i
          } else if (util.has(map[i], str)) return "?" === i ? void 0 : i;
          return str
        }
      }, maps                                                                                       = {
        browser: {
          oldsafari: {
            version: {
              "1.0":   "/8",
              1.2:     "/1",
              1.3:     "/3",
              "2.0":   "/412",
              "2.0.2": "/416",
              "2.0.3": "/417",
              "2.0.4": "/419",
              "?":     "/"
            }
          }
        },
        device:  {
          amazon: {model: {"Fire Phone": ["SD", "KF"]}},
          sprint: {model: {"Evo Shift 4G": "7373KT"}, vendor: {HTC: "APA", Sprint: "Sprint"}}
        },
        os:      {
          windows: {
            version: {
              ME:        "4.90",
              "NT 3.11": "NT3.51",
              "NT 4.0":  "NT4.0",
              2e3:       "NT 5.0",
              XP:        ["NT 5.1", "NT 5.2"],
              Vista:     "NT 6.0",
              7:         "NT 6.1",
              8:         "NT 6.2",
              8.1:       "NT 6.3",
              10:        ["NT 6.4", "NT 10.0"],
              RT:        "ARM"
            }
          }
        }
      }, regexes                                                                                    = {
        browser: [[/(opera\smini)\/([\w\.-]+)/i, /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i, /(opera).+version\/([\w\.]+)/i, /(opera)[\/\s]+([\w\.]+)/i], [NAME, VERSION], [/(opios)[\/\s]+([\w\.]+)/i], [[NAME, "Opera Mini"], VERSION], [/\s(opr)\/([\w\.]+)/i], [[NAME, "Opera"], VERSION], [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i, /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i, /(?:ms|\()(ie)\s([\w\.]+)/i, /(rekonq)\/([\w\.]+)*/i, /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser)\/([\w\.-]+)/i], [NAME, VERSION], [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i], [[NAME, "IE"], VERSION], [/(edge)\/((\d+)?[\w\.]+)/i], [NAME, VERSION], [/(yabrowser)\/([\w\.]+)/i], [[NAME, "Yandex"], VERSION], [/(puffin)\/([\w\.]+)/i], [[NAME, "Puffin"], VERSION], [/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i], [[NAME, "UCBrowser"], VERSION], [/(comodo_dragon)\/([\w\.]+)/i], [[NAME, /_/g, " "], VERSION], [/(micromessenger)\/([\w\.]+)/i], [[NAME, "WeChat"], VERSION], [/(QQ)\/([\d\.]+)/i], [NAME, VERSION], [/m?(qqbrowser)[\/\s]?([\w\.]+)/i], [NAME, VERSION], [/xiaomi\/miuibrowser\/([\w\.]+)/i], [VERSION, [NAME, "MIUI Browser"]], [/;fbav\/([\w\.]+);/i], [VERSION, [NAME, "Facebook"]], [/headlesschrome(?:\/([\w\.]+)|\s)/i], [VERSION, [NAME, "Chrome Headless"]], [/\swv\).+(chrome)\/([\w\.]+)/i], [[NAME, /(.+)/, "$1 WebView"], VERSION], [/((?:oculus|samsung)browser)\/([\w\.]+)/i], [[NAME, /(.+(?:g|us))(.+)/, "$1 $2"], VERSION], [/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i], [VERSION, [NAME, "Android Browser"]], [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i], [NAME, VERSION], [/(dolfin)\/([\w\.]+)/i], [[NAME, "Dolphin"], VERSION], [/((?:android.+)crmo|crios)\/([\w\.]+)/i], [[NAME, "Chrome"], VERSION], [/(coast)\/([\w\.]+)/i], [[NAME, "Opera Coast"], VERSION], [/fxios\/([\w\.-]+)/i], [VERSION, [NAME, "Firefox"]], [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i], [VERSION, [NAME, "Mobile Safari"]], [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i], [VERSION, NAME], [/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i], [[NAME, "GSA"], VERSION], [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [/(konqueror)\/([\w\.]+)/i, /(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [/(navigator|netscape)\/([\w\.-]+)/i], [[NAME, "Netscape"], VERSION], [/(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i, /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i, /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i, /(links)\s\(([\w\.]+)/i, /(gobrowser)\/?([\w\.]+)*/i, /(ice\s?browser)\/v?([\w\._]+)/i, /(mosaic)[\/\s]([\w\.]+)/i], [NAME, VERSION]],
        cpu:     [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i], [["architecture", "amd64"]], [/(ia32(?=;))/i], [["architecture", util.lowerize]], [/((?:i[346]|x)86)[;\)]/i], [["architecture", "ia32"]], [/windows\s(ce|mobile);\sppc;/i], [["architecture", "arm"]], [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i], [["architecture", /ower/, "", util.lowerize]], [/(sun4\w)[;\)]/i], [["architecture", "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i], [["architecture", util.lowerize]]],
        device:  [[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i], [MODEL, VENDOR, [TYPE, TABLET]], [/applecoremedia\/[\w\.]+ \((ipad)/], [MODEL, [VENDOR, "Apple"], [TYPE, TABLET]], [/(apple\s{0,1}tv)/i], [[MODEL, "Apple TV"], [VENDOR, "Apple"]], [/(archos)\s(gamepad2?)/i, /(hp).+(touchpad)/i, /(hp).+(tablet)/i, /(kindle)\/([\w\.]+)/i, /\s(nook)[\w\s]+build\/(\w+)/i, /(dell)\s(strea[kpr\s\d]*[\dko])/i], [VENDOR, MODEL, [TYPE, TABLET]], [/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i], [MODEL, [VENDOR, "Amazon"], [TYPE, TABLET]], [/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, "Amazon"], [TYPE, MOBILE]], [/\((ip[honed|\s\w*]+);.+(apple)/i], [MODEL, VENDOR, [TYPE, MOBILE]], [/\((ip[honed|\s\w*]+);/i], [MODEL, [VENDOR, "Apple"], [TYPE, MOBILE]], [/(blackberry)[\s-]?(\w+)/i, /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i, /(hp)\s([\w\s]+\w)/i, /(asus)-?(\w+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/\(bb10;\s(\w+)/i], [MODEL, [VENDOR, "BlackBerry"], [TYPE, MOBILE]], [/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i], [MODEL, [VENDOR, "Asus"], [TYPE, TABLET]], [/(sony)\s(tablet\s[ps])\sbuild\//i, /(sony)?(?:sgp.+)\sbuild\//i], [[VENDOR, "Sony"], [MODEL, "Xperia Tablet"], [TYPE, TABLET]], [/android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\//i], [MODEL, [VENDOR, "Sony"], [TYPE, MOBILE]], [/\s(ouya)\s/i, /(nintendo)\s([wids3u]+)/i], [VENDOR, MODEL, [TYPE, "console"]], [/android.+;\s(shield)\sbuild/i], [MODEL, [VENDOR, "Nvidia"], [TYPE, "console"]], [/(playstation\s[34portablevi]+)/i], [MODEL, [VENDOR, "Sony"], [TYPE, "console"]], [/(sprint\s(\w+))/i], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i], [VENDOR, MODEL, [TYPE, TABLET]], [/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i, /(zte)-(\w+)*/i, /(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i], [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]], [/(nexus\s9)/i], [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]], [/d\/huawei([\w\s-]+)[;\)]/i, /(nexus\s6p)/i], [MODEL, [VENDOR, "Huawei"], [TYPE, MOBILE]], [/(microsoft);\s(lumia[\s\w]+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/[\s\(;](xbox(?:\sone)?)[\s\);]/i], [MODEL, [VENDOR, "Microsoft"], [TYPE, "console"]], [/(kin\.[onetw]{3})/i], [[MODEL, /\./g, " "], [VENDOR, "Microsoft"], [TYPE, MOBILE]], [/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i, /mot[\s-]?(\w+)*/i, /(XT\d{3,4}) build\//i, /(nexus\s6)/i], [MODEL, [VENDOR, "Motorola"], [TYPE, MOBILE]], [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i], [MODEL, [VENDOR, "Motorola"], [TYPE, TABLET]], [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, "smarttv"]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, "SmartTV"], [VENDOR, "Samsung"], [TYPE, "smarttv"]], [/\(dtv[\);].+(aquos)/i], [MODEL, [VENDOR, "Sharp"], [TYPE, "smarttv"]], [/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i, /((SM-T\w+))/i], [[VENDOR, "Samsung"], MODEL, [TYPE, TABLET]], [/smart-tv.+(samsung)/i], [VENDOR, [TYPE, "smarttv"], MODEL], [/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i, /(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i, /sec-((sgh\w+))/i], [[VENDOR, "Samsung"], MODEL, [TYPE, MOBILE]], [/sie-(\w+)*/i], [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]], [/(maemo|nokia).*(n900|lumia\s\d+)/i, /(nokia)[\s_-]?([\w-]+)*/i], [[VENDOR, "Nokia"], MODEL, [TYPE, MOBILE]], [/android\s3\.[\s\w;-]{10}(a\d{3})/i], [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]], [/android.+([vl]k\-?\d{3})\s+build/i], [MODEL, [VENDOR, "LG"], [TYPE, TABLET]], [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i], [[VENDOR, "LG"], MODEL, [TYPE, TABLET]], [/(lg) netcast\.tv/i], [VENDOR, MODEL, [TYPE, "smarttv"]], [/(nexus\s[45])/i, /lg[e;\s\/-]+(\w+)*/i, /android.+lg(\-?[\d\w]+)\s+build/i], [MODEL, [VENDOR, "LG"], [TYPE, MOBILE]], [/android.+(ideatab[a-z0-9\-\s]+)/i], [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]], [/linux;.+((jolla));/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/((pebble))app\/[\d\.]+\s/i], [VENDOR, MODEL, [TYPE, "wearable"]], [/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/crkey/i], [[MODEL, "Chromecast"], [VENDOR, "Google"]], [/android.+;\s(glass)\s\d/i], [MODEL, [VENDOR, "Google"], [TYPE, "wearable"]], [/android.+;\s(pixel c)\s/i], [MODEL, [VENDOR, "Google"], [TYPE, TABLET]], [/android.+;\s(pixel xl|pixel)\s/i], [MODEL, [VENDOR, "Google"], [TYPE, MOBILE]], [/android.+(\w+)\s+build\/hm\1/i, /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i, /android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i, /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+)?)\s+build/i], [[MODEL, /_/g, " "], [VENDOR, "Xiaomi"], [TYPE, MOBILE]], [/android.+(mi[\s\-_]*(?:pad)?(?:[\s_]*[\w\s]+)?)\s+build/i], [[MODEL, /_/g, " "], [VENDOR, "Xiaomi"], [TYPE, TABLET]], [/android.+;\s(m[1-5]\snote)\sbuild/i], [MODEL, [VENDOR, "Meizu"], [TYPE, TABLET]], [/android.+a000(1)\s+build/i], [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]], [/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i], [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]], [/android.+[;\/]\s*(Venue[\d\s]*)\s+build/i], [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]], [/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i], [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]], [/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i], [[VENDOR, "Barnes & Noble"], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i], [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]], [/android.+[;\/]\s*(zte)?.+(k\d{2})\s+build/i], [[VENDOR, "ZTE"], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i], [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]], [/android.+[;\/]\s*(zur\d{3})\s+build/i], [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]], [/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i], [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]], [/(android).+[;\/]\s+([YR]\d{2}x?.*)\s+build/i, /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(.+)\s+build/i], [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(NS-?.+)\s+build/i], [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]], [/android.+[;\/]\s*((NX|Next)-?.+)\s+build/i], [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]], [/android.+[;\/]\s*(Xtreme\_?)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i], [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]], [/android.+[;\/]\s*(LVTEL\-?)?(V1[12])\s+build/i], [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]], [/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i], [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]], [/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(.*\b)\s+build/i], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i], [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]], [/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*TU_(1491)\s+build/i], [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]], [/android.+(KS(.+))\s+build/i], [MODEL, [VENDOR, "Amazon"], [TYPE, TABLET]], [/android.+(Gigaset)[\s\-]+(Q.+)\s+build/i], [VENDOR, MODEL, [TYPE, TABLET]], [/\s(tablet|tab)[;\/]/i, /\s(mobile)(?:[;\/]|\ssafari)/i], [[TYPE, util.lowerize], VENDOR, MODEL], [/(android.+)[;\/].+build/i], [MODEL, [VENDOR, "Generic"]]],
        engine:  [[/windows.+\sedge\/([\w\.]+)/i], [VERSION, [NAME, "EdgeHTML"]], [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i, /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i, /(icab)[\/\s]([23]\.[\d\.]+)/i], [NAME, VERSION], [/rv\:([\w\.]+).*(gecko)/i], [VERSION, NAME]],
        os:      [[/microsoft\s(windows)\s(vista|xp)/i], [NAME, VERSION], [/(windows)\snt\s6\.2;\s(arm)/i, /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i, /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i], [[NAME, "Windows"], [VERSION, mapper.str, maps.os.windows.version]], [/\((bb)(10);/i], [[NAME, "BlackBerry"], VERSION], [/(blackberry)\w*\/?([\w\.]+)*/i, /(tizen)[\/\s]([\w\.]+)/i, /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i, /linux;.+(sailfish);/i], [NAME, VERSION], [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i], [[NAME, "Symbian"], VERSION], [/\((series40);/i], [NAME], [/mozilla.+\(mobile;.+gecko.+firefox/i], [[NAME, "Firefox OS"], VERSION], [/(nintendo|playstation)\s([wids34portablevu]+)/i, /(mint)[\/\s\(]?(\w+)*/i, /(mageia|vectorlinux)[;\s]/i, /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i, /(hurd|linux)\s?([\w\.]+)*/i, /(gnu)\s?([\w\.]+)*/i], [NAME, VERSION], [/(cros)\s[\w]+\s([\w\.]+\w)/i], [[NAME, "Chromium OS"], VERSION], [/(sunos)\s?([\w\.]+\d)*/i], [[NAME, "Solaris"], VERSION], [/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i], [NAME, VERSION], [/(haiku)\s(\w+)/i], [NAME, VERSION], [/cfnetwork\/.+darwin/i, /ip[honead]+(?:.*os\s([\w]+)\slike\smac|;\sopera)/i], [[VERSION, /_/g, "."], [NAME, "iOS"]], [/(mac\sos\sx)\s?([\w\s\.]+\w)*/i, /(macintosh|mac(?=_powerpc)\s)/i], [[NAME, "Mac OS"], [VERSION, /_/g, "."]], [/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i, /(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i, /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i, /(unix)\s?([\w\.]+)*/i], [NAME, VERSION]]
      }, UAParser                                                                                   = function (uastring, extensions) {
        if ("object" == typeof uastring && (extensions = uastring, uastring = void 0), !(this instanceof UAParser)) return new UAParser(uastring, extensions).getResult();
        var ua     = uastring || (window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : ""),
            rgxmap = extensions ? util.extend(regexes, extensions) : regexes;
        return this.getBrowser = function () {
          var browser = {name: void 0, version: void 0};
          return mapper.rgx.call(browser, ua, rgxmap.browser), browser.major = util.major(browser.version), browser
        }, this.getCPU = function () {
          var cpu = {architecture: void 0};
          return mapper.rgx.call(cpu, ua, rgxmap.cpu), cpu
        }, this.getDevice = function () {
          var device = {vendor: void 0, model: void 0, type: void 0};
          return mapper.rgx.call(device, ua, rgxmap.device), device
        }, this.getEngine = function () {
          var engine = {name: void 0, version: void 0};
          return mapper.rgx.call(engine, ua, rgxmap.engine), engine
        }, this.getOS = function () {
          var os = {name: void 0, version: void 0};
          return mapper.rgx.call(os, ua, rgxmap.os), os
        }, this.getResult = function () {
          return {
            ua:      this.getUA(),
            browser: this.getBrowser(),
            engine:  this.getEngine(),
            os:      this.getOS(),
            device:  this.getDevice(),
            cpu:     this.getCPU()
          }
        }, this.getUA = function () {
          return ua
        }, this.setUA = function (uastring) {
          return ua = uastring, this
        }, this
      };
  UAParser.VERSION = "0.7.17", UAParser.BROWSER = {
    NAME:    NAME,
    MAJOR:   "major",
    VERSION: VERSION
  }, UAParser.CPU = {ARCHITECTURE: "architecture"}, UAParser.DEVICE = {
    MODEL:    MODEL,
    VENDOR:   VENDOR,
    TYPE:     TYPE,
    CONSOLE:  "console",
    MOBILE:   MOBILE,
    SMARTTV:  "smarttv",
    TABLET:   TABLET,
    WEARABLE: "wearable",
    EMBEDDED: "embedded"
  }, UAParser.ENGINE = {NAME: NAME, VERSION: VERSION}, UAParser.OS = {
    NAME:    NAME,
    VERSION: VERSION
  }, "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = UAParser), exports.UAParser = UAParser) : "function" == typeof define && define.amd ? define(function () {
    return UAParser
  }) : window && (window.UAParser = UAParser);
  var $ = window && (window.jQuery || window.Zepto);
  if (void 0 !== $) {
    var parser = new UAParser;
    $.ua = parser.getResult(), $.ua.get = function () {
      return parser.getUA()
    }, $.ua.set = function (uastring) {
      parser.setUA(uastring);
      var result = parser.getResult();
      for (var prop in result) $.ua[prop] = result[prop]
    }
  }
}("object" == typeof window ? window : this), angular.module("unbox.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.unbox", {
    url:         "/unbox/:crate_id",
    templateUrl: "unbox/views/unbox.tpl.html",
    controller:  "unbox.controller",
    params:      {crate: null, crate_id: null, slug: null},
    nologin:     !0
  })
}]), angular.module("unbox.controller", []).controller("unbox.controller", ["$scope", "$rootScope", "$timeout", "glob", "$stateParams", "$state", "$translate", function ($scope, $rootScope, $timeout, glob, $stateParams, $state, $translate) {
  function parseItem(item) {
    return item.prob = item.prob || item._pivot_prob, item.market_hash_name ? $.extend(item, $rootScope.splitName(item)) : item.name && (item.fname = item.name, item.quality_color = "8AD002", item.type = "cash"), item.price ? item.price = parseFloat(item.price) : item.name && (item.price = 100 * parseFloat(item.name.slice(1))), item
  }

  function findSameItem(itemsarray, parsed) {
    var found;
    return itemsarray.some(function (processed) {
      if (processed.fname + processed.lname == parsed.fname + parsed.lname) return found = processed, !0
    }), found
  }

  function parseCrateItems(crate) {
    $scope.crate = crate, id = crate.id, $scope.crateitems = [], dlog("Crate ID is " + id), !crate.items && crate.prizes && (crate.items = crate.prizes), crate.items && crate.items.forEach(function (item) {
      var parsed = $.extend({}, parseItem(item)), found = findSameItem($scope.crateitems, parsed);
      found && "cash" !== parsed.type ? wearList.indexOf(glob.simpleStr(parsed.wear)) > wearList.indexOf(glob.simpleStr(found.wear)) && $.extend(found, parsed) : $scope.crateitems.push(parsed)
    })
  }

  function parseOpening(data) {
    data.winner = $.extend(!0, {}, parseItem(data.item || data.prize)), data.items = $scope.crateitems;
    var found = findSameItem($scope.crateitems, data.winner);
    found && (data.winner.icon_url = found.icon_url)
  }

  $scope.glob = glob;
  for (var crate, id, queue = new glob.delayedEx, wearList = ["Battle-scarred", "Well worn", "Field tested", "Minimal wear", "Factory new"], i = 0; i < wearList.length; i++) wearList[i] = glob.simpleStr(wearList[i]);
  if ($stateParams.crate) parseCrateItems($stateParams.crate); else if ($stateParams.crate_id) {
    var crate = null;
    conf.dummy_data && testCases.cases[0].id == $stateParams.crate_id && (crate = testCases.cases[0]), crate ? parseCrateItems(crate) : $stateParams.slug ? glob.get("/api2/crates", {
      playerId: $stateParams.crate_id,
      slug:     $stateParams.slug
    }, function (resp) {
      if (!resp.cases.length) return glob.printerror($translate.instant("CASE_NOT_FOUND"), 6e3), void $state.go("app.cases");
      parseCrateItems(resp.cases[0])
    }) : glob.get("/api2/crates", {id: $stateParams.crate_id}, function (resp) {
      if (!resp.cases.length) return glob.printerror($translate.instant("CASE_NOT_FOUND"), 6e3), void $state.go("app.cases");
      parseCrateItems(resp.cases[0])
    }, function (err) {
      $state.go("app.cases")
    })
  } else $state.includes("fortune") ? glob.get("/api2/crates?free=1", {}, function (resp) {
    parseCrateItems(resp.cases[0])
  }) : $state.go("app.cases");
  $scope.amin = 1, $scope.amax = 5, $scope.amountrange = [];
  for (var i = $scope.amin; i <= $scope.amax; i++) $scope.amountrange.push(i);
  $scope.addAmount = function (delta) {
    if ($scope.amount && (!$scope.crltHandler || !$scope.crltHandler.started)) {
      var res = $scope.amount + delta;
      res > $scope.amax || res < $scope.amin || ($scope.amount = res)
    }
  }, $scope.fastForwardSwitch = function () {
    $scope.fastforward = !$scope.fastforward;
    var tag            = $scope.fastforward ? "cases_fast_spins_active" : "cases_fast_spins_inactive";
    glob.printinfo($translate.instant(tag))
  }, $scope.opencase = function (amount) {
    function postcb(resp) {
      glob.opencaseInProgress = !1;
      var results             = [];
      if (fortune) {
        var o = resp.openings[0];
        o ? (parseOpening(o), results.push(o)) : dlog("MALFORMED RESULT, prize item empty:", o)
      } else {
        var opening = resp.opening || resp.openings;
        opening.forEach(function (o) {
          o.item ? (parseOpening(o), results.push(o)) : dlog("MALFORMED RESULT, winning item empty:", opening)
        })
      }
      $scope.crate.price && (glob.Me.balance -= $scope.crate.price * amount), queue.run(function () {
        glob.updateUser(resp.user)
      }), results.length && ($scope.unboxresults = results)
    }

    function posterr(err) {
      glob.opencaseInProgress = !1, queue.continue()
    }

    if (id && amount) {
      if (glob.isGuest()) return glob.printerror("unauthenticated"), glob.loginModal();
      if ($scope.crate.price && $scope.crate.price * amount > glob.Me.balance) return glob.printerror("Not enough funds"), glob.fundsModal();
      var endpoint, fortune = $state.includes("fortune"), params = {crateId: id};
      fortune ? endpoint = "/api2/crates/open" : (endpoint = "/api2/crates/open", params.amount = amount), glob.opencaseInProgress = !0, queue.pause(), fortune ? $scope.recaptchaModal(function (recaptcha) {
        dlog("RECAPTCHA result: ", recaptcha), recaptcha ? (params.recaptcha = recaptcha, glob.post(endpoint, params, postcb, posterr)) : posterr()
      }) : glob.post(endpoint, params, postcb, posterr)
    }
  }, $scope.testOpen = function (amount) {
    $scope.unboxresults = Array.from({length: amount}).map(function (_, i) {
      var roll = Math.floor(1e5 * Math.random()), item = {
        item: $scope.crate.items.filter(function (item) {
          return roll >= item.prob.low && roll <= item.prob.high
        })[0] || $scope.crate.items[0]
      };
      return parseOpening(item), item
    }), $scope.unboxresults.test = !0
  }, $scope.testspin = function (amount) {
    if (id) {
      $scope.unboxresults = [];
      for (var i = 0; i < amount; i++) {
        var testItems = $.extend(!0, {}, itemsJSON);
        testItems.winner = parseItem(testItems.item), $scope.unboxresults.push(testItems)
      }
      $scope.unboxresults.test = !0
    }
  }, $scope.crltAnimationOver = function (reset) {
    queue.continue();
    var wonitems = [];
    $scope.unboxresults.forEach(function (opening) {
      wonitems.push(opening.winner)
    }), $rootScope.openUnboxDoneModal({wonitems: wonitems}, reset)
  }, $scope.$on("$destroy", function () {
    queue.continue()
  })
}]), angular.module("unbox", ["unbox.controller", "unbox.config"]), angular.module("upgrade.config", []).config(["$locationProvider", "$urlRouterProvider", "$stateProvider", function ($locationProvider, $urlRouterProvider, $stateProvider) {
  $stateProvider.state("app.home", {
    url:                "/?giftcards",
    templateUrl:        "upgrade/views/upgrade.tpl.html",
    controller:         "upgrade.controller",
    scope:              {},
    nologin:            !0,
    noanalytics:        !0,
    withRecentUpgrades: !0
  })
}]),
  angular.module("upgrade.controller", []).controller("upgrade.controller", ["$scope", "$q", "$http", "$rootScope", "$state", "$interval", "$timeout", "$stateParams", "glob", function ($scope, $q, $http, $rootScope, $state, $interval, $timeout, $stateParams, glob) {
    function getGame() {
      $rootScope.user && glob.get("/api2/v1/upgrade/", null, function (resp) {
        resp && (delete resp.gameData.highLow, delete $scope.upgrade.client_seed, $.extend($scope.upgrade, resp.gameData))
      })
    }

    function priceSort(items) {
      return items.sort(function (a, b) {
        return b.price - a.price
      }), items
    }

    function upgradeResult(resp) {
      resp = resp.gameData, $scope.anim.success = resp.won, $scope.upgrade.roll = resp.resolvedNumberBase10, priceSort(resp.ourItems), priceSort(resp.theirItems), $.extend(!0, $scope.selectedItems, resp.theirItems), $.extend(!0, $scope.upgradeItems, resp.ourItems), $scope.anim.start(function () {
        resp.won ? ($scope.selectedItems = resp.ourItems, $scope.upgradeItems = [], $scope.findUpgrade()) : ($scope.selectedItems = [], $scope.upgradeItems = []), "custom" == $scope.upgrade.mult && ($scope.upgrade.mult = 2), glob.historyQ.continue(), getGame()
      })
    }

    $rootScope.title = "Bolt.GG - Upgrade Your CS:GO Skins Now", $scope.glob = glob;
    new glob.ansocket($scope);
    $rootScope.user ? $scope.mode = "upgrade" : $scope.mode = "auth", ga("set", "page", $state.current.url), ga("send", "pageview"), $scope.upgrade = {
      mult:    2,
      highLow: "low"
    }, $scope.$watch("upgrade.client_seed", function (seed) {
      seed || ($scope.upgrade.client_seed = $rootScope.app.clientSeed || generateUUID())
    }), $scope.$watch("$root.app.clientSeed", function (seed) {
      seed && ($scope.upgrade.client_seed = seed)
    }), $scope.mults = [1.5, 2, 5, 10, 20], $scope.animateBinding = {}, $scope.selectedItems = [], $scope.upgradeItems = [], $timeout(function () {
      $rootScope.app.overunder && "upgrade" == $scope.mode && ga("send", "event", "Upgrade page", "a/b")
    }), $timeout(function () {
      $stateParams.giftcards && $rootScope.openGiftCards()
    }), $scope.calcChance = function (edge) {
      if (!$scope.selectedItems || !$scope.upgradeItems) return 0;
      if (!$scope.selectedItems.length && "custom" == $scope.upgrade.mult) return 0;
      edge || (edge = 10);
      var mult = $scope.calcMult(), chance = (100 - edge) / mult;
      return glob.clamp(chance, 0, 100)
    }, $scope.calcBonusChance = function () {
      var edge = $scope.upgrade.houseEdge;
      return edge || (edge = 10), $scope.calcChance(edge)
    }, $scope.calcBonus = function () {
      return $scope.calcBonusChance() - $scope.calcChance()
    }, $scope.bonusActive = function () {
      return $rootScope.user && $scope.upgrade.houseEdge && 10 != $scope.upgrade.houseEdge
    }, $scope.calcProfit = function () {
      if (!$scope.selectedItems.length || !$scope.upgradeItems.length) return 0;
      var in_price = $rootScope.itemsValue($scope.selectedItems);
      return $rootScope.itemsValue($scope.upgradeItems) - in_price
    }, $scope.calcMult = function () {
      if (!$scope.selectedItems || !$scope.upgradeItems) return 0;
      if (!$scope.selectedItems.length && "custom" == $scope.upgrade.mult) return 0;
      var in_price  = $rootScope.itemsValue($scope.selectedItems),
          out_price = $rootScope.itemsValue($scope.upgradeItems);
      return in_price && out_price ? out_price / in_price : $scope.upgrade.mult
    }, getGame(), $scope.refreshHash = function () {
      $rootScope.user && glob.get("/api2/v1/upgrade/hash/new", null, function (resp) {
        resp && (delete resp.gameData.highLow, $.extend($scope.upgrade, resp.gameData))
      })
    };
    var upgradePaused = !1, upgHistoryEl = $(".history_wrapper .entries");
    if (upgHistoryEl.length) {
      upgHistoryEl.hover(function () {
        upgradePaused = !0, $scope.upgradeHistory = $.extend(!0, [], upgradeHistory)
      }, function () {
        upgradePaused = !1, $scope.upgradeHistory = upgradeHistory, $scope.$apply(), upgHistoryEl[0].scrollTo(0, 0)
      })
    }
    $scope.promo = {
      value: '',
    },
    $scope.sendPromo = function () {
      $scope.promo.value.length > 1 && window.sendPromoCode($scope.promo.value)
    },
    $scope.selectItems = function () {
      $scope.anim.status || $rootScope.openInventory("select", function (items) {
        items && ($scope.selectedItems = items, priceSort($scope.selectedItems), "custom" !== $scope.upgrade.mult && $scope.findUpgrade())
      })
    }, $scope.selectUpgradeItems = function () {
      $scope.anim.status || $rootScope.openInventory("upgrade", function (items) {
        items && ($scope.upgradeItems = items, priceSort($scope.upgradeItems), $scope.upgrade.mult = "custom")
      }, {userItems: $scope.selectedItems})
    }, $scope.switchMult = function (m) {
      $scope.anim.status || glob.getitemInProgress || ($scope.upgrade.mult = m, $scope.findUpgrade())
    }, $scope.startUpgrade = function () {
      if (!$scope.anim.status) {
        if ($scope.calcMult() > 9e3) return glob.printwarning("upg_mult_too_big");
        $scope.selectedItems;
        glob.historyQ.pause(), glob.post("/api2/v1/upgrade/resolve", {
          gameData: {
            theirItems: $scope.selectedItems,
            ourItems:   $scope.upgradeItems,
            clientSeed: $scope.upgrade.client_seed,
            highLow:    $scope.upgrade.range ? "custom" : $scope.upgrade.highLow,
            rangeStart: $scope.upgrade.range ? $scope.upgrade.range.begin : null
          }
        }, function (resp) {
          upgradeResult(resp), glob.sendGoogleTransaction("upgrade", resp.gameData);
          var items = resp.gameData.theirItems, total = $rootScope.itemsValue(items);
          window.uetq.push({ec: "revenue", ea: "upgrade", el: "", ev: total}), fbq("track", "Purchase", {
            value:    total,
            currency: "USD"
          }), delete $rootScope.app.clientSeed, $rootScope.saveAppLocalStore()
        }, function (err) {
          glob.historyQ.continue()
        })
      }
    }, $scope.findUpgrade = function () {
      $scope.selectedItems && $scope.selectedItems.length && "custom" != $scope.upgrade.mult && ($scope.upgradeItems = [], glob.get("/api2/v1/upgrade/item", {
        action:     "find",
        price:      $rootScope.itemsValue($scope.selectedItems),
        multiplier: $scope.upgrade.mult
      }, function (resp) {
        resp.items && ($scope.upgradeItems = resp.items)
      }))
    }, $scope.findUpgrade(), $scope.anim = {}
  }]), angular.module("upgrade", ["upgrade.config", "upgrade.controller"]);